ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,16,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 16
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	16
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_sensorBaselineLow
  26              		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 8
  29              	CapSense_sensorBaselineLow:
  30 0010 00000000 		.space	8
  30      00000000 
  31              		.global	CapSense_sensorSignal
  32              		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 8
  35              	CapSense_sensorSignal:
  36 0018 00000000 		.space	8
  36      00000000 
  37              		.global	CapSense_sensorOnMask
  38              		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 0020 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,8,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 8
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 2


  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58              		.global	CapSense_enableRawFilters
  59              		.type	CapSense_enableRawFilters, %object
  60              		.size	CapSense_enableRawFilters, 1
  61              	CapSense_enableRawFilters:
  62 0008 01       		.byte	1
  63              		.comm	CapSense_fingerThreshold,4,4
  64              		.comm	CapSense_noiseThreshold,4,4
  65              		.comm	CapSense_negativeNoiseThreshold,4,4
  66              		.comm	CapSense_hysteresis,4,4
  67              		.global	CapSense_debounce
  68 0009 000000   		.align	2
  69              		.type	CapSense_debounce, %object
  70              		.size	CapSense_debounce, 4
  71              	CapSense_debounce:
  72 000c 01       		.byte	1
  73 000d 05       		.byte	5
  74 000e 05       		.byte	5
  75 000f 05       		.byte	5
  76              		.bss
  77 0021 000000   		.align	2
  78              	CapSense_debounceCounter:
  79 0024 00000000 		.space	4
  80              		.global	CapSense_rawDataIndex
  81              		.section	.rodata
  82              		.align	2
  83              		.type	CapSense_rawDataIndex, %object
  84              		.size	CapSense_rawDataIndex, 4
  85              	CapSense_rawDataIndex:
  86 0000 00       		.byte	0
  87 0001 05       		.byte	5
  88 0002 06       		.byte	6
  89 0003 07       		.byte	7
  90              		.global	CapSense_numberOfSensors
  91              		.align	2
  92              		.type	CapSense_numberOfSensors, %object
  93              		.size	CapSense_numberOfSensors, 4
  94              	CapSense_numberOfSensors:
  95 0004 05       		.byte	5
  96 0005 01       		.byte	1
  97 0006 01       		.byte	1
  98 0007 00       		.byte	0
  99              		.align	2
 100              		.type	CapSense_centroidMult, %object
 101              		.size	CapSense_centroidMult, 2
 102              	CapSense_centroidMult:
 103 0008 0019     		.short	6400
 104 000a 0000     		.data
 105              		.align	2
 106              		.type	CapSense_posFiltersMask, %object
 107              		.size	CapSense_posFiltersMask, 1
 108              	CapSense_posFiltersMask:
 109 0010 10       		.byte	16
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 3


 110 0011 000000   		.align	2
 111              		.type	CapSense_posFiltersData, %object
 112              		.size	CapSense_posFiltersData, 3
 113              	CapSense_posFiltersData:
 114 0014 01       		.byte	1
 115 0015 00       		.byte	0
 116 0016 00       		.byte	0
 117 0017 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 118              		.align	2
 119              		.global	CapSense_BaseInit
 120              		.code	16
 121              		.thumb_func
 122              		.type	CapSense_BaseInit, %function
 123              	CapSense_BaseInit:
 124              	.LFB34:
 125              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 4


  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 5u, 5u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button0__BTN */
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* Button1__BTN */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     7u, /* ProximitySensor0__PROX */
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 5


  99:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0x10u, 
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 126              		.loc 1 153 0
 127              		.cfi_startproc
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 6


 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 84B0     		sub	sp, sp, #16
 133              		.cfi_def_cfa_offset 24
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 136 0006 7860     		str	r0, [r7, #4]
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 137              		.loc 1 156 0
 138 0008 0F23     		mov	r3, #15
 139 000a FB18     		add	r3, r7, r3
 140 000c 1849     		ldr	r1, .L3
 141 000e 7A68     		ldr	r2, [r7, #4]
 142 0010 8A18     		add	r2, r1, r2
 143 0012 1278     		ldrb	r2, [r2]
 144 0014 1A70     		strb	r2, [r3]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 145              		.loc 1 170 0
 146 0016 174B     		ldr	r3, .L3+4
 147 0018 7A68     		ldr	r2, [r7, #4]
 148 001a 5200     		lsl	r2, r2, #1
 149 001c D15A     		ldrh	r1, [r2, r3]
 150 001e 164B     		ldr	r3, .L3+8
 151 0020 7A68     		ldr	r2, [r7, #4]
 152 0022 5200     		lsl	r2, r2, #1
 153 0024 D152     		strh	r1, [r2, r3]
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 154              		.loc 1 171 0
 155 0026 154A     		ldr	r2, .L3+12
 156 0028 7B68     		ldr	r3, [r7, #4]
 157 002a D318     		add	r3, r2, r3
 158 002c 0022     		mov	r2, #0
 159 002e 1A70     		strb	r2, [r3]
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 160              		.loc 1 172 0
 161 0030 134A     		ldr	r2, .L3+16
 162 0032 7B68     		ldr	r3, [r7, #4]
 163 0034 D318     		add	r3, r2, r3
 164 0036 0022     		mov	r2, #0
 165 0038 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 7


 173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 166              		.loc 1 174 0
 167 003a 0F23     		mov	r3, #15
 168 003c FB18     		add	r3, r7, r3
 169 003e 1B78     		ldrb	r3, [r3]
 170 0040 002B     		cmp	r3, #0
 171 0042 0AD0     		beq	.L2
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u)] =  CapSense_debou
 172              		.loc 1 176 0
 173 0044 0F23     		mov	r3, #15
 174 0046 FB18     		add	r3, r7, r3
 175 0048 1B78     		ldrb	r3, [r3]
 176 004a 013B     		sub	r3, r3, #1
 177 004c 0F22     		mov	r2, #15
 178 004e BA18     		add	r2, r7, r2
 179 0050 1278     		ldrb	r2, [r2]
 180 0052 0C49     		ldr	r1, .L3+20
 181 0054 895C     		ldrb	r1, [r1, r2]
 182 0056 0C4A     		ldr	r2, .L3+24
 183 0058 D154     		strb	r1, [r2, r3]
 184              	.L2:
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 185              		.loc 1 192 0
 186 005a 064B     		ldr	r3, .L3+4
 187 005c 7A68     		ldr	r2, [r7, #4]
 188 005e 5200     		lsl	r2, r2, #1
 189 0060 D15A     		ldrh	r1, [r2, r3]
 190 0062 0A4B     		ldr	r3, .L3+28
 191 0064 7A68     		ldr	r2, [r7, #4]
 192 0066 5200     		lsl	r2, r2, #1
 193 0068 D152     		strh	r1, [r2, r3]
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 8


 202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 194              		.loc 1 204 0
 195 006a BD46     		mov	sp, r7
 196 006c 04B0     		add	sp, sp, #16
 197              		@ sp needed
 198 006e 80BD     		pop	{r7, pc}
 199              	.L4:
 200              		.align	2
 201              	.L3:
 202 0070 00000000 		.word	CapSense_widgetNumber
 203 0074 00000000 		.word	CapSense_sensorRaw
 204 0078 00000000 		.word	CapSense_sensorBaseline
 205 007c 00000000 		.word	CapSense_sensorBaselineLow
 206 0080 00000000 		.word	CapSense_sensorSignal
 207 0084 00000000 		.word	CapSense_debounce
 208 0088 24000000 		.word	CapSense_debounceCounter
 209 008c 00000000 		.word	CapSense_rawFilterData1
 210              		.cfi_endproc
 211              	.LFE34:
 212              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 213              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 214              		.align	2
 215              		.global	CapSense_InitializeSensorBaseline
 216              		.code	16
 217              		.thumb_func
 218              		.type	CapSense_InitializeSensorBaseline, %function
 219              	CapSense_InitializeSensorBaseline:
 220              	.LFB35:
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 9


 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 221              		.loc 1 232 0
 222              		.cfi_startproc
 223 0000 80B5     		push	{r7, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 82B0     		sub	sp, sp, #8
 228              		.cfi_def_cfa_offset 16
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 231 0006 7860     		str	r0, [r7, #4]
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 232              		.loc 1 234 0
 233 0008 7B68     		ldr	r3, [r7, #4]
 234 000a 181C     		mov	r0, r3
 235 000c FFF7FEFF 		bl	CapSense_ScanSensor
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 236              		.loc 1 235 0
 237 0010 C046     		mov	r8, r8
 238              	.L6:
 239              		.loc 1 235 0 is_stmt 0 discriminator 1
 240 0012 FFF7FEFF 		bl	CapSense_IsBusy
 241 0016 031E     		sub	r3, r0, #0
 242 0018 FBD1     		bne	.L6
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 243              		.loc 1 241 0 is_stmt 1
 244 001a 7B68     		ldr	r3, [r7, #4]
 245 001c 181C     		mov	r0, r3
 246 001e FFF7FEFF 		bl	CapSense_BaseInit
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 247              		.loc 1 242 0
 248 0022 BD46     		mov	sp, r7
 249 0024 02B0     		add	sp, sp, #8
 250              		@ sp needed
 251 0026 80BD     		pop	{r7, pc}
 252              		.cfi_endproc
 253              	.LFE35:
 254              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 255              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 256              		.align	2
 257              		.global	CapSense_InitializeAllBaselines
 258              		.code	16
 259              		.thumb_func
 260              		.type	CapSense_InitializeAllBaselines, %function
 261              	CapSense_InitializeAllBaselines:
 262              	.LFB36:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 10


 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 263              		.loc 1 269 0
 264              		.cfi_startproc
 265 0000 80B5     		push	{r7, lr}
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 7, -8
 268              		.cfi_offset 14, -4
 269 0002 82B0     		sub	sp, sp, #8
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 273              		.loc 1 272 0
 274 0006 0023     		mov	r3, #0
 275 0008 7B60     		str	r3, [r7, #4]
 276 000a 06E0     		b	.L8
 277              	.L9:
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 278              		.loc 1 274 0 discriminator 3
 279 000c 7B68     		ldr	r3, [r7, #4]
 280 000e 181C     		mov	r0, r3
 281 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 282              		.loc 1 272 0 discriminator 3
 283 0014 7B68     		ldr	r3, [r7, #4]
 284 0016 0133     		add	r3, r3, #1
 285 0018 7B60     		str	r3, [r7, #4]
 286              	.L8:
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 287              		.loc 1 272 0 is_stmt 0 discriminator 1
 288 001a 7B68     		ldr	r3, [r7, #4]
 289 001c 072B     		cmp	r3, #7
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 11


 290 001e F5D9     		bls	.L9
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 291              		.loc 1 276 0 is_stmt 1
 292 0020 BD46     		mov	sp, r7
 293 0022 02B0     		add	sp, sp, #8
 294              		@ sp needed
 295 0024 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE36:
 298              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 299 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 300              		.align	2
 301              		.global	CapSense_InitializeEnabledBaselines
 302              		.code	16
 303              		.thumb_func
 304              		.type	CapSense_InitializeEnabledBaselines, %function
 305              	CapSense_InitializeEnabledBaselines:
 306              	.LFB37:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 307              		.loc 1 304 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 82B0     		sub	sp, sp, #8
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 12


 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 317              		.loc 1 308 0
 318 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 319              		.loc 1 309 0
 320 000a C046     		mov	r8, r8
 321              	.L11:
 322              		.loc 1 309 0 is_stmt 0 discriminator 1
 323 000c FFF7FEFF 		bl	CapSense_IsBusy
 324 0010 031E     		sub	r3, r0, #0
 325 0012 FBD1     		bne	.L11
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 326              		.loc 1 314 0 is_stmt 1
 327 0014 0023     		mov	r3, #0
 328 0016 7B60     		str	r3, [r7, #4]
 329 0018 11E0     		b	.L12
 330              	.L14:
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 331              		.loc 1 316 0
 332 001a 0C4A     		ldr	r2, .L15
 333 001c 7B68     		ldr	r3, [r7, #4]
 334 001e 101C     		mov	r0, r2
 335 0020 191C     		mov	r1, r3
 336 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 337 0026 031C     		mov	r3, r0
 338 0028 3B60     		str	r3, [r7]
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 339              		.loc 1 319 0
 340 002a 3B68     		ldr	r3, [r7]
 341 002c 002B     		cmp	r3, #0
 342 002e 03D0     		beq	.L13
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 343              		.loc 1 322 0
 344 0030 7B68     		ldr	r3, [r7, #4]
 345 0032 181C     		mov	r0, r3
 346 0034 FFF7FEFF 		bl	CapSense_BaseInit
 347              	.L13:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 348              		.loc 1 314 0 discriminator 2
 349 0038 7B68     		ldr	r3, [r7, #4]
 350 003a 0133     		add	r3, r3, #1
 351 003c 7B60     		str	r3, [r7, #4]
 352              	.L12:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 353              		.loc 1 314 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 13


 354 003e 7B68     		ldr	r3, [r7, #4]
 355 0040 072B     		cmp	r3, #7
 356 0042 EAD9     		bls	.L14
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 357              		.loc 1 325 0 is_stmt 1
 358 0044 BD46     		mov	sp, r7
 359 0046 02B0     		add	sp, sp, #8
 360              		@ sp needed
 361 0048 80BD     		pop	{r7, pc}
 362              	.L16:
 363 004a C046     		.align	2
 364              	.L15:
 365 004c 00000000 		.word	CapSense_sensorEnableMask
 366              		.cfi_endproc
 367              	.LFE37:
 368              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 369              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 370              		.align	2
 371              		.global	CapSense_UpdateBaselineNoThreshold
 372              		.code	16
 373              		.thumb_func
 374              		.type	CapSense_UpdateBaselineNoThreshold, %function
 375              	CapSense_UpdateBaselineNoThreshold:
 376              	.LFB38:
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 14


 357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 377              		.loc 1 369 0
 378              		.cfi_startproc
 379 0000 90B5     		push	{r4, r7, lr}
 380              		.cfi_def_cfa_offset 12
 381              		.cfi_offset 4, -12
 382              		.cfi_offset 7, -8
 383              		.cfi_offset 14, -4
 384 0002 87B0     		sub	sp, sp, #28
 385              		.cfi_def_cfa_offset 40
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 7860     		str	r0, [r7, #4]
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 389              		.loc 1 374 0
 390 0008 0F23     		mov	r3, #15
 391 000a FB18     		add	r3, r7, r3
 392 000c 7E49     		ldr	r1, .L30
 393 000e 7A68     		ldr	r2, [r7, #4]
 394 0010 8A18     		add	r2, r1, r2
 395 0012 1278     		ldrb	r2, [r2]
 396 0014 1A70     		strb	r2, [r3]
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 397              		.loc 1 383 0
 398 0016 0F23     		mov	r3, #15
 399 0018 FB18     		add	r3, r7, r3
 400 001a 1A78     		ldrb	r2, [r3]
 401 001c 0E23     		mov	r3, #14
 402 001e FB18     		add	r3, r7, r3
 403 0020 7A49     		ldr	r1, .L30+4
 404 0022 8A5C     		ldrb	r2, [r1, r2]
 405 0024 1A70     		strb	r2, [r3]
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 15


 406              		.loc 1 384 0
 407 0026 1023     		mov	r3, #16
 408 0028 FB18     		add	r3, r7, r3
 409 002a 794A     		ldr	r2, .L30+8
 410 002c 7968     		ldr	r1, [r7, #4]
 411 002e 4900     		lsl	r1, r1, #1
 412 0030 8A5A     		ldrh	r2, [r1, r2]
 413 0032 1A80     		strh	r2, [r3]
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 414              		.loc 1 387 0
 415 0034 774B     		ldr	r3, .L30+12
 416 0036 1B78     		ldrb	r3, [r3]
 417 0038 002B     		cmp	r3, #0
 418 003a 15D0     		beq	.L18
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 419              		.loc 1 408 0
 420 003c 764B     		ldr	r3, .L30+16
 421 003e 7A68     		ldr	r2, [r7, #4]
 422 0040 5200     		lsl	r2, r2, #1
 423 0042 D25A     		ldrh	r2, [r2, r3]
 424 0044 1023     		mov	r3, #16
 425 0046 FC18     		add	r4, r7, r3
 426 0048 1023     		mov	r3, #16
 427 004a FB18     		add	r3, r7, r3
 428 004c 1B88     		ldrh	r3, [r3]
 429 004e 181C     		mov	r0, r3
 430 0050 111C     		mov	r1, r2
 431 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 432 0056 031C     		mov	r3, r0
 433 0058 2380     		strh	r3, [r4]
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 434              		.loc 1 409 0
 435 005a 6F4B     		ldr	r3, .L30+16
 436 005c 7A68     		ldr	r2, [r7, #4]
 437 005e 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 16


 438 0060 1021     		mov	r1, #16
 439 0062 7918     		add	r1, r7, r1
 440 0064 0988     		ldrh	r1, [r1]
 441 0066 D152     		strh	r1, [r2, r3]
 442              	.L18:
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 443              		.loc 1 430 0
 444 0068 7B68     		ldr	r3, [r7, #4]
 445 006a DAB2     		uxtb	r2, r3
 446 006c 6B49     		ldr	r1, .L30+20
 447 006e 684B     		ldr	r3, .L30+8
 448 0070 081C     		mov	r0, r1
 449 0072 111C     		mov	r1, r2
 450 0074 1A1C     		mov	r2, r3
 451 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 452              		.loc 1 435 0
 453 007a 694B     		ldr	r3, .L30+24
 454 007c 7A68     		ldr	r2, [r7, #4]
 455 007e 5200     		lsl	r2, r2, #1
 456 0080 D35A     		ldrh	r3, [r2, r3]
 457 0082 1022     		mov	r2, #16
 458 0084 BA18     		add	r2, r7, r2
 459 0086 1288     		ldrh	r2, [r2]
 460 0088 9A42     		cmp	r2, r3
 461 008a 12D3     		bcc	.L19
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 462              		.loc 1 437 0
 463 008c 654A     		ldr	r2, .L30+28
 464 008e 7B68     		ldr	r3, [r7, #4]
 465 0090 D318     		add	r3, r2, r3
 466 0092 0022     		mov	r2, #0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 17


 467 0094 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 468              		.loc 1 438 0
 469 0096 624B     		ldr	r3, .L30+24
 470 0098 7A68     		ldr	r2, [r7, #4]
 471 009a 5200     		lsl	r2, r2, #1
 472 009c D25A     		ldrh	r2, [r2, r3]
 473 009e 1223     		mov	r3, #18
 474 00a0 FB18     		add	r3, r7, r3
 475 00a2 1021     		mov	r1, #16
 476 00a4 7918     		add	r1, r7, r1
 477 00a6 0988     		ldrh	r1, [r1]
 478 00a8 8A1A     		sub	r2, r1, r2
 479 00aa 1A80     		strh	r2, [r3]
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 480              		.loc 1 439 0
 481 00ac 0123     		mov	r3, #1
 482 00ae 7B61     		str	r3, [r7, #20]
 483 00b0 0CE0     		b	.L20
 484              	.L19:
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 485              		.loc 1 443 0
 486 00b2 5B4B     		ldr	r3, .L30+24
 487 00b4 7A68     		ldr	r2, [r7, #4]
 488 00b6 5200     		lsl	r2, r2, #1
 489 00b8 D15A     		ldrh	r1, [r2, r3]
 490 00ba 1223     		mov	r3, #18
 491 00bc FB18     		add	r3, r7, r3
 492 00be 1022     		mov	r2, #16
 493 00c0 BA18     		add	r2, r7, r2
 494 00c2 1288     		ldrh	r2, [r2]
 495 00c4 8A1A     		sub	r2, r1, r2
 496 00c6 1A80     		strh	r2, [r3]
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 497              		.loc 1 444 0
 498 00c8 0023     		mov	r3, #0
 499 00ca 7B61     		str	r3, [r7, #20]
 500              	.L20:
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 501              		.loc 1 448 0
 502 00cc 7B69     		ldr	r3, [r7, #20]
 503 00ce 002B     		cmp	r3, #0
 504 00d0 2AD1     		bne	.L21
 505              		.loc 1 448 0 is_stmt 0 discriminator 1
 506 00d2 0F23     		mov	r3, #15
 507 00d4 FB18     		add	r3, r7, r3
 508 00d6 1B78     		ldrb	r3, [r3]
 509 00d8 534A     		ldr	r2, .L30+32
 510 00da D35C     		ldrb	r3, [r2, r3]
 511 00dc 9BB2     		uxth	r3, r3
 512 00de 1222     		mov	r2, #18
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 18


 513 00e0 BA18     		add	r2, r7, r2
 514 00e2 1288     		ldrh	r2, [r2]
 515 00e4 9A42     		cmp	r2, r3
 516 00e6 1FD9     		bls	.L21
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 517              		.loc 1 453 0 is_stmt 1
 518 00e8 4E4A     		ldr	r2, .L30+28
 519 00ea 7B68     		ldr	r3, [r7, #4]
 520 00ec D318     		add	r3, r2, r3
 521 00ee 1A78     		ldrb	r2, [r3]
 522 00f0 4E49     		ldr	r1, .L30+36
 523 00f2 7B68     		ldr	r3, [r7, #4]
 524 00f4 CB18     		add	r3, r1, r3
 525 00f6 1B78     		ldrb	r3, [r3]
 526 00f8 9A42     		cmp	r2, r3
 527 00fa 09D3     		bcc	.L22
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 528              		.loc 1 455 0
 529 00fc 7B68     		ldr	r3, [r7, #4]
 530 00fe 181C     		mov	r0, r3
 531 0100 FFF7FEFF 		bl	CapSense_BaseInit
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 532              		.loc 1 456 0
 533 0104 474A     		ldr	r2, .L30+28
 534 0106 7B68     		ldr	r3, [r7, #4]
 535 0108 D318     		add	r3, r2, r3
 536 010a 0022     		mov	r2, #0
 537 010c 1A70     		strb	r2, [r3]
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 538              		.loc 1 453 0
 539 010e 51E0     		b	.L24
 540              	.L22:
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 541              		.loc 1 460 0
 542 0110 444A     		ldr	r2, .L30+28
 543 0112 7B68     		ldr	r3, [r7, #4]
 544 0114 D318     		add	r3, r2, r3
 545 0116 1B78     		ldrb	r3, [r3]
 546 0118 0133     		add	r3, r3, #1
 547 011a D9B2     		uxtb	r1, r3
 548 011c 414A     		ldr	r2, .L30+28
 549 011e 7B68     		ldr	r3, [r7, #4]
 550 0120 D318     		add	r3, r2, r3
 551 0122 0A1C     		add	r2, r1, #0
 552 0124 1A70     		strb	r2, [r3]
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 553              		.loc 1 453 0
 554 0126 45E0     		b	.L24
 555              	.L21:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 19


 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 556              		.loc 1 468 0
 557 0128 0E23     		mov	r3, #14
 558 012a FB18     		add	r3, r7, r3
 559 012c 1B78     		ldrb	r3, [r3]
 560 012e 9BB2     		uxth	r3, r3
 561 0130 1222     		mov	r2, #18
 562 0132 BA18     		add	r2, r7, r2
 563 0134 1288     		ldrh	r2, [r2]
 564 0136 9A42     		cmp	r2, r3
 565 0138 0DD9     		bls	.L25
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 566              		.loc 1 469 0 discriminator 1
 567 013a 0F23     		mov	r3, #15
 568 013c FB18     		add	r3, r7, r3
 569 013e 1B78     		ldrb	r3, [r3]
 570 0140 394A     		ldr	r2, .L30+32
 571 0142 D35C     		ldrb	r3, [r2, r3]
 572 0144 9BB2     		uxth	r3, r3
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 573              		.loc 1 468 0 discriminator 1
 574 0146 1222     		mov	r2, #18
 575 0148 BA18     		add	r2, r7, r2
 576 014a 1288     		ldrh	r2, [r2]
 577 014c 9A42     		cmp	r2, r3
 578 014e 31D2     		bcs	.L24
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 579              		.loc 1 470 0
 580 0150 7B69     		ldr	r3, [r7, #20]
 581 0152 002B     		cmp	r3, #0
 582 0154 2ED1     		bne	.L24
 583              	.L25:
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 584              		.loc 1 481 0
 585 0156 324B     		ldr	r3, .L30+24
 586 0158 7A68     		ldr	r2, [r7, #4]
 587 015a 5200     		lsl	r2, r2, #1
 588 015c D35A     		ldrh	r3, [r2, r3]
 589 015e 1B02     		lsl	r3, r3, #8
 590 0160 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 20


 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 591              		.loc 1 482 0
 592 0162 334A     		ldr	r2, .L30+40
 593 0164 7B68     		ldr	r3, [r7, #4]
 594 0166 D318     		add	r3, r2, r3
 595 0168 1B78     		ldrb	r3, [r3]
 596 016a 1A1C     		mov	r2, r3
 597 016c BB68     		ldr	r3, [r7, #8]
 598 016e 1343     		orr	r3, r2
 599 0170 BB60     		str	r3, [r7, #8]
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 600              		.loc 1 485 0
 601 0172 1023     		mov	r3, #16
 602 0174 FB18     		add	r3, r7, r3
 603 0176 1B88     		ldrh	r3, [r3]
 604 0178 BA68     		ldr	r2, [r7, #8]
 605 017a D318     		add	r3, r2, r3
 606 017c BB60     		str	r3, [r7, #8]
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 607              		.loc 1 488 0
 608 017e 284B     		ldr	r3, .L30+24
 609 0180 7A68     		ldr	r2, [r7, #4]
 610 0182 5200     		lsl	r2, r2, #1
 611 0184 D35A     		ldrh	r3, [r2, r3]
 612 0186 1A1C     		mov	r2, r3
 613 0188 BB68     		ldr	r3, [r7, #8]
 614 018a 9B1A     		sub	r3, r3, r2
 615 018c BB60     		str	r3, [r7, #8]
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 616              		.loc 1 491 0
 617 018e BB68     		ldr	r3, [r7, #8]
 618 0190 1B0A     		lsr	r3, r3, #8
 619 0192 99B2     		uxth	r1, r3
 620 0194 224B     		ldr	r3, .L30+24
 621 0196 7A68     		ldr	r2, [r7, #4]
 622 0198 5200     		lsl	r2, r2, #1
 623 019a D152     		strh	r1, [r2, r3]
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 624              		.loc 1 492 0
 625 019c BB68     		ldr	r3, [r7, #8]
 626 019e D9B2     		uxtb	r1, r3
 627 01a0 234A     		ldr	r2, .L30+40
 628 01a2 7B68     		ldr	r3, [r7, #4]
 629 01a4 D318     		add	r3, r2, r3
 630 01a6 0A1C     		add	r2, r1, #0
 631 01a8 1A70     		strb	r2, [r3]
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 632              		.loc 1 494 0
 633 01aa 1E4A     		ldr	r2, .L30+28
 634 01ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 21


 635 01ae D318     		add	r3, r2, r3
 636 01b0 0022     		mov	r2, #0
 637 01b2 1A70     		strb	r2, [r3]
 638              	.L24:
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 639              		.loc 1 501 0
 640 01b4 0E23     		mov	r3, #14
 641 01b6 FB18     		add	r3, r7, r3
 642 01b8 1B78     		ldrb	r3, [r3]
 643 01ba 9BB2     		uxth	r3, r3
 644 01bc 1222     		mov	r2, #18
 645 01be BA18     		add	r2, r7, r2
 646 01c0 1288     		ldrh	r2, [r2]
 647 01c2 9A42     		cmp	r2, r3
 648 01c4 17D9     		bls	.L26
 649              		.loc 1 501 0 is_stmt 0 discriminator 1
 650 01c6 7B69     		ldr	r3, [r7, #20]
 651 01c8 002B     		cmp	r3, #0
 652 01ca 14D0     		beq	.L26
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 653              		.loc 1 505 0 is_stmt 1
 654 01cc 1223     		mov	r3, #18
 655 01ce FB18     		add	r3, r7, r3
 656 01d0 1B88     		ldrh	r3, [r3]
 657 01d2 FF2B     		cmp	r3, #255
 658 01d4 05D9     		bls	.L27
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 659              		.loc 1 507 0
 660 01d6 174A     		ldr	r2, .L30+44
 661 01d8 7B68     		ldr	r3, [r7, #4]
 662 01da D318     		add	r3, r2, r3
 663 01dc FF22     		mov	r2, #255
 664 01de 1A70     		strb	r2, [r3]
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 665              		.loc 1 505 0
 666 01e0 0EE0     		b	.L17
 667              	.L27:
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 668              		.loc 1 511 0
 669 01e2 1223     		mov	r3, #18
 670 01e4 FB18     		add	r3, r7, r3
 671 01e6 1B88     		ldrh	r3, [r3]
 672 01e8 D9B2     		uxtb	r1, r3
 673 01ea 124A     		ldr	r2, .L30+44
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 22


 674 01ec 7B68     		ldr	r3, [r7, #4]
 675 01ee D318     		add	r3, r2, r3
 676 01f0 0A1C     		add	r2, r1, #0
 677 01f2 1A70     		strb	r2, [r3]
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 678              		.loc 1 505 0
 679 01f4 04E0     		b	.L17
 680              	.L26:
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 681              		.loc 1 520 0
 682 01f6 0F4A     		ldr	r2, .L30+44
 683 01f8 7B68     		ldr	r3, [r7, #4]
 684 01fa D318     		add	r3, r2, r3
 685 01fc 0022     		mov	r2, #0
 686 01fe 1A70     		strb	r2, [r3]
 687              	.L17:
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 688              		.loc 1 527 0
 689 0200 BD46     		mov	sp, r7
 690 0202 07B0     		add	sp, sp, #28
 691              		@ sp needed
 692 0204 90BD     		pop	{r4, r7, pc}
 693              	.L31:
 694 0206 C046     		.align	2
 695              	.L30:
 696 0208 00000000 		.word	CapSense_widgetNumber
 697 020c 00000000 		.word	CapSense_noiseThreshold
 698 0210 00000000 		.word	CapSense_sensorRaw
 699 0214 00000000 		.word	CapSense_enableRawFilters
 700 0218 00000000 		.word	CapSense_rawFilterData1
 701 021c 00000000 		.word	CapSense_config
 702 0220 00000000 		.word	CapSense_sensorBaseline
 703 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 704 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 705 022c 00000000 		.word	CapSense_lowBaselineReset
 706 0230 00000000 		.word	CapSense_sensorBaselineLow
 707 0234 00000000 		.word	CapSense_sensorSignal
 708              		.cfi_endproc
 709              	.LFE38:
 710              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 711              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 712              		.align	2
 713              		.global	CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 23


 714              		.code	16
 715              		.thumb_func
 716              		.type	CapSense_UpdateSensorBaseline, %function
 717              	CapSense_UpdateSensorBaseline:
 718              	.LFB39:
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 719              		.loc 1 561 0
 720              		.cfi_startproc
 721 0000 80B5     		push	{r7, lr}
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 82B0     		sub	sp, sp, #8
 726              		.cfi_def_cfa_offset 16
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 24


 569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 730              		.loc 1 573 0
 731 0008 7B68     		ldr	r3, [r7, #4]
 732 000a 181C     		mov	r0, r3
 733 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 734              		.loc 1 576 0
 735 0010 7B68     		ldr	r3, [r7, #4]
 736 0012 181C     		mov	r0, r3
 737 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 738              		.loc 1 582 0
 739 0018 BD46     		mov	sp, r7
 740 001a 02B0     		add	sp, sp, #8
 741              		@ sp needed
 742 001c 80BD     		pop	{r7, pc}
 743              		.cfi_endproc
 744              	.LFE39:
 745              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 746 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 747              		.align	2
 748              		.global	CapSense_UpdateEnabledBaselines
 749              		.code	16
 750              		.thumb_func
 751              		.type	CapSense_UpdateEnabledBaselines, %function
 752              	CapSense_UpdateEnabledBaselines:
 753              	.LFB40:
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 25


 602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 754              		.loc 1 615 0
 755              		.cfi_startproc
 756 0000 80B5     		push	{r7, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760 0002 82B0     		sub	sp, sp, #8
 761              		.cfi_def_cfa_offset 16
 762 0004 00AF     		add	r7, sp, #0
 763              		.cfi_def_cfa_register 7
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 764              		.loc 1 619 0
 765 0006 0023     		mov	r3, #0
 766 0008 7B60     		str	r3, [r7, #4]
 767 000a 11E0     		b	.L34
 768              	.L36:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 769              		.loc 1 621 0
 770 000c 0B4A     		ldr	r2, .L37
 771 000e 7B68     		ldr	r3, [r7, #4]
 772 0010 101C     		mov	r0, r2
 773 0012 191C     		mov	r1, r3
 774 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 775 0018 031C     		mov	r3, r0
 776 001a 3B60     		str	r3, [r7]
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 777              		.loc 1 623 0
 778 001c 3B68     		ldr	r3, [r7]
 779 001e 002B     		cmp	r3, #0
 780 0020 03D0     		beq	.L35
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 781              		.loc 1 625 0
 782 0022 7B68     		ldr	r3, [r7, #4]
 783 0024 181C     		mov	r0, r3
 784 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 785              	.L35:
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 26


 786              		.loc 1 619 0 discriminator 2
 787 002a 7B68     		ldr	r3, [r7, #4]
 788 002c 0133     		add	r3, r3, #1
 789 002e 7B60     		str	r3, [r7, #4]
 790              	.L34:
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 791              		.loc 1 619 0 is_stmt 0 discriminator 1
 792 0030 7B68     		ldr	r3, [r7, #4]
 793 0032 072B     		cmp	r3, #7
 794 0034 EAD9     		bls	.L36
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 795              		.loc 1 628 0 is_stmt 1
 796 0036 BD46     		mov	sp, r7
 797 0038 02B0     		add	sp, sp, #8
 798              		@ sp needed
 799 003a 80BD     		pop	{r7, pc}
 800              	.L38:
 801              		.align	2
 802              	.L37:
 803 003c 00000000 		.word	CapSense_sensorEnableMask
 804              		.cfi_endproc
 805              	.LFE40:
 806              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 807              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 808              		.align	2
 809              		.global	CapSense_UpdateWidgetBaseline
 810              		.code	16
 811              		.thumb_func
 812              		.type	CapSense_UpdateWidgetBaseline, %function
 813              	CapSense_UpdateWidgetBaseline:
 814              	.LFB41:
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 27


 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 815              		.loc 1 660 0
 816              		.cfi_startproc
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 88B0     		sub	sp, sp, #32
 822              		.cfi_def_cfa_offset 40
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 826              		.loc 1 668 0
 827 0008 164A     		ldr	r2, .L43
 828 000a 7B68     		ldr	r3, [r7, #4]
 829 000c D318     		add	r3, r2, r3
 830 000e 1B78     		ldrb	r3, [r3]
 831 0010 BB61     		str	r3, [r7, #24]
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 832              		.loc 1 671 0
 833 0012 154A     		ldr	r2, .L43+4
 834 0014 7B68     		ldr	r3, [r7, #4]
 835 0016 D318     		add	r3, r2, r3
 836 0018 1B78     		ldrb	r3, [r3]
 837 001a 7B61     		str	r3, [r7, #20]
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 838              		.loc 1 674 0
 839 001c 124A     		ldr	r2, .L43+4
 840 001e 7B68     		ldr	r3, [r7, #4]
 841 0020 D318     		add	r3, r2, r3
 842 0022 1B78     		ldrb	r3, [r3]
 843 0024 1A1C     		mov	r2, r3
 844 0026 BB69     		ldr	r3, [r7, #24]
 845 0028 D318     		add	r3, r2, r3
 846 002a 3B61     		str	r3, [r7, #16]
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 847              		.loc 1 676 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 28


 848 002c 7B69     		ldr	r3, [r7, #20]
 849 002e FB61     		str	r3, [r7, #28]
 850 0030 11E0     		b	.L40
 851              	.L42:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 852              		.loc 1 678 0
 853 0032 0E4A     		ldr	r2, .L43+8
 854 0034 FB69     		ldr	r3, [r7, #28]
 855 0036 101C     		mov	r0, r2
 856 0038 191C     		mov	r1, r3
 857 003a FFF7FEFF 		bl	CapSense_GetBitValue
 858 003e 031C     		mov	r3, r0
 859 0040 FB60     		str	r3, [r7, #12]
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 860              		.loc 1 680 0
 861 0042 FB68     		ldr	r3, [r7, #12]
 862 0044 002B     		cmp	r3, #0
 863 0046 03D0     		beq	.L41
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 864              		.loc 1 682 0
 865 0048 FB69     		ldr	r3, [r7, #28]
 866 004a 181C     		mov	r0, r3
 867 004c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 868              	.L41:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 869              		.loc 1 676 0 discriminator 2
 870 0050 FB69     		ldr	r3, [r7, #28]
 871 0052 0133     		add	r3, r3, #1
 872 0054 FB61     		str	r3, [r7, #28]
 873              	.L40:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 874              		.loc 1 676 0 is_stmt 0 discriminator 1
 875 0056 FA69     		ldr	r2, [r7, #28]
 876 0058 3B69     		ldr	r3, [r7, #16]
 877 005a 9A42     		cmp	r2, r3
 878 005c E9D3     		bcc	.L42
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 879              		.loc 1 685 0 is_stmt 1
 880 005e BD46     		mov	sp, r7
 881 0060 08B0     		add	sp, sp, #32
 882              		@ sp needed
 883 0062 80BD     		pop	{r7, pc}
 884              	.L44:
 885              		.align	2
 886              	.L43:
 887 0064 00000000 		.word	CapSense_numberOfSensors
 888 0068 00000000 		.word	CapSense_rawDataIndex
 889 006c 00000000 		.word	CapSense_sensorEnableMask
 890              		.cfi_endproc
 891              	.LFE41:
 892              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 893              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 29


 894              		.align	2
 895              		.global	CapSense_GetBaselineData
 896              		.code	16
 897              		.thumb_func
 898              		.type	CapSense_GetBaselineData, %function
 899              	CapSense_GetBaselineData:
 900              	.LFB42:
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 901              		.loc 1 709 0
 902              		.cfi_startproc
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 912              		.loc 1 710 0
 913 0008 034B     		ldr	r3, .L47
 914 000a 7A68     		ldr	r2, [r7, #4]
 915 000c 5200     		lsl	r2, r2, #1
 916 000e D35A     		ldrh	r3, [r2, r3]
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 917              		.loc 1 711 0
 918 0010 181C     		mov	r0, r3
 919 0012 BD46     		mov	sp, r7
 920 0014 02B0     		add	sp, sp, #8
 921              		@ sp needed
 922 0016 80BD     		pop	{r7, pc}
 923              	.L48:
 924              		.align	2
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 30


 925              	.L47:
 926 0018 00000000 		.word	CapSense_sensorBaseline
 927              		.cfi_endproc
 928              	.LFE42:
 929              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 930              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 931              		.align	2
 932              		.global	CapSense_SetBaselineData
 933              		.code	16
 934              		.thumb_func
 935              		.type	CapSense_SetBaselineData, %function
 936              	CapSense_SetBaselineData:
 937              	.LFB43:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 938              		.loc 1 736 0
 939              		.cfi_startproc
 940 0000 80B5     		push	{r7, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 7, -8
 943              		.cfi_offset 14, -4
 944 0002 82B0     		sub	sp, sp, #8
 945              		.cfi_def_cfa_offset 16
 946 0004 00AF     		add	r7, sp, #0
 947              		.cfi_def_cfa_register 7
 948 0006 7860     		str	r0, [r7, #4]
 949 0008 0A1C     		mov	r2, r1
 950 000a BB1C     		add	r3, r7, #2
 951 000c 1A80     		strh	r2, [r3]
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 952              		.loc 1 737 0
 953 000e 044B     		ldr	r3, .L50
 954 0010 7A68     		ldr	r2, [r7, #4]
 955 0012 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 31


 956 0014 B91C     		add	r1, r7, #2
 957 0016 0988     		ldrh	r1, [r1]
 958 0018 D152     		strh	r1, [r2, r3]
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 959              		.loc 1 738 0
 960 001a BD46     		mov	sp, r7
 961 001c 02B0     		add	sp, sp, #8
 962              		@ sp needed
 963 001e 80BD     		pop	{r7, pc}
 964              	.L51:
 965              		.align	2
 966              	.L50:
 967 0020 00000000 		.word	CapSense_sensorBaseline
 968              		.cfi_endproc
 969              	.LFE43:
 970              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 971              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 972              		.align	2
 973              		.global	CapSense_GetDiffCountData
 974              		.code	16
 975              		.thumb_func
 976              		.type	CapSense_GetDiffCountData, %function
 977              	CapSense_GetDiffCountData:
 978              	.LFB44:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 979              		.loc 1 763 0
 980              		.cfi_startproc
 981 0000 80B5     		push	{r7, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 82B0     		sub	sp, sp, #8
 986              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 32


 987 0004 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 989 0006 7860     		str	r0, [r7, #4]
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 990              		.loc 1 764 0
 991 0008 034A     		ldr	r2, .L54
 992 000a 7B68     		ldr	r3, [r7, #4]
 993 000c D318     		add	r3, r2, r3
 994 000e 1B78     		ldrb	r3, [r3]
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 995              		.loc 1 765 0
 996 0010 181C     		mov	r0, r3
 997 0012 BD46     		mov	sp, r7
 998 0014 02B0     		add	sp, sp, #8
 999              		@ sp needed
 1000 0016 80BD     		pop	{r7, pc}
 1001              	.L55:
 1002              		.align	2
 1003              	.L54:
 1004 0018 00000000 		.word	CapSense_sensorSignal
 1005              		.cfi_endproc
 1006              	.LFE44:
 1007              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 1008              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 1009              		.align	2
 1010              		.global	CapSense_SetDiffCountData
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	CapSense_SetDiffCountData, %function
 1014              	CapSense_SetDiffCountData:
 1015              	.LFB45:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1016              		.loc 1 790 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 33


 1017              		.cfi_startproc
 1018 0000 80B5     		push	{r7, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 82B0     		sub	sp, sp, #8
 1023              		.cfi_def_cfa_offset 16
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 7860     		str	r0, [r7, #4]
 1027 0008 0A1C     		mov	r2, r1
 1028 000a FB1C     		add	r3, r7, #3
 1029 000c 1A70     		strb	r2, [r3]
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1030              		.loc 1 791 0
 1031 000e 044A     		ldr	r2, .L57
 1032 0010 7B68     		ldr	r3, [r7, #4]
 1033 0012 D318     		add	r3, r2, r3
 1034 0014 FA1C     		add	r2, r7, #3
 1035 0016 1278     		ldrb	r2, [r2]
 1036 0018 1A70     		strb	r2, [r3]
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1037              		.loc 1 792 0
 1038 001a BD46     		mov	sp, r7
 1039 001c 02B0     		add	sp, sp, #8
 1040              		@ sp needed
 1041 001e 80BD     		pop	{r7, pc}
 1042              	.L58:
 1043              		.align	2
 1044              	.L57:
 1045 0020 00000000 		.word	CapSense_sensorSignal
 1046              		.cfi_endproc
 1047              	.LFE45:
 1048              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1049              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1050              		.align	2
 1051              		.global	CapSense_GetFingerThreshold
 1052              		.code	16
 1053              		.thumb_func
 1054              		.type	CapSense_GetFingerThreshold, %function
 1055              	CapSense_GetFingerThreshold:
 1056              	.LFB46:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 34


 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1057              		.loc 1 817 0
 1058              		.cfi_startproc
 1059 0000 80B5     		push	{r7, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
 1063 0002 82B0     		sub	sp, sp, #8
 1064              		.cfi_def_cfa_offset 16
 1065 0004 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1068              		.loc 1 818 0
 1069 0008 034A     		ldr	r2, .L61
 1070 000a 7B68     		ldr	r3, [r7, #4]
 1071 000c D318     		add	r3, r2, r3
 1072 000e 1B78     		ldrb	r3, [r3]
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1073              		.loc 1 819 0
 1074 0010 181C     		mov	r0, r3
 1075 0012 BD46     		mov	sp, r7
 1076 0014 02B0     		add	sp, sp, #8
 1077              		@ sp needed
 1078 0016 80BD     		pop	{r7, pc}
 1079              	.L62:
 1080              		.align	2
 1081              	.L61:
 1082 0018 00000000 		.word	CapSense_fingerThreshold
 1083              		.cfi_endproc
 1084              	.LFE46:
 1085              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1086              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1087              		.align	2
 1088              		.global	CapSense_GetNoiseThreshold
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CapSense_GetNoiseThreshold, %function
 1092              	CapSense_GetNoiseThreshold:
 1093              	.LFB47:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 35


 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1094              		.loc 1 844 0
 1095              		.cfi_startproc
 1096 0000 80B5     		push	{r7, lr}
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 82B0     		sub	sp, sp, #8
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1105              		.loc 1 845 0
 1106 0008 034A     		ldr	r2, .L65
 1107 000a 7B68     		ldr	r3, [r7, #4]
 1108 000c D318     		add	r3, r2, r3
 1109 000e 1B78     		ldrb	r3, [r3]
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1110              		.loc 1 846 0
 1111 0010 181C     		mov	r0, r3
 1112 0012 BD46     		mov	sp, r7
 1113 0014 02B0     		add	sp, sp, #8
 1114              		@ sp needed
 1115 0016 80BD     		pop	{r7, pc}
 1116              	.L66:
 1117              		.align	2
 1118              	.L65:
 1119 0018 00000000 		.word	CapSense_noiseThreshold
 1120              		.cfi_endproc
 1121              	.LFE47:
 1122              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1123              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1124              		.align	2
 1125              		.global	CapSense_GetFingerHysteresis
 1126              		.code	16
 1127              		.thumb_func
 1128              		.type	CapSense_GetFingerHysteresis, %function
 1129              	CapSense_GetFingerHysteresis:
 1130              	.LFB48:
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 36


 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1131              		.loc 1 872 0
 1132              		.cfi_startproc
 1133 0000 80B5     		push	{r7, lr}
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 82B0     		sub	sp, sp, #8
 1138              		.cfi_def_cfa_offset 16
 1139 0004 00AF     		add	r7, sp, #0
 1140              		.cfi_def_cfa_register 7
 1141 0006 7860     		str	r0, [r7, #4]
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1142              		.loc 1 873 0
 1143 0008 034A     		ldr	r2, .L69
 1144 000a 7B68     		ldr	r3, [r7, #4]
 1145 000c D318     		add	r3, r2, r3
 1146 000e 1B78     		ldrb	r3, [r3]
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1147              		.loc 1 874 0
 1148 0010 181C     		mov	r0, r3
 1149 0012 BD46     		mov	sp, r7
 1150 0014 02B0     		add	sp, sp, #8
 1151              		@ sp needed
 1152 0016 80BD     		pop	{r7, pc}
 1153              	.L70:
 1154              		.align	2
 1155              	.L69:
 1156 0018 00000000 		.word	CapSense_hysteresis
 1157              		.cfi_endproc
 1158              	.LFE48:
 1159              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1160              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 37


 1161              		.align	2
 1162              		.global	CapSense_GetNegativeNoiseThreshold
 1163              		.code	16
 1164              		.thumb_func
 1165              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1166              	CapSense_GetNegativeNoiseThreshold:
 1167              	.LFB49:
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1168              		.loc 1 900 0
 1169              		.cfi_startproc
 1170 0000 80B5     		push	{r7, lr}
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 82B0     		sub	sp, sp, #8
 1175              		.cfi_def_cfa_offset 16
 1176 0004 00AF     		add	r7, sp, #0
 1177              		.cfi_def_cfa_register 7
 1178 0006 7860     		str	r0, [r7, #4]
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1179              		.loc 1 902 0
 1180 0008 034A     		ldr	r2, .L73
 1181 000a 7B68     		ldr	r3, [r7, #4]
 1182 000c D318     		add	r3, r2, r3
 1183 000e 1B78     		ldrb	r3, [r3]
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1184              		.loc 1 906 0
 1185 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 38


 1186 0012 BD46     		mov	sp, r7
 1187 0014 02B0     		add	sp, sp, #8
 1188              		@ sp needed
 1189 0016 80BD     		pop	{r7, pc}
 1190              	.L74:
 1191              		.align	2
 1192              	.L73:
 1193 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1194              		.cfi_endproc
 1195              	.LFE49:
 1196              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1197              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1198              		.align	2
 1199              		.global	CapSense_SetFingerThreshold
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	CapSense_SetFingerThreshold, %function
 1203              	CapSense_SetFingerThreshold:
 1204              	.LFB50:
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1205              		.loc 1 933 0
 1206              		.cfi_startproc
 1207 0000 80B5     		push	{r7, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 82B0     		sub	sp, sp, #8
 1212              		.cfi_def_cfa_offset 16
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 39


 1216 0008 0A1C     		mov	r2, r1
 1217 000a FB1C     		add	r3, r7, #3
 1218 000c 1A70     		strb	r2, [r3]
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1219              		.loc 1 934 0
 1220 000e 044A     		ldr	r2, .L76
 1221 0010 7B68     		ldr	r3, [r7, #4]
 1222 0012 D318     		add	r3, r2, r3
 1223 0014 FA1C     		add	r2, r7, #3
 1224 0016 1278     		ldrb	r2, [r2]
 1225 0018 1A70     		strb	r2, [r3]
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1226              		.loc 1 935 0
 1227 001a BD46     		mov	sp, r7
 1228 001c 02B0     		add	sp, sp, #8
 1229              		@ sp needed
 1230 001e 80BD     		pop	{r7, pc}
 1231              	.L77:
 1232              		.align	2
 1233              	.L76:
 1234 0020 00000000 		.word	CapSense_fingerThreshold
 1235              		.cfi_endproc
 1236              	.LFE50:
 1237              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1238              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1239              		.align	2
 1240              		.global	CapSense_SetNoiseThreshold
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	CapSense_SetNoiseThreshold, %function
 1244              	CapSense_SetNoiseThreshold:
 1245              	.LFB51:
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 40


 961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1246              		.loc 1 961 0
 1247              		.cfi_startproc
 1248 0000 80B5     		push	{r7, lr}
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 7, -8
 1251              		.cfi_offset 14, -4
 1252 0002 82B0     		sub	sp, sp, #8
 1253              		.cfi_def_cfa_offset 16
 1254 0004 00AF     		add	r7, sp, #0
 1255              		.cfi_def_cfa_register 7
 1256 0006 7860     		str	r0, [r7, #4]
 1257 0008 0A1C     		mov	r2, r1
 1258 000a FB1C     		add	r3, r7, #3
 1259 000c 1A70     		strb	r2, [r3]
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1260              		.loc 1 962 0
 1261 000e 044A     		ldr	r2, .L79
 1262 0010 7B68     		ldr	r3, [r7, #4]
 1263 0012 D318     		add	r3, r2, r3
 1264 0014 FA1C     		add	r2, r7, #3
 1265 0016 1278     		ldrb	r2, [r2]
 1266 0018 1A70     		strb	r2, [r3]
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1267              		.loc 1 963 0
 1268 001a BD46     		mov	sp, r7
 1269 001c 02B0     		add	sp, sp, #8
 1270              		@ sp needed
 1271 001e 80BD     		pop	{r7, pc}
 1272              	.L80:
 1273              		.align	2
 1274              	.L79:
 1275 0020 00000000 		.word	CapSense_noiseThreshold
 1276              		.cfi_endproc
 1277              	.LFE51:
 1278              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1279              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1280              		.align	2
 1281              		.global	CapSense_SetFingerHysteresis
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	CapSense_SetFingerHysteresis, %function
 1285              	CapSense_SetFingerHysteresis:
 1286              	.LFB52:
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 41


 977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1287              		.loc 1 989 0
 1288              		.cfi_startproc
 1289 0000 80B5     		push	{r7, lr}
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 82B0     		sub	sp, sp, #8
 1294              		.cfi_def_cfa_offset 16
 1295 0004 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
 1297 0006 7860     		str	r0, [r7, #4]
 1298 0008 0A1C     		mov	r2, r1
 1299 000a FB1C     		add	r3, r7, #3
 1300 000c 1A70     		strb	r2, [r3]
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1301              		.loc 1 990 0
 1302 000e 044A     		ldr	r2, .L82
 1303 0010 7B68     		ldr	r3, [r7, #4]
 1304 0012 D318     		add	r3, r2, r3
 1305 0014 FA1C     		add	r2, r7, #3
 1306 0016 1278     		ldrb	r2, [r2]
 1307 0018 1A70     		strb	r2, [r3]
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1308              		.loc 1 991 0
 1309 001a BD46     		mov	sp, r7
 1310 001c 02B0     		add	sp, sp, #8
 1311              		@ sp needed
 1312 001e 80BD     		pop	{r7, pc}
 1313              	.L83:
 1314              		.align	2
 1315              	.L82:
 1316 0020 00000000 		.word	CapSense_hysteresis
 1317              		.cfi_endproc
 1318              	.LFE52:
 1319              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1320              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1321              		.align	2
 1322              		.global	CapSense_SetNegativeNoiseThreshold
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1326              	CapSense_SetNegativeNoiseThreshold:
 1327              	.LFB53:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 42


 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1328              		.loc 1 1018 0
 1329              		.cfi_startproc
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 82B0     		sub	sp, sp, #8
 1335              		.cfi_def_cfa_offset 16
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 7860     		str	r0, [r7, #4]
 1339 0008 0A1C     		mov	r2, r1
 1340 000a FB1C     		add	r3, r7, #3
 1341 000c 1A70     		strb	r2, [r3]
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1342              		.loc 1 1019 0
 1343 000e 044A     		ldr	r2, .L85
 1344 0010 7B68     		ldr	r3, [r7, #4]
 1345 0012 D318     		add	r3, r2, r3
 1346 0014 FA1C     		add	r2, r7, #3
 1347 0016 1278     		ldrb	r2, [r2]
 1348 0018 1A70     		strb	r2, [r3]
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1349              		.loc 1 1020 0
 1350 001a BD46     		mov	sp, r7
 1351 001c 02B0     		add	sp, sp, #8
 1352              		@ sp needed
 1353 001e 80BD     		pop	{r7, pc}
 1354              	.L86:
 1355              		.align	2
 1356              	.L85:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 43


 1357 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1358              		.cfi_endproc
 1359              	.LFE53:
 1360              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1361              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1362              		.align	2
 1363              		.global	CapSense_SetDebounce
 1364              		.code	16
 1365              		.thumb_func
 1366              		.type	CapSense_SetDebounce, %function
 1367              	CapSense_SetDebounce:
 1368              	.LFB54:
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1369              		.loc 1 1046 0
 1370              		.cfi_startproc
 1371 0000 80B5     		push	{r7, lr}
 1372              		.cfi_def_cfa_offset 8
 1373              		.cfi_offset 7, -8
 1374              		.cfi_offset 14, -4
 1375 0002 82B0     		sub	sp, sp, #8
 1376              		.cfi_def_cfa_offset 16
 1377 0004 00AF     		add	r7, sp, #0
 1378              		.cfi_def_cfa_register 7
 1379 0006 7860     		str	r0, [r7, #4]
 1380 0008 0A1C     		mov	r2, r1
 1381 000a FB1C     		add	r3, r7, #3
 1382 000c 1A70     		strb	r2, [r3]
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1383              		.loc 1 1047 0
 1384 000e 044A     		ldr	r2, .L88
 1385 0010 7B68     		ldr	r3, [r7, #4]
 1386 0012 D318     		add	r3, r2, r3
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 44


 1387 0014 FA1C     		add	r2, r7, #3
 1388 0016 1278     		ldrb	r2, [r2]
 1389 0018 1A70     		strb	r2, [r3]
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1390              		.loc 1 1048 0
 1391 001a BD46     		mov	sp, r7
 1392 001c 02B0     		add	sp, sp, #8
 1393              		@ sp needed
 1394 001e 80BD     		pop	{r7, pc}
 1395              	.L89:
 1396              		.align	2
 1397              	.L88:
 1398 0020 00000000 		.word	CapSense_debounce
 1399              		.cfi_endproc
 1400              	.LFE54:
 1401              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1402              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1403              		.align	2
 1404              		.global	CapSense_SetLowBaselineReset
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	CapSense_SetLowBaselineReset, %function
 1408              	CapSense_SetLowBaselineReset:
 1409              	.LFB55:
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1410              		.loc 1 1074 0
 1411              		.cfi_startproc
 1412 0000 80B5     		push	{r7, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 45


 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 1421 0008 0A1C     		mov	r2, r1
 1422 000a FB1C     		add	r3, r7, #3
 1423 000c 1A70     		strb	r2, [r3]
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1424              		.loc 1 1075 0
 1425 000e 044A     		ldr	r2, .L91
 1426 0010 7B68     		ldr	r3, [r7, #4]
 1427 0012 D318     		add	r3, r2, r3
 1428 0014 FA1C     		add	r2, r7, #3
 1429 0016 1278     		ldrb	r2, [r2]
 1430 0018 1A70     		strb	r2, [r3]
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1431              		.loc 1 1076 0
 1432 001a BD46     		mov	sp, r7
 1433 001c 02B0     		add	sp, sp, #8
 1434              		@ sp needed
 1435 001e 80BD     		pop	{r7, pc}
 1436              	.L92:
 1437              		.align	2
 1438              	.L91:
 1439 0020 00000000 		.word	CapSense_lowBaselineReset
 1440              		.cfi_endproc
 1441              	.LFE55:
 1442              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1443              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1444              		.align	2
 1445              		.global	CapSense_CheckIsSensorActive
 1446              		.code	16
 1447              		.thumb_func
 1448              		.type	CapSense_CheckIsSensorActive, %function
 1449              	CapSense_CheckIsSensorActive:
 1450              	.LFB56:
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 46


1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1451              		.loc 1 1120 0
 1452              		.cfi_startproc
 1453 0000 80B5     		push	{r7, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 84B0     		sub	sp, sp, #16
 1458              		.cfi_def_cfa_offset 24
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 7860     		str	r0, [r7, #4]
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1462              		.loc 1 1130 0
 1463 0008 0E23     		mov	r3, #14
 1464 000a FB18     		add	r3, r7, r3
 1465 000c 4B49     		ldr	r1, .L104
 1466 000e 7A68     		ldr	r2, [r7, #4]
 1467 0010 8A18     		add	r2, r1, r2
 1468 0012 1278     		ldrb	r2, [r2]
 1469 0014 1A70     		strb	r2, [r3]
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1470              		.loc 1 1132 0
 1471 0016 0E23     		mov	r3, #14
 1472 0018 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 47


 1473 001a 1A78     		ldrb	r2, [r3]
 1474 001c 0D23     		mov	r3, #13
 1475 001e FB18     		add	r3, r7, r3
 1476 0020 4749     		ldr	r1, .L104+4
 1477 0022 8A5C     		ldrb	r2, [r1, r2]
 1478 0024 1A70     		strb	r2, [r3]
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1479              		.loc 1 1133 0
 1480 0026 0E23     		mov	r3, #14
 1481 0028 FB18     		add	r3, r7, r3
 1482 002a 1A78     		ldrb	r2, [r3]
 1483 002c 0C23     		mov	r3, #12
 1484 002e FB18     		add	r3, r7, r3
 1485 0030 4449     		ldr	r1, .L104+8
 1486 0032 8A5C     		ldrb	r2, [r1, r2]
 1487 0034 1A70     		strb	r2, [r3]
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1488              		.loc 1 1134 0
 1489 0036 0E23     		mov	r3, #14
 1490 0038 FB18     		add	r3, r7, r3
 1491 003a 1A78     		ldrb	r2, [r3]
 1492 003c 0B23     		mov	r3, #11
 1493 003e FB18     		add	r3, r7, r3
 1494 0040 4149     		ldr	r1, .L104+12
 1495 0042 8A5C     		ldrb	r2, [r1, r2]
 1496 0044 1A70     		strb	r2, [r3]
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 1497              		.loc 1 1136 0
 1498 0046 0E23     		mov	r3, #14
 1499 0048 FB18     		add	r3, r7, r3
 1500 004a 1B78     		ldrb	r3, [r3]
 1501 004c 002B     		cmp	r3, #0
 1502 004e 0AD1     		bne	.L94
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1503              		.loc 1 1138 0
 1504 0050 0F23     		mov	r3, #15
 1505 0052 FB18     		add	r3, r7, r3
 1506 0054 0322     		mov	r2, #3
 1507 0056 1A70     		strb	r2, [r3]
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 1508              		.loc 1 1139 0
 1509 0058 0F23     		mov	r3, #15
 1510 005a FB18     		add	r3, r7, r3
 1511 005c 1B78     		ldrb	r3, [r3]
 1512 005e 3B4A     		ldr	r2, .L104+16
 1513 0060 0121     		mov	r1, #1
 1514 0062 D154     		strb	r1, [r2, r3]
 1515 0064 06E0     		b	.L95
 1516              	.L94:
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u);
 1517              		.loc 1 1143 0
 1518 0066 0F23     		mov	r3, #15
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 48


 1519 0068 FB18     		add	r3, r7, r3
 1520 006a 0E22     		mov	r2, #14
 1521 006c BA18     		add	r2, r7, r2
 1522 006e 1278     		ldrb	r2, [r2]
 1523 0070 013A     		sub	r2, r2, #1
 1524 0072 1A70     		strb	r2, [r3]
 1525              	.L95:
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1526              		.loc 1 1148 0
 1527 0074 364A     		ldr	r2, .L104+20
 1528 0076 7B68     		ldr	r3, [r7, #4]
 1529 0078 101C     		mov	r0, r2
 1530 007a 191C     		mov	r1, r3
 1531 007c FFF7FEFF 		bl	CapSense_GetBitValue
 1532 0080 031E     		sub	r3, r0, #0
 1533 0082 1DD0     		beq	.L96
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1534              		.loc 1 1151 0
 1535 0084 334A     		ldr	r2, .L104+24
 1536 0086 7B68     		ldr	r3, [r7, #4]
 1537 0088 D318     		add	r3, r2, r3
 1538 008a 1B78     		ldrb	r3, [r3]
 1539 008c 191C     		mov	r1, r3
 1540 008e 0D23     		mov	r3, #13
 1541 0090 FB18     		add	r3, r7, r3
 1542 0092 1A78     		ldrb	r2, [r3]
 1543 0094 0C23     		mov	r3, #12
 1544 0096 FB18     		add	r3, r7, r3
 1545 0098 1B78     		ldrb	r3, [r3]
 1546 009a D31A     		sub	r3, r2, r3
 1547 009c 9942     		cmp	r1, r3
 1548 009e 3DDA     		bge	.L98
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1549              		.loc 1 1153 0
 1550 00a0 2B4A     		ldr	r2, .L104+20
 1551 00a2 7B68     		ldr	r3, [r7, #4]
 1552 00a4 101C     		mov	r0, r2
 1553 00a6 191C     		mov	r1, r3
 1554 00a8 0022     		mov	r2, #0
 1555 00aa FFF7FEFF 		bl	CapSense_SetBitValue
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1556              		.loc 1 1155 0
 1557 00ae 0F23     		mov	r3, #15
 1558 00b0 FB18     		add	r3, r7, r3
 1559 00b2 1B78     		ldrb	r3, [r3]
 1560 00b4 254A     		ldr	r2, .L104+16
 1561 00b6 0B21     		mov	r1, #11
 1562 00b8 7918     		add	r1, r7, r1
 1563 00ba 0978     		ldrb	r1, [r1]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 49


 1564 00bc D154     		strb	r1, [r2, r3]
 1565 00be 2DE0     		b	.L98
 1566              	.L96:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1567              		.loc 1 1161 0
 1568 00c0 244A     		ldr	r2, .L104+24
 1569 00c2 7B68     		ldr	r3, [r7, #4]
 1570 00c4 D318     		add	r3, r2, r3
 1571 00c6 1B78     		ldrb	r3, [r3]
 1572 00c8 191C     		mov	r1, r3
 1573 00ca 0D23     		mov	r3, #13
 1574 00cc FB18     		add	r3, r7, r3
 1575 00ce 1A78     		ldrb	r2, [r3]
 1576 00d0 0C23     		mov	r3, #12
 1577 00d2 FB18     		add	r3, r7, r3
 1578 00d4 1B78     		ldrb	r3, [r3]
 1579 00d6 D318     		add	r3, r2, r3
 1580 00d8 9942     		cmp	r1, r3
 1581 00da 17DB     		blt	.L99
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1582              		.loc 1 1163 0
 1583 00dc 0F23     		mov	r3, #15
 1584 00de FB18     		add	r3, r7, r3
 1585 00e0 1B78     		ldrb	r3, [r3]
 1586 00e2 1A4A     		ldr	r2, .L104+16
 1587 00e4 D25C     		ldrb	r2, [r2, r3]
 1588 00e6 013A     		sub	r2, r2, #1
 1589 00e8 D1B2     		uxtb	r1, r2
 1590 00ea 184A     		ldr	r2, .L104+16
 1591 00ec D154     		strb	r1, [r2, r3]
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1592              		.loc 1 1165 0
 1593 00ee 0F23     		mov	r3, #15
 1594 00f0 FB18     		add	r3, r7, r3
 1595 00f2 1B78     		ldrb	r3, [r3]
 1596 00f4 154A     		ldr	r2, .L104+16
 1597 00f6 D35C     		ldrb	r3, [r2, r3]
 1598 00f8 002B     		cmp	r3, #0
 1599 00fa 0FD1     		bne	.L98
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1600              		.loc 1 1167 0
 1601 00fc 144A     		ldr	r2, .L104+20
 1602 00fe 7B68     		ldr	r3, [r7, #4]
 1603 0100 101C     		mov	r0, r2
 1604 0102 191C     		mov	r1, r3
 1605 0104 0122     		mov	r2, #1
 1606 0106 FFF7FEFF 		bl	CapSense_SetBitValue
 1607 010a 07E0     		b	.L98
 1608              	.L99:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 50


1168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1609              		.loc 1 1173 0
 1610 010c 0F23     		mov	r3, #15
 1611 010e FB18     		add	r3, r7, r3
 1612 0110 1B78     		ldrb	r3, [r3]
 1613 0112 0E4A     		ldr	r2, .L104+16
 1614 0114 0B21     		mov	r1, #11
 1615 0116 7918     		add	r1, r7, r1
 1616 0118 0978     		ldrb	r1, [r1]
 1617 011a D154     		strb	r1, [r2, r3]
 1618              	.L98:
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1619              		.loc 1 1177 0
 1620 011c 0C4A     		ldr	r2, .L104+20
 1621 011e 7B68     		ldr	r3, [r7, #4]
 1622 0120 101C     		mov	r0, r2
 1623 0122 191C     		mov	r1, r3
 1624 0124 FFF7FEFF 		bl	CapSense_GetBitValue
 1625 0128 031E     		sub	r3, r0, #0
 1626 012a 01D0     		beq	.L101
 1627              		.loc 1 1177 0 is_stmt 0 discriminator 1
 1628 012c 0123     		mov	r3, #1
 1629 012e 00E0     		b	.L102
 1630              	.L101:
 1631              		.loc 1 1177 0 discriminator 2
 1632 0130 0023     		mov	r3, #0
 1633              	.L102:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1634              		.loc 1 1178 0 is_stmt 1 discriminator 4
 1635 0132 181C     		mov	r0, r3
 1636 0134 BD46     		mov	sp, r7
 1637 0136 04B0     		add	sp, sp, #16
 1638              		@ sp needed
 1639 0138 80BD     		pop	{r7, pc}
 1640              	.L105:
 1641 013a C046     		.align	2
 1642              	.L104:
 1643 013c 00000000 		.word	CapSense_widgetNumber
 1644 0140 00000000 		.word	CapSense_fingerThreshold
 1645 0144 00000000 		.word	CapSense_hysteresis
 1646 0148 00000000 		.word	CapSense_debounce
 1647 014c 24000000 		.word	CapSense_debounceCounter
 1648 0150 00000000 		.word	CapSense_sensorOnMask
 1649 0154 00000000 		.word	CapSense_sensorSignal
 1650              		.cfi_endproc
 1651              	.LFE56:
 1652              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1653              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1654              		.align	2
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 51


 1655              		.global	CapSense_CheckIsWidgetActive
 1656              		.code	16
 1657              		.thumb_func
 1658              		.type	CapSense_CheckIsWidgetActive, %function
 1659              	CapSense_CheckIsWidgetActive:
 1660              	.LFB57:
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1661              		.loc 1 1210 0
 1662              		.cfi_startproc
 1663 0000 80B5     		push	{r7, lr}
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 7, -8
 1666              		.cfi_offset 14, -4
 1667 0002 86B0     		sub	sp, sp, #24
 1668              		.cfi_def_cfa_offset 32
 1669 0004 00AF     		add	r7, sp, #0
 1670              		.cfi_def_cfa_register 7
 1671 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1672              		.loc 1 1211 0
 1673 0008 114A     		ldr	r2, .L110
 1674 000a 7B68     		ldr	r3, [r7, #4]
 1675 000c D318     		add	r3, r2, r3
 1676 000e 1B78     		ldrb	r3, [r3]
 1677 0010 7B61     		str	r3, [r7, #20]
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 52


 1678              		.loc 1 1212 0
 1679 0012 104A     		ldr	r2, .L110+4
 1680 0014 7B68     		ldr	r3, [r7, #4]
 1681 0016 D318     		add	r3, r2, r3
 1682 0018 1B78     		ldrb	r3, [r3]
 1683 001a 1A1C     		mov	r2, r3
 1684 001c 7B69     		ldr	r3, [r7, #20]
 1685 001e D318     		add	r3, r2, r3
 1686 0020 FB60     		str	r3, [r7, #12]
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1687              		.loc 1 1213 0
 1688 0022 0023     		mov	r3, #0
 1689 0024 3B61     		str	r3, [r7, #16]
 1690              	.L108:
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1691              		.loc 1 1218 0
 1692 0026 7B69     		ldr	r3, [r7, #20]
 1693 0028 181C     		mov	r0, r3
 1694 002a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1695 002e 031E     		sub	r3, r0, #0
 1696 0030 01D0     		beq	.L107
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1697              		.loc 1 1220 0
 1698 0032 0123     		mov	r3, #1
 1699 0034 3B61     		str	r3, [r7, #16]
 1700              	.L107:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1701              		.loc 1 1222 0
 1702 0036 7B69     		ldr	r3, [r7, #20]
 1703 0038 0133     		add	r3, r3, #1
 1704 003a 7B61     		str	r3, [r7, #20]
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1705              		.loc 1 1224 0
 1706 003c 7A69     		ldr	r2, [r7, #20]
 1707 003e FB68     		ldr	r3, [r7, #12]
 1708 0040 9A42     		cmp	r2, r3
 1709 0042 F0D3     		bcc	.L108
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1710              		.loc 1 1228 0
 1711 0044 3B69     		ldr	r3, [r7, #16]
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1712              		.loc 1 1229 0
 1713 0046 181C     		mov	r0, r3
 1714 0048 BD46     		mov	sp, r7
 1715 004a 06B0     		add	sp, sp, #24
 1716              		@ sp needed
 1717 004c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 53


 1718              	.L111:
 1719 004e C046     		.align	2
 1720              	.L110:
 1721 0050 00000000 		.word	CapSense_rawDataIndex
 1722 0054 00000000 		.word	CapSense_numberOfSensors
 1723              		.cfi_endproc
 1724              	.LFE57:
 1725              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1726              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1727              		.align	2
 1728              		.global	CapSense_CheckIsAnyWidgetActive
 1729              		.code	16
 1730              		.thumb_func
 1731              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1732              	CapSense_CheckIsAnyWidgetActive:
 1733              	.LFB58:
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1734              		.loc 1 1256 0
 1735              		.cfi_startproc
 1736 0000 80B5     		push	{r7, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 7, -8
 1739              		.cfi_offset 14, -4
 1740 0002 82B0     		sub	sp, sp, #8
 1741              		.cfi_def_cfa_offset 16
 1742 0004 00AF     		add	r7, sp, #0
 1743              		.cfi_def_cfa_register 7
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1744              		.loc 1 1259 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 54


 1745 0006 0023     		mov	r3, #0
 1746 0008 3B60     		str	r3, [r7]
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1747              		.loc 1 1261 0
 1748 000a 0023     		mov	r3, #0
 1749 000c 7B60     		str	r3, [r7, #4]
 1750 000e 0AE0     		b	.L113
 1751              	.L115:
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1752              		.loc 1 1263 0
 1753 0010 7B68     		ldr	r3, [r7, #4]
 1754 0012 181C     		mov	r0, r3
 1755 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1756 0018 031E     		sub	r3, r0, #0
 1757 001a 01D0     		beq	.L114
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1758              		.loc 1 1265 0
 1759 001c 0123     		mov	r3, #1
 1760 001e 3B60     		str	r3, [r7]
 1761              	.L114:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1762              		.loc 1 1261 0 discriminator 2
 1763 0020 7B68     		ldr	r3, [r7, #4]
 1764 0022 0133     		add	r3, r3, #1
 1765 0024 7B60     		str	r3, [r7, #4]
 1766              	.L113:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1767              		.loc 1 1261 0 is_stmt 0 discriminator 1
 1768 0026 7B68     		ldr	r3, [r7, #4]
 1769 0028 032B     		cmp	r3, #3
 1770 002a F1D9     		bls	.L115
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1771              		.loc 1 1271 0 is_stmt 1
 1772 002c 3B68     		ldr	r3, [r7]
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1773              		.loc 1 1272 0
 1774 002e 181C     		mov	r0, r3
 1775 0030 BD46     		mov	sp, r7
 1776 0032 02B0     		add	sp, sp, #8
 1777              		@ sp needed
 1778 0034 80BD     		pop	{r7, pc}
 1779              		.cfi_endproc
 1780              	.LFE58:
 1781              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1782 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1783              		.align	2
 1784              		.global	CapSense_EnableWidget
 1785              		.code	16
 1786              		.thumb_func
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 55


 1787              		.type	CapSense_EnableWidget, %function
 1788              	CapSense_EnableWidget:
 1789              	.LFB59:
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1790              		.loc 1 1303 0
 1791              		.cfi_startproc
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 84B0     		sub	sp, sp, #16
 1797              		.cfi_def_cfa_offset 24
 1798 0004 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 0006 7860     		str	r0, [r7, #4]
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1801              		.loc 1 1305 0
 1802 0008 0F23     		mov	r3, #15
 1803 000a FB18     		add	r3, r7, r3
 1804 000c 1549     		ldr	r1, .L119
 1805 000e 7A68     		ldr	r2, [r7, #4]
 1806 0010 8A18     		add	r2, r1, r2
 1807 0012 1278     		ldrb	r2, [r2]
 1808 0014 1A70     		strb	r2, [r3]
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1809              		.loc 1 1306 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 56


 1810 0016 144A     		ldr	r2, .L119+4
 1811 0018 7B68     		ldr	r3, [r7, #4]
 1812 001a D318     		add	r3, r2, r3
 1813 001c 1978     		ldrb	r1, [r3]
 1814 001e 0E23     		mov	r3, #14
 1815 0020 FB18     		add	r3, r7, r3
 1816 0022 0F22     		mov	r2, #15
 1817 0024 BA18     		add	r2, r7, r2
 1818 0026 1278     		ldrb	r2, [r2]
 1819 0028 8A18     		add	r2, r1, r2
 1820 002a 1A70     		strb	r2, [r3]
 1821              	.L118:
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1822              		.loc 1 1311 0 discriminator 1
 1823 002c 0F23     		mov	r3, #15
 1824 002e FB18     		add	r3, r7, r3
 1825 0030 1B78     		ldrb	r3, [r3]
 1826 0032 0E4A     		ldr	r2, .L119+8
 1827 0034 101C     		mov	r0, r2
 1828 0036 191C     		mov	r1, r3
 1829 0038 0122     		mov	r2, #1
 1830 003a FFF7FEFF 		bl	CapSense_SetBitValue
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1831              		.loc 1 1312 0 discriminator 1
 1832 003e 0F23     		mov	r3, #15
 1833 0040 FB18     		add	r3, r7, r3
 1834 0042 1A78     		ldrb	r2, [r3]
 1835 0044 0F23     		mov	r3, #15
 1836 0046 FB18     		add	r3, r7, r3
 1837 0048 0132     		add	r2, r2, #1
 1838 004a 1A70     		strb	r2, [r3]
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1839              		.loc 1 1314 0 discriminator 1
 1840 004c 0F23     		mov	r3, #15
 1841 004e FA18     		add	r2, r7, r3
 1842 0050 0E23     		mov	r3, #14
 1843 0052 FB18     		add	r3, r7, r3
 1844 0054 1278     		ldrb	r2, [r2]
 1845 0056 1B78     		ldrb	r3, [r3]
 1846 0058 9A42     		cmp	r2, r3
 1847 005a E7D3     		bcc	.L118
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1848              		.loc 1 1315 0
 1849 005c BD46     		mov	sp, r7
 1850 005e 04B0     		add	sp, sp, #16
 1851              		@ sp needed
 1852 0060 80BD     		pop	{r7, pc}
 1853              	.L120:
 1854 0062 C046     		.align	2
 1855              	.L119:
 1856 0064 00000000 		.word	CapSense_rawDataIndex
 1857 0068 00000000 		.word	CapSense_numberOfSensors
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 57


 1858 006c 00000000 		.word	CapSense_sensorEnableMask
 1859              		.cfi_endproc
 1860              	.LFE59:
 1861              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1862              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1863              		.align	2
 1864              		.global	CapSense_DisableWidget
 1865              		.code	16
 1866              		.thumb_func
 1867              		.type	CapSense_DisableWidget, %function
 1868              	CapSense_DisableWidget:
 1869              	.LFB60:
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1870              		.loc 1 1346 0
 1871              		.cfi_startproc
 1872 0000 80B5     		push	{r7, lr}
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 84B0     		sub	sp, sp, #16
 1877              		.cfi_def_cfa_offset 24
 1878 0004 00AF     		add	r7, sp, #0
 1879              		.cfi_def_cfa_register 7
 1880 0006 7860     		str	r0, [r7, #4]
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1881              		.loc 1 1347 0
 1882 0008 0F23     		mov	r3, #15
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 58


 1883 000a FB18     		add	r3, r7, r3
 1884 000c 1549     		ldr	r1, .L123
 1885 000e 7A68     		ldr	r2, [r7, #4]
 1886 0010 8A18     		add	r2, r1, r2
 1887 0012 1278     		ldrb	r2, [r2]
 1888 0014 1A70     		strb	r2, [r3]
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1889              		.loc 1 1348 0
 1890 0016 144A     		ldr	r2, .L123+4
 1891 0018 7B68     		ldr	r3, [r7, #4]
 1892 001a D318     		add	r3, r2, r3
 1893 001c 1978     		ldrb	r1, [r3]
 1894 001e 0E23     		mov	r3, #14
 1895 0020 FB18     		add	r3, r7, r3
 1896 0022 0F22     		mov	r2, #15
 1897 0024 BA18     		add	r2, r7, r2
 1898 0026 1278     		ldrb	r2, [r2]
 1899 0028 8A18     		add	r2, r1, r2
 1900 002a 1A70     		strb	r2, [r3]
 1901              	.L122:
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1902              		.loc 1 1354 0 discriminator 1
 1903 002c 0F23     		mov	r3, #15
 1904 002e FB18     		add	r3, r7, r3
 1905 0030 1B78     		ldrb	r3, [r3]
 1906 0032 0E4A     		ldr	r2, .L123+8
 1907 0034 101C     		mov	r0, r2
 1908 0036 191C     		mov	r1, r3
 1909 0038 0022     		mov	r2, #0
 1910 003a FFF7FEFF 		bl	CapSense_SetBitValue
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1911              		.loc 1 1355 0 discriminator 1
 1912 003e 0F23     		mov	r3, #15
 1913 0040 FB18     		add	r3, r7, r3
 1914 0042 1A78     		ldrb	r2, [r3]
 1915 0044 0F23     		mov	r3, #15
 1916 0046 FB18     		add	r3, r7, r3
 1917 0048 0132     		add	r2, r2, #1
 1918 004a 1A70     		strb	r2, [r3]
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1919              		.loc 1 1357 0 discriminator 1
 1920 004c 0F23     		mov	r3, #15
 1921 004e FA18     		add	r2, r7, r3
 1922 0050 0E23     		mov	r3, #14
 1923 0052 FB18     		add	r3, r7, r3
 1924 0054 1278     		ldrb	r2, [r2]
 1925 0056 1B78     		ldrb	r3, [r3]
 1926 0058 9A42     		cmp	r2, r3
 1927 005a E7D3     		bcc	.L122
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1928              		.loc 1 1358 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 59


 1929 005c BD46     		mov	sp, r7
 1930 005e 04B0     		add	sp, sp, #16
 1931              		@ sp needed
 1932 0060 80BD     		pop	{r7, pc}
 1933              	.L124:
 1934 0062 C046     		.align	2
 1935              	.L123:
 1936 0064 00000000 		.word	CapSense_rawDataIndex
 1937 0068 00000000 		.word	CapSense_numberOfSensors
 1938 006c 00000000 		.word	CapSense_sensorEnableMask
 1939              		.cfi_endproc
 1940              	.LFE60:
 1941              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1942              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1943              		.align	2
 1944              		.global	CapSense_FindMaximum
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	CapSense_FindMaximum, %function
 1948              	CapSense_FindMaximum:
 1949              	.LFB61:
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 60


1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1950              		.loc 1 1397 0
 1951              		.cfi_startproc
 1952 0000 90B5     		push	{r4, r7, lr}
 1953              		.cfi_def_cfa_offset 12
 1954              		.cfi_offset 4, -12
 1955              		.cfi_offset 7, -8
 1956              		.cfi_offset 14, -4
 1957 0002 85B0     		sub	sp, sp, #20
 1958              		.cfi_def_cfa_offset 32
 1959 0004 00AF     		add	r7, sp, #0
 1960              		.cfi_def_cfa_register 7
 1961 0006 041C     		mov	r4, r0
 1962 0008 081C     		mov	r0, r1
 1963 000a 111C     		mov	r1, r2
 1964 000c FB1D     		add	r3, r7, #7
 1965 000e 221C     		add	r2, r4, #0
 1966 0010 1A70     		strb	r2, [r3]
 1967 0012 BB1D     		add	r3, r7, #6
 1968 0014 021C     		add	r2, r0, #0
 1969 0016 1A70     		strb	r2, [r3]
 1970 0018 7B1D     		add	r3, r7, #5
 1971 001a 0A1C     		add	r2, r1, #0
 1972 001c 1A70     		strb	r2, [r3]
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1973              		.loc 1 1408 0
 1974 001e 0E23     		mov	r3, #14
 1975 0020 FB18     		add	r3, r7, r3
 1976 0022 FF22     		mov	r2, #255
 1977 0024 1A70     		strb	r2, [r3]
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1978              		.loc 1 1410 0
 1979 0026 0D23     		mov	r3, #13
 1980 0028 FB18     		add	r3, r7, r3
 1981 002a 0022     		mov	r2, #0
 1982 002c 1A70     		strb	r2, [r3]
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1983              		.loc 1 1411 0
 1984 002e FB1D     		add	r3, r7, #7
 1985 0030 1A78     		ldrb	r2, [r3]
 1986 0032 204B     		ldr	r3, .L130
 1987 0034 D318     		add	r3, r2, r3
 1988 0036 BB60     		str	r3, [r7, #8]
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 61


1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 62


1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1989              		.loc 1 1508 0
 1990 0038 0F23     		mov	r3, #15
 1991 003a FB18     		add	r3, r7, r3
 1992 003c 0022     		mov	r2, #0
 1993 003e 1A70     		strb	r2, [r3]
 1994 0040 2AE0     		b	.L126
 1995              	.L128:
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1996              		.loc 1 1511 0
 1997 0042 0F23     		mov	r3, #15
 1998 0044 FB18     		add	r3, r7, r3
 1999 0046 1B78     		ldrb	r3, [r3]
 2000 0048 BA68     		ldr	r2, [r7, #8]
 2001 004a D318     		add	r3, r2, r3
 2002 004c 1B78     		ldrb	r3, [r3]
 2003 004e 7A1D     		add	r2, r7, #5
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 63


 2004 0050 1278     		ldrb	r2, [r2]
 2005 0052 9A42     		cmp	r2, r3
 2006 0054 19D2     		bcs	.L127
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 2007              		.loc 1 1513 0
 2008 0056 0F23     		mov	r3, #15
 2009 0058 FB18     		add	r3, r7, r3
 2010 005a 1B78     		ldrb	r3, [r3]
 2011 005c BA68     		ldr	r2, [r7, #8]
 2012 005e D318     		add	r3, r2, r3
 2013 0060 1B78     		ldrb	r3, [r3]
 2014 0062 0D22     		mov	r2, #13
 2015 0064 BA18     		add	r2, r7, r2
 2016 0066 1278     		ldrb	r2, [r2]
 2017 0068 9A42     		cmp	r2, r3
 2018 006a 0ED2     		bcs	.L127
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 2019              		.loc 1 1515 0
 2020 006c 0E23     		mov	r3, #14
 2021 006e FB18     		add	r3, r7, r3
 2022 0070 0F22     		mov	r2, #15
 2023 0072 BA18     		add	r2, r7, r2
 2024 0074 1278     		ldrb	r2, [r2]
 2025 0076 1A70     		strb	r2, [r3]
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 2026              		.loc 1 1516 0
 2027 0078 0F23     		mov	r3, #15
 2028 007a FB18     		add	r3, r7, r3
 2029 007c 1B78     		ldrb	r3, [r3]
 2030 007e BA68     		ldr	r2, [r7, #8]
 2031 0080 D218     		add	r2, r2, r3
 2032 0082 0D23     		mov	r3, #13
 2033 0084 FB18     		add	r3, r7, r3
 2034 0086 1278     		ldrb	r2, [r2]
 2035 0088 1A70     		strb	r2, [r3]
 2036              	.L127:
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2037              		.loc 1 1508 0 discriminator 2
 2038 008a 0F23     		mov	r3, #15
 2039 008c FB18     		add	r3, r7, r3
 2040 008e 1A78     		ldrb	r2, [r3]
 2041 0090 0F23     		mov	r3, #15
 2042 0092 FB18     		add	r3, r7, r3
 2043 0094 0132     		add	r2, r2, #1
 2044 0096 1A70     		strb	r2, [r3]
 2045              	.L126:
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2046              		.loc 1 1508 0 is_stmt 0 discriminator 1
 2047 0098 0F23     		mov	r3, #15
 2048 009a FA18     		add	r2, r7, r3
 2049 009c BB1D     		add	r3, r7, #6
 2050 009e 1278     		ldrb	r2, [r2]
 2051 00a0 1B78     		ldrb	r3, [r3]
 2052 00a2 9A42     		cmp	r2, r3
 2053 00a4 CDD3     		bcc	.L128
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 64


1517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 2054              		.loc 1 1521 0 is_stmt 1
 2055 00a6 0E23     		mov	r3, #14
 2056 00a8 FB18     		add	r3, r7, r3
 2057 00aa 1B78     		ldrb	r3, [r3]
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2058              		.loc 1 1522 0
 2059 00ac 181C     		mov	r0, r3
 2060 00ae BD46     		mov	sp, r7
 2061 00b0 05B0     		add	sp, sp, #20
 2062              		@ sp needed
 2063 00b2 90BD     		pop	{r4, r7, pc}
 2064              	.L131:
 2065              		.align	2
 2066              	.L130:
 2067 00b4 00000000 		.word	CapSense_sensorSignal
 2068              		.cfi_endproc
 2069              	.LFE61:
 2070              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2071              		.global	__aeabi_idiv
 2072              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2073              		.align	2
 2074              		.global	CapSense_CalcCentroid
 2075              		.code	16
 2076              		.thumb_func
 2077              		.type	CapSense_CalcCentroid, %function
 2078              	CapSense_CalcCentroid:
 2079              	.LFB62:
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 65


1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2080              		.loc 1 1557 0
 2081              		.cfi_startproc
 2082 0000 B0B5     		push	{r4, r5, r7, lr}
 2083              		.cfi_def_cfa_offset 16
 2084              		.cfi_offset 4, -16
 2085              		.cfi_offset 5, -12
 2086              		.cfi_offset 7, -8
 2087              		.cfi_offset 14, -4
 2088 0002 88B0     		sub	sp, sp, #32
 2089              		.cfi_def_cfa_offset 48
 2090 0004 00AF     		add	r7, sp, #0
 2091              		.cfi_def_cfa_register 7
 2092 0006 051C     		mov	r5, r0
 2093 0008 0C1C     		mov	r4, r1
 2094 000a 101C     		mov	r0, r2
 2095 000c 191C     		mov	r1, r3
 2096 000e FB1D     		add	r3, r7, #7
 2097 0010 2A1C     		add	r2, r5, #0
 2098 0012 1A70     		strb	r2, [r3]
 2099 0014 BB1D     		add	r3, r7, #6
 2100 0016 221C     		add	r2, r4, #0
 2101 0018 1A70     		strb	r2, [r3]
 2102 001a 7B1D     		add	r3, r7, #5
 2103 001c 021C     		add	r2, r0, #0
 2104 001e 1A70     		strb	r2, [r3]
 2105 0020 BB1C     		add	r3, r7, #2
 2106 0022 0A1C     		add	r2, r1, #0
 2107 0024 1A80     		strh	r2, [r3]
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 66


 2108              		.loc 1 1576 0
 2109 0026 BB1D     		add	r3, r7, #6
 2110 0028 1A78     		ldrb	r2, [r3]
 2111 002a 5B4B     		ldr	r3, .L142
 2112 002c D318     		add	r3, r2, r3
 2113 002e BB61     		str	r3, [r7, #24]
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2114              		.loc 1 1579 0
 2115 0030 1F23     		mov	r3, #31
 2116 0032 FB18     		add	r3, r7, r3
 2117 0034 0022     		mov	r2, #0
 2118 0036 1A70     		strb	r2, [r3]
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 67


1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2119              		.loc 1 1639 0
 2120 0038 FB1D     		add	r3, r7, #7
 2121 003a 1B78     		ldrb	r3, [r3]
 2122 003c 002B     		cmp	r3, #0
 2123 003e 05D0     		beq	.L133
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2124              		.loc 1 1641 0
 2125 0040 1F23     		mov	r3, #31
 2126 0042 FB18     		add	r3, r7, r3
 2127 0044 FA1D     		add	r2, r7, #7
 2128 0046 1278     		ldrb	r2, [r2]
 2129 0048 013A     		sub	r2, r2, #1
 2130 004a 1A70     		strb	r2, [r3]
 2131              	.L133:
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2132              		.loc 1 1643 0
 2133 004c 1723     		mov	r3, #23
 2134 004e FB18     		add	r3, r7, r3
 2135 0050 FA1D     		add	r2, r7, #7
 2136 0052 1278     		ldrb	r2, [r2]
 2137 0054 0132     		add	r2, r2, #1
 2138 0056 1A70     		strb	r2, [r3]
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2139              		.loc 1 1650 0
 2140 0058 FB1D     		add	r3, r7, #7
 2141 005a 1B78     		ldrb	r3, [r3]
 2142 005c BA69     		ldr	r2, [r7, #24]
 2143 005e D318     		add	r3, r2, r3
 2144 0060 1A78     		ldrb	r2, [r3]
 2145 0062 4E4B     		ldr	r3, .L142+4
 2146 0064 5A70     		strb	r2, [r3, #1]
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 68


1652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2147              		.loc 1 1654 0
 2148 0066 FB1D     		add	r3, r7, #7
 2149 0068 1B78     		ldrb	r3, [r3]
 2150 006a 002B     		cmp	r3, #0
 2151 006c 0BD1     		bne	.L134
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2152              		.loc 1 1656 0
 2153 006e 4B4B     		ldr	r3, .L142+4
 2154 0070 0022     		mov	r2, #0
 2155 0072 1A70     		strb	r2, [r3]
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2156              		.loc 1 1657 0
 2157 0074 1723     		mov	r3, #23
 2158 0076 FB18     		add	r3, r7, r3
 2159 0078 1B78     		ldrb	r3, [r3]
 2160 007a BA69     		ldr	r2, [r7, #24]
 2161 007c D318     		add	r3, r2, r3
 2162 007e 1A78     		ldrb	r2, [r3]
 2163 0080 464B     		ldr	r3, .L142+4
 2164 0082 9A70     		strb	r2, [r3, #2]
 2165 0084 22E0     		b	.L135
 2166              	.L134:
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2167              		.loc 1 1659 0
 2168 0086 FB1D     		add	r3, r7, #7
 2169 0088 1A78     		ldrb	r2, [r3]
 2170 008a 7B1D     		add	r3, r7, #5
 2171 008c 1B78     		ldrb	r3, [r3]
 2172 008e 013B     		sub	r3, r3, #1
 2173 0090 9A42     		cmp	r2, r3
 2174 0092 0BD1     		bne	.L136
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2175              		.loc 1 1661 0
 2176 0094 1F23     		mov	r3, #31
 2177 0096 FB18     		add	r3, r7, r3
 2178 0098 1B78     		ldrb	r3, [r3]
 2179 009a BA69     		ldr	r2, [r7, #24]
 2180 009c D318     		add	r3, r2, r3
 2181 009e 1A78     		ldrb	r2, [r3]
 2182 00a0 3E4B     		ldr	r3, .L142+4
 2183 00a2 1A70     		strb	r2, [r3]
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2184              		.loc 1 1662 0
 2185 00a4 3D4B     		ldr	r3, .L142+4
 2186 00a6 0022     		mov	r2, #0
 2187 00a8 9A70     		strb	r2, [r3, #2]
 2188 00aa 0FE0     		b	.L135
 2189              	.L136:
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 69


1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2190              		.loc 1 1666 0
 2191 00ac 1F23     		mov	r3, #31
 2192 00ae FB18     		add	r3, r7, r3
 2193 00b0 1B78     		ldrb	r3, [r3]
 2194 00b2 BA69     		ldr	r2, [r7, #24]
 2195 00b4 D318     		add	r3, r2, r3
 2196 00b6 1A78     		ldrb	r2, [r3]
 2197 00b8 384B     		ldr	r3, .L142+4
 2198 00ba 1A70     		strb	r2, [r3]
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2199              		.loc 1 1667 0
 2200 00bc 1723     		mov	r3, #23
 2201 00be FB18     		add	r3, r7, r3
 2202 00c0 1B78     		ldrb	r3, [r3]
 2203 00c2 BA69     		ldr	r2, [r7, #24]
 2204 00c4 D318     		add	r3, r2, r3
 2205 00c6 1A78     		ldrb	r2, [r3]
 2206 00c8 344B     		ldr	r3, .L142+4
 2207 00ca 9A70     		strb	r2, [r3, #2]
 2208              	.L135:
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2209              		.loc 1 1676 0
 2210 00cc 334B     		ldr	r3, .L142+4
 2211 00ce 1B78     		ldrb	r3, [r3]
 2212 00d0 3022     		mov	r2, #48
 2213 00d2 BA18     		add	r2, r7, r2
 2214 00d4 1278     		ldrb	r2, [r2]
 2215 00d6 9A42     		cmp	r2, r3
 2216 00d8 09D2     		bcs	.L137
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2217              		.loc 1 1678 0
 2218 00da 304B     		ldr	r3, .L142+4
 2219 00dc 1A78     		ldrb	r2, [r3]
 2220 00de 3023     		mov	r3, #48
 2221 00e0 FB18     		add	r3, r7, r3
 2222 00e2 1B78     		ldrb	r3, [r3]
 2223 00e4 D31A     		sub	r3, r2, r3
 2224 00e6 DAB2     		uxtb	r2, r3
 2225 00e8 2C4B     		ldr	r3, .L142+4
 2226 00ea 1A70     		strb	r2, [r3]
 2227 00ec 02E0     		b	.L138
 2228              	.L137:
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2229              		.loc 1 1682 0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 70


 2230 00ee 2B4B     		ldr	r3, .L142+4
 2231 00f0 0022     		mov	r2, #0
 2232 00f2 1A70     		strb	r2, [r3]
 2233              	.L138:
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2234              		.loc 1 1686 0
 2235 00f4 294B     		ldr	r3, .L142+4
 2236 00f6 5A78     		ldrb	r2, [r3, #1]
 2237 00f8 3023     		mov	r3, #48
 2238 00fa FB18     		add	r3, r7, r3
 2239 00fc 1B78     		ldrb	r3, [r3]
 2240 00fe D31A     		sub	r3, r2, r3
 2241 0100 DAB2     		uxtb	r2, r3
 2242 0102 264B     		ldr	r3, .L142+4
 2243 0104 5A70     		strb	r2, [r3, #1]
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2244              		.loc 1 1689 0
 2245 0106 254B     		ldr	r3, .L142+4
 2246 0108 9B78     		ldrb	r3, [r3, #2]
 2247 010a 3022     		mov	r2, #48
 2248 010c BA18     		add	r2, r7, r2
 2249 010e 1278     		ldrb	r2, [r2]
 2250 0110 9A42     		cmp	r2, r3
 2251 0112 09D2     		bcs	.L139
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2252              		.loc 1 1691 0
 2253 0114 214B     		ldr	r3, .L142+4
 2254 0116 9A78     		ldrb	r2, [r3, #2]
 2255 0118 3023     		mov	r3, #48
 2256 011a FB18     		add	r3, r7, r3
 2257 011c 1B78     		ldrb	r3, [r3]
 2258 011e D31A     		sub	r3, r2, r3
 2259 0120 DAB2     		uxtb	r2, r3
 2260 0122 1E4B     		ldr	r3, .L142+4
 2261 0124 9A70     		strb	r2, [r3, #2]
 2262 0126 02E0     		b	.L140
 2263              	.L139:
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2264              		.loc 1 1695 0
 2265 0128 1C4B     		ldr	r3, .L142+4
 2266 012a 0022     		mov	r2, #0
 2267 012c 9A70     		strb	r2, [r3, #2]
 2268              	.L140:
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 71


 2269              		.loc 1 1700 0
 2270 012e 1B4B     		ldr	r3, .L142+4
 2271 0130 9B78     		ldrb	r3, [r3, #2]
 2272 0132 1A1C     		mov	r2, r3
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2273              		.loc 1 1701 0
 2274 0134 194B     		ldr	r3, .L142+4
 2275 0136 1B78     		ldrb	r3, [r3]
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2276              		.loc 1 1700 0
 2277 0138 D31A     		sub	r3, r2, r3
 2278 013a 3B61     		str	r3, [r7, #16]
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2279              		.loc 1 1704 0
 2280 013c 174B     		ldr	r3, .L142+4
 2281 013e 1B78     		ldrb	r3, [r3]
 2282 0140 1A1C     		mov	r2, r3
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2283              		.loc 1 1705 0
 2284 0142 164B     		ldr	r3, .L142+4
 2285 0144 5B78     		ldrb	r3, [r3, #1]
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2286              		.loc 1 1704 0
 2287 0146 D318     		add	r3, r2, r3
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2288              		.loc 1 1706 0
 2289 0148 144A     		ldr	r2, .L142+4
 2290 014a 9278     		ldrb	r2, [r2, #2]
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2291              		.loc 1 1704 0
 2292 014c 9B18     		add	r3, r3, r2
 2293 014e FB60     		str	r3, [r7, #12]
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2294              		.loc 1 1709 0
 2295 0150 3B69     		ldr	r3, [r7, #16]
 2296 0152 1B02     		lsl	r3, r3, #8
 2297 0154 181C     		mov	r0, r3
 2298 0156 F968     		ldr	r1, [r7, #12]
 2299 0158 FFF7FEFF 		bl	__aeabi_idiv
 2300 015c 031C     		mov	r3, r0
 2301 015e 1A1C     		mov	r2, r3
 2302 0160 FB1D     		add	r3, r7, #7
 2303 0162 1B78     		ldrb	r3, [r3]
 2304 0164 1B02     		lsl	r3, r3, #8
 2305 0166 D318     		add	r3, r2, r3
 2306 0168 FB60     		str	r3, [r7, #12]
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 72


1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2307              		.loc 1 1719 0
 2308 016a BB1C     		add	r3, r7, #2
 2309 016c 1B88     		ldrh	r3, [r3]
 2310 016e 1AB2     		sxth	r2, r3
 2311 0170 FB68     		ldr	r3, [r7, #12]
 2312 0172 5343     		mul	r3, r2
 2313 0174 FB60     		str	r3, [r7, #12]
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2314              		.loc 1 1722 0
 2315 0176 FB68     		ldr	r3, [r7, #12]
 2316 0178 FE22     		mov	r2, #254
 2317 017a D201     		lsl	r2, r2, #7
 2318 017c 9446     		mov	ip, r2
 2319 017e 6344     		add	r3, r3, ip
 2320 0180 1A0C     		lsr	r2, r3, #16
 2321 0182 0B23     		mov	r3, #11
 2322 0184 FB18     		add	r3, r7, r3
 2323 0186 1A70     		strb	r2, [r3]
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2324              		.loc 1 1724 0
 2325 0188 0B23     		mov	r3, #11
 2326 018a FB18     		add	r3, r7, r3
 2327 018c 1B78     		ldrb	r3, [r3]
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2328              		.loc 1 1725 0
 2329 018e 181C     		mov	r0, r3
 2330 0190 BD46     		mov	sp, r7
 2331 0192 08B0     		add	sp, sp, #32
 2332              		@ sp needed
 2333 0194 B0BD     		pop	{r4, r5, r7, pc}
 2334              	.L143:
 2335 0196 C046     		.align	2
 2336              	.L142:
 2337 0198 00000000 		.word	CapSense_sensorSignal
 2338 019c 28000000 		.word	CapSense_centroid.5425
 2339              		.cfi_endproc
 2340              	.LFE62:
 2341              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2342              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2343              		.align	2
 2344              		.global	CapSense_GetCentroidPos
 2345              		.code	16
 2346              		.thumb_func
 2347              		.type	CapSense_GetCentroidPos, %function
 2348              	CapSense_GetCentroidPos:
 2349              	.LFB63:
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 73


1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2350              		.loc 1 1766 0
 2351              		.cfi_startproc
 2352 0000 90B5     		push	{r4, r7, lr}
 2353              		.cfi_def_cfa_offset 12
 2354              		.cfi_offset 4, -12
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 87B0     		sub	sp, sp, #28
 2358              		.cfi_def_cfa_offset 40
 2359 0004 02AF     		add	r7, sp, #8
 2360              		.cfi_def_cfa 7, 32
 2361 0006 7860     		str	r0, [r7, #4]
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2362              		.loc 1 1773 0
 2363 0008 0D23     		mov	r3, #13
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 74


 2364 000a FB18     		add	r3, r7, r3
 2365 000c 5249     		ldr	r1, .L150
 2366 000e 7A68     		ldr	r2, [r7, #4]
 2367 0010 8A18     		add	r2, r1, r2
 2368 0012 1278     		ldrb	r2, [r2]
 2369 0014 1A70     		strb	r2, [r3]
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2370              		.loc 1 1774 0
 2371 0016 0C23     		mov	r3, #12
 2372 0018 FB18     		add	r3, r7, r3
 2373 001a 5049     		ldr	r1, .L150+4
 2374 001c 7A68     		ldr	r2, [r7, #4]
 2375 001e 8A18     		add	r2, r1, r2
 2376 0020 1278     		ldrb	r2, [r2]
 2377 0022 1A70     		strb	r2, [r3]
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2378              		.loc 1 1786 0
 2379 0024 0B23     		mov	r3, #11
 2380 0026 FB18     		add	r3, r7, r3
 2381 0028 4D49     		ldr	r1, .L150+8
 2382 002a 7A68     		ldr	r2, [r7, #4]
 2383 002c 8A18     		add	r2, r1, r2
 2384 002e 1278     		ldrb	r2, [r2]
 2385 0030 1A70     		strb	r2, [r3]
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2386              		.loc 1 1787 0
 2387 0032 0A23     		mov	r3, #10
 2388 0034 FB18     		add	r3, r7, r3
 2389 0036 4B49     		ldr	r1, .L150+12
 2390 0038 7A68     		ldr	r2, [r7, #4]
 2391 003a 8A18     		add	r2, r1, r2
 2392 003c 1278     		ldrb	r2, [r2]
 2393 003e 1A70     		strb	r2, [r3]
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 75


1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2394              		.loc 1 1805 0
 2395 0040 494A     		ldr	r2, .L150+16
 2396 0042 7B68     		ldr	r3, [r7, #4]
 2397 0044 D318     		add	r3, r2, r3
 2398 0046 1A78     		ldrb	r2, [r3]
 2399 0048 0923     		mov	r3, #9
 2400 004a FC18     		add	r4, r7, r3
 2401 004c 0B23     		mov	r3, #11
 2402 004e FB18     		add	r3, r7, r3
 2403 0050 1978     		ldrb	r1, [r3]
 2404 0052 0A23     		mov	r3, #10
 2405 0054 FB18     		add	r3, r7, r3
 2406 0056 1B78     		ldrb	r3, [r3]
 2407 0058 081C     		mov	r0, r1
 2408 005a 191C     		mov	r1, r3
 2409 005c FFF7FEFF 		bl	CapSense_FindMaximum
 2410 0060 031C     		mov	r3, r0
 2411 0062 2370     		strb	r3, [r4]
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2412              		.loc 1 1808 0
 2413 0064 0923     		mov	r3, #9
 2414 0066 FB18     		add	r3, r7, r3
 2415 0068 1B78     		ldrb	r3, [r3]
 2416 006a FF2B     		cmp	r3, #255
 2417 006c 5CD0     		beq	.L145
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2418              		.loc 1 1811 0
 2419 006e C823     		mov	r3, #200
 2420 0070 5C01     		lsl	r4, r3, #5
 2421 0072 3E4A     		ldr	r2, .L150+20
 2422 0074 7B68     		ldr	r3, [r7, #4]
 2423 0076 D318     		add	r3, r2, r3
 2424 0078 1B78     		ldrb	r3, [r3]
 2425 007a 0922     		mov	r2, #9
 2426 007c BA18     		add	r2, r7, r2
 2427 007e 1078     		ldrb	r0, [r2]
 2428 0080 0B22     		mov	r2, #11
 2429 0082 BA18     		add	r2, r7, r2
 2430 0084 1178     		ldrb	r1, [r2]
 2431 0086 0A22     		mov	r2, #10
 2432 0088 BA18     		add	r2, r7, r2
 2433 008a 1278     		ldrb	r2, [r2]
 2434 008c 0093     		str	r3, [sp]
 2435 008e 231C     		mov	r3, r4
 2436 0090 FFF7FEFF 		bl	CapSense_CalcCentroid
 2437 0094 031C     		mov	r3, r0
 2438 0096 1A1C     		mov	r2, r3
 2439 0098 0E23     		mov	r3, #14
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 76


 2440 009a FB18     		add	r3, r7, r3
 2441 009c 1A80     		strh	r2, [r3]
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2442              		.loc 1 1816 0
 2443 009e 0C23     		mov	r3, #12
 2444 00a0 FB18     		add	r3, r7, r3
 2445 00a2 1B78     		ldrb	r3, [r3]
 2446 00a4 1F22     		mov	r2, #31
 2447 00a6 1340     		and	r3, r2
 2448 00a8 4FD0     		beq	.L148
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2449              		.loc 1 1819 0
 2450 00aa 0823     		mov	r3, #8
 2451 00ac FB18     		add	r3, r7, r3
 2452 00ae 0D22     		mov	r2, #13
 2453 00b0 BA18     		add	r2, r7, r2
 2454 00b2 1278     		ldrb	r2, [r2]
 2455 00b4 0132     		add	r2, r2, #1
 2456 00b6 1A70     		strb	r2, [r3]
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2457              		.loc 1 1821 0
 2458 00b8 0D23     		mov	r3, #13
 2459 00ba FB18     		add	r3, r7, r3
 2460 00bc 1B78     		ldrb	r3, [r3]
 2461 00be 264A     		ldr	r2, .L150
 2462 00c0 D35C     		ldrb	r3, [r2, r3]
 2463 00c2 002B     		cmp	r3, #0
 2464 00c4 0FD1     		bne	.L147
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2465              		.loc 1 1824 0
 2466 00c6 0823     		mov	r3, #8
 2467 00c8 FB18     		add	r3, r7, r3
 2468 00ca 1B78     		ldrb	r3, [r3]
 2469 00cc 0E22     		mov	r2, #14
 2470 00ce BA18     		add	r2, r7, r2
 2471 00d0 1288     		ldrh	r2, [r2]
 2472 00d2 D1B2     		uxtb	r1, r2
 2473 00d4 204A     		ldr	r2, .L150
 2474 00d6 D154     		strb	r1, [r2, r3]
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 77


1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2475              		.loc 1 1841 0
 2476 00d8 0D23     		mov	r3, #13
 2477 00da FB18     		add	r3, r7, r3
 2478 00dc 1B78     		ldrb	r3, [r3]
 2479 00de 1E4A     		ldr	r2, .L150
 2480 00e0 0121     		mov	r1, #1
 2481 00e2 D154     		strb	r1, [r2, r3]
 2482 00e4 31E0     		b	.L148
 2483              	.L147:
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 78


1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
 2484              		.loc 1 1898 0
 2485 00e6 0C23     		mov	r3, #12
 2486 00e8 FB18     		add	r3, r7, r3
 2487 00ea 1B78     		ldrb	r3, [r3]
 2488 00ec 1022     		mov	r2, #16
 2489 00ee 1340     		and	r3, r2
 2490 00f0 2BD0     		beq	.L148
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2491              		.loc 1 1901 0
 2492 00f2 0823     		mov	r3, #8
 2493 00f4 FB18     		add	r3, r7, r3
 2494 00f6 1B78     		ldrb	r3, [r3]
 2495 00f8 174A     		ldr	r2, .L150
 2496 00fa D35C     		ldrb	r3, [r2, r3]
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2497              		.loc 1 1900 0
 2498 00fc 9AB2     		uxth	r2, r3
 2499 00fe 0E23     		mov	r3, #14
 2500 0100 FC18     		add	r4, r7, r3
 2501 0102 0E23     		mov	r3, #14
 2502 0104 FB18     		add	r3, r7, r3
 2503 0106 1B88     		ldrh	r3, [r3]
 2504 0108 181C     		mov	r0, r3
 2505 010a 111C     		mov	r1, r2
 2506 010c FFF7FEFF 		bl	CapSense_JitterFilter
 2507 0110 031C     		mov	r3, r0
 2508 0112 2380     		strh	r3, [r4]
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2509              		.loc 1 1902 0
 2510 0114 0823     		mov	r3, #8
 2511 0116 FB18     		add	r3, r7, r3
 2512 0118 1B78     		ldrb	r3, [r3]
 2513 011a 0E22     		mov	r2, #14
 2514 011c BA18     		add	r2, r7, r2
 2515 011e 1288     		ldrh	r2, [r2]
 2516 0120 D1B2     		uxtb	r1, r2
 2517 0122 0D4A     		ldr	r2, .L150
 2518 0124 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 79


 2519 0126 10E0     		b	.L148
 2520              	.L145:
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2521              		.loc 1 1915 0
 2522 0128 0E23     		mov	r3, #14
 2523 012a FB18     		add	r3, r7, r3
 2524 012c 0122     		mov	r2, #1
 2525 012e 5242     		neg	r2, r2
 2526 0130 1A80     		strh	r2, [r3]
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2527              		.loc 1 1919 0
 2528 0132 0C23     		mov	r3, #12
 2529 0134 FB18     		add	r3, r7, r3
 2530 0136 1B78     		ldrb	r3, [r3]
 2531 0138 1F22     		mov	r2, #31
 2532 013a 1340     		and	r3, r2
 2533 013c 05D0     		beq	.L148
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2534              		.loc 1 1921 0
 2535 013e 0D23     		mov	r3, #13
 2536 0140 FB18     		add	r3, r7, r3
 2537 0142 1B78     		ldrb	r3, [r3]
 2538 0144 044A     		ldr	r2, .L150
 2539 0146 0021     		mov	r1, #0
 2540 0148 D154     		strb	r1, [r2, r3]
 2541              	.L148:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2542              		.loc 1 1927 0
 2543 014a 0E23     		mov	r3, #14
 2544 014c FB18     		add	r3, r7, r3
 2545 014e 1B88     		ldrh	r3, [r3]
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2546              		.loc 1 1928 0
 2547 0150 181C     		mov	r0, r3
 2548 0152 BD46     		mov	sp, r7
 2549 0154 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 80


 2550              		@ sp needed
 2551 0156 90BD     		pop	{r4, r7, pc}
 2552              	.L151:
 2553              		.align	2
 2554              	.L150:
 2555 0158 14000000 		.word	CapSense_posFiltersData
 2556 015c 10000000 		.word	CapSense_posFiltersMask
 2557 0160 00000000 		.word	CapSense_rawDataIndex
 2558 0164 00000000 		.word	CapSense_numberOfSensors
 2559 0168 00000000 		.word	CapSense_fingerThreshold
 2560 016c 00000000 		.word	CapSense_noiseThreshold
 2561              		.cfi_endproc
 2562              	.LFE63:
 2563              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2564              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2565              		.align	2
 2566              		.global	CapSense_GetRadialCentroidPos
 2567              		.code	16
 2568              		.thumb_func
 2569              		.type	CapSense_GetRadialCentroidPos, %function
 2570              	CapSense_GetRadialCentroidPos:
 2571              	.LFB64:
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 81


1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2572              		.loc 1 1969 0
 2573              		.cfi_startproc
 2574 0000 90B5     		push	{r4, r7, lr}
 2575              		.cfi_def_cfa_offset 12
 2576              		.cfi_offset 4, -12
 2577              		.cfi_offset 7, -8
 2578              		.cfi_offset 14, -4
 2579 0002 87B0     		sub	sp, sp, #28
 2580              		.cfi_def_cfa_offset 40
 2581 0004 02AF     		add	r7, sp, #8
 2582              		.cfi_def_cfa 7, 32
 2583 0006 7860     		str	r0, [r7, #4]
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2584              		.loc 1 1985 0
 2585 0008 0D23     		mov	r3, #13
 2586 000a FB18     		add	r3, r7, r3
 2587 000c 2349     		ldr	r1, .L156
 2588 000e 7A68     		ldr	r2, [r7, #4]
 2589 0010 8A18     		add	r2, r1, r2
 2590 0012 1278     		ldrb	r2, [r2]
 2591 0014 1A70     		strb	r2, [r3]
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2592              		.loc 1 1986 0
 2593 0016 0C23     		mov	r3, #12
 2594 0018 FB18     		add	r3, r7, r3
 2595 001a 2149     		ldr	r1, .L156+4
 2596 001c 7A68     		ldr	r2, [r7, #4]
 2597 001e 8A18     		add	r2, r1, r2
 2598 0020 1278     		ldrb	r2, [r2]
 2599 0022 1A70     		strb	r2, [r3]
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 82


 2600              		.loc 1 1992 0
 2601 0024 1F4A     		ldr	r2, .L156+8
 2602 0026 7B68     		ldr	r3, [r7, #4]
 2603 0028 D318     		add	r3, r2, r3
 2604 002a 1A78     		ldrb	r2, [r3]
 2605 002c 0B23     		mov	r3, #11
 2606 002e FC18     		add	r4, r7, r3
 2607 0030 0D23     		mov	r3, #13
 2608 0032 FB18     		add	r3, r7, r3
 2609 0034 1978     		ldrb	r1, [r3]
 2610 0036 0C23     		mov	r3, #12
 2611 0038 FB18     		add	r3, r7, r3
 2612 003a 1B78     		ldrb	r3, [r3]
 2613 003c 081C     		mov	r0, r1
 2614 003e 191C     		mov	r1, r3
 2615 0040 FFF7FEFF 		bl	CapSense_FindMaximum
 2616 0044 031C     		mov	r3, r0
 2617 0046 2370     		strb	r3, [r4]
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2618              		.loc 1 1995 0
 2619 0048 0B23     		mov	r3, #11
 2620 004a FB18     		add	r3, r7, r3
 2621 004c 1B78     		ldrb	r3, [r3]
 2622 004e FF2B     		cmp	r3, #255
 2623 0050 18D0     		beq	.L153
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2624              		.loc 1 1998 0
 2625 0052 C823     		mov	r3, #200
 2626 0054 5C01     		lsl	r4, r3, #5
 2627 0056 144A     		ldr	r2, .L156+12
 2628 0058 7B68     		ldr	r3, [r7, #4]
 2629 005a D318     		add	r3, r2, r3
 2630 005c 1B78     		ldrb	r3, [r3]
 2631 005e 0B22     		mov	r2, #11
 2632 0060 BA18     		add	r2, r7, r2
 2633 0062 1078     		ldrb	r0, [r2]
 2634 0064 0D22     		mov	r2, #13
 2635 0066 BA18     		add	r2, r7, r2
 2636 0068 1178     		ldrb	r1, [r2]
 2637 006a 0C22     		mov	r2, #12
 2638 006c BA18     		add	r2, r7, r2
 2639 006e 1278     		ldrb	r2, [r2]
 2640 0070 0093     		str	r3, [sp]
 2641 0072 231C     		mov	r3, r4
 2642 0074 FFF7FEFF 		bl	CapSense_CalcCentroid
 2643 0078 031C     		mov	r3, r0
 2644 007a 1A1C     		mov	r2, r3
 2645 007c 0E23     		mov	r3, #14
 2646 007e FB18     		add	r3, r7, r3
 2647 0080 1A80     		strh	r2, [r3]
 2648 0082 04E0     		b	.L154
 2649              	.L153:
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 83


2000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 84


2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2650              		.loc 1 2103 0
 2651 0084 0E23     		mov	r3, #14
 2652 0086 FB18     		add	r3, r7, r3
 2653 0088 0122     		mov	r2, #1
 2654 008a 5242     		neg	r2, r2
 2655 008c 1A80     		strh	r2, [r3]
 2656              	.L154:
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 85


2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2657              		.loc 1 2114 0
 2658 008e 0E23     		mov	r3, #14
 2659 0090 FB18     		add	r3, r7, r3
 2660 0092 1B88     		ldrh	r3, [r3]
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2661              		.loc 1 2115 0
 2662 0094 181C     		mov	r0, r3
 2663 0096 BD46     		mov	sp, r7
 2664 0098 05B0     		add	sp, sp, #20
 2665              		@ sp needed
 2666 009a 90BD     		pop	{r4, r7, pc}
 2667              	.L157:
 2668              		.align	2
 2669              	.L156:
 2670 009c 00000000 		.word	CapSense_rawDataIndex
 2671 00a0 00000000 		.word	CapSense_numberOfSensors
 2672 00a4 00000000 		.word	CapSense_fingerThreshold
 2673 00a8 00000000 		.word	CapSense_noiseThreshold
 2674              		.cfi_endproc
 2675              	.LFE64:
 2676              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2677              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2678              		.align	2
 2679              		.global	CapSense_MedianFilter
 2680              		.code	16
 2681              		.thumb_func
 2682              		.type	CapSense_MedianFilter, %function
 2683              	CapSense_MedianFilter:
 2684              	.LFB65:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 86


2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 87


2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 88


2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 89


2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 90


2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2685              		.loc 1 2398 0
 2686              		.cfi_startproc
 2687 0000 90B5     		push	{r4, r7, lr}
 2688              		.cfi_def_cfa_offset 12
 2689              		.cfi_offset 4, -12
 2690              		.cfi_offset 7, -8
 2691              		.cfi_offset 14, -4
 2692 0002 85B0     		sub	sp, sp, #20
 2693              		.cfi_def_cfa_offset 32
 2694 0004 00AF     		add	r7, sp, #0
 2695              		.cfi_def_cfa_register 7
 2696 0006 041C     		mov	r4, r0
 2697 0008 081C     		mov	r0, r1
 2698 000a 111C     		mov	r1, r2
 2699 000c BB1D     		add	r3, r7, #6
 2700 000e 221C     		add	r2, r4, #0
 2701 0010 1A80     		strh	r2, [r3]
 2702 0012 3B1D     		add	r3, r7, #4
 2703 0014 021C     		add	r2, r0, #0
 2704 0016 1A80     		strh	r2, [r3]
 2705 0018 BB1C     		add	r3, r7, #2
 2706 001a 0A1C     		add	r2, r1, #0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 91


 2707 001c 1A80     		strh	r2, [r3]
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2708              		.loc 1 2401 0
 2709 001e BA1D     		add	r2, r7, #6
 2710 0020 3B1D     		add	r3, r7, #4
 2711 0022 1288     		ldrh	r2, [r2]
 2712 0024 1B88     		ldrh	r3, [r3]
 2713 0026 9A42     		cmp	r2, r3
 2714 0028 0DD9     		bls	.L159
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2715              		.loc 1 2403 0
 2716 002a 0E23     		mov	r3, #14
 2717 002c FB18     		add	r3, r7, r3
 2718 002e 3A1D     		add	r2, r7, #4
 2719 0030 1288     		ldrh	r2, [r2]
 2720 0032 1A80     		strh	r2, [r3]
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2721              		.loc 1 2404 0
 2722 0034 3B1D     		add	r3, r7, #4
 2723 0036 BA1D     		add	r2, r7, #6
 2724 0038 1288     		ldrh	r2, [r2]
 2725 003a 1A80     		strh	r2, [r3]
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2726              		.loc 1 2405 0
 2727 003c BB1D     		add	r3, r7, #6
 2728 003e 0E22     		mov	r2, #14
 2729 0040 BA18     		add	r2, r7, r2
 2730 0042 1288     		ldrh	r2, [r2]
 2731 0044 1A80     		strh	r2, [r3]
 2732              	.L159:
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2733              		.loc 1 2408 0
 2734 0046 3A1D     		add	r2, r7, #4
 2735 0048 BB1C     		add	r3, r7, #2
 2736 004a 1288     		ldrh	r2, [r2]
 2737 004c 1B88     		ldrh	r3, [r3]
 2738 004e 9A42     		cmp	r2, r3
 2739 0050 03D9     		bls	.L160
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2740              		.loc 1 2410 0
 2741 0052 3B1D     		add	r3, r7, #4
 2742 0054 BA1C     		add	r2, r7, #2
 2743 0056 1288     		ldrh	r2, [r2]
 2744 0058 1A80     		strh	r2, [r3]
 2745              	.L160:
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2746              		.loc 1 2413 0
 2747 005a 3B1D     		add	r3, r7, #4
 2748 005c BA1D     		add	r2, r7, #6
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 92


 2749 005e 1088     		ldrh	r0, [r2]
 2750 0060 1B88     		ldrh	r3, [r3]
 2751 0062 99B2     		uxth	r1, r3
 2752 0064 82B2     		uxth	r2, r0
 2753 0066 9142     		cmp	r1, r2
 2754 0068 00D2     		bcs	.L161
 2755 006a 031C     		add	r3, r0, #0
 2756              	.L161:
 2757 006c 9BB2     		uxth	r3, r3
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2758              		.loc 1 2414 0
 2759 006e 181C     		mov	r0, r3
 2760 0070 BD46     		mov	sp, r7
 2761 0072 05B0     		add	sp, sp, #20
 2762              		@ sp needed
 2763 0074 90BD     		pop	{r4, r7, pc}
 2764              		.cfi_endproc
 2765              	.LFE65:
 2766              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2767 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2768              		.align	2
 2769              		.global	CapSense_IIR4Filter
 2770              		.code	16
 2771              		.thumb_func
 2772              		.type	CapSense_IIR4Filter, %function
 2773              	CapSense_IIR4Filter:
 2774              	.LFB66:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 93


2445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 94


2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2775              		.loc 1 2518 0
 2776              		.cfi_startproc
 2777 0000 80B5     		push	{r7, lr}
 2778              		.cfi_def_cfa_offset 8
 2779              		.cfi_offset 7, -8
 2780              		.cfi_offset 14, -4
 2781 0002 84B0     		sub	sp, sp, #16
 2782              		.cfi_def_cfa_offset 24
 2783 0004 00AF     		add	r7, sp, #0
 2784              		.cfi_def_cfa_register 7
 2785 0006 021C     		mov	r2, r0
 2786 0008 BB1D     		add	r3, r7, #6
 2787 000a 1A80     		strh	r2, [r3]
 2788 000c 3B1D     		add	r3, r7, #4
 2789 000e 0A1C     		add	r2, r1, #0
 2790 0010 1A80     		strh	r2, [r3]
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2791              		.loc 1 2522 0
 2792 0012 BB1D     		add	r3, r7, #6
 2793 0014 1A88     		ldrh	r2, [r3]
 2794 0016 3B1D     		add	r3, r7, #4
 2795 0018 1B88     		ldrh	r3, [r3]
 2796 001a D318     		add	r3, r2, r3
 2797 001c FB60     		str	r3, [r7, #12]
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2798              		.loc 1 2523 0
 2799 001e 3B1D     		add	r3, r7, #4
 2800 0020 1B88     		ldrh	r3, [r3]
 2801 0022 5B00     		lsl	r3, r3, #1
 2802 0024 FA68     		ldr	r2, [r7, #12]
 2803 0026 D318     		add	r3, r2, r3
 2804 0028 FB60     		str	r3, [r7, #12]
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2805              		.loc 1 2524 0
 2806 002a FB68     		ldr	r3, [r7, #12]
 2807 002c 9B08     		lsr	r3, r3, #2
 2808 002e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 95


2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2809              		.loc 1 2526 0
 2810 0030 FB68     		ldr	r3, [r7, #12]
 2811 0032 9BB2     		uxth	r3, r3
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2812              		.loc 1 2527 0
 2813 0034 181C     		mov	r0, r3
 2814 0036 BD46     		mov	sp, r7
 2815 0038 04B0     		add	sp, sp, #16
 2816              		@ sp needed
 2817 003a 80BD     		pop	{r7, pc}
 2818              		.cfi_endproc
 2819              	.LFE66:
 2820              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2821              		.section	.text.CapSense_JitterFilter,"ax",%progbits
 2822              		.align	2
 2823              		.global	CapSense_JitterFilter
 2824              		.code	16
 2825              		.thumb_func
 2826              		.type	CapSense_JitterFilter, %function
 2827              	CapSense_JitterFilter:
 2828              	.LFB67:
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2829              		.loc 1 2558 0
 2830              		.cfi_startproc
 2831 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 96


 2832              		.cfi_def_cfa_offset 8
 2833              		.cfi_offset 7, -8
 2834              		.cfi_offset 14, -4
 2835 0002 82B0     		sub	sp, sp, #8
 2836              		.cfi_def_cfa_offset 16
 2837 0004 00AF     		add	r7, sp, #0
 2838              		.cfi_def_cfa_register 7
 2839 0006 021C     		mov	r2, r0
 2840 0008 BB1D     		add	r3, r7, #6
 2841 000a 1A80     		strh	r2, [r3]
 2842 000c 3B1D     		add	r3, r7, #4
 2843 000e 0A1C     		add	r2, r1, #0
 2844 0010 1A80     		strh	r2, [r3]
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2845              		.loc 1 2559 0
 2846 0012 BA1D     		add	r2, r7, #6
 2847 0014 3B1D     		add	r3, r7, #4
 2848 0016 1288     		ldrh	r2, [r2]
 2849 0018 1B88     		ldrh	r3, [r3]
 2850 001a 9A42     		cmp	r2, r3
 2851 001c 05D9     		bls	.L166
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
 2852              		.loc 1 2561 0
 2853 001e BB1D     		add	r3, r7, #6
 2854 0020 1A88     		ldrh	r2, [r3]
 2855 0022 BB1D     		add	r3, r7, #6
 2856 0024 013A     		sub	r2, r2, #1
 2857 0026 1A80     		strh	r2, [r3]
 2858 0028 0AE0     		b	.L167
 2859              	.L166:
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
 2860              		.loc 1 2565 0
 2861 002a BA1D     		add	r2, r7, #6
 2862 002c 3B1D     		add	r3, r7, #4
 2863 002e 1288     		ldrh	r2, [r2]
 2864 0030 1B88     		ldrh	r3, [r3]
 2865 0032 9A42     		cmp	r2, r3
 2866 0034 04D2     		bcs	.L167
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
 2867              		.loc 1 2567 0
 2868 0036 BB1D     		add	r3, r7, #6
 2869 0038 1A88     		ldrh	r2, [r3]
 2870 003a BB1D     		add	r3, r7, #6
 2871 003c 0132     		add	r2, r2, #1
 2872 003e 1A80     		strh	r2, [r3]
 2873              	.L167:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
 2874              		.loc 1 2571 0
 2875 0040 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 97


 2876 0042 1B88     		ldrh	r3, [r3]
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2877              		.loc 1 2572 0
 2878 0044 181C     		mov	r0, r3
 2879 0046 BD46     		mov	sp, r7
 2880 0048 02B0     		add	sp, sp, #8
 2881              		@ sp needed
 2882 004a 80BD     		pop	{r7, pc}
 2883              		.cfi_endproc
 2884              	.LFE67:
 2885              		.size	CapSense_JitterFilter, .-CapSense_JitterFilter
 2886              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2887              		.align	2
 2888              		.global	CapSense_GetWidgetNumber
 2889              		.code	16
 2890              		.thumb_func
 2891              		.type	CapSense_GetWidgetNumber, %function
 2892              	CapSense_GetWidgetNumber:
 2893              	.LFB68:
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 98


2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 99


2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 100


2725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2894              		.loc 1 2751 0
 2895              		.cfi_startproc
 2896 0000 80B5     		push	{r7, lr}
 2897              		.cfi_def_cfa_offset 8
 2898              		.cfi_offset 7, -8
 2899              		.cfi_offset 14, -4
 2900 0002 82B0     		sub	sp, sp, #8
 2901              		.cfi_def_cfa_offset 16
 2902 0004 00AF     		add	r7, sp, #0
 2903              		.cfi_def_cfa_register 7
 2904 0006 7860     		str	r0, [r7, #4]
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2905              		.loc 1 2752 0
 2906 0008 034A     		ldr	r2, .L171
 2907 000a 7B68     		ldr	r3, [r7, #4]
 2908 000c D318     		add	r3, r2, r3
 2909 000e 1B78     		ldrb	r3, [r3]
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2910              		.loc 1 2753 0
 2911 0010 181C     		mov	r0, r3
 2912 0012 BD46     		mov	sp, r7
 2913 0014 02B0     		add	sp, sp, #8
 2914              		@ sp needed
 2915 0016 80BD     		pop	{r7, pc}
 2916              	.L172:
 2917              		.align	2
 2918              	.L171:
 2919 0018 00000000 		.word	CapSense_widgetNumber
 2920              		.cfi_endproc
 2921              	.LFE68:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 101


 2922              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2923              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2924              		.align	2
 2925              		.global	CapSense_GetLowBaselineReset
 2926              		.code	16
 2927              		.thumb_func
 2928              		.type	CapSense_GetLowBaselineReset, %function
 2929              	CapSense_GetLowBaselineReset:
 2930              	.LFB69:
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2931              		.loc 1 2777 0
 2932              		.cfi_startproc
 2933 0000 80B5     		push	{r7, lr}
 2934              		.cfi_def_cfa_offset 8
 2935              		.cfi_offset 7, -8
 2936              		.cfi_offset 14, -4
 2937 0002 82B0     		sub	sp, sp, #8
 2938              		.cfi_def_cfa_offset 16
 2939 0004 00AF     		add	r7, sp, #0
 2940              		.cfi_def_cfa_register 7
 2941 0006 7860     		str	r0, [r7, #4]
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2942              		.loc 1 2778 0
 2943 0008 034A     		ldr	r2, .L175
 2944 000a 7B68     		ldr	r3, [r7, #4]
 2945 000c D318     		add	r3, r2, r3
 2946 000e 1B78     		ldrb	r3, [r3]
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2947              		.loc 1 2779 0
 2948 0010 181C     		mov	r0, r3
 2949 0012 BD46     		mov	sp, r7
 2950 0014 02B0     		add	sp, sp, #8
 2951              		@ sp needed
 2952 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 102


 2953              	.L176:
 2954              		.align	2
 2955              	.L175:
 2956 0018 00000000 		.word	CapSense_lowBaselineReset
 2957              		.cfi_endproc
 2958              	.LFE69:
 2959              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2960              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2961              		.align	2
 2962              		.global	CapSense_GetDebounce
 2963              		.code	16
 2964              		.thumb_func
 2965              		.type	CapSense_GetDebounce, %function
 2966              	CapSense_GetDebounce:
 2967              	.LFB70:
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2968              		.loc 1 2803 0
 2969              		.cfi_startproc
 2970 0000 80B5     		push	{r7, lr}
 2971              		.cfi_def_cfa_offset 8
 2972              		.cfi_offset 7, -8
 2973              		.cfi_offset 14, -4
 2974 0002 82B0     		sub	sp, sp, #8
 2975              		.cfi_def_cfa_offset 16
 2976 0004 00AF     		add	r7, sp, #0
 2977              		.cfi_def_cfa_register 7
 2978 0006 7860     		str	r0, [r7, #4]
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2979              		.loc 1 2804 0
 2980 0008 034A     		ldr	r2, .L179
 2981 000a 7B68     		ldr	r3, [r7, #4]
 2982 000c D318     		add	r3, r2, r3
 2983 000e 1B78     		ldrb	r3, [r3]
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 103


 2984              		.loc 1 2805 0
 2985 0010 181C     		mov	r0, r3
 2986 0012 BD46     		mov	sp, r7
 2987 0014 02B0     		add	sp, sp, #8
 2988              		@ sp needed
 2989 0016 80BD     		pop	{r7, pc}
 2990              	.L180:
 2991              		.align	2
 2992              	.L179:
 2993 0018 00000000 		.word	CapSense_debounce
 2994              		.cfi_endproc
 2995              	.LFE70:
 2996              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2997              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2998              		.align	2
 2999              		.global	CapSense_EnableRawDataFilters
 3000              		.code	16
 3001              		.thumb_func
 3002              		.type	CapSense_EnableRawDataFilters, %function
 3003              	CapSense_EnableRawDataFilters:
 3004              	.LFB71:
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 3005              		.loc 1 2829 0
 3006              		.cfi_startproc
 3007 0000 80B5     		push	{r7, lr}
 3008              		.cfi_def_cfa_offset 8
 3009              		.cfi_offset 7, -8
 3010              		.cfi_offset 14, -4
 3011 0002 00AF     		add	r7, sp, #0
 3012              		.cfi_def_cfa_register 7
2830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 3013              		.loc 1 2830 0
 3014 0004 024B     		ldr	r3, .L182
 3015 0006 0122     		mov	r2, #1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 104


 3016 0008 1A70     		strb	r2, [r3]
2831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 3017              		.loc 1 2831 0
 3018 000a BD46     		mov	sp, r7
 3019              		@ sp needed
 3020 000c 80BD     		pop	{r7, pc}
 3021              	.L183:
 3022 000e C046     		.align	2
 3023              	.L182:
 3024 0010 00000000 		.word	CapSense_enableRawFilters
 3025              		.cfi_endproc
 3026              	.LFE71:
 3027              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 3028              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 3029              		.align	2
 3030              		.global	CapSense_DisableRawDataFilters
 3031              		.code	16
 3032              		.thumb_func
 3033              		.type	CapSense_DisableRawDataFilters, %function
 3034              	CapSense_DisableRawDataFilters:
 3035              	.LFB72:
2832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 3036              		.loc 1 2854 0
 3037              		.cfi_startproc
 3038 0000 80B5     		push	{r7, lr}
 3039              		.cfi_def_cfa_offset 8
 3040              		.cfi_offset 7, -8
 3041              		.cfi_offset 14, -4
 3042 0002 00AF     		add	r7, sp, #0
 3043              		.cfi_def_cfa_register 7
2855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 3044              		.loc 1 2855 0
 3045 0004 024B     		ldr	r3, .L185
 3046 0006 0022     		mov	r2, #0
 3047 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 105


2856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 3048              		.loc 1 2856 0
 3049 000a BD46     		mov	sp, r7
 3050              		@ sp needed
 3051 000c 80BD     		pop	{r7, pc}
 3052              	.L186:
 3053 000e C046     		.align	2
 3054              	.L185:
 3055 0010 00000000 		.word	CapSense_enableRawFilters
 3056              		.cfi_endproc
 3057              	.LFE72:
 3058              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 3059              		.bss
 3060              		.align	2
 3061              	CapSense_centroid.5425:
 3062 0028 000000   		.space	3
 3063 002b 00       		.text
 3064              	.Letext0:
 3065              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 3066              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 3067              		.section	.debug_info,"",%progbits
 3068              	.Ldebug_info0:
 3069 0000 8E0E0000 		.4byte	0xe8e
 3070 0004 0400     		.2byte	0x4
 3071 0006 00000000 		.4byte	.Ldebug_abbrev0
 3072 000a 04       		.byte	0x4
 3073 000b 01       		.uleb128 0x1
 3074 000c 2F060000 		.4byte	.LASF146
 3075 0010 01       		.byte	0x1
 3076 0011 86050000 		.4byte	.LASF147
 3077 0015 86070000 		.4byte	.LASF148
 3078 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3079 001d 00000000 		.4byte	0
 3080 0021 00000000 		.4byte	.Ldebug_line0
 3081 0025 02       		.uleb128 0x2
 3082 0026 01       		.byte	0x1
 3083 0027 06       		.byte	0x6
 3084 0028 450A0000 		.4byte	.LASF0
 3085 002c 02       		.uleb128 0x2
 3086 002d 01       		.byte	0x1
 3087 002e 08       		.byte	0x8
 3088 002f 6C090000 		.4byte	.LASF1
 3089 0033 02       		.uleb128 0x2
 3090 0034 02       		.byte	0x2
 3091 0035 05       		.byte	0x5
 3092 0036 27080000 		.4byte	.LASF2
 3093 003a 02       		.uleb128 0x2
 3094 003b 02       		.byte	0x2
 3095 003c 07       		.byte	0x7
 3096 003d 510A0000 		.4byte	.LASF3
 3097 0041 02       		.uleb128 0x2
 3098 0042 04       		.byte	0x4
 3099 0043 05       		.byte	0x5
 3100 0044 31080000 		.4byte	.LASF4
 3101 0048 02       		.uleb128 0x2
 3102 0049 04       		.byte	0x4
 3103 004a 07       		.byte	0x7
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 106


 3104 004b E8080000 		.4byte	.LASF5
 3105 004f 02       		.uleb128 0x2
 3106 0050 08       		.byte	0x8
 3107 0051 05       		.byte	0x5
 3108 0052 AF050000 		.4byte	.LASF6
 3109 0056 02       		.uleb128 0x2
 3110 0057 08       		.byte	0x8
 3111 0058 07       		.byte	0x7
 3112 0059 20030000 		.4byte	.LASF7
 3113 005d 03       		.uleb128 0x3
 3114 005e 04       		.byte	0x4
 3115 005f 05       		.byte	0x5
 3116 0060 696E7400 		.ascii	"int\000"
 3117 0064 02       		.uleb128 0x2
 3118 0065 04       		.byte	0x4
 3119 0066 07       		.byte	0x7
 3120 0067 21010000 		.4byte	.LASF8
 3121 006b 04       		.uleb128 0x4
 3122 006c E10A0000 		.4byte	.LASF9
 3123 0070 02       		.byte	0x2
 3124 0071 3801     		.2byte	0x138
 3125 0073 2C000000 		.4byte	0x2c
 3126 0077 04       		.uleb128 0x4
 3127 0078 45050000 		.4byte	.LASF10
 3128 007c 02       		.byte	0x2
 3129 007d 3901     		.2byte	0x139
 3130 007f 3A000000 		.4byte	0x3a
 3131 0083 04       		.uleb128 0x4
 3132 0084 45070000 		.4byte	.LASF11
 3133 0088 02       		.byte	0x2
 3134 0089 3A01     		.2byte	0x13a
 3135 008b 48000000 		.4byte	0x48
 3136 008f 04       		.uleb128 0x4
 3137 0090 46010000 		.4byte	.LASF12
 3138 0094 02       		.byte	0x2
 3139 0095 3C01     		.2byte	0x13c
 3140 0097 33000000 		.4byte	0x33
 3141 009b 04       		.uleb128 0x4
 3142 009c C6020000 		.4byte	.LASF13
 3143 00a0 02       		.byte	0x2
 3144 00a1 3D01     		.2byte	0x13d
 3145 00a3 41000000 		.4byte	0x41
 3146 00a7 02       		.uleb128 0x2
 3147 00a8 04       		.byte	0x4
 3148 00a9 04       		.byte	0x4
 3149 00aa C0020000 		.4byte	.LASF14
 3150 00ae 02       		.uleb128 0x2
 3151 00af 08       		.byte	0x8
 3152 00b0 04       		.byte	0x4
 3153 00b1 E70A0000 		.4byte	.LASF15
 3154 00b5 02       		.uleb128 0x2
 3155 00b6 01       		.byte	0x1
 3156 00b7 08       		.byte	0x8
 3157 00b8 0E050000 		.4byte	.LASF16
 3158 00bc 02       		.uleb128 0x2
 3159 00bd 04       		.byte	0x4
 3160 00be 07       		.byte	0x7
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 107


 3161 00bf DF080000 		.4byte	.LASF17
 3162 00c3 05       		.uleb128 0x5
 3163 00c4 5C       		.byte	0x5c
 3164 00c5 03       		.byte	0x3
 3165 00c6 2F       		.byte	0x2f
 3166 00c7 E0010000 		.4byte	0x1e0
 3167 00cb 06       		.uleb128 0x6
 3168 00cc 51050000 		.4byte	.LASF18
 3169 00d0 03       		.byte	0x3
 3170 00d1 31       		.byte	0x31
 3171 00d2 E0010000 		.4byte	0x1e0
 3172 00d6 00       		.byte	0
 3173 00d7 06       		.uleb128 0x6
 3174 00d8 18080000 		.4byte	.LASF19
 3175 00dc 03       		.byte	0x3
 3176 00dd 32       		.byte	0x32
 3177 00de E0010000 		.4byte	0x1e0
 3178 00e2 04       		.byte	0x4
 3179 00e3 06       		.uleb128 0x6
 3180 00e4 F6090000 		.4byte	.LASF20
 3181 00e8 03       		.byte	0x3
 3182 00e9 33       		.byte	0x33
 3183 00ea E0010000 		.4byte	0x1e0
 3184 00ee 08       		.byte	0x8
 3185 00ef 06       		.uleb128 0x6
 3186 00f0 5F090000 		.4byte	.LASF21
 3187 00f4 03       		.byte	0x3
 3188 00f5 34       		.byte	0x34
 3189 00f6 E0010000 		.4byte	0x1e0
 3190 00fa 0C       		.byte	0xc
 3191 00fb 06       		.uleb128 0x6
 3192 00fc 3B0A0000 		.4byte	.LASF22
 3193 0100 03       		.byte	0x3
 3194 0101 35       		.byte	0x35
 3195 0102 E0010000 		.4byte	0x1e0
 3196 0106 10       		.byte	0x10
 3197 0107 06       		.uleb128 0x6
 3198 0108 60080000 		.4byte	.LASF23
 3199 010c 03       		.byte	0x3
 3200 010d 36       		.byte	0x36
 3201 010e E6010000 		.4byte	0x1e6
 3202 0112 14       		.byte	0x14
 3203 0113 06       		.uleb128 0x6
 3204 0114 D2020000 		.4byte	.LASF24
 3205 0118 03       		.byte	0x3
 3206 0119 37       		.byte	0x37
 3207 011a F1010000 		.4byte	0x1f1
 3208 011e 18       		.byte	0x18
 3209 011f 06       		.uleb128 0x6
 3210 0120 23040000 		.4byte	.LASF25
 3211 0124 03       		.byte	0x3
 3212 0125 38       		.byte	0x38
 3213 0126 E0010000 		.4byte	0x1e0
 3214 012a 1C       		.byte	0x1c
 3215 012b 06       		.uleb128 0x6
 3216 012c 0B030000 		.4byte	.LASF26
 3217 0130 03       		.byte	0x3
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 108


 3218 0131 39       		.byte	0x39
 3219 0132 E0010000 		.4byte	0x1e0
 3220 0136 20       		.byte	0x20
 3221 0137 06       		.uleb128 0x6
 3222 0138 95010000 		.4byte	.LASF27
 3223 013c 03       		.byte	0x3
 3224 013d 3A       		.byte	0x3a
 3225 013e E0010000 		.4byte	0x1e0
 3226 0142 24       		.byte	0x24
 3227 0143 06       		.uleb128 0x6
 3228 0144 E5060000 		.4byte	.LASF28
 3229 0148 03       		.byte	0x3
 3230 0149 3B       		.byte	0x3b
 3231 014a F7010000 		.4byte	0x1f7
 3232 014e 28       		.byte	0x28
 3233 014f 06       		.uleb128 0x6
 3234 0150 4C010000 		.4byte	.LASF29
 3235 0154 03       		.byte	0x3
 3236 0155 3C       		.byte	0x3c
 3237 0156 F7010000 		.4byte	0x1f7
 3238 015a 2C       		.byte	0x2c
 3239 015b 06       		.uleb128 0x6
 3240 015c 12090000 		.4byte	.LASF30
 3241 0160 03       		.byte	0x3
 3242 0161 3D       		.byte	0x3d
 3243 0162 F7010000 		.4byte	0x1f7
 3244 0166 30       		.byte	0x30
 3245 0167 06       		.uleb128 0x6
 3246 0168 B5080000 		.4byte	.LASF31
 3247 016c 03       		.byte	0x3
 3248 016d 3E       		.byte	0x3e
 3249 016e E0010000 		.4byte	0x1e0
 3250 0172 34       		.byte	0x34
 3251 0173 06       		.uleb128 0x6
 3252 0174 48000000 		.4byte	.LASF32
 3253 0178 03       		.byte	0x3
 3254 0179 3F       		.byte	0x3f
 3255 017a E0010000 		.4byte	0x1e0
 3256 017e 38       		.byte	0x38
 3257 017f 06       		.uleb128 0x6
 3258 0180 36050000 		.4byte	.LASF33
 3259 0184 03       		.byte	0x3
 3260 0185 40       		.byte	0x40
 3261 0186 E6010000 		.4byte	0x1e6
 3262 018a 3C       		.byte	0x3c
 3263 018b 06       		.uleb128 0x6
 3264 018c 10020000 		.4byte	.LASF34
 3265 0190 03       		.byte	0x3
 3266 0191 41       		.byte	0x41
 3267 0192 E6010000 		.4byte	0x1e6
 3268 0196 40       		.byte	0x40
 3269 0197 06       		.uleb128 0x6
 3270 0198 95000000 		.4byte	.LASF35
 3271 019c 03       		.byte	0x3
 3272 019d 42       		.byte	0x42
 3273 019e E6010000 		.4byte	0x1e6
 3274 01a2 44       		.byte	0x44
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 109


 3275 01a3 06       		.uleb128 0x6
 3276 01a4 07060000 		.4byte	.LASF36
 3277 01a8 03       		.byte	0x3
 3278 01a9 43       		.byte	0x43
 3279 01aa 0C020000 		.4byte	0x20c
 3280 01ae 48       		.byte	0x48
 3281 01af 06       		.uleb128 0x6
 3282 01b0 DF050000 		.4byte	.LASF37
 3283 01b4 03       		.byte	0x3
 3284 01b5 44       		.byte	0x44
 3285 01b6 1D020000 		.4byte	0x21d
 3286 01ba 4C       		.byte	0x4c
 3287 01bb 06       		.uleb128 0x6
 3288 01bc 39040000 		.4byte	.LASF38
 3289 01c0 03       		.byte	0x3
 3290 01c1 45       		.byte	0x45
 3291 01c2 0C020000 		.4byte	0x20c
 3292 01c6 50       		.byte	0x50
 3293 01c7 06       		.uleb128 0x6
 3294 01c8 A5000000 		.4byte	.LASF39
 3295 01cc 03       		.byte	0x3
 3296 01cd 46       		.byte	0x46
 3297 01ce 37020000 		.4byte	0x237
 3298 01d2 54       		.byte	0x54
 3299 01d3 06       		.uleb128 0x6
 3300 01d4 820A0000 		.4byte	.LASF40
 3301 01d8 03       		.byte	0x3
 3302 01d9 47       		.byte	0x47
 3303 01da 52020000 		.4byte	0x252
 3304 01de 58       		.byte	0x58
 3305 01df 00       		.byte	0
 3306 01e0 07       		.uleb128 0x7
 3307 01e1 04       		.byte	0x4
 3308 01e2 6B000000 		.4byte	0x6b
 3309 01e6 07       		.uleb128 0x7
 3310 01e7 04       		.byte	0x4
 3311 01e8 EC010000 		.4byte	0x1ec
 3312 01ec 08       		.uleb128 0x8
 3313 01ed 6B000000 		.4byte	0x6b
 3314 01f1 07       		.uleb128 0x7
 3315 01f2 04       		.byte	0x4
 3316 01f3 83000000 		.4byte	0x83
 3317 01f7 07       		.uleb128 0x7
 3318 01f8 04       		.byte	0x4
 3319 01f9 77000000 		.4byte	0x77
 3320 01fd 09       		.uleb128 0x9
 3321 01fe 77000000 		.4byte	0x77
 3322 0202 0C020000 		.4byte	0x20c
 3323 0206 0A       		.uleb128 0xa
 3324 0207 83000000 		.4byte	0x83
 3325 020b 00       		.byte	0
 3326 020c 07       		.uleb128 0x7
 3327 020d 04       		.byte	0x4
 3328 020e FD010000 		.4byte	0x1fd
 3329 0212 0B       		.uleb128 0xb
 3330 0213 1D020000 		.4byte	0x21d
 3331 0217 0A       		.uleb128 0xa
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 110


 3332 0218 83000000 		.4byte	0x83
 3333 021c 00       		.byte	0
 3334 021d 07       		.uleb128 0x7
 3335 021e 04       		.byte	0x4
 3336 021f 12020000 		.4byte	0x212
 3337 0223 09       		.uleb128 0x9
 3338 0224 83000000 		.4byte	0x83
 3339 0228 37020000 		.4byte	0x237
 3340 022c 0A       		.uleb128 0xa
 3341 022d E6010000 		.4byte	0x1e6
 3342 0231 0A       		.uleb128 0xa
 3343 0232 83000000 		.4byte	0x83
 3344 0236 00       		.byte	0
 3345 0237 07       		.uleb128 0x7
 3346 0238 04       		.byte	0x4
 3347 0239 23020000 		.4byte	0x223
 3348 023d 0B       		.uleb128 0xb
 3349 023e 52020000 		.4byte	0x252
 3350 0242 0A       		.uleb128 0xa
 3351 0243 E0010000 		.4byte	0x1e0
 3352 0247 0A       		.uleb128 0xa
 3353 0248 83000000 		.4byte	0x83
 3354 024c 0A       		.uleb128 0xa
 3355 024d 83000000 		.4byte	0x83
 3356 0251 00       		.byte	0
 3357 0252 07       		.uleb128 0x7
 3358 0253 04       		.byte	0x4
 3359 0254 3D020000 		.4byte	0x23d
 3360 0258 0C       		.uleb128 0xc
 3361 0259 EE0A0000 		.4byte	.LASF41
 3362 025d 03       		.byte	0x3
 3363 025e 48       		.byte	0x48
 3364 025f C3000000 		.4byte	0xc3
 3365 0263 05       		.uleb128 0x5
 3366 0264 0C       		.byte	0xc
 3367 0265 03       		.byte	0x3
 3368 0266 4A       		.byte	0x4a
 3369 0267 B4020000 		.4byte	0x2b4
 3370 026b 06       		.uleb128 0x6
 3371 026c CF040000 		.4byte	.LASF42
 3372 0270 03       		.byte	0x3
 3373 0271 4C       		.byte	0x4c
 3374 0272 6B000000 		.4byte	0x6b
 3375 0276 00       		.byte	0
 3376 0277 06       		.uleb128 0x6
 3377 0278 1D020000 		.4byte	.LASF43
 3378 027c 03       		.byte	0x3
 3379 027d 4D       		.byte	0x4d
 3380 027e 6B000000 		.4byte	0x6b
 3381 0282 01       		.byte	0x1
 3382 0283 06       		.uleb128 0x6
 3383 0284 2E010000 		.4byte	.LASF44
 3384 0288 03       		.byte	0x3
 3385 0289 4E       		.byte	0x4e
 3386 028a 6B000000 		.4byte	0x6b
 3387 028e 02       		.byte	0x2
 3388 028f 06       		.uleb128 0x6
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 111


 3389 0290 E8040000 		.4byte	.LASF45
 3390 0294 03       		.byte	0x3
 3391 0295 4F       		.byte	0x4f
 3392 0296 77000000 		.4byte	0x77
 3393 029a 04       		.byte	0x4
 3394 029b 06       		.uleb128 0x6
 3395 029c EA070000 		.4byte	.LASF46
 3396 02a0 03       		.byte	0x3
 3397 02a1 50       		.byte	0x50
 3398 02a2 77000000 		.4byte	0x77
 3399 02a6 06       		.byte	0x6
 3400 02a7 06       		.uleb128 0x6
 3401 02a8 FA080000 		.4byte	.LASF47
 3402 02ac 03       		.byte	0x3
 3403 02ad 51       		.byte	0x51
 3404 02ae B4020000 		.4byte	0x2b4
 3405 02b2 08       		.byte	0x8
 3406 02b3 00       		.byte	0
 3407 02b4 07       		.uleb128 0x7
 3408 02b5 04       		.byte	0x4
 3409 02b6 BA020000 		.4byte	0x2ba
 3410 02ba 08       		.uleb128 0x8
 3411 02bb 58020000 		.4byte	0x258
 3412 02bf 0C       		.uleb128 0xc
 3413 02c0 D9010000 		.4byte	.LASF48
 3414 02c4 03       		.byte	0x3
 3415 02c5 52       		.byte	0x52
 3416 02c6 63020000 		.4byte	0x263
 3417 02ca 0D       		.uleb128 0xd
 3418 02cb BD060000 		.4byte	.LASF49
 3419 02cf 01       		.byte	0x1
 3420 02d0 98       		.byte	0x98
 3421 02d1 00000000 		.4byte	.LFB34
 3422 02d5 90000000 		.4byte	.LFE34-.LFB34
 3423 02d9 01       		.uleb128 0x1
 3424 02da 9C       		.byte	0x9c
 3425 02db FC020000 		.4byte	0x2fc
 3426 02df 0E       		.uleb128 0xe
 3427 02e0 E1040000 		.4byte	.LASF51
 3428 02e4 01       		.byte	0x1
 3429 02e5 98       		.byte	0x98
 3430 02e6 83000000 		.4byte	0x83
 3431 02ea 02       		.uleb128 0x2
 3432 02eb 91       		.byte	0x91
 3433 02ec 6C       		.sleb128 -20
 3434 02ed 0F       		.uleb128 0xf
 3435 02ee 51030000 		.4byte	.LASF53
 3436 02f2 01       		.byte	0x1
 3437 02f3 9C       		.byte	0x9c
 3438 02f4 6B000000 		.4byte	0x6b
 3439 02f8 02       		.uleb128 0x2
 3440 02f9 91       		.byte	0x91
 3441 02fa 77       		.sleb128 -9
 3442 02fb 00       		.byte	0
 3443 02fc 10       		.uleb128 0x10
 3444 02fd B7010000 		.4byte	.LASF50
 3445 0301 01       		.byte	0x1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 112


 3446 0302 E7       		.byte	0xe7
 3447 0303 00000000 		.4byte	.LFB35
 3448 0307 28000000 		.4byte	.LFE35-.LFB35
 3449 030b 01       		.uleb128 0x1
 3450 030c 9C       		.byte	0x9c
 3451 030d 20030000 		.4byte	0x320
 3452 0311 0E       		.uleb128 0xe
 3453 0312 E1040000 		.4byte	.LASF51
 3454 0316 01       		.byte	0x1
 3455 0317 E7       		.byte	0xe7
 3456 0318 83000000 		.4byte	0x83
 3457 031c 02       		.uleb128 0x2
 3458 031d 91       		.byte	0x91
 3459 031e 74       		.sleb128 -12
 3460 031f 00       		.byte	0
 3461 0320 11       		.uleb128 0x11
 3462 0321 A0090000 		.4byte	.LASF52
 3463 0325 01       		.byte	0x1
 3464 0326 0C01     		.2byte	0x10c
 3465 0328 00000000 		.4byte	.LFB36
 3466 032c 26000000 		.4byte	.LFE36-.LFB36
 3467 0330 01       		.uleb128 0x1
 3468 0331 9C       		.byte	0x9c
 3469 0332 44030000 		.4byte	0x344
 3470 0336 12       		.uleb128 0x12
 3471 0337 6900     		.ascii	"i\000"
 3472 0339 01       		.byte	0x1
 3473 033a 0E01     		.2byte	0x10e
 3474 033c 83000000 		.4byte	0x83
 3475 0340 02       		.uleb128 0x2
 3476 0341 91       		.byte	0x91
 3477 0342 74       		.sleb128 -12
 3478 0343 00       		.byte	0
 3479 0344 11       		.uleb128 0x11
 3480 0345 59010000 		.4byte	.LASF54
 3481 0349 01       		.byte	0x1
 3482 034a 2F01     		.2byte	0x12f
 3483 034c 00000000 		.4byte	.LFB37
 3484 0350 50000000 		.4byte	.LFE37-.LFB37
 3485 0354 01       		.uleb128 0x1
 3486 0355 9C       		.byte	0x9c
 3487 0356 77030000 		.4byte	0x377
 3488 035a 12       		.uleb128 0x12
 3489 035b 6900     		.ascii	"i\000"
 3490 035d 01       		.byte	0x1
 3491 035e 3101     		.2byte	0x131
 3492 0360 83000000 		.4byte	0x83
 3493 0364 02       		.uleb128 0x2
 3494 0365 91       		.byte	0x91
 3495 0366 74       		.sleb128 -12
 3496 0367 13       		.uleb128 0x13
 3497 0368 04010000 		.4byte	.LASF55
 3498 036c 01       		.byte	0x1
 3499 036d 3201     		.2byte	0x132
 3500 036f 83000000 		.4byte	0x83
 3501 0373 02       		.uleb128 0x2
 3502 0374 91       		.byte	0x91
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 113


 3503 0375 70       		.sleb128 -16
 3504 0376 00       		.byte	0
 3505 0377 11       		.uleb128 0x11
 3506 0378 72000000 		.4byte	.LASF56
 3507 037c 01       		.byte	0x1
 3508 037d 7001     		.2byte	0x170
 3509 037f 00000000 		.4byte	.LFB38
 3510 0383 38020000 		.4byte	.LFE38-.LFB38
 3511 0387 01       		.uleb128 0x1
 3512 0388 9C       		.byte	0x9c
 3513 0389 F7030000 		.4byte	0x3f7
 3514 038d 14       		.uleb128 0x14
 3515 038e E1040000 		.4byte	.LASF51
 3516 0392 01       		.byte	0x1
 3517 0393 7001     		.2byte	0x170
 3518 0395 83000000 		.4byte	0x83
 3519 0399 02       		.uleb128 0x2
 3520 039a 91       		.byte	0x91
 3521 039b 5C       		.sleb128 -36
 3522 039c 13       		.uleb128 0x13
 3523 039d 34040000 		.4byte	.LASF57
 3524 03a1 01       		.byte	0x1
 3525 03a2 7201     		.2byte	0x172
 3526 03a4 83000000 		.4byte	0x83
 3527 03a8 02       		.uleb128 0x2
 3528 03a9 91       		.byte	0x91
 3529 03aa 60       		.sleb128 -32
 3530 03ab 13       		.uleb128 0x13
 3531 03ac 17040000 		.4byte	.LASF58
 3532 03b0 01       		.byte	0x1
 3533 03b1 7301     		.2byte	0x173
 3534 03b3 83000000 		.4byte	0x83
 3535 03b7 02       		.uleb128 0x2
 3536 03b8 91       		.byte	0x91
 3537 03b9 6C       		.sleb128 -20
 3538 03ba 13       		.uleb128 0x13
 3539 03bb A70A0000 		.4byte	.LASF59
 3540 03bf 01       		.byte	0x1
 3541 03c0 7401     		.2byte	0x174
 3542 03c2 77000000 		.4byte	0x77
 3543 03c6 02       		.uleb128 0x2
 3544 03c7 91       		.byte	0x91
 3545 03c8 6A       		.sleb128 -22
 3546 03c9 13       		.uleb128 0x13
 3547 03ca 55040000 		.4byte	.LASF60
 3548 03ce 01       		.byte	0x1
 3549 03cf 7501     		.2byte	0x175
 3550 03d1 77000000 		.4byte	0x77
 3551 03d5 02       		.uleb128 0x2
 3552 03d6 91       		.byte	0x91
 3553 03d7 68       		.sleb128 -24
 3554 03d8 13       		.uleb128 0x13
 3555 03d9 51030000 		.4byte	.LASF53
 3556 03dd 01       		.byte	0x1
 3557 03de 7601     		.2byte	0x176
 3558 03e0 6B000000 		.4byte	0x6b
 3559 03e4 02       		.uleb128 0x2
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 114


 3560 03e5 91       		.byte	0x91
 3561 03e6 67       		.sleb128 -25
 3562 03e7 13       		.uleb128 0x13
 3563 03e8 03090000 		.4byte	.LASF61
 3564 03ec 01       		.byte	0x1
 3565 03ed 7701     		.2byte	0x177
 3566 03ef 6B000000 		.4byte	0x6b
 3567 03f3 02       		.uleb128 0x2
 3568 03f4 91       		.byte	0x91
 3569 03f5 66       		.sleb128 -26
 3570 03f6 00       		.byte	0
 3571 03f7 11       		.uleb128 0x11
 3572 03f8 11060000 		.4byte	.LASF62
 3573 03fc 01       		.byte	0x1
 3574 03fd 3002     		.2byte	0x230
 3575 03ff 00000000 		.4byte	.LFB39
 3576 0403 1E000000 		.4byte	.LFE39-.LFB39
 3577 0407 01       		.uleb128 0x1
 3578 0408 9C       		.byte	0x9c
 3579 0409 1D040000 		.4byte	0x41d
 3580 040d 14       		.uleb128 0x14
 3581 040e E1040000 		.4byte	.LASF51
 3582 0412 01       		.byte	0x1
 3583 0413 3002     		.2byte	0x230
 3584 0415 83000000 		.4byte	0x83
 3585 0419 02       		.uleb128 0x2
 3586 041a 91       		.byte	0x91
 3587 041b 74       		.sleb128 -12
 3588 041c 00       		.byte	0
 3589 041d 11       		.uleb128 0x11
 3590 041e CB000000 		.4byte	.LASF63
 3591 0422 01       		.byte	0x1
 3592 0423 6602     		.2byte	0x266
 3593 0425 00000000 		.4byte	.LFB40
 3594 0429 40000000 		.4byte	.LFE40-.LFB40
 3595 042d 01       		.uleb128 0x1
 3596 042e 9C       		.byte	0x9c
 3597 042f 50040000 		.4byte	0x450
 3598 0433 12       		.uleb128 0x12
 3599 0434 6900     		.ascii	"i\000"
 3600 0436 01       		.byte	0x1
 3601 0437 6802     		.2byte	0x268
 3602 0439 83000000 		.4byte	0x83
 3603 043d 02       		.uleb128 0x2
 3604 043e 91       		.byte	0x91
 3605 043f 74       		.sleb128 -12
 3606 0440 13       		.uleb128 0x13
 3607 0441 04010000 		.4byte	.LASF55
 3608 0445 01       		.byte	0x1
 3609 0446 6902     		.2byte	0x269
 3610 0448 83000000 		.4byte	0x83
 3611 044c 02       		.uleb128 0x2
 3612 044d 91       		.byte	0x91
 3613 044e 70       		.sleb128 -16
 3614 044f 00       		.byte	0
 3615 0450 11       		.uleb128 0x11
 3616 0451 8E020000 		.4byte	.LASF64
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 115


 3617 0455 01       		.byte	0x1
 3618 0456 9302     		.2byte	0x293
 3619 0458 00000000 		.4byte	.LFB41
 3620 045c 70000000 		.4byte	.LFE41-.LFB41
 3621 0460 01       		.uleb128 0x1
 3622 0461 9C       		.byte	0x9c
 3623 0462 BF040000 		.4byte	0x4bf
 3624 0466 14       		.uleb128 0x14
 3625 0467 51030000 		.4byte	.LASF53
 3626 046b 01       		.byte	0x1
 3627 046c 9302     		.2byte	0x293
 3628 046e 83000000 		.4byte	0x83
 3629 0472 02       		.uleb128 0x2
 3630 0473 91       		.byte	0x91
 3631 0474 5C       		.sleb128 -36
 3632 0475 13       		.uleb128 0x13
 3633 0476 65040000 		.4byte	.LASF65
 3634 047a 01       		.byte	0x1
 3635 047b 9502     		.2byte	0x295
 3636 047d 83000000 		.4byte	0x83
 3637 0481 02       		.uleb128 0x2
 3638 0482 91       		.byte	0x91
 3639 0483 70       		.sleb128 -16
 3640 0484 13       		.uleb128 0x13
 3641 0485 3A080000 		.4byte	.LASF66
 3642 0489 01       		.byte	0x1
 3643 048a 9602     		.2byte	0x296
 3644 048c 83000000 		.4byte	0x83
 3645 0490 02       		.uleb128 0x2
 3646 0491 91       		.byte	0x91
 3647 0492 6C       		.sleb128 -20
 3648 0493 13       		.uleb128 0x13
 3649 0494 DF070000 		.4byte	.LASF67
 3650 0498 01       		.byte	0x1
 3651 0499 9702     		.2byte	0x297
 3652 049b 83000000 		.4byte	0x83
 3653 049f 02       		.uleb128 0x2
 3654 04a0 91       		.byte	0x91
 3655 04a1 68       		.sleb128 -24
 3656 04a2 12       		.uleb128 0x12
 3657 04a3 6900     		.ascii	"i\000"
 3658 04a5 01       		.byte	0x1
 3659 04a6 9802     		.2byte	0x298
 3660 04a8 83000000 		.4byte	0x83
 3661 04ac 02       		.uleb128 0x2
 3662 04ad 91       		.byte	0x91
 3663 04ae 74       		.sleb128 -12
 3664 04af 13       		.uleb128 0x13
 3665 04b0 04010000 		.4byte	.LASF55
 3666 04b4 01       		.byte	0x1
 3667 04b5 9902     		.2byte	0x299
 3668 04b7 83000000 		.4byte	0x83
 3669 04bb 02       		.uleb128 0x2
 3670 04bc 91       		.byte	0x91
 3671 04bd 64       		.sleb128 -28
 3672 04be 00       		.byte	0
 3673 04bf 15       		.uleb128 0x15
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 116


 3674 04c0 C0090000 		.4byte	.LASF70
 3675 04c4 01       		.byte	0x1
 3676 04c5 C402     		.2byte	0x2c4
 3677 04c7 77000000 		.4byte	0x77
 3678 04cb 00000000 		.4byte	.LFB42
 3679 04cf 1C000000 		.4byte	.LFE42-.LFB42
 3680 04d3 01       		.uleb128 0x1
 3681 04d4 9C       		.byte	0x9c
 3682 04d5 E9040000 		.4byte	0x4e9
 3683 04d9 14       		.uleb128 0x14
 3684 04da E1040000 		.4byte	.LASF51
 3685 04de 01       		.byte	0x1
 3686 04df C402     		.2byte	0x2c4
 3687 04e1 83000000 		.4byte	0x83
 3688 04e5 02       		.uleb128 0x2
 3689 04e6 91       		.byte	0x91
 3690 04e7 74       		.sleb128 -12
 3691 04e8 00       		.byte	0
 3692 04e9 16       		.uleb128 0x16
 3693 04ea F7010000 		.4byte	.LASF68
 3694 04ee 01       		.byte	0x1
 3695 04ef DF02     		.2byte	0x2df
 3696 04f1 00000000 		.4byte	.LFB43
 3697 04f5 24000000 		.4byte	.LFE43-.LFB43
 3698 04f9 01       		.uleb128 0x1
 3699 04fa 9C       		.byte	0x9c
 3700 04fb 1E050000 		.4byte	0x51e
 3701 04ff 14       		.uleb128 0x14
 3702 0500 E1040000 		.4byte	.LASF51
 3703 0504 01       		.byte	0x1
 3704 0505 DF02     		.2byte	0x2df
 3705 0507 83000000 		.4byte	0x83
 3706 050b 02       		.uleb128 0x2
 3707 050c 91       		.byte	0x91
 3708 050d 74       		.sleb128 -12
 3709 050e 14       		.uleb128 0x14
 3710 050f 4C050000 		.4byte	.LASF69
 3711 0513 01       		.byte	0x1
 3712 0514 DF02     		.2byte	0x2df
 3713 0516 77000000 		.4byte	0x77
 3714 051a 02       		.uleb128 0x2
 3715 051b 91       		.byte	0x91
 3716 051c 72       		.sleb128 -14
 3717 051d 00       		.byte	0
 3718 051e 15       		.uleb128 0x15
 3719 051f FD030000 		.4byte	.LASF71
 3720 0523 01       		.byte	0x1
 3721 0524 FA02     		.2byte	0x2fa
 3722 0526 6B000000 		.4byte	0x6b
 3723 052a 00000000 		.4byte	.LFB44
 3724 052e 1C000000 		.4byte	.LFE44-.LFB44
 3725 0532 01       		.uleb128 0x1
 3726 0533 9C       		.byte	0x9c
 3727 0534 48050000 		.4byte	0x548
 3728 0538 14       		.uleb128 0x14
 3729 0539 E1040000 		.4byte	.LASF51
 3730 053d 01       		.byte	0x1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 117


 3731 053e FA02     		.2byte	0x2fa
 3732 0540 83000000 		.4byte	0x83
 3733 0544 02       		.uleb128 0x2
 3734 0545 91       		.byte	0x91
 3735 0546 74       		.sleb128 -12
 3736 0547 00       		.byte	0
 3737 0548 16       		.uleb128 0x16
 3738 0549 2D020000 		.4byte	.LASF72
 3739 054d 01       		.byte	0x1
 3740 054e 1503     		.2byte	0x315
 3741 0550 00000000 		.4byte	.LFB45
 3742 0554 24000000 		.4byte	.LFE45-.LFB45
 3743 0558 01       		.uleb128 0x1
 3744 0559 9C       		.byte	0x9c
 3745 055a 7D050000 		.4byte	0x57d
 3746 055e 14       		.uleb128 0x14
 3747 055f E1040000 		.4byte	.LASF51
 3748 0563 01       		.byte	0x1
 3749 0564 1503     		.2byte	0x315
 3750 0566 83000000 		.4byte	0x83
 3751 056a 02       		.uleb128 0x2
 3752 056b 91       		.byte	0x91
 3753 056c 74       		.sleb128 -12
 3754 056d 14       		.uleb128 0x14
 3755 056e DA030000 		.4byte	.LASF73
 3756 0572 01       		.byte	0x1
 3757 0573 1503     		.2byte	0x315
 3758 0575 6B000000 		.4byte	0x6b
 3759 0579 02       		.uleb128 0x2
 3760 057a 91       		.byte	0x91
 3761 057b 73       		.sleb128 -13
 3762 057c 00       		.byte	0
 3763 057d 15       		.uleb128 0x15
 3764 057e B9070000 		.4byte	.LASF74
 3765 0582 01       		.byte	0x1
 3766 0583 3003     		.2byte	0x330
 3767 0585 6B000000 		.4byte	0x6b
 3768 0589 00000000 		.4byte	.LFB46
 3769 058d 1C000000 		.4byte	.LFE46-.LFB46
 3770 0591 01       		.uleb128 0x1
 3771 0592 9C       		.byte	0x9c
 3772 0593 A7050000 		.4byte	0x5a7
 3773 0597 14       		.uleb128 0x14
 3774 0598 51030000 		.4byte	.LASF53
 3775 059c 01       		.byte	0x1
 3776 059d 3003     		.2byte	0x330
 3777 059f 83000000 		.4byte	0x83
 3778 05a3 02       		.uleb128 0x2
 3779 05a4 91       		.byte	0x91
 3780 05a5 74       		.sleb128 -12
 3781 05a6 00       		.byte	0
 3782 05a7 15       		.uleb128 0x15
 3783 05a8 F0020000 		.4byte	.LASF75
 3784 05ac 01       		.byte	0x1
 3785 05ad 4B03     		.2byte	0x34b
 3786 05af 6B000000 		.4byte	0x6b
 3787 05b3 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 118


 3788 05b7 1C000000 		.4byte	.LFE47-.LFB47
 3789 05bb 01       		.uleb128 0x1
 3790 05bc 9C       		.byte	0x9c
 3791 05bd D1050000 		.4byte	0x5d1
 3792 05c1 14       		.uleb128 0x14
 3793 05c2 51030000 		.4byte	.LASF53
 3794 05c6 01       		.byte	0x1
 3795 05c7 4B03     		.2byte	0x34b
 3796 05c9 83000000 		.4byte	0x83
 3797 05cd 02       		.uleb128 0x2
 3798 05ce 91       		.byte	0x91
 3799 05cf 74       		.sleb128 -12
 3800 05d0 00       		.byte	0
 3801 05d1 15       		.uleb128 0x15
 3802 05d2 E0030000 		.4byte	.LASF76
 3803 05d6 01       		.byte	0x1
 3804 05d7 6703     		.2byte	0x367
 3805 05d9 6B000000 		.4byte	0x6b
 3806 05dd 00000000 		.4byte	.LFB48
 3807 05e1 1C000000 		.4byte	.LFE48-.LFB48
 3808 05e5 01       		.uleb128 0x1
 3809 05e6 9C       		.byte	0x9c
 3810 05e7 FB050000 		.4byte	0x5fb
 3811 05eb 14       		.uleb128 0x14
 3812 05ec 51030000 		.4byte	.LASF53
 3813 05f0 01       		.byte	0x1
 3814 05f1 6703     		.2byte	0x367
 3815 05f3 83000000 		.4byte	0x83
 3816 05f7 02       		.uleb128 0x2
 3817 05f8 91       		.byte	0x91
 3818 05f9 74       		.sleb128 -12
 3819 05fa 00       		.byte	0
 3820 05fb 15       		.uleb128 0x15
 3821 05fc 13050000 		.4byte	.LASF77
 3822 0600 01       		.byte	0x1
 3823 0601 8303     		.2byte	0x383
 3824 0603 6B000000 		.4byte	0x6b
 3825 0607 00000000 		.4byte	.LFB49
 3826 060b 1C000000 		.4byte	.LFE49-.LFB49
 3827 060f 01       		.uleb128 0x1
 3828 0610 9C       		.byte	0x9c
 3829 0611 25060000 		.4byte	0x625
 3830 0615 14       		.uleb128 0x14
 3831 0616 51030000 		.4byte	.LASF53
 3832 061a 01       		.byte	0x1
 3833 061b 8303     		.2byte	0x383
 3834 061d 83000000 		.4byte	0x83
 3835 0621 02       		.uleb128 0x2
 3836 0622 91       		.byte	0x91
 3837 0623 74       		.sleb128 -12
 3838 0624 00       		.byte	0
 3839 0625 16       		.uleb128 0x16
 3840 0626 9F030000 		.4byte	.LASF78
 3841 062a 01       		.byte	0x1
 3842 062b A403     		.2byte	0x3a4
 3843 062d 00000000 		.4byte	.LFB50
 3844 0631 24000000 		.4byte	.LFE50-.LFB50
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 119


 3845 0635 01       		.uleb128 0x1
 3846 0636 9C       		.byte	0x9c
 3847 0637 5A060000 		.4byte	0x65a
 3848 063b 14       		.uleb128 0x14
 3849 063c 51030000 		.4byte	.LASF53
 3850 0640 01       		.byte	0x1
 3851 0641 A403     		.2byte	0x3a4
 3852 0643 83000000 		.4byte	0x83
 3853 0647 02       		.uleb128 0x2
 3854 0648 91       		.byte	0x91
 3855 0649 74       		.sleb128 -12
 3856 064a 14       		.uleb128 0x14
 3857 064b DA030000 		.4byte	.LASF73
 3858 064f 01       		.byte	0x1
 3859 0650 A403     		.2byte	0x3a4
 3860 0652 6B000000 		.4byte	0x6b
 3861 0656 02       		.uleb128 0x2
 3862 0657 91       		.byte	0x91
 3863 0658 73       		.sleb128 -13
 3864 0659 00       		.byte	0
 3865 065a 16       		.uleb128 0x16
 3866 065b 73020000 		.4byte	.LASF79
 3867 065f 01       		.byte	0x1
 3868 0660 C003     		.2byte	0x3c0
 3869 0662 00000000 		.4byte	.LFB51
 3870 0666 24000000 		.4byte	.LFE51-.LFB51
 3871 066a 01       		.uleb128 0x1
 3872 066b 9C       		.byte	0x9c
 3873 066c 8F060000 		.4byte	0x68f
 3874 0670 14       		.uleb128 0x14
 3875 0671 51030000 		.4byte	.LASF53
 3876 0675 01       		.byte	0x1
 3877 0676 C003     		.2byte	0x3c0
 3878 0678 83000000 		.4byte	0x83
 3879 067c 02       		.uleb128 0x2
 3880 067d 91       		.byte	0x91
 3881 067e 74       		.sleb128 -12
 3882 067f 14       		.uleb128 0x14
 3883 0680 DA030000 		.4byte	.LASF73
 3884 0684 01       		.byte	0x1
 3885 0685 C003     		.2byte	0x3c0
 3886 0687 6B000000 		.4byte	0x6b
 3887 068b 02       		.uleb128 0x2
 3888 068c 91       		.byte	0x91
 3889 068d 73       		.sleb128 -13
 3890 068e 00       		.byte	0
 3891 068f 16       		.uleb128 0x16
 3892 0690 69070000 		.4byte	.LASF80
 3893 0694 01       		.byte	0x1
 3894 0695 DC03     		.2byte	0x3dc
 3895 0697 00000000 		.4byte	.LFB52
 3896 069b 24000000 		.4byte	.LFE52-.LFB52
 3897 069f 01       		.uleb128 0x1
 3898 06a0 9C       		.byte	0x9c
 3899 06a1 C4060000 		.4byte	0x6c4
 3900 06a5 14       		.uleb128 0x14
 3901 06a6 51030000 		.4byte	.LASF53
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 120


 3902 06aa 01       		.byte	0x1
 3903 06ab DC03     		.2byte	0x3dc
 3904 06ad 83000000 		.4byte	0x83
 3905 06b1 02       		.uleb128 0x2
 3906 06b2 91       		.byte	0x91
 3907 06b3 74       		.sleb128 -12
 3908 06b4 14       		.uleb128 0x14
 3909 06b5 DA030000 		.4byte	.LASF73
 3910 06b9 01       		.byte	0x1
 3911 06ba DC03     		.2byte	0x3dc
 3912 06bc 6B000000 		.4byte	0x6b
 3913 06c0 02       		.uleb128 0x2
 3914 06c1 91       		.byte	0x91
 3915 06c2 73       		.sleb128 -13
 3916 06c3 00       		.byte	0
 3917 06c4 16       		.uleb128 0x16
 3918 06c5 22070000 		.4byte	.LASF81
 3919 06c9 01       		.byte	0x1
 3920 06ca F903     		.2byte	0x3f9
 3921 06cc 00000000 		.4byte	.LFB53
 3922 06d0 24000000 		.4byte	.LFE53-.LFB53
 3923 06d4 01       		.uleb128 0x1
 3924 06d5 9C       		.byte	0x9c
 3925 06d6 F9060000 		.4byte	0x6f9
 3926 06da 14       		.uleb128 0x14
 3927 06db 51030000 		.4byte	.LASF53
 3928 06df 01       		.byte	0x1
 3929 06e0 F903     		.2byte	0x3f9
 3930 06e2 83000000 		.4byte	0x83
 3931 06e6 02       		.uleb128 0x2
 3932 06e7 91       		.byte	0x91
 3933 06e8 74       		.sleb128 -12
 3934 06e9 14       		.uleb128 0x14
 3935 06ea DA030000 		.4byte	.LASF73
 3936 06ee 01       		.byte	0x1
 3937 06ef F903     		.2byte	0x3f9
 3938 06f1 6B000000 		.4byte	0x6b
 3939 06f5 02       		.uleb128 0x2
 3940 06f6 91       		.byte	0x91
 3941 06f7 73       		.sleb128 -13
 3942 06f8 00       		.byte	0
 3943 06f9 16       		.uleb128 0x16
 3944 06fa 3A090000 		.4byte	.LASF82
 3945 06fe 01       		.byte	0x1
 3946 06ff 1504     		.2byte	0x415
 3947 0701 00000000 		.4byte	.LFB54
 3948 0705 24000000 		.4byte	.LFE54-.LFB54
 3949 0709 01       		.uleb128 0x1
 3950 070a 9C       		.byte	0x9c
 3951 070b 2E070000 		.4byte	0x72e
 3952 070f 14       		.uleb128 0x14
 3953 0710 51030000 		.4byte	.LASF53
 3954 0714 01       		.byte	0x1
 3955 0715 1504     		.2byte	0x415
 3956 0717 83000000 		.4byte	0x83
 3957 071b 02       		.uleb128 0x2
 3958 071c 91       		.byte	0x91
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 121


 3959 071d 74       		.sleb128 -12
 3960 071e 14       		.uleb128 0x14
 3961 071f DA030000 		.4byte	.LASF73
 3962 0723 01       		.byte	0x1
 3963 0724 1504     		.2byte	0x415
 3964 0726 6B000000 		.4byte	0x6b
 3965 072a 02       		.uleb128 0x2
 3966 072b 91       		.byte	0x91
 3967 072c 73       		.sleb128 -13
 3968 072d 00       		.byte	0
 3969 072e 16       		.uleb128 0x16
 3970 072f D9090000 		.4byte	.LASF83
 3971 0733 01       		.byte	0x1
 3972 0734 3104     		.2byte	0x431
 3973 0736 00000000 		.4byte	.LFB55
 3974 073a 24000000 		.4byte	.LFE55-.LFB55
 3975 073e 01       		.uleb128 0x1
 3976 073f 9C       		.byte	0x9c
 3977 0740 63070000 		.4byte	0x763
 3978 0744 14       		.uleb128 0x14
 3979 0745 E1040000 		.4byte	.LASF51
 3980 0749 01       		.byte	0x1
 3981 074a 3104     		.2byte	0x431
 3982 074c 83000000 		.4byte	0x83
 3983 0750 02       		.uleb128 0x2
 3984 0751 91       		.byte	0x91
 3985 0752 74       		.sleb128 -12
 3986 0753 14       		.uleb128 0x14
 3987 0754 DA030000 		.4byte	.LASF73
 3988 0758 01       		.byte	0x1
 3989 0759 3104     		.2byte	0x431
 3990 075b 6B000000 		.4byte	0x6b
 3991 075f 02       		.uleb128 0x2
 3992 0760 91       		.byte	0x91
 3993 0761 73       		.sleb128 -13
 3994 0762 00       		.byte	0
 3995 0763 17       		.uleb128 0x17
 3996 0764 EA050000 		.4byte	.LASF84
 3997 0768 01       		.byte	0x1
 3998 0769 5F04     		.2byte	0x45f
 3999 076b 83000000 		.4byte	0x83
 4000 076f 00000000 		.4byte	.LFB56
 4001 0773 58010000 		.4byte	.LFE56-.LFB56
 4002 0777 01       		.uleb128 0x1
 4003 0778 9C       		.byte	0x9c
 4004 0779 D8070000 		.4byte	0x7d8
 4005 077d 14       		.uleb128 0x14
 4006 077e E1040000 		.4byte	.LASF51
 4007 0782 01       		.byte	0x1
 4008 0783 5F04     		.2byte	0x45f
 4009 0785 83000000 		.4byte	0x83
 4010 0789 02       		.uleb128 0x2
 4011 078a 91       		.byte	0x91
 4012 078b 6C       		.sleb128 -20
 4013 078c 13       		.uleb128 0x13
 4014 078d 51030000 		.4byte	.LASF53
 4015 0791 01       		.byte	0x1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 122


 4016 0792 6104     		.2byte	0x461
 4017 0794 6B000000 		.4byte	0x6b
 4018 0798 02       		.uleb128 0x2
 4019 0799 91       		.byte	0x91
 4020 079a 76       		.sleb128 -10
 4021 079b 13       		.uleb128 0x13
 4022 079c D6050000 		.4byte	.LASF85
 4023 07a0 01       		.byte	0x1
 4024 07a1 6204     		.2byte	0x462
 4025 07a3 6B000000 		.4byte	0x6b
 4026 07a7 02       		.uleb128 0x2
 4027 07a8 91       		.byte	0x91
 4028 07a9 73       		.sleb128 -13
 4029 07aa 13       		.uleb128 0x13
 4030 07ab 92090000 		.4byte	.LASF86
 4031 07af 01       		.byte	0x1
 4032 07b0 6304     		.2byte	0x463
 4033 07b2 6B000000 		.4byte	0x6b
 4034 07b6 02       		.uleb128 0x2
 4035 07b7 91       		.byte	0x91
 4036 07b8 77       		.sleb128 -9
 4037 07b9 13       		.uleb128 0x13
 4038 07ba 4F090000 		.4byte	.LASF87
 4039 07be 01       		.byte	0x1
 4040 07bf 6504     		.2byte	0x465
 4041 07c1 6B000000 		.4byte	0x6b
 4042 07c5 02       		.uleb128 0x2
 4043 07c6 91       		.byte	0x91
 4044 07c7 75       		.sleb128 -11
 4045 07c8 13       		.uleb128 0x13
 4046 07c9 4A040000 		.4byte	.LASF88
 4047 07cd 01       		.byte	0x1
 4048 07ce 6604     		.2byte	0x466
 4049 07d0 6B000000 		.4byte	0x6b
 4050 07d4 02       		.uleb128 0x2
 4051 07d5 91       		.byte	0x91
 4052 07d6 74       		.sleb128 -12
 4053 07d7 00       		.byte	0
 4054 07d8 17       		.uleb128 0x17
 4055 07d9 C40A0000 		.4byte	.LASF89
 4056 07dd 01       		.byte	0x1
 4057 07de B904     		.2byte	0x4b9
 4058 07e0 83000000 		.4byte	0x83
 4059 07e4 00000000 		.4byte	.LFB57
 4060 07e8 58000000 		.4byte	.LFE57-.LFB57
 4061 07ec 01       		.uleb128 0x1
 4062 07ed 9C       		.byte	0x9c
 4063 07ee 2F080000 		.4byte	0x82f
 4064 07f2 14       		.uleb128 0x14
 4065 07f3 51030000 		.4byte	.LASF53
 4066 07f7 01       		.byte	0x1
 4067 07f8 B904     		.2byte	0x4b9
 4068 07fa 83000000 		.4byte	0x83
 4069 07fe 02       		.uleb128 0x2
 4070 07ff 91       		.byte	0x91
 4071 0800 64       		.sleb128 -28
 4072 0801 13       		.uleb128 0x13
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 123


 4073 0802 6B050000 		.4byte	.LASF90
 4074 0806 01       		.byte	0x1
 4075 0807 BB04     		.2byte	0x4bb
 4076 0809 83000000 		.4byte	0x83
 4077 080d 02       		.uleb128 0x2
 4078 080e 91       		.byte	0x91
 4079 080f 74       		.sleb128 -12
 4080 0810 13       		.uleb128 0x13
 4081 0811 14010000 		.4byte	.LASF91
 4082 0815 01       		.byte	0x1
 4083 0816 BC04     		.2byte	0x4bc
 4084 0818 83000000 		.4byte	0x83
 4085 081c 02       		.uleb128 0x2
 4086 081d 91       		.byte	0x91
 4087 081e 6C       		.sleb128 -20
 4088 081f 13       		.uleb128 0x13
 4089 0820 1B0A0000 		.4byte	.LASF92
 4090 0824 01       		.byte	0x1
 4091 0825 BD04     		.2byte	0x4bd
 4092 0827 83000000 		.4byte	0x83
 4093 082b 02       		.uleb128 0x2
 4094 082c 91       		.byte	0x91
 4095 082d 70       		.sleb128 -16
 4096 082e 00       		.byte	0
 4097 082f 17       		.uleb128 0x17
 4098 0830 76040000 		.4byte	.LASF93
 4099 0834 01       		.byte	0x1
 4100 0835 E704     		.2byte	0x4e7
 4101 0837 83000000 		.4byte	0x83
 4102 083b 00000000 		.4byte	.LFB58
 4103 083f 36000000 		.4byte	.LFE58-.LFB58
 4104 0843 01       		.uleb128 0x1
 4105 0844 9C       		.byte	0x9c
 4106 0845 66080000 		.4byte	0x866
 4107 0849 12       		.uleb128 0x12
 4108 084a 6900     		.ascii	"i\000"
 4109 084c 01       		.byte	0x1
 4110 084d EA04     		.2byte	0x4ea
 4111 084f 83000000 		.4byte	0x83
 4112 0853 02       		.uleb128 0x2
 4113 0854 91       		.byte	0x91
 4114 0855 74       		.sleb128 -12
 4115 0856 13       		.uleb128 0x13
 4116 0857 1B0A0000 		.4byte	.LASF92
 4117 085b 01       		.byte	0x1
 4118 085c EB04     		.2byte	0x4eb
 4119 085e 83000000 		.4byte	0x83
 4120 0862 02       		.uleb128 0x2
 4121 0863 91       		.byte	0x91
 4122 0864 70       		.sleb128 -16
 4123 0865 00       		.byte	0
 4124 0866 11       		.uleb128 0x11
 4125 0867 F8040000 		.4byte	.LASF94
 4126 086b 01       		.byte	0x1
 4127 086c 1605     		.2byte	0x516
 4128 086e 00000000 		.4byte	.LFB59
 4129 0872 70000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 124


 4130 0876 01       		.uleb128 0x1
 4131 0877 9C       		.byte	0x9c
 4132 0878 AA080000 		.4byte	0x8aa
 4133 087c 14       		.uleb128 0x14
 4134 087d 51030000 		.4byte	.LASF53
 4135 0881 01       		.byte	0x1
 4136 0882 1605     		.2byte	0x516
 4137 0884 83000000 		.4byte	0x83
 4138 0888 02       		.uleb128 0x2
 4139 0889 91       		.byte	0x91
 4140 088a 6C       		.sleb128 -20
 4141 088b 13       		.uleb128 0x13
 4142 088c 6B050000 		.4byte	.LASF90
 4143 0890 01       		.byte	0x1
 4144 0891 1905     		.2byte	0x519
 4145 0893 6B000000 		.4byte	0x6b
 4146 0897 02       		.uleb128 0x2
 4147 0898 91       		.byte	0x91
 4148 0899 77       		.sleb128 -9
 4149 089a 13       		.uleb128 0x13
 4150 089b 14010000 		.4byte	.LASF91
 4151 089f 01       		.byte	0x1
 4152 08a0 1A05     		.2byte	0x51a
 4153 08a2 6B000000 		.4byte	0x6b
 4154 08a6 02       		.uleb128 0x2
 4155 08a7 91       		.byte	0x91
 4156 08a8 76       		.sleb128 -10
 4157 08a9 00       		.byte	0
 4158 08aa 11       		.uleb128 0x11
 4159 08ab B4000000 		.4byte	.LASF95
 4160 08af 01       		.byte	0x1
 4161 08b0 4105     		.2byte	0x541
 4162 08b2 00000000 		.4byte	.LFB60
 4163 08b6 70000000 		.4byte	.LFE60-.LFB60
 4164 08ba 01       		.uleb128 0x1
 4165 08bb 9C       		.byte	0x9c
 4166 08bc EE080000 		.4byte	0x8ee
 4167 08c0 14       		.uleb128 0x14
 4168 08c1 51030000 		.4byte	.LASF53
 4169 08c5 01       		.byte	0x1
 4170 08c6 4105     		.2byte	0x541
 4171 08c8 83000000 		.4byte	0x83
 4172 08cc 02       		.uleb128 0x2
 4173 08cd 91       		.byte	0x91
 4174 08ce 6C       		.sleb128 -20
 4175 08cf 13       		.uleb128 0x13
 4176 08d0 6B050000 		.4byte	.LASF90
 4177 08d4 01       		.byte	0x1
 4178 08d5 4305     		.2byte	0x543
 4179 08d7 6B000000 		.4byte	0x6b
 4180 08db 02       		.uleb128 0x2
 4181 08dc 91       		.byte	0x91
 4182 08dd 77       		.sleb128 -9
 4183 08de 13       		.uleb128 0x13
 4184 08df 14010000 		.4byte	.LASF91
 4185 08e3 01       		.byte	0x1
 4186 08e4 4405     		.2byte	0x544
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 125


 4187 08e6 6B000000 		.4byte	0x6b
 4188 08ea 02       		.uleb128 0x2
 4189 08eb 91       		.byte	0x91
 4190 08ec 76       		.sleb128 -10
 4191 08ed 00       		.byte	0
 4192 08ee 15       		.uleb128 0x15
 4193 08ef 4B080000 		.4byte	.LASF96
 4194 08f3 01       		.byte	0x1
 4195 08f4 7305     		.2byte	0x573
 4196 08f6 6B000000 		.4byte	0x6b
 4197 08fa 00000000 		.4byte	.LFB61
 4198 08fe B8000000 		.4byte	.LFE61-.LFB61
 4199 0902 01       		.uleb128 0x1
 4200 0903 9C       		.byte	0x9c
 4201 0904 70090000 		.4byte	0x970
 4202 0908 14       		.uleb128 0x14
 4203 0909 1C040000 		.4byte	.LASF97
 4204 090d 01       		.byte	0x1
 4205 090e 7305     		.2byte	0x573
 4206 0910 6B000000 		.4byte	0x6b
 4207 0914 02       		.uleb128 0x2
 4208 0915 91       		.byte	0x91
 4209 0916 67       		.sleb128 -25
 4210 0917 14       		.uleb128 0x14
 4211 0918 CC020000 		.4byte	.LASF98
 4212 091c 01       		.byte	0x1
 4213 091d 7305     		.2byte	0x573
 4214 091f 6B000000 		.4byte	0x6b
 4215 0923 02       		.uleb128 0x2
 4216 0924 91       		.byte	0x91
 4217 0925 66       		.sleb128 -26
 4218 0926 14       		.uleb128 0x14
 4219 0927 4F090000 		.4byte	.LASF87
 4220 092b 01       		.byte	0x1
 4221 092c 7305     		.2byte	0x573
 4222 092e 6B000000 		.4byte	0x6b
 4223 0932 02       		.uleb128 0x2
 4224 0933 91       		.byte	0x91
 4225 0934 65       		.sleb128 -27
 4226 0935 12       		.uleb128 0x12
 4227 0936 6900     		.ascii	"i\000"
 4228 0938 01       		.byte	0x1
 4229 0939 7605     		.2byte	0x576
 4230 093b 6B000000 		.4byte	0x6b
 4231 093f 02       		.uleb128 0x2
 4232 0940 91       		.byte	0x91
 4233 0941 6F       		.sleb128 -17
 4234 0942 13       		.uleb128 0x13
 4235 0943 D7080000 		.4byte	.LASF99
 4236 0947 01       		.byte	0x1
 4237 0948 8005     		.2byte	0x580
 4238 094a 6B000000 		.4byte	0x6b
 4239 094e 02       		.uleb128 0x2
 4240 094f 91       		.byte	0x91
 4241 0950 6E       		.sleb128 -18
 4242 0951 13       		.uleb128 0x13
 4243 0952 46080000 		.4byte	.LASF100
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 126


 4244 0956 01       		.byte	0x1
 4245 0957 8205     		.2byte	0x582
 4246 0959 6B000000 		.4byte	0x6b
 4247 095d 02       		.uleb128 0x2
 4248 095e 91       		.byte	0x91
 4249 095f 6D       		.sleb128 -19
 4250 0960 13       		.uleb128 0x13
 4251 0961 5B070000 		.4byte	.LASF101
 4252 0965 01       		.byte	0x1
 4253 0966 8305     		.2byte	0x583
 4254 0968 E0010000 		.4byte	0x1e0
 4255 096c 02       		.uleb128 0x2
 4256 096d 91       		.byte	0x91
 4257 096e 68       		.sleb128 -24
 4258 096f 00       		.byte	0
 4259 0970 17       		.uleb128 0x17
 4260 0971 CF060000 		.4byte	.LASF102
 4261 0975 01       		.byte	0x1
 4262 0976 1206     		.2byte	0x612
 4263 0978 6B000000 		.4byte	0x6b
 4264 097c 00000000 		.4byte	.LFB62
 4265 0980 A0010000 		.4byte	.LFE62-.LFB62
 4266 0984 01       		.uleb128 0x1
 4267 0985 9C       		.byte	0x9c
 4268 0986 420A0000 		.4byte	0xa42
 4269 098a 14       		.uleb128 0x14
 4270 098b D7080000 		.4byte	.LASF99
 4271 098f 01       		.byte	0x1
 4272 0990 1206     		.2byte	0x612
 4273 0992 6B000000 		.4byte	0x6b
 4274 0996 02       		.uleb128 0x2
 4275 0997 91       		.byte	0x91
 4276 0998 57       		.sleb128 -41
 4277 0999 14       		.uleb128 0x14
 4278 099a 1C040000 		.4byte	.LASF97
 4279 099e 01       		.byte	0x1
 4280 099f 1206     		.2byte	0x612
 4281 09a1 6B000000 		.4byte	0x6b
 4282 09a5 02       		.uleb128 0x2
 4283 09a6 91       		.byte	0x91
 4284 09a7 56       		.sleb128 -42
 4285 09a8 14       		.uleb128 0x14
 4286 09a9 CC020000 		.4byte	.LASF98
 4287 09ad 01       		.byte	0x1
 4288 09ae 1306     		.2byte	0x613
 4289 09b0 6B000000 		.4byte	0x6b
 4290 09b4 02       		.uleb128 0x2
 4291 09b5 91       		.byte	0x91
 4292 09b6 55       		.sleb128 -43
 4293 09b7 14       		.uleb128 0x14
 4294 09b8 60050000 		.4byte	.LASF103
 4295 09bc 01       		.byte	0x1
 4296 09bd 1306     		.2byte	0x613
 4297 09bf 77000000 		.4byte	0x77
 4298 09c3 02       		.uleb128 0x2
 4299 09c4 91       		.byte	0x91
 4300 09c5 52       		.sleb128 -46
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 127


 4301 09c6 14       		.uleb128 0x14
 4302 09c7 03090000 		.4byte	.LASF61
 4303 09cb 01       		.byte	0x1
 4304 09cc 1306     		.2byte	0x613
 4305 09ce 6B000000 		.4byte	0x6b
 4306 09d2 02       		.uleb128 0x2
 4307 09d3 91       		.byte	0x91
 4308 09d4 00       		.sleb128 0
 4309 09d5 13       		.uleb128 0x13
 4310 09d6 F8070000 		.4byte	.LASF104
 4311 09da 01       		.byte	0x1
 4312 09db 1706     		.2byte	0x617
 4313 09dd 6B000000 		.4byte	0x6b
 4314 09e1 02       		.uleb128 0x2
 4315 09e2 91       		.byte	0x91
 4316 09e3 6F       		.sleb128 -17
 4317 09e4 13       		.uleb128 0x13
 4318 09e5 3E010000 		.4byte	.LASF105
 4319 09e9 01       		.byte	0x1
 4320 09ea 1806     		.2byte	0x618
 4321 09ec 6B000000 		.4byte	0x6b
 4322 09f0 02       		.uleb128 0x2
 4323 09f1 91       		.byte	0x91
 4324 09f2 67       		.sleb128 -25
 4325 09f3 13       		.uleb128 0x13
 4326 09f4 74050000 		.4byte	.LASF106
 4327 09f8 01       		.byte	0x1
 4328 09f9 1D06     		.2byte	0x61d
 4329 09fb 420A0000 		.4byte	0xa42
 4330 09ff 05       		.uleb128 0x5
 4331 0a00 03       		.byte	0x3
 4332 0a01 28000000 		.4byte	CapSense_centroid.5425
 4333 0a05 13       		.uleb128 0x13
 4334 0a06 2D0B0000 		.4byte	.LASF107
 4335 0a0a 01       		.byte	0x1
 4336 0a0b 2406     		.2byte	0x624
 4337 0a0d 6B000000 		.4byte	0x6b
 4338 0a11 02       		.uleb128 0x2
 4339 0a12 91       		.byte	0x91
 4340 0a13 5B       		.sleb128 -37
 4341 0a14 13       		.uleb128 0x13
 4342 0a15 D5070000 		.4byte	.LASF108
 4343 0a19 01       		.byte	0x1
 4344 0a1a 2506     		.2byte	0x625
 4345 0a1c 83000000 		.4byte	0x83
 4346 0a20 02       		.uleb128 0x2
 4347 0a21 91       		.byte	0x91
 4348 0a22 60       		.sleb128 -32
 4349 0a23 13       		.uleb128 0x13
 4350 0a24 A9080000 		.4byte	.LASF109
 4351 0a28 01       		.byte	0x1
 4352 0a29 2606     		.2byte	0x626
 4353 0a2b 9B000000 		.4byte	0x9b
 4354 0a2f 02       		.uleb128 0x2
 4355 0a30 91       		.byte	0x91
 4356 0a31 5C       		.sleb128 -36
 4357 0a32 13       		.uleb128 0x13
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 128


 4358 0a33 5B070000 		.4byte	.LASF101
 4359 0a37 01       		.byte	0x1
 4360 0a38 2806     		.2byte	0x628
 4361 0a3a E0010000 		.4byte	0x1e0
 4362 0a3e 02       		.uleb128 0x2
 4363 0a3f 91       		.byte	0x91
 4364 0a40 68       		.sleb128 -24
 4365 0a41 00       		.byte	0
 4366 0a42 18       		.uleb128 0x18
 4367 0a43 6B000000 		.4byte	0x6b
 4368 0a47 520A0000 		.4byte	0xa52
 4369 0a4b 19       		.uleb128 0x19
 4370 0a4c BC000000 		.4byte	0xbc
 4371 0a50 02       		.byte	0x2
 4372 0a51 00       		.byte	0
 4373 0a52 17       		.uleb128 0x17
 4374 0a53 00080000 		.4byte	.LASF110
 4375 0a57 01       		.byte	0x1
 4376 0a58 E506     		.2byte	0x6e5
 4377 0a5a 77000000 		.4byte	0x77
 4378 0a5e 00000000 		.4byte	.LFB63
 4379 0a62 70010000 		.4byte	.LFE63-.LFB63
 4380 0a66 01       		.uleb128 0x1
 4381 0a67 9C       		.byte	0x9c
 4382 0a68 E50A0000 		.4byte	0xae5
 4383 0a6c 14       		.uleb128 0x14
 4384 0a6d 51030000 		.4byte	.LASF53
 4385 0a71 01       		.byte	0x1
 4386 0a72 E506     		.2byte	0x6e5
 4387 0a74 83000000 		.4byte	0x83
 4388 0a78 02       		.uleb128 0x2
 4389 0a79 91       		.byte	0x91
 4390 0a7a 64       		.sleb128 -28
 4391 0a7b 13       		.uleb128 0x13
 4392 0a7c EB000000 		.4byte	.LASF111
 4393 0a80 01       		.byte	0x1
 4394 0a81 EC06     		.2byte	0x6ec
 4395 0a83 6B000000 		.4byte	0x6b
 4396 0a87 02       		.uleb128 0x2
 4397 0a88 91       		.byte	0x91
 4398 0a89 68       		.sleb128 -24
 4399 0a8a 13       		.uleb128 0x13
 4400 0a8b 4C070000 		.4byte	.LASF112
 4401 0a8f 01       		.byte	0x1
 4402 0a90 ED06     		.2byte	0x6ed
 4403 0a92 6B000000 		.4byte	0x6b
 4404 0a96 02       		.uleb128 0x2
 4405 0a97 91       		.byte	0x91
 4406 0a98 6D       		.sleb128 -19
 4407 0a99 13       		.uleb128 0x13
 4408 0a9a E1020000 		.4byte	.LASF113
 4409 0a9e 01       		.byte	0x1
 4410 0a9f EE06     		.2byte	0x6ee
 4411 0aa1 6B000000 		.4byte	0x6b
 4412 0aa5 02       		.uleb128 0x2
 4413 0aa6 91       		.byte	0x91
 4414 0aa7 6C       		.sleb128 -20
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 129


 4415 0aa8 13       		.uleb128 0x13
 4416 0aa9 D7080000 		.4byte	.LASF99
 4417 0aad 01       		.byte	0x1
 4418 0aae F806     		.2byte	0x6f8
 4419 0ab0 6B000000 		.4byte	0x6b
 4420 0ab4 02       		.uleb128 0x2
 4421 0ab5 91       		.byte	0x91
 4422 0ab6 69       		.sleb128 -23
 4423 0ab7 13       		.uleb128 0x13
 4424 0ab8 2D0B0000 		.4byte	.LASF107
 4425 0abc 01       		.byte	0x1
 4426 0abd F906     		.2byte	0x6f9
 4427 0abf 77000000 		.4byte	0x77
 4428 0ac3 02       		.uleb128 0x2
 4429 0ac4 91       		.byte	0x91
 4430 0ac5 6E       		.sleb128 -18
 4431 0ac6 13       		.uleb128 0x13
 4432 0ac7 1C040000 		.4byte	.LASF97
 4433 0acb 01       		.byte	0x1
 4434 0acc FA06     		.2byte	0x6fa
 4435 0ace 6B000000 		.4byte	0x6b
 4436 0ad2 02       		.uleb128 0x2
 4437 0ad3 91       		.byte	0x91
 4438 0ad4 6B       		.sleb128 -21
 4439 0ad5 13       		.uleb128 0x13
 4440 0ad6 CC020000 		.4byte	.LASF98
 4441 0ada 01       		.byte	0x1
 4442 0adb FB06     		.2byte	0x6fb
 4443 0add 6B000000 		.4byte	0x6b
 4444 0ae1 02       		.uleb128 0x2
 4445 0ae2 91       		.byte	0x91
 4446 0ae3 6A       		.sleb128 -22
 4447 0ae4 00       		.byte	0
 4448 0ae5 17       		.uleb128 0x17
 4449 0ae6 640A0000 		.4byte	.LASF114
 4450 0aea 01       		.byte	0x1
 4451 0aeb B007     		.2byte	0x7b0
 4452 0aed 77000000 		.4byte	0x77
 4453 0af1 00000000 		.4byte	.LFB64
 4454 0af5 AC000000 		.4byte	.LFE64-.LFB64
 4455 0af9 01       		.uleb128 0x1
 4456 0afa 9C       		.byte	0x9c
 4457 0afb 4B0B0000 		.4byte	0xb4b
 4458 0aff 14       		.uleb128 0x14
 4459 0b00 51030000 		.4byte	.LASF53
 4460 0b04 01       		.byte	0x1
 4461 0b05 B007     		.2byte	0x7b0
 4462 0b07 83000000 		.4byte	0x83
 4463 0b0b 02       		.uleb128 0x2
 4464 0b0c 91       		.byte	0x91
 4465 0b0d 64       		.sleb128 -28
 4466 0b0e 13       		.uleb128 0x13
 4467 0b0f D7080000 		.4byte	.LASF99
 4468 0b13 01       		.byte	0x1
 4469 0b14 BF07     		.2byte	0x7bf
 4470 0b16 6B000000 		.4byte	0x6b
 4471 0b1a 02       		.uleb128 0x2
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 130


 4472 0b1b 91       		.byte	0x91
 4473 0b1c 6B       		.sleb128 -21
 4474 0b1d 13       		.uleb128 0x13
 4475 0b1e 2D0B0000 		.4byte	.LASF107
 4476 0b22 01       		.byte	0x1
 4477 0b23 C007     		.2byte	0x7c0
 4478 0b25 77000000 		.4byte	0x77
 4479 0b29 02       		.uleb128 0x2
 4480 0b2a 91       		.byte	0x91
 4481 0b2b 6E       		.sleb128 -18
 4482 0b2c 13       		.uleb128 0x13
 4483 0b2d 1C040000 		.4byte	.LASF97
 4484 0b31 01       		.byte	0x1
 4485 0b32 C107     		.2byte	0x7c1
 4486 0b34 6B000000 		.4byte	0x6b
 4487 0b38 02       		.uleb128 0x2
 4488 0b39 91       		.byte	0x91
 4489 0b3a 6D       		.sleb128 -19
 4490 0b3b 13       		.uleb128 0x13
 4491 0b3c CC020000 		.4byte	.LASF98
 4492 0b40 01       		.byte	0x1
 4493 0b41 C207     		.2byte	0x7c2
 4494 0b43 6B000000 		.4byte	0x6b
 4495 0b47 02       		.uleb128 0x2
 4496 0b48 91       		.byte	0x91
 4497 0b49 6C       		.sleb128 -20
 4498 0b4a 00       		.byte	0
 4499 0b4b 15       		.uleb128 0x15
 4500 0b4c 910A0000 		.4byte	.LASF115
 4501 0b50 01       		.byte	0x1
 4502 0b51 5D09     		.2byte	0x95d
 4503 0b53 77000000 		.4byte	0x77
 4504 0b57 00000000 		.4byte	.LFB65
 4505 0b5b 76000000 		.4byte	.LFE65-.LFB65
 4506 0b5f 01       		.uleb128 0x1
 4507 0b60 9C       		.byte	0x9c
 4508 0b61 9F0B0000 		.4byte	0xb9f
 4509 0b65 1A       		.uleb128 0x1a
 4510 0b66 783100   		.ascii	"x1\000"
 4511 0b69 01       		.byte	0x1
 4512 0b6a 5D09     		.2byte	0x95d
 4513 0b6c 77000000 		.4byte	0x77
 4514 0b70 02       		.uleb128 0x2
 4515 0b71 91       		.byte	0x91
 4516 0b72 66       		.sleb128 -26
 4517 0b73 1A       		.uleb128 0x1a
 4518 0b74 783200   		.ascii	"x2\000"
 4519 0b77 01       		.byte	0x1
 4520 0b78 5D09     		.2byte	0x95d
 4521 0b7a 77000000 		.4byte	0x77
 4522 0b7e 02       		.uleb128 0x2
 4523 0b7f 91       		.byte	0x91
 4524 0b80 64       		.sleb128 -28
 4525 0b81 1A       		.uleb128 0x1a
 4526 0b82 783300   		.ascii	"x3\000"
 4527 0b85 01       		.byte	0x1
 4528 0b86 5D09     		.2byte	0x95d
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 131


 4529 0b88 77000000 		.4byte	0x77
 4530 0b8c 02       		.uleb128 0x2
 4531 0b8d 91       		.byte	0x91
 4532 0b8e 62       		.sleb128 -30
 4533 0b8f 12       		.uleb128 0x12
 4534 0b90 746D7000 		.ascii	"tmp\000"
 4535 0b94 01       		.byte	0x1
 4536 0b95 5F09     		.2byte	0x95f
 4537 0b97 77000000 		.4byte	0x77
 4538 0b9b 02       		.uleb128 0x2
 4539 0b9c 91       		.byte	0x91
 4540 0b9d 6E       		.sleb128 -18
 4541 0b9e 00       		.byte	0
 4542 0b9f 15       		.uleb128 0x15
 4543 0ba0 1B000000 		.4byte	.LASF116
 4544 0ba4 01       		.byte	0x1
 4545 0ba5 D509     		.2byte	0x9d5
 4546 0ba7 77000000 		.4byte	0x77
 4547 0bab 00000000 		.4byte	.LFB66
 4548 0baf 3C000000 		.4byte	.LFE66-.LFB66
 4549 0bb3 01       		.uleb128 0x1
 4550 0bb4 9C       		.byte	0x9c
 4551 0bb5 E50B0000 		.4byte	0xbe5
 4552 0bb9 1A       		.uleb128 0x1a
 4553 0bba 783100   		.ascii	"x1\000"
 4554 0bbd 01       		.byte	0x1
 4555 0bbe D509     		.2byte	0x9d5
 4556 0bc0 77000000 		.4byte	0x77
 4557 0bc4 02       		.uleb128 0x2
 4558 0bc5 91       		.byte	0x91
 4559 0bc6 6E       		.sleb128 -18
 4560 0bc7 1A       		.uleb128 0x1a
 4561 0bc8 783200   		.ascii	"x2\000"
 4562 0bcb 01       		.byte	0x1
 4563 0bcc D509     		.2byte	0x9d5
 4564 0bce 77000000 		.4byte	0x77
 4565 0bd2 02       		.uleb128 0x2
 4566 0bd3 91       		.byte	0x91
 4567 0bd4 6C       		.sleb128 -20
 4568 0bd5 12       		.uleb128 0x12
 4569 0bd6 746D7000 		.ascii	"tmp\000"
 4570 0bda 01       		.byte	0x1
 4571 0bdb D709     		.2byte	0x9d7
 4572 0bdd 83000000 		.4byte	0x83
 4573 0be1 02       		.uleb128 0x2
 4574 0be2 91       		.byte	0x91
 4575 0be3 74       		.sleb128 -12
 4576 0be4 00       		.byte	0
 4577 0be5 15       		.uleb128 0x15
 4578 0be6 24090000 		.4byte	.LASF117
 4579 0bea 01       		.byte	0x1
 4580 0beb FD09     		.2byte	0x9fd
 4581 0bed 77000000 		.4byte	0x77
 4582 0bf1 00000000 		.4byte	.LFB67
 4583 0bf5 4C000000 		.4byte	.LFE67-.LFB67
 4584 0bf9 01       		.uleb128 0x1
 4585 0bfa 9C       		.byte	0x9c
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 132


 4586 0bfb 1C0C0000 		.4byte	0xc1c
 4587 0bff 1A       		.uleb128 0x1a
 4588 0c00 783100   		.ascii	"x1\000"
 4589 0c03 01       		.byte	0x1
 4590 0c04 FD09     		.2byte	0x9fd
 4591 0c06 77000000 		.4byte	0x77
 4592 0c0a 02       		.uleb128 0x2
 4593 0c0b 91       		.byte	0x91
 4594 0c0c 76       		.sleb128 -10
 4595 0c0d 1A       		.uleb128 0x1a
 4596 0c0e 783200   		.ascii	"x2\000"
 4597 0c11 01       		.byte	0x1
 4598 0c12 FD09     		.2byte	0x9fd
 4599 0c14 77000000 		.4byte	0x77
 4600 0c18 02       		.uleb128 0x2
 4601 0c19 91       		.byte	0x91
 4602 0c1a 74       		.sleb128 -12
 4603 0c1b 00       		.byte	0
 4604 0c1c 15       		.uleb128 0x15
 4605 0c1d BD050000 		.4byte	.LASF118
 4606 0c21 01       		.byte	0x1
 4607 0c22 BE0A     		.2byte	0xabe
 4608 0c24 83000000 		.4byte	0x83
 4609 0c28 00000000 		.4byte	.LFB68
 4610 0c2c 1C000000 		.4byte	.LFE68-.LFB68
 4611 0c30 01       		.uleb128 0x1
 4612 0c31 9C       		.byte	0x9c
 4613 0c32 460C0000 		.4byte	0xc46
 4614 0c36 14       		.uleb128 0x14
 4615 0c37 E1040000 		.4byte	.LASF51
 4616 0c3b 01       		.byte	0x1
 4617 0c3c BE0A     		.2byte	0xabe
 4618 0c3e 83000000 		.4byte	0x83
 4619 0c42 02       		.uleb128 0x2
 4620 0c43 91       		.byte	0x91
 4621 0c44 74       		.sleb128 -12
 4622 0c45 00       		.byte	0
 4623 0c46 15       		.uleb128 0x15
 4624 0c47 05070000 		.4byte	.LASF119
 4625 0c4b 01       		.byte	0x1
 4626 0c4c D80A     		.2byte	0xad8
 4627 0c4e 6B000000 		.4byte	0x6b
 4628 0c52 00000000 		.4byte	.LFB69
 4629 0c56 1C000000 		.4byte	.LFE69-.LFB69
 4630 0c5a 01       		.uleb128 0x1
 4631 0c5b 9C       		.byte	0x9c
 4632 0c5c 700C0000 		.4byte	0xc70
 4633 0c60 14       		.uleb128 0x14
 4634 0c61 E1040000 		.4byte	.LASF51
 4635 0c65 01       		.byte	0x1
 4636 0c66 D80A     		.2byte	0xad8
 4637 0c68 83000000 		.4byte	0x83
 4638 0c6c 02       		.uleb128 0x2
 4639 0c6d 91       		.byte	0x91
 4640 0c6e 74       		.sleb128 -12
 4641 0c6f 00       		.byte	0
 4642 0c70 15       		.uleb128 0x15
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 133


 4643 0c71 AF0A0000 		.4byte	.LASF120
 4644 0c75 01       		.byte	0x1
 4645 0c76 F20A     		.2byte	0xaf2
 4646 0c78 6B000000 		.4byte	0x6b
 4647 0c7c 00000000 		.4byte	.LFB70
 4648 0c80 1C000000 		.4byte	.LFE70-.LFB70
 4649 0c84 01       		.uleb128 0x1
 4650 0c85 9C       		.byte	0x9c
 4651 0c86 9A0C0000 		.4byte	0xc9a
 4652 0c8a 14       		.uleb128 0x14
 4653 0c8b 51030000 		.4byte	.LASF53
 4654 0c8f 01       		.byte	0x1
 4655 0c90 F20A     		.2byte	0xaf2
 4656 0c92 83000000 		.4byte	0x83
 4657 0c96 02       		.uleb128 0x2
 4658 0c97 91       		.byte	0x91
 4659 0c98 74       		.sleb128 -12
 4660 0c99 00       		.byte	0
 4661 0c9a 1B       		.uleb128 0x1b
 4662 0c9b 71080000 		.4byte	.LASF121
 4663 0c9f 01       		.byte	0x1
 4664 0ca0 0C0B     		.2byte	0xb0c
 4665 0ca2 00000000 		.4byte	.LFB71
 4666 0ca6 14000000 		.4byte	.LFE71-.LFB71
 4667 0caa 01       		.uleb128 0x1
 4668 0cab 9C       		.byte	0x9c
 4669 0cac 1B       		.uleb128 0x1b
 4670 0cad BB030000 		.4byte	.LASF122
 4671 0cb1 01       		.byte	0x1
 4672 0cb2 250B     		.2byte	0xb25
 4673 0cb4 00000000 		.4byte	.LFB72
 4674 0cb8 14000000 		.4byte	.LFE72-.LFB72
 4675 0cbc 01       		.uleb128 0x1
 4676 0cbd 9C       		.byte	0x9c
 4677 0cbe 18       		.uleb128 0x18
 4678 0cbf 6B000000 		.4byte	0x6b
 4679 0cc3 CE0C0000 		.4byte	0xcce
 4680 0cc7 19       		.uleb128 0x19
 4681 0cc8 BC000000 		.4byte	0xbc
 4682 0ccc 03       		.byte	0x3
 4683 0ccd 00       		.byte	0
 4684 0cce 0F       		.uleb128 0xf
 4685 0ccf 2F000000 		.4byte	.LASF123
 4686 0cd3 01       		.byte	0x1
 4687 0cd4 55       		.byte	0x55
 4688 0cd5 BE0C0000 		.4byte	0xcbe
 4689 0cd9 05       		.uleb128 0x5
 4690 0cda 03       		.byte	0x3
 4691 0cdb 24000000 		.4byte	CapSense_debounceCounter
 4692 0cdf 18       		.uleb128 0x18
 4693 0ce0 77000000 		.4byte	0x77
 4694 0ce4 EF0C0000 		.4byte	0xcef
 4695 0ce8 19       		.uleb128 0x19
 4696 0ce9 BC000000 		.4byte	0xbc
 4697 0ced 00       		.byte	0
 4698 0cee 00       		.byte	0
 4699 0cef 0F       		.uleb128 0xf
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 134


 4700 0cf0 050A0000 		.4byte	.LASF124
 4701 0cf4 01       		.byte	0x1
 4702 0cf5 67       		.byte	0x67
 4703 0cf6 000D0000 		.4byte	0xd00
 4704 0cfa 05       		.uleb128 0x5
 4705 0cfb 03       		.byte	0x3
 4706 0cfc 08000000 		.4byte	CapSense_centroidMult
 4707 0d00 08       		.uleb128 0x8
 4708 0d01 DF0C0000 		.4byte	0xcdf
 4709 0d05 18       		.uleb128 0x18
 4710 0d06 6B000000 		.4byte	0x6b
 4711 0d0a 150D0000 		.4byte	0xd15
 4712 0d0e 19       		.uleb128 0x19
 4713 0d0f BC000000 		.4byte	0xbc
 4714 0d13 00       		.byte	0
 4715 0d14 00       		.byte	0
 4716 0d15 0F       		.uleb128 0xf
 4717 0d16 58030000 		.4byte	.LASF125
 4718 0d1a 01       		.byte	0x1
 4719 0d1b 6B       		.byte	0x6b
 4720 0d1c 050D0000 		.4byte	0xd05
 4721 0d20 05       		.uleb128 0x5
 4722 0d21 03       		.byte	0x3
 4723 0d22 10000000 		.4byte	CapSense_posFiltersMask
 4724 0d26 0F       		.uleb128 0xf
 4725 0d27 7D010000 		.4byte	.LASF126
 4726 0d2b 01       		.byte	0x1
 4727 0d2c 6F       		.byte	0x6f
 4728 0d2d 420A0000 		.4byte	0xa42
 4729 0d31 05       		.uleb128 0x5
 4730 0d32 03       		.byte	0x3
 4731 0d33 14000000 		.4byte	CapSense_posFiltersData
 4732 0d37 18       		.uleb128 0x18
 4733 0d38 77000000 		.4byte	0x77
 4734 0d3c 470D0000 		.4byte	0xd47
 4735 0d40 19       		.uleb128 0x19
 4736 0d41 BC000000 		.4byte	0xbc
 4737 0d45 07       		.byte	0x7
 4738 0d46 00       		.byte	0
 4739 0d47 1C       		.uleb128 0x1c
 4740 0d48 F2060000 		.4byte	.LASF127
 4741 0d4c 01       		.byte	0x1
 4742 0d4d 2C       		.byte	0x2c
 4743 0d4e 370D0000 		.4byte	0xd37
 4744 0d52 1C       		.uleb128 0x1c
 4745 0d53 37030000 		.4byte	.LASF128
 4746 0d57 01       		.byte	0x1
 4747 0d58 2D       		.byte	0x2d
 4748 0d59 050D0000 		.4byte	0xd05
 4749 0d5d 18       		.uleb128 0x18
 4750 0d5e 6B000000 		.4byte	0x6b
 4751 0d62 6D0D0000 		.4byte	0xd6d
 4752 0d66 19       		.uleb128 0x19
 4753 0d67 BC000000 		.4byte	0xbc
 4754 0d6b 07       		.byte	0x7
 4755 0d6c 00       		.byte	0
 4756 0d6d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 135


 4757 0d6e 89030000 		.4byte	.LASF129
 4758 0d72 01       		.byte	0x1
 4759 0d73 2E       		.byte	0x2e
 4760 0d74 780D0000 		.4byte	0xd78
 4761 0d78 08       		.uleb128 0x8
 4762 0d79 5D0D0000 		.4byte	0xd5d
 4763 0d7d 1D       		.uleb128 0x1d
 4764 0d7e BF080000 		.4byte	.LASF130
 4765 0d82 01       		.byte	0x1
 4766 0d83 34       		.byte	0x34
 4767 0d84 370D0000 		.4byte	0xd37
 4768 0d88 05       		.uleb128 0x5
 4769 0d89 03       		.byte	0x3
 4770 0d8a 00000000 		.4byte	CapSense_sensorBaseline
 4771 0d8e 1D       		.uleb128 0x1d
 4772 0d8f 00000000 		.4byte	.LASF131
 4773 0d93 01       		.byte	0x1
 4774 0d94 35       		.byte	0x35
 4775 0d95 5D0D0000 		.4byte	0xd5d
 4776 0d99 05       		.uleb128 0x5
 4777 0d9a 03       		.byte	0x3
 4778 0d9b 00000000 		.4byte	CapSense_sensorBaselineLow
 4779 0d9f 1D       		.uleb128 0x1d
 4780 0da0 47020000 		.4byte	.LASF132
 4781 0da4 01       		.byte	0x1
 4782 0da5 36       		.byte	0x36
 4783 0da6 5D0D0000 		.4byte	0xd5d
 4784 0daa 05       		.uleb128 0x5
 4785 0dab 03       		.byte	0x3
 4786 0dac 00000000 		.4byte	CapSense_sensorSignal
 4787 0db0 1D       		.uleb128 0x1d
 4788 0db1 360B0000 		.4byte	.LASF133
 4789 0db5 01       		.byte	0x1
 4790 0db6 37       		.byte	0x37
 4791 0db7 050D0000 		.4byte	0xd05
 4792 0dbb 05       		.uleb128 0x5
 4793 0dbc 03       		.byte	0x3
 4794 0dbd 00000000 		.4byte	CapSense_sensorOnMask
 4795 0dc1 1D       		.uleb128 0x1d
 4796 0dc2 55000000 		.4byte	.LASF134
 4797 0dc6 01       		.byte	0x1
 4798 0dc7 39       		.byte	0x39
 4799 0dc8 5D0D0000 		.4byte	0xd5d
 4800 0dcc 05       		.uleb128 0x5
 4801 0dcd 03       		.byte	0x3
 4802 0dce 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4803 0dd2 1D       		.uleb128 0x1d
 4804 0dd3 8F080000 		.4byte	.LASF135
 4805 0dd7 01       		.byte	0x1
 4806 0dd8 3A       		.byte	0x3a
 4807 0dd9 5D0D0000 		.4byte	0xd5d
 4808 0ddd 05       		.uleb128 0x5
 4809 0dde 03       		.byte	0x3
 4810 0ddf 00000000 		.4byte	CapSense_lowBaselineReset
 4811 0de3 1D       		.uleb128 0x1d
 4812 0de4 70030000 		.4byte	.LASF136
 4813 0de8 01       		.byte	0x1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 136


 4814 0de9 49       		.byte	0x49
 4815 0dea BE0C0000 		.4byte	0xcbe
 4816 0dee 05       		.uleb128 0x5
 4817 0def 03       		.byte	0x3
 4818 0df0 00000000 		.4byte	CapSense_fingerThreshold
 4819 0df4 1D       		.uleb128 0x1d
 4820 0df5 7A090000 		.4byte	.LASF137
 4821 0df9 01       		.byte	0x1
 4822 0dfa 4B       		.byte	0x4b
 4823 0dfb BE0C0000 		.4byte	0xcbe
 4824 0dff 05       		.uleb128 0x5
 4825 0e00 03       		.byte	0x3
 4826 0e01 00000000 		.4byte	CapSense_noiseThreshold
 4827 0e05 1D       		.uleb128 0x1d
 4828 0e06 AF040000 		.4byte	.LASF138
 4829 0e0a 01       		.byte	0x1
 4830 0e0b 4D       		.byte	0x4d
 4831 0e0c BE0C0000 		.4byte	0xcbe
 4832 0e10 05       		.uleb128 0x5
 4833 0e11 03       		.byte	0x3
 4834 0e12 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4835 0e16 1D       		.uleb128 0x1d
 4836 0e17 AC020000 		.4byte	.LASF139
 4837 0e1b 01       		.byte	0x1
 4838 0e1c 4F       		.byte	0x4f
 4839 0e1d BE0C0000 		.4byte	0xcbe
 4840 0e21 05       		.uleb128 0x5
 4841 0e22 03       		.byte	0x3
 4842 0e23 00000000 		.4byte	CapSense_hysteresis
 4843 0e27 1D       		.uleb128 0x1d
 4844 0e28 A5010000 		.4byte	.LASF140
 4845 0e2c 01       		.byte	0x1
 4846 0e2d 51       		.byte	0x51
 4847 0e2e BE0C0000 		.4byte	0xcbe
 4848 0e32 05       		.uleb128 0x5
 4849 0e33 03       		.byte	0x3
 4850 0e34 00000000 		.4byte	CapSense_debounce
 4851 0e38 1D       		.uleb128 0x1d
 4852 0e39 5D020000 		.4byte	.LASF141
 4853 0e3d 01       		.byte	0x1
 4854 0e3e 59       		.byte	0x59
 4855 0e3f 490E0000 		.4byte	0xe49
 4856 0e43 05       		.uleb128 0x5
 4857 0e44 03       		.byte	0x3
 4858 0e45 00000000 		.4byte	CapSense_rawDataIndex
 4859 0e49 08       		.uleb128 0x8
 4860 0e4a BE0C0000 		.4byte	0xcbe
 4861 0e4e 1D       		.uleb128 0x1d
 4862 0e4f 96040000 		.4byte	.LASF142
 4863 0e53 01       		.byte	0x1
 4864 0e54 60       		.byte	0x60
 4865 0e55 5F0E0000 		.4byte	0xe5f
 4866 0e59 05       		.uleb128 0x5
 4867 0e5a 03       		.byte	0x3
 4868 0e5b 00000000 		.4byte	CapSense_numberOfSensors
 4869 0e5f 08       		.uleb128 0x8
 4870 0e60 BE0C0000 		.4byte	0xcbe
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 137


 4871 0e64 1D       		.uleb128 0x1d
 4872 0e65 150B0000 		.4byte	.LASF143
 4873 0e69 01       		.byte	0x1
 4874 0e6a 27       		.byte	0x27
 4875 0e6b 370D0000 		.4byte	0xd37
 4876 0e6f 05       		.uleb128 0x5
 4877 0e70 03       		.byte	0x3
 4878 0e71 00000000 		.4byte	CapSense_rawFilterData1
 4879 0e75 1C       		.uleb128 0x1c
 4880 0e76 F4000000 		.4byte	.LASF144
 4881 0e7a 01       		.byte	0x1
 4882 0e7b 41       		.byte	0x41
 4883 0e7c BF020000 		.4byte	0x2bf
 4884 0e80 1D       		.uleb128 0x1d
 4885 0e81 210A0000 		.4byte	.LASF145
 4886 0e85 01       		.byte	0x1
 4887 0e86 45       		.byte	0x45
 4888 0e87 6B000000 		.4byte	0x6b
 4889 0e8b 05       		.uleb128 0x5
 4890 0e8c 03       		.byte	0x3
 4891 0e8d 00000000 		.4byte	CapSense_enableRawFilters
 4892 0e91 00       		.byte	0
 4893              		.section	.debug_abbrev,"",%progbits
 4894              	.Ldebug_abbrev0:
 4895 0000 01       		.uleb128 0x1
 4896 0001 11       		.uleb128 0x11
 4897 0002 01       		.byte	0x1
 4898 0003 25       		.uleb128 0x25
 4899 0004 0E       		.uleb128 0xe
 4900 0005 13       		.uleb128 0x13
 4901 0006 0B       		.uleb128 0xb
 4902 0007 03       		.uleb128 0x3
 4903 0008 0E       		.uleb128 0xe
 4904 0009 1B       		.uleb128 0x1b
 4905 000a 0E       		.uleb128 0xe
 4906 000b 55       		.uleb128 0x55
 4907 000c 17       		.uleb128 0x17
 4908 000d 11       		.uleb128 0x11
 4909 000e 01       		.uleb128 0x1
 4910 000f 10       		.uleb128 0x10
 4911 0010 17       		.uleb128 0x17
 4912 0011 00       		.byte	0
 4913 0012 00       		.byte	0
 4914 0013 02       		.uleb128 0x2
 4915 0014 24       		.uleb128 0x24
 4916 0015 00       		.byte	0
 4917 0016 0B       		.uleb128 0xb
 4918 0017 0B       		.uleb128 0xb
 4919 0018 3E       		.uleb128 0x3e
 4920 0019 0B       		.uleb128 0xb
 4921 001a 03       		.uleb128 0x3
 4922 001b 0E       		.uleb128 0xe
 4923 001c 00       		.byte	0
 4924 001d 00       		.byte	0
 4925 001e 03       		.uleb128 0x3
 4926 001f 24       		.uleb128 0x24
 4927 0020 00       		.byte	0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 138


 4928 0021 0B       		.uleb128 0xb
 4929 0022 0B       		.uleb128 0xb
 4930 0023 3E       		.uleb128 0x3e
 4931 0024 0B       		.uleb128 0xb
 4932 0025 03       		.uleb128 0x3
 4933 0026 08       		.uleb128 0x8
 4934 0027 00       		.byte	0
 4935 0028 00       		.byte	0
 4936 0029 04       		.uleb128 0x4
 4937 002a 16       		.uleb128 0x16
 4938 002b 00       		.byte	0
 4939 002c 03       		.uleb128 0x3
 4940 002d 0E       		.uleb128 0xe
 4941 002e 3A       		.uleb128 0x3a
 4942 002f 0B       		.uleb128 0xb
 4943 0030 3B       		.uleb128 0x3b
 4944 0031 05       		.uleb128 0x5
 4945 0032 49       		.uleb128 0x49
 4946 0033 13       		.uleb128 0x13
 4947 0034 00       		.byte	0
 4948 0035 00       		.byte	0
 4949 0036 05       		.uleb128 0x5
 4950 0037 13       		.uleb128 0x13
 4951 0038 01       		.byte	0x1
 4952 0039 0B       		.uleb128 0xb
 4953 003a 0B       		.uleb128 0xb
 4954 003b 3A       		.uleb128 0x3a
 4955 003c 0B       		.uleb128 0xb
 4956 003d 3B       		.uleb128 0x3b
 4957 003e 0B       		.uleb128 0xb
 4958 003f 01       		.uleb128 0x1
 4959 0040 13       		.uleb128 0x13
 4960 0041 00       		.byte	0
 4961 0042 00       		.byte	0
 4962 0043 06       		.uleb128 0x6
 4963 0044 0D       		.uleb128 0xd
 4964 0045 00       		.byte	0
 4965 0046 03       		.uleb128 0x3
 4966 0047 0E       		.uleb128 0xe
 4967 0048 3A       		.uleb128 0x3a
 4968 0049 0B       		.uleb128 0xb
 4969 004a 3B       		.uleb128 0x3b
 4970 004b 0B       		.uleb128 0xb
 4971 004c 49       		.uleb128 0x49
 4972 004d 13       		.uleb128 0x13
 4973 004e 38       		.uleb128 0x38
 4974 004f 0B       		.uleb128 0xb
 4975 0050 00       		.byte	0
 4976 0051 00       		.byte	0
 4977 0052 07       		.uleb128 0x7
 4978 0053 0F       		.uleb128 0xf
 4979 0054 00       		.byte	0
 4980 0055 0B       		.uleb128 0xb
 4981 0056 0B       		.uleb128 0xb
 4982 0057 49       		.uleb128 0x49
 4983 0058 13       		.uleb128 0x13
 4984 0059 00       		.byte	0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 139


 4985 005a 00       		.byte	0
 4986 005b 08       		.uleb128 0x8
 4987 005c 26       		.uleb128 0x26
 4988 005d 00       		.byte	0
 4989 005e 49       		.uleb128 0x49
 4990 005f 13       		.uleb128 0x13
 4991 0060 00       		.byte	0
 4992 0061 00       		.byte	0
 4993 0062 09       		.uleb128 0x9
 4994 0063 15       		.uleb128 0x15
 4995 0064 01       		.byte	0x1
 4996 0065 27       		.uleb128 0x27
 4997 0066 19       		.uleb128 0x19
 4998 0067 49       		.uleb128 0x49
 4999 0068 13       		.uleb128 0x13
 5000 0069 01       		.uleb128 0x1
 5001 006a 13       		.uleb128 0x13
 5002 006b 00       		.byte	0
 5003 006c 00       		.byte	0
 5004 006d 0A       		.uleb128 0xa
 5005 006e 05       		.uleb128 0x5
 5006 006f 00       		.byte	0
 5007 0070 49       		.uleb128 0x49
 5008 0071 13       		.uleb128 0x13
 5009 0072 00       		.byte	0
 5010 0073 00       		.byte	0
 5011 0074 0B       		.uleb128 0xb
 5012 0075 15       		.uleb128 0x15
 5013 0076 01       		.byte	0x1
 5014 0077 27       		.uleb128 0x27
 5015 0078 19       		.uleb128 0x19
 5016 0079 01       		.uleb128 0x1
 5017 007a 13       		.uleb128 0x13
 5018 007b 00       		.byte	0
 5019 007c 00       		.byte	0
 5020 007d 0C       		.uleb128 0xc
 5021 007e 16       		.uleb128 0x16
 5022 007f 00       		.byte	0
 5023 0080 03       		.uleb128 0x3
 5024 0081 0E       		.uleb128 0xe
 5025 0082 3A       		.uleb128 0x3a
 5026 0083 0B       		.uleb128 0xb
 5027 0084 3B       		.uleb128 0x3b
 5028 0085 0B       		.uleb128 0xb
 5029 0086 49       		.uleb128 0x49
 5030 0087 13       		.uleb128 0x13
 5031 0088 00       		.byte	0
 5032 0089 00       		.byte	0
 5033 008a 0D       		.uleb128 0xd
 5034 008b 2E       		.uleb128 0x2e
 5035 008c 01       		.byte	0x1
 5036 008d 3F       		.uleb128 0x3f
 5037 008e 19       		.uleb128 0x19
 5038 008f 03       		.uleb128 0x3
 5039 0090 0E       		.uleb128 0xe
 5040 0091 3A       		.uleb128 0x3a
 5041 0092 0B       		.uleb128 0xb
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 140


 5042 0093 3B       		.uleb128 0x3b
 5043 0094 0B       		.uleb128 0xb
 5044 0095 27       		.uleb128 0x27
 5045 0096 19       		.uleb128 0x19
 5046 0097 11       		.uleb128 0x11
 5047 0098 01       		.uleb128 0x1
 5048 0099 12       		.uleb128 0x12
 5049 009a 06       		.uleb128 0x6
 5050 009b 40       		.uleb128 0x40
 5051 009c 18       		.uleb128 0x18
 5052 009d 9742     		.uleb128 0x2117
 5053 009f 19       		.uleb128 0x19
 5054 00a0 01       		.uleb128 0x1
 5055 00a1 13       		.uleb128 0x13
 5056 00a2 00       		.byte	0
 5057 00a3 00       		.byte	0
 5058 00a4 0E       		.uleb128 0xe
 5059 00a5 05       		.uleb128 0x5
 5060 00a6 00       		.byte	0
 5061 00a7 03       		.uleb128 0x3
 5062 00a8 0E       		.uleb128 0xe
 5063 00a9 3A       		.uleb128 0x3a
 5064 00aa 0B       		.uleb128 0xb
 5065 00ab 3B       		.uleb128 0x3b
 5066 00ac 0B       		.uleb128 0xb
 5067 00ad 49       		.uleb128 0x49
 5068 00ae 13       		.uleb128 0x13
 5069 00af 02       		.uleb128 0x2
 5070 00b0 18       		.uleb128 0x18
 5071 00b1 00       		.byte	0
 5072 00b2 00       		.byte	0
 5073 00b3 0F       		.uleb128 0xf
 5074 00b4 34       		.uleb128 0x34
 5075 00b5 00       		.byte	0
 5076 00b6 03       		.uleb128 0x3
 5077 00b7 0E       		.uleb128 0xe
 5078 00b8 3A       		.uleb128 0x3a
 5079 00b9 0B       		.uleb128 0xb
 5080 00ba 3B       		.uleb128 0x3b
 5081 00bb 0B       		.uleb128 0xb
 5082 00bc 49       		.uleb128 0x49
 5083 00bd 13       		.uleb128 0x13
 5084 00be 02       		.uleb128 0x2
 5085 00bf 18       		.uleb128 0x18
 5086 00c0 00       		.byte	0
 5087 00c1 00       		.byte	0
 5088 00c2 10       		.uleb128 0x10
 5089 00c3 2E       		.uleb128 0x2e
 5090 00c4 01       		.byte	0x1
 5091 00c5 3F       		.uleb128 0x3f
 5092 00c6 19       		.uleb128 0x19
 5093 00c7 03       		.uleb128 0x3
 5094 00c8 0E       		.uleb128 0xe
 5095 00c9 3A       		.uleb128 0x3a
 5096 00ca 0B       		.uleb128 0xb
 5097 00cb 3B       		.uleb128 0x3b
 5098 00cc 0B       		.uleb128 0xb
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 141


 5099 00cd 27       		.uleb128 0x27
 5100 00ce 19       		.uleb128 0x19
 5101 00cf 11       		.uleb128 0x11
 5102 00d0 01       		.uleb128 0x1
 5103 00d1 12       		.uleb128 0x12
 5104 00d2 06       		.uleb128 0x6
 5105 00d3 40       		.uleb128 0x40
 5106 00d4 18       		.uleb128 0x18
 5107 00d5 9642     		.uleb128 0x2116
 5108 00d7 19       		.uleb128 0x19
 5109 00d8 01       		.uleb128 0x1
 5110 00d9 13       		.uleb128 0x13
 5111 00da 00       		.byte	0
 5112 00db 00       		.byte	0
 5113 00dc 11       		.uleb128 0x11
 5114 00dd 2E       		.uleb128 0x2e
 5115 00de 01       		.byte	0x1
 5116 00df 3F       		.uleb128 0x3f
 5117 00e0 19       		.uleb128 0x19
 5118 00e1 03       		.uleb128 0x3
 5119 00e2 0E       		.uleb128 0xe
 5120 00e3 3A       		.uleb128 0x3a
 5121 00e4 0B       		.uleb128 0xb
 5122 00e5 3B       		.uleb128 0x3b
 5123 00e6 05       		.uleb128 0x5
 5124 00e7 27       		.uleb128 0x27
 5125 00e8 19       		.uleb128 0x19
 5126 00e9 11       		.uleb128 0x11
 5127 00ea 01       		.uleb128 0x1
 5128 00eb 12       		.uleb128 0x12
 5129 00ec 06       		.uleb128 0x6
 5130 00ed 40       		.uleb128 0x40
 5131 00ee 18       		.uleb128 0x18
 5132 00ef 9642     		.uleb128 0x2116
 5133 00f1 19       		.uleb128 0x19
 5134 00f2 01       		.uleb128 0x1
 5135 00f3 13       		.uleb128 0x13
 5136 00f4 00       		.byte	0
 5137 00f5 00       		.byte	0
 5138 00f6 12       		.uleb128 0x12
 5139 00f7 34       		.uleb128 0x34
 5140 00f8 00       		.byte	0
 5141 00f9 03       		.uleb128 0x3
 5142 00fa 08       		.uleb128 0x8
 5143 00fb 3A       		.uleb128 0x3a
 5144 00fc 0B       		.uleb128 0xb
 5145 00fd 3B       		.uleb128 0x3b
 5146 00fe 05       		.uleb128 0x5
 5147 00ff 49       		.uleb128 0x49
 5148 0100 13       		.uleb128 0x13
 5149 0101 02       		.uleb128 0x2
 5150 0102 18       		.uleb128 0x18
 5151 0103 00       		.byte	0
 5152 0104 00       		.byte	0
 5153 0105 13       		.uleb128 0x13
 5154 0106 34       		.uleb128 0x34
 5155 0107 00       		.byte	0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 142


 5156 0108 03       		.uleb128 0x3
 5157 0109 0E       		.uleb128 0xe
 5158 010a 3A       		.uleb128 0x3a
 5159 010b 0B       		.uleb128 0xb
 5160 010c 3B       		.uleb128 0x3b
 5161 010d 05       		.uleb128 0x5
 5162 010e 49       		.uleb128 0x49
 5163 010f 13       		.uleb128 0x13
 5164 0110 02       		.uleb128 0x2
 5165 0111 18       		.uleb128 0x18
 5166 0112 00       		.byte	0
 5167 0113 00       		.byte	0
 5168 0114 14       		.uleb128 0x14
 5169 0115 05       		.uleb128 0x5
 5170 0116 00       		.byte	0
 5171 0117 03       		.uleb128 0x3
 5172 0118 0E       		.uleb128 0xe
 5173 0119 3A       		.uleb128 0x3a
 5174 011a 0B       		.uleb128 0xb
 5175 011b 3B       		.uleb128 0x3b
 5176 011c 05       		.uleb128 0x5
 5177 011d 49       		.uleb128 0x49
 5178 011e 13       		.uleb128 0x13
 5179 011f 02       		.uleb128 0x2
 5180 0120 18       		.uleb128 0x18
 5181 0121 00       		.byte	0
 5182 0122 00       		.byte	0
 5183 0123 15       		.uleb128 0x15
 5184 0124 2E       		.uleb128 0x2e
 5185 0125 01       		.byte	0x1
 5186 0126 3F       		.uleb128 0x3f
 5187 0127 19       		.uleb128 0x19
 5188 0128 03       		.uleb128 0x3
 5189 0129 0E       		.uleb128 0xe
 5190 012a 3A       		.uleb128 0x3a
 5191 012b 0B       		.uleb128 0xb
 5192 012c 3B       		.uleb128 0x3b
 5193 012d 05       		.uleb128 0x5
 5194 012e 27       		.uleb128 0x27
 5195 012f 19       		.uleb128 0x19
 5196 0130 49       		.uleb128 0x49
 5197 0131 13       		.uleb128 0x13
 5198 0132 11       		.uleb128 0x11
 5199 0133 01       		.uleb128 0x1
 5200 0134 12       		.uleb128 0x12
 5201 0135 06       		.uleb128 0x6
 5202 0136 40       		.uleb128 0x40
 5203 0137 18       		.uleb128 0x18
 5204 0138 9742     		.uleb128 0x2117
 5205 013a 19       		.uleb128 0x19
 5206 013b 01       		.uleb128 0x1
 5207 013c 13       		.uleb128 0x13
 5208 013d 00       		.byte	0
 5209 013e 00       		.byte	0
 5210 013f 16       		.uleb128 0x16
 5211 0140 2E       		.uleb128 0x2e
 5212 0141 01       		.byte	0x1
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 143


 5213 0142 3F       		.uleb128 0x3f
 5214 0143 19       		.uleb128 0x19
 5215 0144 03       		.uleb128 0x3
 5216 0145 0E       		.uleb128 0xe
 5217 0146 3A       		.uleb128 0x3a
 5218 0147 0B       		.uleb128 0xb
 5219 0148 3B       		.uleb128 0x3b
 5220 0149 05       		.uleb128 0x5
 5221 014a 27       		.uleb128 0x27
 5222 014b 19       		.uleb128 0x19
 5223 014c 11       		.uleb128 0x11
 5224 014d 01       		.uleb128 0x1
 5225 014e 12       		.uleb128 0x12
 5226 014f 06       		.uleb128 0x6
 5227 0150 40       		.uleb128 0x40
 5228 0151 18       		.uleb128 0x18
 5229 0152 9742     		.uleb128 0x2117
 5230 0154 19       		.uleb128 0x19
 5231 0155 01       		.uleb128 0x1
 5232 0156 13       		.uleb128 0x13
 5233 0157 00       		.byte	0
 5234 0158 00       		.byte	0
 5235 0159 17       		.uleb128 0x17
 5236 015a 2E       		.uleb128 0x2e
 5237 015b 01       		.byte	0x1
 5238 015c 3F       		.uleb128 0x3f
 5239 015d 19       		.uleb128 0x19
 5240 015e 03       		.uleb128 0x3
 5241 015f 0E       		.uleb128 0xe
 5242 0160 3A       		.uleb128 0x3a
 5243 0161 0B       		.uleb128 0xb
 5244 0162 3B       		.uleb128 0x3b
 5245 0163 05       		.uleb128 0x5
 5246 0164 27       		.uleb128 0x27
 5247 0165 19       		.uleb128 0x19
 5248 0166 49       		.uleb128 0x49
 5249 0167 13       		.uleb128 0x13
 5250 0168 11       		.uleb128 0x11
 5251 0169 01       		.uleb128 0x1
 5252 016a 12       		.uleb128 0x12
 5253 016b 06       		.uleb128 0x6
 5254 016c 40       		.uleb128 0x40
 5255 016d 18       		.uleb128 0x18
 5256 016e 9642     		.uleb128 0x2116
 5257 0170 19       		.uleb128 0x19
 5258 0171 01       		.uleb128 0x1
 5259 0172 13       		.uleb128 0x13
 5260 0173 00       		.byte	0
 5261 0174 00       		.byte	0
 5262 0175 18       		.uleb128 0x18
 5263 0176 01       		.uleb128 0x1
 5264 0177 01       		.byte	0x1
 5265 0178 49       		.uleb128 0x49
 5266 0179 13       		.uleb128 0x13
 5267 017a 01       		.uleb128 0x1
 5268 017b 13       		.uleb128 0x13
 5269 017c 00       		.byte	0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 144


 5270 017d 00       		.byte	0
 5271 017e 19       		.uleb128 0x19
 5272 017f 21       		.uleb128 0x21
 5273 0180 00       		.byte	0
 5274 0181 49       		.uleb128 0x49
 5275 0182 13       		.uleb128 0x13
 5276 0183 2F       		.uleb128 0x2f
 5277 0184 0B       		.uleb128 0xb
 5278 0185 00       		.byte	0
 5279 0186 00       		.byte	0
 5280 0187 1A       		.uleb128 0x1a
 5281 0188 05       		.uleb128 0x5
 5282 0189 00       		.byte	0
 5283 018a 03       		.uleb128 0x3
 5284 018b 08       		.uleb128 0x8
 5285 018c 3A       		.uleb128 0x3a
 5286 018d 0B       		.uleb128 0xb
 5287 018e 3B       		.uleb128 0x3b
 5288 018f 05       		.uleb128 0x5
 5289 0190 49       		.uleb128 0x49
 5290 0191 13       		.uleb128 0x13
 5291 0192 02       		.uleb128 0x2
 5292 0193 18       		.uleb128 0x18
 5293 0194 00       		.byte	0
 5294 0195 00       		.byte	0
 5295 0196 1B       		.uleb128 0x1b
 5296 0197 2E       		.uleb128 0x2e
 5297 0198 00       		.byte	0
 5298 0199 3F       		.uleb128 0x3f
 5299 019a 19       		.uleb128 0x19
 5300 019b 03       		.uleb128 0x3
 5301 019c 0E       		.uleb128 0xe
 5302 019d 3A       		.uleb128 0x3a
 5303 019e 0B       		.uleb128 0xb
 5304 019f 3B       		.uleb128 0x3b
 5305 01a0 05       		.uleb128 0x5
 5306 01a1 27       		.uleb128 0x27
 5307 01a2 19       		.uleb128 0x19
 5308 01a3 11       		.uleb128 0x11
 5309 01a4 01       		.uleb128 0x1
 5310 01a5 12       		.uleb128 0x12
 5311 01a6 06       		.uleb128 0x6
 5312 01a7 40       		.uleb128 0x40
 5313 01a8 18       		.uleb128 0x18
 5314 01a9 9742     		.uleb128 0x2117
 5315 01ab 19       		.uleb128 0x19
 5316 01ac 00       		.byte	0
 5317 01ad 00       		.byte	0
 5318 01ae 1C       		.uleb128 0x1c
 5319 01af 34       		.uleb128 0x34
 5320 01b0 00       		.byte	0
 5321 01b1 03       		.uleb128 0x3
 5322 01b2 0E       		.uleb128 0xe
 5323 01b3 3A       		.uleb128 0x3a
 5324 01b4 0B       		.uleb128 0xb
 5325 01b5 3B       		.uleb128 0x3b
 5326 01b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 145


 5327 01b7 49       		.uleb128 0x49
 5328 01b8 13       		.uleb128 0x13
 5329 01b9 3F       		.uleb128 0x3f
 5330 01ba 19       		.uleb128 0x19
 5331 01bb 3C       		.uleb128 0x3c
 5332 01bc 19       		.uleb128 0x19
 5333 01bd 00       		.byte	0
 5334 01be 00       		.byte	0
 5335 01bf 1D       		.uleb128 0x1d
 5336 01c0 34       		.uleb128 0x34
 5337 01c1 00       		.byte	0
 5338 01c2 03       		.uleb128 0x3
 5339 01c3 0E       		.uleb128 0xe
 5340 01c4 3A       		.uleb128 0x3a
 5341 01c5 0B       		.uleb128 0xb
 5342 01c6 3B       		.uleb128 0x3b
 5343 01c7 0B       		.uleb128 0xb
 5344 01c8 49       		.uleb128 0x49
 5345 01c9 13       		.uleb128 0x13
 5346 01ca 3F       		.uleb128 0x3f
 5347 01cb 19       		.uleb128 0x19
 5348 01cc 02       		.uleb128 0x2
 5349 01cd 18       		.uleb128 0x18
 5350 01ce 00       		.byte	0
 5351 01cf 00       		.byte	0
 5352 01d0 00       		.byte	0
 5353              		.section	.debug_aranges,"",%progbits
 5354 0000 4C010000 		.4byte	0x14c
 5355 0004 0200     		.2byte	0x2
 5356 0006 00000000 		.4byte	.Ldebug_info0
 5357 000a 04       		.byte	0x4
 5358 000b 00       		.byte	0
 5359 000c 0000     		.2byte	0
 5360 000e 0000     		.2byte	0
 5361 0010 00000000 		.4byte	.LFB34
 5362 0014 90000000 		.4byte	.LFE34-.LFB34
 5363 0018 00000000 		.4byte	.LFB35
 5364 001c 28000000 		.4byte	.LFE35-.LFB35
 5365 0020 00000000 		.4byte	.LFB36
 5366 0024 26000000 		.4byte	.LFE36-.LFB36
 5367 0028 00000000 		.4byte	.LFB37
 5368 002c 50000000 		.4byte	.LFE37-.LFB37
 5369 0030 00000000 		.4byte	.LFB38
 5370 0034 38020000 		.4byte	.LFE38-.LFB38
 5371 0038 00000000 		.4byte	.LFB39
 5372 003c 1E000000 		.4byte	.LFE39-.LFB39
 5373 0040 00000000 		.4byte	.LFB40
 5374 0044 40000000 		.4byte	.LFE40-.LFB40
 5375 0048 00000000 		.4byte	.LFB41
 5376 004c 70000000 		.4byte	.LFE41-.LFB41
 5377 0050 00000000 		.4byte	.LFB42
 5378 0054 1C000000 		.4byte	.LFE42-.LFB42
 5379 0058 00000000 		.4byte	.LFB43
 5380 005c 24000000 		.4byte	.LFE43-.LFB43
 5381 0060 00000000 		.4byte	.LFB44
 5382 0064 1C000000 		.4byte	.LFE44-.LFB44
 5383 0068 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 146


 5384 006c 24000000 		.4byte	.LFE45-.LFB45
 5385 0070 00000000 		.4byte	.LFB46
 5386 0074 1C000000 		.4byte	.LFE46-.LFB46
 5387 0078 00000000 		.4byte	.LFB47
 5388 007c 1C000000 		.4byte	.LFE47-.LFB47
 5389 0080 00000000 		.4byte	.LFB48
 5390 0084 1C000000 		.4byte	.LFE48-.LFB48
 5391 0088 00000000 		.4byte	.LFB49
 5392 008c 1C000000 		.4byte	.LFE49-.LFB49
 5393 0090 00000000 		.4byte	.LFB50
 5394 0094 24000000 		.4byte	.LFE50-.LFB50
 5395 0098 00000000 		.4byte	.LFB51
 5396 009c 24000000 		.4byte	.LFE51-.LFB51
 5397 00a0 00000000 		.4byte	.LFB52
 5398 00a4 24000000 		.4byte	.LFE52-.LFB52
 5399 00a8 00000000 		.4byte	.LFB53
 5400 00ac 24000000 		.4byte	.LFE53-.LFB53
 5401 00b0 00000000 		.4byte	.LFB54
 5402 00b4 24000000 		.4byte	.LFE54-.LFB54
 5403 00b8 00000000 		.4byte	.LFB55
 5404 00bc 24000000 		.4byte	.LFE55-.LFB55
 5405 00c0 00000000 		.4byte	.LFB56
 5406 00c4 58010000 		.4byte	.LFE56-.LFB56
 5407 00c8 00000000 		.4byte	.LFB57
 5408 00cc 58000000 		.4byte	.LFE57-.LFB57
 5409 00d0 00000000 		.4byte	.LFB58
 5410 00d4 36000000 		.4byte	.LFE58-.LFB58
 5411 00d8 00000000 		.4byte	.LFB59
 5412 00dc 70000000 		.4byte	.LFE59-.LFB59
 5413 00e0 00000000 		.4byte	.LFB60
 5414 00e4 70000000 		.4byte	.LFE60-.LFB60
 5415 00e8 00000000 		.4byte	.LFB61
 5416 00ec B8000000 		.4byte	.LFE61-.LFB61
 5417 00f0 00000000 		.4byte	.LFB62
 5418 00f4 A0010000 		.4byte	.LFE62-.LFB62
 5419 00f8 00000000 		.4byte	.LFB63
 5420 00fc 70010000 		.4byte	.LFE63-.LFB63
 5421 0100 00000000 		.4byte	.LFB64
 5422 0104 AC000000 		.4byte	.LFE64-.LFB64
 5423 0108 00000000 		.4byte	.LFB65
 5424 010c 76000000 		.4byte	.LFE65-.LFB65
 5425 0110 00000000 		.4byte	.LFB66
 5426 0114 3C000000 		.4byte	.LFE66-.LFB66
 5427 0118 00000000 		.4byte	.LFB67
 5428 011c 4C000000 		.4byte	.LFE67-.LFB67
 5429 0120 00000000 		.4byte	.LFB68
 5430 0124 1C000000 		.4byte	.LFE68-.LFB68
 5431 0128 00000000 		.4byte	.LFB69
 5432 012c 1C000000 		.4byte	.LFE69-.LFB69
 5433 0130 00000000 		.4byte	.LFB70
 5434 0134 1C000000 		.4byte	.LFE70-.LFB70
 5435 0138 00000000 		.4byte	.LFB71
 5436 013c 14000000 		.4byte	.LFE71-.LFB71
 5437 0140 00000000 		.4byte	.LFB72
 5438 0144 14000000 		.4byte	.LFE72-.LFB72
 5439 0148 00000000 		.4byte	0
 5440 014c 00000000 		.4byte	0
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 147


 5441              		.section	.debug_ranges,"",%progbits
 5442              	.Ldebug_ranges0:
 5443 0000 00000000 		.4byte	.LFB34
 5444 0004 90000000 		.4byte	.LFE34
 5445 0008 00000000 		.4byte	.LFB35
 5446 000c 28000000 		.4byte	.LFE35
 5447 0010 00000000 		.4byte	.LFB36
 5448 0014 26000000 		.4byte	.LFE36
 5449 0018 00000000 		.4byte	.LFB37
 5450 001c 50000000 		.4byte	.LFE37
 5451 0020 00000000 		.4byte	.LFB38
 5452 0024 38020000 		.4byte	.LFE38
 5453 0028 00000000 		.4byte	.LFB39
 5454 002c 1E000000 		.4byte	.LFE39
 5455 0030 00000000 		.4byte	.LFB40
 5456 0034 40000000 		.4byte	.LFE40
 5457 0038 00000000 		.4byte	.LFB41
 5458 003c 70000000 		.4byte	.LFE41
 5459 0040 00000000 		.4byte	.LFB42
 5460 0044 1C000000 		.4byte	.LFE42
 5461 0048 00000000 		.4byte	.LFB43
 5462 004c 24000000 		.4byte	.LFE43
 5463 0050 00000000 		.4byte	.LFB44
 5464 0054 1C000000 		.4byte	.LFE44
 5465 0058 00000000 		.4byte	.LFB45
 5466 005c 24000000 		.4byte	.LFE45
 5467 0060 00000000 		.4byte	.LFB46
 5468 0064 1C000000 		.4byte	.LFE46
 5469 0068 00000000 		.4byte	.LFB47
 5470 006c 1C000000 		.4byte	.LFE47
 5471 0070 00000000 		.4byte	.LFB48
 5472 0074 1C000000 		.4byte	.LFE48
 5473 0078 00000000 		.4byte	.LFB49
 5474 007c 1C000000 		.4byte	.LFE49
 5475 0080 00000000 		.4byte	.LFB50
 5476 0084 24000000 		.4byte	.LFE50
 5477 0088 00000000 		.4byte	.LFB51
 5478 008c 24000000 		.4byte	.LFE51
 5479 0090 00000000 		.4byte	.LFB52
 5480 0094 24000000 		.4byte	.LFE52
 5481 0098 00000000 		.4byte	.LFB53
 5482 009c 24000000 		.4byte	.LFE53
 5483 00a0 00000000 		.4byte	.LFB54
 5484 00a4 24000000 		.4byte	.LFE54
 5485 00a8 00000000 		.4byte	.LFB55
 5486 00ac 24000000 		.4byte	.LFE55
 5487 00b0 00000000 		.4byte	.LFB56
 5488 00b4 58010000 		.4byte	.LFE56
 5489 00b8 00000000 		.4byte	.LFB57
 5490 00bc 58000000 		.4byte	.LFE57
 5491 00c0 00000000 		.4byte	.LFB58
 5492 00c4 36000000 		.4byte	.LFE58
 5493 00c8 00000000 		.4byte	.LFB59
 5494 00cc 70000000 		.4byte	.LFE59
 5495 00d0 00000000 		.4byte	.LFB60
 5496 00d4 70000000 		.4byte	.LFE60
 5497 00d8 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 148


 5498 00dc B8000000 		.4byte	.LFE61
 5499 00e0 00000000 		.4byte	.LFB62
 5500 00e4 A0010000 		.4byte	.LFE62
 5501 00e8 00000000 		.4byte	.LFB63
 5502 00ec 70010000 		.4byte	.LFE63
 5503 00f0 00000000 		.4byte	.LFB64
 5504 00f4 AC000000 		.4byte	.LFE64
 5505 00f8 00000000 		.4byte	.LFB65
 5506 00fc 76000000 		.4byte	.LFE65
 5507 0100 00000000 		.4byte	.LFB66
 5508 0104 3C000000 		.4byte	.LFE66
 5509 0108 00000000 		.4byte	.LFB67
 5510 010c 4C000000 		.4byte	.LFE67
 5511 0110 00000000 		.4byte	.LFB68
 5512 0114 1C000000 		.4byte	.LFE68
 5513 0118 00000000 		.4byte	.LFB69
 5514 011c 1C000000 		.4byte	.LFE69
 5515 0120 00000000 		.4byte	.LFB70
 5516 0124 1C000000 		.4byte	.LFE70
 5517 0128 00000000 		.4byte	.LFB71
 5518 012c 14000000 		.4byte	.LFE71
 5519 0130 00000000 		.4byte	.LFB72
 5520 0134 14000000 		.4byte	.LFE72
 5521 0138 00000000 		.4byte	0
 5522 013c 00000000 		.4byte	0
 5523              		.section	.debug_line,"",%progbits
 5524              	.Ldebug_line0:
 5525 0000 B8040000 		.section	.debug_str,"MS",%progbits,1
 5525      02005E00 
 5525      00000201 
 5525      FB0E0D00 
 5525      01010101 
 5526              	.LASF131:
 5527 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5527      656E7365 
 5527      5F73656E 
 5527      736F7242 
 5527      6173656C 
 5528              	.LASF116:
 5529 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5529      656E7365 
 5529      5F494952 
 5529      3446696C 
 5529      74657200 
 5530              	.LASF123:
 5531 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5531      656E7365 
 5531      5F646562 
 5531      6F756E63 
 5531      65436F75 
 5532              	.LASF32:
 5533 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5533      53706565 
 5533      6454626C 
 5533      00
 5534              	.LASF134:
 5535 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 149


 5535      656E7365 
 5535      5F6C6F77 
 5535      42617365 
 5535      6C696E65 
 5536              	.LASF56:
 5537 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5537      656E7365 
 5537      5F557064 
 5537      61746542 
 5537      6173656C 
 5538              	.LASF35:
 5539 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5539      65724F66 
 5539      53656E73 
 5539      6F727300 
 5540              	.LASF39:
 5541 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5541      65744269 
 5541      7456616C 
 5541      756500
 5542              	.LASF95:
 5543 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5543      656E7365 
 5543      5F446973 
 5543      61626C65 
 5543      57696467 
 5544              	.LASF63:
 5545 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5545      656E7365 
 5545      5F557064 
 5545      61746545 
 5545      6E61626C 
 5546              	.LASF111:
 5547 00eb 706F7349 		.ascii	"posIndex\000"
 5547      6E646578 
 5547      00
 5548              	.LASF144:
 5549 00f4 43617053 		.ascii	"CapSense_config\000"
 5549      656E7365 
 5549      5F636F6E 
 5549      66696700 
 5550              	.LASF55:
 5551 0104 69735365 		.ascii	"isSensorEnabled\000"
 5551      6E736F72 
 5551      456E6162 
 5551      6C656400 
 5552              	.LASF91:
 5553 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5553      6653656E 
 5553      736F7273 
 5553      00
 5554              	.LASF8:
 5555 0121 756E7369 		.ascii	"unsigned int\000"
 5555      676E6564 
 5555      20696E74 
 5555      00
 5556              	.LASF44:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 150


 5557 012e 746F7461 		.ascii	"totalSensorsNum\000"
 5557      6C53656E 
 5557      736F7273 
 5557      4E756D00 
 5558              	.LASF105:
 5559 013e 706F734E 		.ascii	"posNext\000"
 5559      65787400 
 5560              	.LASF12:
 5561 0146 696E7431 		.ascii	"int16\000"
 5561      3600
 5562              	.LASF29:
 5563 014c 73616D70 		.ascii	"sampleMaxTbl\000"
 5563      6C654D61 
 5563      7854626C 
 5563      00
 5564              	.LASF54:
 5565 0159 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5565      656E7365 
 5565      5F496E69 
 5565      7469616C 
 5565      697A6545 
 5566              	.LASF126:
 5567 017d 43617053 		.ascii	"CapSense_posFiltersData\000"
 5567      656E7365 
 5567      5F706F73 
 5567      46696C74 
 5567      65727344 
 5568              	.LASF27:
 5569 0195 7369676E 		.ascii	"signRegisterTbl\000"
 5569      52656769 
 5569      73746572 
 5569      54626C00 
 5570              	.LASF140:
 5571 01a5 43617053 		.ascii	"CapSense_debounce\000"
 5571      656E7365 
 5571      5F646562 
 5571      6F756E63 
 5571      6500
 5572              	.LASF50:
 5573 01b7 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5573      656E7365 
 5573      5F496E69 
 5573      7469616C 
 5573      697A6553 
 5574              	.LASF48:
 5575 01d9 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5575      656E7365 
 5575      5F434F4E 
 5575      4649475F 
 5575      54595045 
 5576              	.LASF68:
 5577 01f7 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5577      656E7365 
 5577      5F536574 
 5577      42617365 
 5577      6C696E65 
 5578              	.LASF34:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 151


 5579 0210 72617744 		.ascii	"rawDataIndex\000"
 5579      61746149 
 5579      6E646578 
 5579      00
 5580              	.LASF43:
 5581 021d 746F7461 		.ascii	"totalWidgetsNum\000"
 5581      6C576964 
 5581      67657473 
 5581      4E756D00 
 5582              	.LASF72:
 5583 022d 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5583      656E7365 
 5583      5F536574 
 5583      44696666 
 5583      436F756E 
 5584              	.LASF132:
 5585 0247 43617053 		.ascii	"CapSense_sensorSignal\000"
 5585      656E7365 
 5585      5F73656E 
 5585      736F7253 
 5585      69676E61 
 5586              	.LASF141:
 5587 025d 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5587      656E7365 
 5587      5F726177 
 5587      44617461 
 5587      496E6465 
 5588              	.LASF79:
 5589 0273 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5589      656E7365 
 5589      5F536574 
 5589      4E6F6973 
 5589      65546872 
 5590              	.LASF64:
 5591 028e 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5591      656E7365 
 5591      5F557064 
 5591      61746557 
 5591      69646765 
 5592              	.LASF139:
 5593 02ac 43617053 		.ascii	"CapSense_hysteresis\000"
 5593      656E7365 
 5593      5F687973 
 5593      74657265 
 5593      73697300 
 5594              	.LASF14:
 5595 02c0 666C6F61 		.ascii	"float\000"
 5595      7400
 5596              	.LASF13:
 5597 02c6 696E7433 		.ascii	"int32\000"
 5597      3200
 5598              	.LASF98:
 5599 02cc 636F756E 		.ascii	"count\000"
 5599      7400
 5600              	.LASF24:
 5601 02d2 7265736F 		.ascii	"resolutionsTbl\000"
 5601      6C757469 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 152


 5601      6F6E7354 
 5601      626C00
 5602              	.LASF113:
 5603 02e1 706F7346 		.ascii	"posFiltersMask\000"
 5603      696C7465 
 5603      72734D61 
 5603      736B00
 5604              	.LASF75:
 5605 02f0 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5605      656E7365 
 5605      5F476574 
 5605      4E6F6973 
 5605      65546872 
 5606              	.LASF26:
 5607 030b 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5607      696E6744 
 5607      69666665 
 5607      72656E63 
 5607      6554626C 
 5608              	.LASF7:
 5609 0320 6C6F6E67 		.ascii	"long long unsigned int\000"
 5609      206C6F6E 
 5609      6720756E 
 5609      7369676E 
 5609      65642069 
 5610              	.LASF128:
 5611 0337 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5611      656E7365 
 5611      5F73656E 
 5611      736F7245 
 5611      6E61626C 
 5612              	.LASF53:
 5613 0351 77696467 		.ascii	"widget\000"
 5613      657400
 5614              	.LASF125:
 5615 0358 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5615      656E7365 
 5615      5F706F73 
 5615      46696C74 
 5615      6572734D 
 5616              	.LASF136:
 5617 0370 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5617      656E7365 
 5617      5F66696E 
 5617      67657254 
 5617      68726573 
 5618              	.LASF129:
 5619 0389 43617053 		.ascii	"CapSense_widgetNumber\000"
 5619      656E7365 
 5619      5F776964 
 5619      6765744E 
 5619      756D6265 
 5620              	.LASF78:
 5621 039f 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5621      656E7365 
 5621      5F536574 
 5621      46696E67 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 153


 5621      65725468 
 5622              	.LASF122:
 5623 03bb 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5623      656E7365 
 5623      5F446973 
 5623      61626C65 
 5623      52617744 
 5624              	.LASF73:
 5625 03da 76616C75 		.ascii	"value\000"
 5625      6500
 5626              	.LASF76:
 5627 03e0 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5627      656E7365 
 5627      5F476574 
 5627      46696E67 
 5627      65724879 
 5628              	.LASF71:
 5629 03fd 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5629      656E7365 
 5629      5F476574 
 5629      44696666 
 5629      436F756E 
 5630              	.LASF58:
 5631 0417 7369676E 		.ascii	"sign\000"
 5631      00
 5632              	.LASF97:
 5633 041c 6F666673 		.ascii	"offset\000"
 5633      657400
 5634              	.LASF25:
 5635 0423 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5635      65456E76 
 5635      656C6F70 
 5635      6554626C 
 5635      00
 5636              	.LASF57:
 5637 0434 63616C63 		.ascii	"calc\000"
 5637      00
 5638              	.LASF38:
 5639 0439 70747252 		.ascii	"ptrReadSensorRaw\000"
 5639      65616453 
 5639      656E736F 
 5639      72526177 
 5639      00
 5640              	.LASF88:
 5641 044a 68797374 		.ascii	"hysteresis\000"
 5641      65726573 
 5641      697300
 5642              	.LASF60:
 5643 0455 66696C74 		.ascii	"filteredRawData\000"
 5643      65726564 
 5643      52617744 
 5643      61746100 
 5644              	.LASF65:
 5645 0465 73656E73 		.ascii	"sensorsPerWidget\000"
 5645      6F727350 
 5645      65725769 
 5645      64676574 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 154


 5645      00
 5646              	.LASF93:
 5647 0476 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5647      656E7365 
 5647      5F436865 
 5647      636B4973 
 5647      416E7957 
 5648              	.LASF142:
 5649 0496 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5649      656E7365 
 5649      5F6E756D 
 5649      6265724F 
 5649      6653656E 
 5650              	.LASF138:
 5651 04af 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5651      656E7365 
 5651      5F6E6567 
 5651      61746976 
 5651      654E6F69 
 5652              	.LASF42:
 5653 04cf 746F7461 		.ascii	"totalScanslotsNum\000"
 5653      6C536361 
 5653      6E736C6F 
 5653      74734E75 
 5653      6D00
 5654              	.LASF51:
 5655 04e1 73656E73 		.ascii	"sensor\000"
 5655      6F7200
 5656              	.LASF45:
 5657 04e8 73656E73 		.ascii	"sensetivitySeed\000"
 5657      65746976 
 5657      69747953 
 5657      65656400 
 5658              	.LASF94:
 5659 04f8 43617053 		.ascii	"CapSense_EnableWidget\000"
 5659      656E7365 
 5659      5F456E61 
 5659      626C6557 
 5659      69646765 
 5660              	.LASF16:
 5661 050e 63686172 		.ascii	"char\000"
 5661      00
 5662              	.LASF77:
 5663 0513 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5663      656E7365 
 5663      5F476574 
 5663      4E656761 
 5663      74697665 
 5664              	.LASF33:
 5665 0536 70726573 		.ascii	"prescalerTable\000"
 5665      63616C65 
 5665      72546162 
 5665      6C6500
 5666              	.LASF10:
 5667 0545 75696E74 		.ascii	"uint16\000"
 5667      313600
 5668              	.LASF69:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 155


 5669 054c 64617461 		.ascii	"data\000"
 5669      00
 5670              	.LASF18:
 5671 0551 69646163 		.ascii	"idac1LevelsTbl\000"
 5671      314C6576 
 5671      656C7354 
 5671      626C00
 5672              	.LASF103:
 5673 0560 7265736F 		.ascii	"resolution\000"
 5673      6C757469 
 5673      6F6E00
 5674              	.LASF90:
 5675 056b 72617749 		.ascii	"rawIndex\000"
 5675      6E646578 
 5675      00
 5676              	.LASF106:
 5677 0574 43617053 		.ascii	"CapSense_centroid\000"
 5677      656E7365 
 5677      5F63656E 
 5677      74726F69 
 5677      6400
 5678              	.LASF147:
 5679 0586 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5679      6E657261 
 5679      7465645F 
 5679      536F7572 
 5679      63655C50 
 5680              	.LASF6:
 5681 05af 6C6F6E67 		.ascii	"long long int\000"
 5681      206C6F6E 
 5681      6720696E 
 5681      7400
 5682              	.LASF118:
 5683 05bd 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5683      656E7365 
 5683      5F476574 
 5683      57696467 
 5683      65744E75 
 5684              	.LASF85:
 5685 05d6 6465626F 		.ascii	"debounce\000"
 5685      756E6365 
 5685      00
 5686              	.LASF37:
 5687 05df 70747250 		.ascii	"ptrPreScan\000"
 5687      72655363 
 5687      616E00
 5688              	.LASF84:
 5689 05ea 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5689      656E7365 
 5689      5F436865 
 5689      636B4973 
 5689      53656E73 
 5690              	.LASF36:
 5691 0607 70747247 		.ascii	"ptrGetRaw\000"
 5691      65745261 
 5691      7700
 5692              	.LASF62:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 156


 5693 0611 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5693      656E7365 
 5693      5F557064 
 5693      61746553 
 5693      656E736F 
 5694              	.LASF146:
 5695 062f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5695      4320342E 
 5695      392E3320 
 5695      32303135 
 5695      30333033 
 5696 0662 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5696      20726576 
 5696      6973696F 
 5696      6E203232 
 5696      31323230 
 5697 0695 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5697      66756E63 
 5697      74696F6E 
 5697      2D736563 
 5697      74696F6E 
 5698              	.LASF49:
 5699 06bd 43617053 		.ascii	"CapSense_BaseInit\000"
 5699      656E7365 
 5699      5F426173 
 5699      65496E69 
 5699      7400
 5700              	.LASF102:
 5701 06cf 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5701      656E7365 
 5701      5F43616C 
 5701      6343656E 
 5701      74726F69 
 5702              	.LASF28:
 5703 06e5 73616D70 		.ascii	"sampleMinTbl\000"
 5703      6C654D69 
 5703      6E54626C 
 5703      00
 5704              	.LASF127:
 5705 06f2 43617053 		.ascii	"CapSense_sensorRaw\000"
 5705      656E7365 
 5705      5F73656E 
 5705      736F7252 
 5705      617700
 5706              	.LASF119:
 5707 0705 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5707      656E7365 
 5707      5F476574 
 5707      4C6F7742 
 5707      6173656C 
 5708              	.LASF81:
 5709 0722 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5709      656E7365 
 5709      5F536574 
 5709      4E656761 
 5709      74697665 
 5710              	.LASF11:
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 157


 5711 0745 75696E74 		.ascii	"uint32\000"
 5711      333200
 5712              	.LASF112:
 5713 074c 66697273 		.ascii	"firstTimeIndex\000"
 5713      7454696D 
 5713      65496E64 
 5713      657800
 5714              	.LASF101:
 5715 075b 73746172 		.ascii	"startOfSlider\000"
 5715      744F6653 
 5715      6C696465 
 5715      7200
 5716              	.LASF80:
 5717 0769 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5717      656E7365 
 5717      5F536574 
 5717      46696E67 
 5717      65724879 
 5718              	.LASF148:
 5719 0786 503A5C50 		.ascii	"P:\\PSoC\\PSoC Workspace\\thingTouch\\thingTouch.cy"
 5719      536F435C 
 5719      50536F43 
 5719      20576F72 
 5719      6B737061 
 5720 07b5 64736E00 		.ascii	"dsn\000"
 5721              	.LASF74:
 5722 07b9 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5722      656E7365 
 5722      5F476574 
 5722      46696E67 
 5722      65725468 
 5723              	.LASF108:
 5724 07d5 6E756D65 		.ascii	"numerator\000"
 5724      7261746F 
 5724      7200
 5725              	.LASF67:
 5726 07df 6C617374 		.ascii	"lastSensor\000"
 5726      53656E73 
 5726      6F7200
 5727              	.LASF46:
 5728 07ea 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5728      6B467265 
 5728      715F4D48 
 5728      7A00
 5729              	.LASF104:
 5730 07f8 706F7350 		.ascii	"posPrev\000"
 5730      72657600 
 5731              	.LASF110:
 5732 0800 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5732      656E7365 
 5732      5F476574 
 5732      43656E74 
 5732      726F6964 
 5733              	.LASF19:
 5734 0818 69646163 		.ascii	"idac2LevelsTbl\000"
 5734      324C6576 
 5734      656C7354 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 158


 5734      626C00
 5735              	.LASF2:
 5736 0827 73686F72 		.ascii	"short int\000"
 5736      7420696E 
 5736      7400
 5737              	.LASF4:
 5738 0831 6C6F6E67 		.ascii	"long int\000"
 5738      20696E74 
 5738      00
 5739              	.LASF66:
 5740 083a 66697273 		.ascii	"firstSensor\000"
 5740      7453656E 
 5740      736F7200 
 5741              	.LASF100:
 5742 0846 74656D70 		.ascii	"temp\000"
 5742      00
 5743              	.LASF96:
 5744 084b 43617053 		.ascii	"CapSense_FindMaximum\000"
 5744      656E7365 
 5744      5F46696E 
 5744      644D6178 
 5744      696D756D 
 5745              	.LASF23:
 5746 0860 77696467 		.ascii	"widgetNubmersTbl\000"
 5746      65744E75 
 5746      626D6572 
 5746      7354626C 
 5746      00
 5747              	.LASF121:
 5748 0871 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5748      656E7365 
 5748      5F456E61 
 5748      626C6552 
 5748      61774461 
 5749              	.LASF135:
 5750 088f 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5750      656E7365 
 5750      5F6C6F77 
 5750      42617365 
 5750      6C696E65 
 5751              	.LASF109:
 5752 08a9 64656E6F 		.ascii	"denominator\000"
 5752      6D696E61 
 5752      746F7200 
 5753              	.LASF31:
 5754 08b5 6B56616C 		.ascii	"kValueTbl\000"
 5754      75655462 
 5754      6C00
 5755              	.LASF130:
 5756 08bf 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5756      656E7365 
 5756      5F73656E 
 5756      736F7242 
 5756      6173656C 
 5757              	.LASF99:
 5758 08d7 6D617869 		.ascii	"maximum\000"
 5758      6D756D00 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 159


 5759              	.LASF17:
 5760 08df 73697A65 		.ascii	"sizetype\000"
 5760      74797065 
 5760      00
 5761              	.LASF5:
 5762 08e8 6C6F6E67 		.ascii	"long unsigned int\000"
 5762      20756E73 
 5762      69676E65 
 5762      6420696E 
 5762      7400
 5763              	.LASF47:
 5764 08fa 706F696E 		.ascii	"pointers\000"
 5764      74657273 
 5764      00
 5765              	.LASF61:
 5766 0903 6E6F6973 		.ascii	"noiseThreshold\000"
 5766      65546872 
 5766      6573686F 
 5766      6C6400
 5767              	.LASF30:
 5768 0912 70726576 		.ascii	"previousSampleTbl\000"
 5768      696F7573 
 5768      53616D70 
 5768      6C655462 
 5768      6C00
 5769              	.LASF117:
 5770 0924 43617053 		.ascii	"CapSense_JitterFilter\000"
 5770      656E7365 
 5770      5F4A6974 
 5770      74657246 
 5770      696C7465 
 5771              	.LASF82:
 5772 093a 43617053 		.ascii	"CapSense_SetDebounce\000"
 5772      656E7365 
 5772      5F536574 
 5772      4465626F 
 5772      756E6365 
 5773              	.LASF87:
 5774 094f 66696E67 		.ascii	"fingerThreshold\000"
 5774      65725468 
 5774      72657368 
 5774      6F6C6400 
 5775              	.LASF21:
 5776 095f 63686172 		.ascii	"chargeDivTbl\000"
 5776      67654469 
 5776      7654626C 
 5776      00
 5777              	.LASF1:
 5778 096c 756E7369 		.ascii	"unsigned char\000"
 5778      676E6564 
 5778      20636861 
 5778      7200
 5779              	.LASF137:
 5780 097a 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5780      656E7365 
 5780      5F6E6F69 
 5780      73655468 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 160


 5780      72657368 
 5781              	.LASF86:
 5782 0992 6465626F 		.ascii	"debounceIndex\000"
 5782      756E6365 
 5782      496E6465 
 5782      7800
 5783              	.LASF52:
 5784 09a0 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5784      656E7365 
 5784      5F496E69 
 5784      7469616C 
 5784      697A6541 
 5785              	.LASF70:
 5786 09c0 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5786      656E7365 
 5786      5F476574 
 5786      42617365 
 5786      6C696E65 
 5787              	.LASF83:
 5788 09d9 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5788      656E7365 
 5788      5F536574 
 5788      4C6F7742 
 5788      6173656C 
 5789              	.LASF20:
 5790 09f6 73656E73 		.ascii	"sensetivityTbl\000"
 5790      65746976 
 5790      69747954 
 5790      626C00
 5791              	.LASF124:
 5792 0a05 43617053 		.ascii	"CapSense_centroidMult\000"
 5792      656E7365 
 5792      5F63656E 
 5792      74726F69 
 5792      644D756C 
 5793              	.LASF92:
 5794 0a1b 73746174 		.ascii	"state\000"
 5794      6500
 5795              	.LASF145:
 5796 0a21 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5796      656E7365 
 5796      5F656E61 
 5796      626C6552 
 5796      61774669 
 5797              	.LASF22:
 5798 0a3b 6D6F6444 		.ascii	"modDivTbl\000"
 5798      69765462 
 5798      6C00
 5799              	.LASF0:
 5800 0a45 7369676E 		.ascii	"signed char\000"
 5800      65642063 
 5800      68617200 
 5801              	.LASF3:
 5802 0a51 73686F72 		.ascii	"short unsigned int\000"
 5802      7420756E 
 5802      7369676E 
 5802      65642069 
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 161


 5802      6E7400
 5803              	.LASF114:
 5804 0a64 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5804      656E7365 
 5804      5F476574 
 5804      52616469 
 5804      616C4365 
 5805              	.LASF40:
 5806 0a82 70747253 		.ascii	"ptrSetBitValue\000"
 5806      65744269 
 5806      7456616C 
 5806      756500
 5807              	.LASF115:
 5808 0a91 43617053 		.ascii	"CapSense_MedianFilter\000"
 5808      656E7365 
 5808      5F4D6564 
 5808      69616E46 
 5808      696C7465 
 5809              	.LASF59:
 5810 0aa7 74656D70 		.ascii	"tempRaw\000"
 5810      52617700 
 5811              	.LASF120:
 5812 0aaf 43617053 		.ascii	"CapSense_GetDebounce\000"
 5812      656E7365 
 5812      5F476574 
 5812      4465626F 
 5812      756E6365 
 5813              	.LASF89:
 5814 0ac4 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5814      656E7365 
 5814      5F436865 
 5814      636B4973 
 5814      57696467 
 5815              	.LASF9:
 5816 0ae1 75696E74 		.ascii	"uint8\000"
 5816      3800
 5817              	.LASF15:
 5818 0ae7 646F7562 		.ascii	"double\000"
 5818      6C6500
 5819              	.LASF41:
 5820 0aee 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5820      656E7365 
 5820      5F434F4E 
 5820      4649475F 
 5820      54595045 
 5821              	.LASF143:
 5822 0b15 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5822      656E7365 
 5822      5F726177 
 5822      46696C74 
 5822      65724461 
 5823              	.LASF107:
 5824 0b2d 706F7369 		.ascii	"position\000"
 5824      74696F6E 
 5824      00
 5825              	.LASF133:
 5826 0b36 43617053 		.ascii	"CapSense_sensorOnMask\000"
ARM GAS  C:\Users\lovelesh\AppData\Local\Temp\ccDxuV7s.s 			page 162


 5826      656E7365 
 5826      5F73656E 
 5826      736F724F 
 5826      6E4D6173 
 5827              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
