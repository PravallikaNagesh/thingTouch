ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,32,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 32
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	32
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_sensorBaselineLow
  26              		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 16
  29              	CapSense_sensorBaselineLow:
  30 0020 00000000 		.space	16
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	CapSense_sensorSignal
  32              		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 16
  35              	CapSense_sensorSignal:
  36 0030 00000000 		.space	16
  36      00000000 
  36      00000000 
  36      00000000 
  37              		.global	CapSense_sensorOnMask
  38              		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 2
  41              	CapSense_sensorOnMask:
  42 0040 0000     		.space	2
  43              		.comm	CapSense_lowBaselineResetCnt,16,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 2


  48              		.size	CapSense_lowBaselineReset, 16
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58 0008 1E       		.byte	30
  59 0009 1E       		.byte	30
  60 000a 1E       		.byte	30
  61 000b 1E       		.byte	30
  62 000c 1E       		.byte	30
  63 000d 1E       		.byte	30
  64 000e 1E       		.byte	30
  65 000f 1E       		.byte	30
  66              		.global	CapSense_enableRawFilters
  67              		.type	CapSense_enableRawFilters, %object
  68              		.size	CapSense_enableRawFilters, 1
  69              	CapSense_enableRawFilters:
  70 0010 01       		.byte	1
  71              		.comm	CapSense_fingerThreshold,8,4
  72              		.comm	CapSense_noiseThreshold,8,4
  73              		.comm	CapSense_negativeNoiseThreshold,8,4
  74              		.comm	CapSense_hysteresis,8,4
  75              		.global	CapSense_debounce
  76 0011 000000   		.align	2
  77              		.type	CapSense_debounce, %object
  78              		.size	CapSense_debounce, 8
  79              	CapSense_debounce:
  80 0014 01       		.byte	1
  81 0015 01       		.byte	1
  82 0016 05       		.byte	5
  83 0017 05       		.byte	5
  84 0018 05       		.byte	5
  85 0019 05       		.byte	5
  86 001a 05       		.byte	5
  87 001b 05       		.byte	5
  88              		.bss
  89 0042 0000     		.align	2
  90              	CapSense_debounceCounter:
  91 0044 00000000 		.space	7
  91      000000
  92              		.global	CapSense_rawDataIndex
  93              		.section	.rodata
  94              		.align	2
  95              		.type	CapSense_rawDataIndex, %object
  96              		.size	CapSense_rawDataIndex, 8
  97              	CapSense_rawDataIndex:
  98 0000 06       		.byte	6
  99 0001 0B       		.byte	11
 100 0002 00       		.byte	0
 101 0003 01       		.byte	1
 102 0004 02       		.byte	2
 103 0005 03       		.byte	3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 3


 104 0006 04       		.byte	4
 105 0007 05       		.byte	5
 106              		.global	CapSense_numberOfSensors
 107              		.align	2
 108              		.type	CapSense_numberOfSensors, %object
 109              		.size	CapSense_numberOfSensors, 8
 110              	CapSense_numberOfSensors:
 111 0008 05       		.byte	5
 112 0009 05       		.byte	5
 113 000a 01       		.byte	1
 114 000b 01       		.byte	1
 115 000c 01       		.byte	1
 116 000d 01       		.byte	1
 117 000e 01       		.byte	1
 118 000f 01       		.byte	1
 119              		.align	2
 120              		.type	CapSense_centroidMult, %object
 121              		.size	CapSense_centroidMult, 4
 122              	CapSense_centroidMult:
 123 0010 0014     		.short	5120
 124 0012 0014     		.short	5120
 125              		.data
 126              		.align	2
 127              		.type	CapSense_posFiltersMask, %object
 128              		.size	CapSense_posFiltersMask, 2
 129              	CapSense_posFiltersMask:
 130 001c 08       		.byte	8
 131 001d 08       		.byte	8
 132 001e 0000     		.align	2
 133              		.type	CapSense_posFiltersData, %object
 134              		.size	CapSense_posFiltersData, 6
 135              	CapSense_posFiltersData:
 136 0020 02       		.byte	2
 137 0021 04       		.byte	4
 138 0022 00       		.byte	0
 139 0023 00       		.byte	0
 140 0024 00       		.byte	0
 141 0025 00       		.byte	0
 142 0026 0000     		.section	.text.CapSense_BaseInit,"ax",%progbits
 143              		.align	2
 144              		.global	CapSense_BaseInit
 145              		.code	16
 146              		.thumb_func
 147              		.type	CapSense_BaseInit, %function
 148              	CapSense_BaseInit:
 149              	.LFB35:
 150              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 4


  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 5


  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 1u, 5u, 5u, 5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* RadialSlider0__RS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c ****     11u, /* RadialSlider1__RS */
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  93:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  96:Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  97:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button5__BTN */
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 101:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* RadialSlider0__RS */
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* RadialSlider1__RS */
 103:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 104:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 105:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 106:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 107:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 108:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
 112:Generated_Source\PSoC4/CapSense_CSHL.c ****     5120u, 5120u, 
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
 116:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 0x8u, 
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 120:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, 4u, 0u, 0u, 0u, 0u, 
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 6


 125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 145:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 147:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 149:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 151:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 153:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 154:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 156:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 159:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 160:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 161:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 151              		.loc 1 161 0
 152              		.cfi_startproc
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 84B0     		sub	sp, sp, #16
 158              		.cfi_def_cfa_offset 24
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 162              		.loc 1 164 0
 163 0008 0F23     		mov	r3, #15
 164 000a FB18     		add	r3, r7, r3
 165 000c 1849     		ldr	r1, .L3
 166 000e 7A68     		ldr	r2, [r7, #4]
 167 0010 8A18     		add	r2, r1, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 7


 168 0012 1278     		ldrb	r2, [r2]
 169 0014 1A70     		strb	r2, [r3]
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 166:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 176:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 170              		.loc 1 178 0
 171 0016 174B     		ldr	r3, .L3+4
 172 0018 7A68     		ldr	r2, [r7, #4]
 173 001a 5200     		lsl	r2, r2, #1
 174 001c D15A     		ldrh	r1, [r2, r3]
 175 001e 164B     		ldr	r3, .L3+8
 176 0020 7A68     		ldr	r2, [r7, #4]
 177 0022 5200     		lsl	r2, r2, #1
 178 0024 D152     		strh	r1, [r2, r3]
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 179              		.loc 1 179 0
 180 0026 154A     		ldr	r2, .L3+12
 181 0028 7B68     		ldr	r3, [r7, #4]
 182 002a D318     		add	r3, r2, r3
 183 002c 0022     		mov	r2, #0
 184 002e 1A70     		strb	r2, [r3]
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 185              		.loc 1 180 0
 186 0030 134A     		ldr	r2, .L3+16
 187 0032 7B68     		ldr	r3, [r7, #4]
 188 0034 D318     		add	r3, r2, r3
 189 0036 0022     		mov	r2, #0
 190 0038 1A70     		strb	r2, [r3]
 181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 191              		.loc 1 182 0
 192 003a 0F23     		mov	r3, #15
 193 003c FB18     		add	r3, r7, r3
 194 003e 1B78     		ldrb	r3, [r3]
 195 0040 012B     		cmp	r3, #1
 196 0042 0AD9     		bls	.L2
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u)] =  CapSense_debou
 197              		.loc 1 184 0
 198 0044 0F23     		mov	r3, #15
 199 0046 FB18     		add	r3, r7, r3
 200 0048 1B78     		ldrb	r3, [r3]
 201 004a 023B     		sub	r3, r3, #2
 202 004c 0F22     		mov	r2, #15
 203 004e BA18     		add	r2, r7, r2
 204 0050 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 8


 205 0052 0C49     		ldr	r1, .L3+20
 206 0054 895C     		ldrb	r1, [r1, r2]
 207 0056 0C4A     		ldr	r2, .L3+24
 208 0058 D154     		strb	r1, [r2, r3]
 209              	.L2:
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 191:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 192:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 194:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 195:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 196:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 197:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 198:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 200:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 210              		.loc 1 200 0
 211 005a 064B     		ldr	r3, .L3+4
 212 005c 7A68     		ldr	r2, [r7, #4]
 213 005e 5200     		lsl	r2, r2, #1
 214 0060 D15A     		ldrh	r1, [r2, r3]
 215 0062 0A4B     		ldr	r3, .L3+28
 216 0064 7A68     		ldr	r2, [r7, #4]
 217 0066 5200     		lsl	r2, r2, #1
 218 0068 D152     		strh	r1, [r2, r3]
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 202:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 203:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 204:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 205:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 206:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 208:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 209:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 210:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 211:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 219              		.loc 1 212 0
 220 006a BD46     		mov	sp, r7
 221 006c 04B0     		add	sp, sp, #16
 222              		@ sp needed
 223 006e 80BD     		pop	{r7, pc}
 224              	.L4:
 225              		.align	2
 226              	.L3:
 227 0070 00000000 		.word	CapSense_widgetNumber
 228 0074 00000000 		.word	CapSense_sensorRaw
 229 0078 00000000 		.word	CapSense_sensorBaseline
 230 007c 00000000 		.word	CapSense_sensorBaselineLow
 231 0080 00000000 		.word	CapSense_sensorSignal
 232 0084 00000000 		.word	CapSense_debounce
 233 0088 44000000 		.word	CapSense_debounceCounter
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 9


 234 008c 00000000 		.word	CapSense_rawFilterData1
 235              		.cfi_endproc
 236              	.LFE35:
 237              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 238              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 239              		.align	2
 240              		.global	CapSense_InitializeSensorBaseline
 241              		.code	16
 242              		.thumb_func
 243              		.type	CapSense_InitializeSensorBaseline, %function
 244              	CapSense_InitializeSensorBaseline:
 245              	.LFB36:
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 246              		.loc 1 240 0
 247              		.cfi_startproc
 248 0000 80B5     		push	{r7, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 82B0     		sub	sp, sp, #8
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 256 0006 7860     		str	r0, [r7, #4]
 241:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 242:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 257              		.loc 1 242 0
 258 0008 7B68     		ldr	r3, [r7, #4]
 259 000a 181C     		mov	r0, r3
 260 000c FFF7FEFF 		bl	CapSense_ScanSensor
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 10


 243:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 261              		.loc 1 243 0
 262 0010 C046     		mov	r8, r8
 263              	.L6:
 264              		.loc 1 243 0 is_stmt 0 discriminator 1
 265 0012 FFF7FEFF 		bl	CapSense_IsBusy
 266 0016 031E     		sub	r3, r0, #0
 267 0018 FBD1     		bne	.L6
 244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 245:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 246:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 248:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 249:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 268              		.loc 1 249 0 is_stmt 1
 269 001a 7B68     		ldr	r3, [r7, #4]
 270 001c 181C     		mov	r0, r3
 271 001e FFF7FEFF 		bl	CapSense_BaseInit
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 272              		.loc 1 250 0
 273 0022 BD46     		mov	sp, r7
 274 0024 02B0     		add	sp, sp, #8
 275              		@ sp needed
 276 0026 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE36:
 279              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 280              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 281              		.align	2
 282              		.global	CapSense_InitializeAllBaselines
 283              		.code	16
 284              		.thumb_func
 285              		.type	CapSense_InitializeAllBaselines, %function
 286              	CapSense_InitializeAllBaselines:
 287              	.LFB37:
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 11


 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 288              		.loc 1 277 0
 289              		.cfi_startproc
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 82B0     		sub	sp, sp, #8
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 278:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 280:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 298              		.loc 1 280 0
 299 0006 0023     		mov	r3, #0
 300 0008 7B60     		str	r3, [r7, #4]
 301 000a 06E0     		b	.L8
 302              	.L9:
 281:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 282:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 303              		.loc 1 282 0 discriminator 3
 304 000c 7B68     		ldr	r3, [r7, #4]
 305 000e 181C     		mov	r0, r3
 306 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 280:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 307              		.loc 1 280 0 discriminator 3
 308 0014 7B68     		ldr	r3, [r7, #4]
 309 0016 0133     		add	r3, r3, #1
 310 0018 7B60     		str	r3, [r7, #4]
 311              	.L8:
 280:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 312              		.loc 1 280 0 is_stmt 0 discriminator 1
 313 001a 7B68     		ldr	r3, [r7, #4]
 314 001c 0F2B     		cmp	r3, #15
 315 001e F5D9     		bls	.L9
 283:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 316              		.loc 1 284 0 is_stmt 1
 317 0020 BD46     		mov	sp, r7
 318 0022 02B0     		add	sp, sp, #8
 319              		@ sp needed
 320 0024 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE37:
 323              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 324 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 325              		.align	2
 326              		.global	CapSense_InitializeEnabledBaselines
 327              		.code	16
 328              		.thumb_func
 329              		.type	CapSense_InitializeEnabledBaselines, %function
 330              	CapSense_InitializeEnabledBaselines:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 12


 331              	.LFB38:
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 295:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 297:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 300:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 302:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 332              		.loc 1 312 0
 333              		.cfi_startproc
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 82B0     		sub	sp, sp, #8
 339              		.cfi_def_cfa_offset 16
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 313:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 314:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 342              		.loc 1 316 0
 343 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 317:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 344              		.loc 1 317 0
 345 000a C046     		mov	r8, r8
 346              	.L11:
 347              		.loc 1 317 0 is_stmt 0 discriminator 1
 348 000c FFF7FEFF 		bl	CapSense_IsBusy
 349 0010 031E     		sub	r3, r0, #0
 350 0012 FBD1     		bne	.L11
 318:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 319:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 320:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 13


 322:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 351              		.loc 1 322 0 is_stmt 1
 352 0014 0023     		mov	r3, #0
 353 0016 7B60     		str	r3, [r7, #4]
 354 0018 11E0     		b	.L12
 355              	.L14:
 323:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 324:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 356              		.loc 1 324 0
 357 001a 0C4A     		ldr	r2, .L15
 358 001c 7B68     		ldr	r3, [r7, #4]
 359 001e 101C     		mov	r0, r2
 360 0020 191C     		mov	r1, r3
 361 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 362 0026 031C     		mov	r3, r0
 363 0028 3B60     		str	r3, [r7]
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 326:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 327:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 364              		.loc 1 327 0
 365 002a 3B68     		ldr	r3, [r7]
 366 002c 002B     		cmp	r3, #0
 367 002e 03D0     		beq	.L13
 328:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 329:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 330:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 368              		.loc 1 330 0
 369 0030 7B68     		ldr	r3, [r7, #4]
 370 0032 181C     		mov	r0, r3
 371 0034 FFF7FEFF 		bl	CapSense_BaseInit
 372              	.L13:
 322:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 373              		.loc 1 322 0 discriminator 2
 374 0038 7B68     		ldr	r3, [r7, #4]
 375 003a 0133     		add	r3, r3, #1
 376 003c 7B60     		str	r3, [r7, #4]
 377              	.L12:
 322:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 378              		.loc 1 322 0 is_stmt 0 discriminator 1
 379 003e 7B68     		ldr	r3, [r7, #4]
 380 0040 0F2B     		cmp	r3, #15
 381 0042 EAD9     		bls	.L14
 331:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 332:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 382              		.loc 1 333 0 is_stmt 1
 383 0044 BD46     		mov	sp, r7
 384 0046 02B0     		add	sp, sp, #8
 385              		@ sp needed
 386 0048 80BD     		pop	{r7, pc}
 387              	.L16:
 388 004a C046     		.align	2
 389              	.L15:
 390 004c 00000000 		.word	CapSense_sensorEnableMask
 391              		.cfi_endproc
 392              	.LFE38:
 393              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 14


 394              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 395              		.align	2
 396              		.global	CapSense_UpdateBaselineNoThreshold
 397              		.code	16
 398              		.thumb_func
 399              		.type	CapSense_UpdateBaselineNoThreshold, %function
 400              	CapSense_UpdateBaselineNoThreshold:
 401              	.LFB39:
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 356:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 358:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 359:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 360:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 364:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 365:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 367:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 369:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 370:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 372:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 373:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 374:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 375:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 376:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 377:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 402              		.loc 1 377 0
 403              		.cfi_startproc
 404 0000 90B5     		push	{r4, r7, lr}
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 15


 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 87B0     		sub	sp, sp, #28
 410              		.cfi_def_cfa_offset 40
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 414              		.loc 1 382 0
 415 0008 0F23     		mov	r3, #15
 416 000a FB18     		add	r3, r7, r3
 417 000c 7E49     		ldr	r1, .L30
 418 000e 7A68     		ldr	r2, [r7, #4]
 419 0010 8A18     		add	r2, r1, r2
 420 0012 1278     		ldrb	r2, [r2]
 421 0014 1A70     		strb	r2, [r3]
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 422              		.loc 1 391 0
 423 0016 0F23     		mov	r3, #15
 424 0018 FB18     		add	r3, r7, r3
 425 001a 1A78     		ldrb	r2, [r3]
 426 001c 0E23     		mov	r3, #14
 427 001e FB18     		add	r3, r7, r3
 428 0020 7A49     		ldr	r1, .L30+4
 429 0022 8A5C     		ldrb	r2, [r1, r2]
 430 0024 1A70     		strb	r2, [r3]
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 431              		.loc 1 392 0
 432 0026 1023     		mov	r3, #16
 433 0028 FB18     		add	r3, r7, r3
 434 002a 794A     		ldr	r2, .L30+8
 435 002c 7968     		ldr	r1, [r7, #4]
 436 002e 4900     		lsl	r1, r1, #1
 437 0030 8A5A     		ldrh	r2, [r1, r2]
 438 0032 1A80     		strh	r2, [r3]
 393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 439              		.loc 1 395 0
 440 0034 774B     		ldr	r3, .L30+12
 441 0036 1B78     		ldrb	r3, [r3]
 442 0038 002B     		cmp	r3, #0
 443 003a 15D0     		beq	.L18
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 16


 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 410:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 444              		.loc 1 416 0
 445 003c 764B     		ldr	r3, .L30+16
 446 003e 7A68     		ldr	r2, [r7, #4]
 447 0040 5200     		lsl	r2, r2, #1
 448 0042 D25A     		ldrh	r2, [r2, r3]
 449 0044 1023     		mov	r3, #16
 450 0046 FC18     		add	r4, r7, r3
 451 0048 1023     		mov	r3, #16
 452 004a FB18     		add	r3, r7, r3
 453 004c 1B88     		ldrh	r3, [r3]
 454 004e 181C     		mov	r0, r3
 455 0050 111C     		mov	r1, r2
 456 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 457 0056 031C     		mov	r3, r0
 458 0058 2380     		strh	r3, [r4]
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 459              		.loc 1 417 0
 460 005a 6F4B     		ldr	r3, .L30+16
 461 005c 7A68     		ldr	r2, [r7, #4]
 462 005e 5200     		lsl	r2, r2, #1
 463 0060 1021     		mov	r1, #16
 464 0062 7918     		add	r1, r7, r1
 465 0064 0988     		ldrh	r1, [r1]
 466 0066 D152     		strh	r1, [r2, r3]
 467              	.L18:
 418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 17


 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 436:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 468              		.loc 1 438 0
 469 0068 7B68     		ldr	r3, [r7, #4]
 470 006a DAB2     		uxtb	r2, r3
 471 006c 6B49     		ldr	r1, .L30+20
 472 006e 684B     		ldr	r3, .L30+8
 473 0070 081C     		mov	r0, r1
 474 0072 111C     		mov	r1, r2
 475 0074 1A1C     		mov	r2, r3
 476 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 440:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 477              		.loc 1 443 0
 478 007a 694B     		ldr	r3, .L30+24
 479 007c 7A68     		ldr	r2, [r7, #4]
 480 007e 5200     		lsl	r2, r2, #1
 481 0080 D35A     		ldrh	r3, [r2, r3]
 482 0082 1022     		mov	r2, #16
 483 0084 BA18     		add	r2, r7, r2
 484 0086 1288     		ldrh	r2, [r2]
 485 0088 9A42     		cmp	r2, r3
 486 008a 12D3     		bcc	.L19
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 487              		.loc 1 445 0
 488 008c 654A     		ldr	r2, .L30+28
 489 008e 7B68     		ldr	r3, [r7, #4]
 490 0090 D318     		add	r3, r2, r3
 491 0092 0022     		mov	r2, #0
 492 0094 1A70     		strb	r2, [r3]
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 493              		.loc 1 446 0
 494 0096 624B     		ldr	r3, .L30+24
 495 0098 7A68     		ldr	r2, [r7, #4]
 496 009a 5200     		lsl	r2, r2, #1
 497 009c D25A     		ldrh	r2, [r2, r3]
 498 009e 1223     		mov	r3, #18
 499 00a0 FB18     		add	r3, r7, r3
 500 00a2 1021     		mov	r1, #16
 501 00a4 7918     		add	r1, r7, r1
 502 00a6 0988     		ldrh	r1, [r1]
 503 00a8 8A1A     		sub	r2, r1, r2
 504 00aa 1A80     		strh	r2, [r3]
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 505              		.loc 1 447 0
 506 00ac 0123     		mov	r3, #1
 507 00ae 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 18


 508 00b0 0CE0     		b	.L20
 509              	.L19:
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 510              		.loc 1 451 0
 511 00b2 5B4B     		ldr	r3, .L30+24
 512 00b4 7A68     		ldr	r2, [r7, #4]
 513 00b6 5200     		lsl	r2, r2, #1
 514 00b8 D15A     		ldrh	r1, [r2, r3]
 515 00ba 1223     		mov	r3, #18
 516 00bc FB18     		add	r3, r7, r3
 517 00be 1022     		mov	r2, #16
 518 00c0 BA18     		add	r2, r7, r2
 519 00c2 1288     		ldrh	r2, [r2]
 520 00c4 8A1A     		sub	r2, r1, r2
 521 00c6 1A80     		strh	r2, [r3]
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 522              		.loc 1 452 0
 523 00c8 0023     		mov	r3, #0
 524 00ca 7B61     		str	r3, [r7, #20]
 525              	.L20:
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 454:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 526              		.loc 1 456 0
 527 00cc 7B69     		ldr	r3, [r7, #20]
 528 00ce 002B     		cmp	r3, #0
 529 00d0 2AD1     		bne	.L21
 530              		.loc 1 456 0 is_stmt 0 discriminator 1
 531 00d2 0F23     		mov	r3, #15
 532 00d4 FB18     		add	r3, r7, r3
 533 00d6 1B78     		ldrb	r3, [r3]
 534 00d8 534A     		ldr	r2, .L30+32
 535 00da D35C     		ldrb	r3, [r2, r3]
 536 00dc 9BB2     		uxth	r3, r3
 537 00de 1222     		mov	r2, #18
 538 00e0 BA18     		add	r2, r7, r2
 539 00e2 1288     		ldrh	r2, [r2]
 540 00e4 9A42     		cmp	r2, r3
 541 00e6 1FD9     		bls	.L21
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 542              		.loc 1 461 0 is_stmt 1
 543 00e8 4E4A     		ldr	r2, .L30+28
 544 00ea 7B68     		ldr	r3, [r7, #4]
 545 00ec D318     		add	r3, r2, r3
 546 00ee 1A78     		ldrb	r2, [r3]
 547 00f0 4E49     		ldr	r1, .L30+36
 548 00f2 7B68     		ldr	r3, [r7, #4]
 549 00f4 CB18     		add	r3, r1, r3
 550 00f6 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 19


 551 00f8 9A42     		cmp	r2, r3
 552 00fa 09D3     		bcc	.L22
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 553              		.loc 1 463 0
 554 00fc 7B68     		ldr	r3, [r7, #4]
 555 00fe 181C     		mov	r0, r3
 556 0100 FFF7FEFF 		bl	CapSense_BaseInit
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 557              		.loc 1 464 0
 558 0104 474A     		ldr	r2, .L30+28
 559 0106 7B68     		ldr	r3, [r7, #4]
 560 0108 D318     		add	r3, r2, r3
 561 010a 0022     		mov	r2, #0
 562 010c 1A70     		strb	r2, [r3]
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 563              		.loc 1 461 0
 564 010e 51E0     		b	.L24
 565              	.L22:
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 566              		.loc 1 468 0
 567 0110 444A     		ldr	r2, .L30+28
 568 0112 7B68     		ldr	r3, [r7, #4]
 569 0114 D318     		add	r3, r2, r3
 570 0116 1B78     		ldrb	r3, [r3]
 571 0118 0133     		add	r3, r3, #1
 572 011a D9B2     		uxtb	r1, r3
 573 011c 414A     		ldr	r2, .L30+28
 574 011e 7B68     		ldr	r3, [r7, #4]
 575 0120 D318     		add	r3, r2, r3
 576 0122 0A1C     		add	r2, r1, #0
 577 0124 1A70     		strb	r2, [r3]
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 578              		.loc 1 461 0
 579 0126 45E0     		b	.L24
 580              	.L21:
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 581              		.loc 1 476 0
 582 0128 0E23     		mov	r3, #14
 583 012a FB18     		add	r3, r7, r3
 584 012c 1B78     		ldrb	r3, [r3]
 585 012e 9BB2     		uxth	r3, r3
 586 0130 1222     		mov	r2, #18
 587 0132 BA18     		add	r2, r7, r2
 588 0134 1288     		ldrh	r2, [r2]
 589 0136 9A42     		cmp	r2, r3
 590 0138 0DD9     		bls	.L25
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 20


 477:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 591              		.loc 1 477 0 discriminator 1
 592 013a 0F23     		mov	r3, #15
 593 013c FB18     		add	r3, r7, r3
 594 013e 1B78     		ldrb	r3, [r3]
 595 0140 394A     		ldr	r2, .L30+32
 596 0142 D35C     		ldrb	r3, [r2, r3]
 597 0144 9BB2     		uxth	r3, r3
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 598              		.loc 1 476 0 discriminator 1
 599 0146 1222     		mov	r2, #18
 600 0148 BA18     		add	r2, r7, r2
 601 014a 1288     		ldrh	r2, [r2]
 602 014c 9A42     		cmp	r2, r3
 603 014e 31D2     		bcs	.L24
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 604              		.loc 1 478 0
 605 0150 7B69     		ldr	r3, [r7, #20]
 606 0152 002B     		cmp	r3, #0
 607 0154 2ED1     		bne	.L24
 608              	.L25:
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 609              		.loc 1 489 0
 610 0156 324B     		ldr	r3, .L30+24
 611 0158 7A68     		ldr	r2, [r7, #4]
 612 015a 5200     		lsl	r2, r2, #1
 613 015c D35A     		ldrh	r3, [r2, r3]
 614 015e 1B02     		lsl	r3, r3, #8
 615 0160 BB60     		str	r3, [r7, #8]
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 616              		.loc 1 490 0
 617 0162 334A     		ldr	r2, .L30+40
 618 0164 7B68     		ldr	r3, [r7, #4]
 619 0166 D318     		add	r3, r2, r3
 620 0168 1B78     		ldrb	r3, [r3]
 621 016a 1A1C     		mov	r2, r3
 622 016c BB68     		ldr	r3, [r7, #8]
 623 016e 1343     		orr	r3, r2
 624 0170 BB60     		str	r3, [r7, #8]
 491:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 625              		.loc 1 493 0
 626 0172 1023     		mov	r3, #16
 627 0174 FB18     		add	r3, r7, r3
 628 0176 1B88     		ldrh	r3, [r3]
 629 0178 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 21


 630 017a D318     		add	r3, r2, r3
 631 017c BB60     		str	r3, [r7, #8]
 494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 632              		.loc 1 496 0
 633 017e 284B     		ldr	r3, .L30+24
 634 0180 7A68     		ldr	r2, [r7, #4]
 635 0182 5200     		lsl	r2, r2, #1
 636 0184 D35A     		ldrh	r3, [r2, r3]
 637 0186 1A1C     		mov	r2, r3
 638 0188 BB68     		ldr	r3, [r7, #8]
 639 018a 9B1A     		sub	r3, r3, r2
 640 018c BB60     		str	r3, [r7, #8]
 497:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 641              		.loc 1 499 0
 642 018e BB68     		ldr	r3, [r7, #8]
 643 0190 1B0A     		lsr	r3, r3, #8
 644 0192 99B2     		uxth	r1, r3
 645 0194 224B     		ldr	r3, .L30+24
 646 0196 7A68     		ldr	r2, [r7, #4]
 647 0198 5200     		lsl	r2, r2, #1
 648 019a D152     		strh	r1, [r2, r3]
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 649              		.loc 1 500 0
 650 019c BB68     		ldr	r3, [r7, #8]
 651 019e D9B2     		uxtb	r1, r3
 652 01a0 234A     		ldr	r2, .L30+40
 653 01a2 7B68     		ldr	r3, [r7, #4]
 654 01a4 D318     		add	r3, r2, r3
 655 01a6 0A1C     		add	r2, r1, #0
 656 01a8 1A70     		strb	r2, [r3]
 501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 657              		.loc 1 502 0
 658 01aa 1E4A     		ldr	r2, .L30+28
 659 01ac 7B68     		ldr	r3, [r7, #4]
 660 01ae D318     		add	r3, r2, r3
 661 01b0 0022     		mov	r2, #0
 662 01b2 1A70     		strb	r2, [r3]
 663              	.L24:
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 664              		.loc 1 509 0
 665 01b4 0E23     		mov	r3, #14
 666 01b6 FB18     		add	r3, r7, r3
 667 01b8 1B78     		ldrb	r3, [r3]
 668 01ba 9BB2     		uxth	r3, r3
 669 01bc 1222     		mov	r2, #18
 670 01be BA18     		add	r2, r7, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 22


 671 01c0 1288     		ldrh	r2, [r2]
 672 01c2 9A42     		cmp	r2, r3
 673 01c4 17D9     		bls	.L26
 674              		.loc 1 509 0 is_stmt 0 discriminator 1
 675 01c6 7B69     		ldr	r3, [r7, #20]
 676 01c8 002B     		cmp	r3, #0
 677 01ca 14D0     		beq	.L26
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 678              		.loc 1 513 0 is_stmt 1
 679 01cc 1223     		mov	r3, #18
 680 01ce FB18     		add	r3, r7, r3
 681 01d0 1B88     		ldrh	r3, [r3]
 682 01d2 FF2B     		cmp	r3, #255
 683 01d4 05D9     		bls	.L27
 514:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 515:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 684              		.loc 1 515 0
 685 01d6 174A     		ldr	r2, .L30+44
 686 01d8 7B68     		ldr	r3, [r7, #4]
 687 01da D318     		add	r3, r2, r3
 688 01dc FF22     		mov	r2, #255
 689 01de 1A70     		strb	r2, [r3]
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 690              		.loc 1 513 0
 691 01e0 0EE0     		b	.L17
 692              	.L27:
 516:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 517:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 518:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 519:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 693              		.loc 1 519 0
 694 01e2 1223     		mov	r3, #18
 695 01e4 FB18     		add	r3, r7, r3
 696 01e6 1B88     		ldrh	r3, [r3]
 697 01e8 D9B2     		uxtb	r1, r3
 698 01ea 124A     		ldr	r2, .L30+44
 699 01ec 7B68     		ldr	r3, [r7, #4]
 700 01ee D318     		add	r3, r2, r3
 701 01f0 0A1C     		add	r2, r1, #0
 702 01f2 1A70     		strb	r2, [r3]
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 703              		.loc 1 513 0
 704 01f4 04E0     		b	.L17
 705              	.L26:
 520:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 521:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 522:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 523:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 524:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 525:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 526:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 527:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 528:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 706              		.loc 1 528 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 23


 707 01f6 0F4A     		ldr	r2, .L30+44
 708 01f8 7B68     		ldr	r3, [r7, #4]
 709 01fa D318     		add	r3, r2, r3
 710 01fc 0022     		mov	r2, #0
 711 01fe 1A70     		strb	r2, [r3]
 712              	.L17:
 529:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 531:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 532:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 533:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 534:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 713              		.loc 1 535 0
 714 0200 BD46     		mov	sp, r7
 715 0202 07B0     		add	sp, sp, #28
 716              		@ sp needed
 717 0204 90BD     		pop	{r4, r7, pc}
 718              	.L31:
 719 0206 C046     		.align	2
 720              	.L30:
 721 0208 00000000 		.word	CapSense_widgetNumber
 722 020c 00000000 		.word	CapSense_noiseThreshold
 723 0210 00000000 		.word	CapSense_sensorRaw
 724 0214 00000000 		.word	CapSense_enableRawFilters
 725 0218 00000000 		.word	CapSense_rawFilterData1
 726 021c 00000000 		.word	CapSense_config
 727 0220 00000000 		.word	CapSense_sensorBaseline
 728 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 729 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 730 022c 00000000 		.word	CapSense_lowBaselineReset
 731 0230 00000000 		.word	CapSense_sensorBaselineLow
 732 0234 00000000 		.word	CapSense_sensorSignal
 733              		.cfi_endproc
 734              	.LFE39:
 735              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 736              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 737              		.align	2
 738              		.global	CapSense_UpdateSensorBaseline
 739              		.code	16
 740              		.thumb_func
 741              		.type	CapSense_UpdateSensorBaseline, %function
 742              	CapSense_UpdateSensorBaseline:
 743              	.LFB40:
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 548:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 24


 549:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 553:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 555:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 559:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 568:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 744              		.loc 1 569 0
 745              		.cfi_startproc
 746 0000 80B5     		push	{r7, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 82B0     		sub	sp, sp, #8
 751              		.cfi_def_cfa_offset 16
 752 0004 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 570:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 571:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 573:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 575:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 576:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 577:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 578:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 580:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 581:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 755              		.loc 1 581 0
 756 0008 7B68     		ldr	r3, [r7, #4]
 757 000a 181C     		mov	r0, r3
 758 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 582:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 584:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 759              		.loc 1 584 0
 760 0010 7B68     		ldr	r3, [r7, #4]
 761 0012 181C     		mov	r0, r3
 762 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 586:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 25


 587:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 588:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 589:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 763              		.loc 1 590 0
 764 0018 BD46     		mov	sp, r7
 765 001a 02B0     		add	sp, sp, #8
 766              		@ sp needed
 767 001c 80BD     		pop	{r7, pc}
 768              		.cfi_endproc
 769              	.LFE40:
 770              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 771 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 772              		.align	2
 773              		.global	CapSense_UpdateEnabledBaselines
 774              		.code	16
 775              		.thumb_func
 776              		.type	CapSense_UpdateEnabledBaselines, %function
 777              	CapSense_UpdateEnabledBaselines:
 778              	.LFB41:
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 779              		.loc 1 623 0
 780              		.cfi_startproc
 781 0000 80B5     		push	{r7, lr}
 782              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 26


 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 624:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 627:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 789              		.loc 1 627 0
 790 0006 0023     		mov	r3, #0
 791 0008 7B60     		str	r3, [r7, #4]
 792 000a 11E0     		b	.L34
 793              	.L36:
 628:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 629:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 794              		.loc 1 629 0
 795 000c 0B4A     		ldr	r2, .L37
 796 000e 7B68     		ldr	r3, [r7, #4]
 797 0010 101C     		mov	r0, r2
 798 0012 191C     		mov	r1, r3
 799 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 800 0018 031C     		mov	r3, r0
 801 001a 3B60     		str	r3, [r7]
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 631:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 802              		.loc 1 631 0
 803 001c 3B68     		ldr	r3, [r7]
 804 001e 002B     		cmp	r3, #0
 805 0020 03D0     		beq	.L35
 632:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 633:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 806              		.loc 1 633 0
 807 0022 7B68     		ldr	r3, [r7, #4]
 808 0024 181C     		mov	r0, r3
 809 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 810              	.L35:
 627:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 811              		.loc 1 627 0 discriminator 2
 812 002a 7B68     		ldr	r3, [r7, #4]
 813 002c 0133     		add	r3, r3, #1
 814 002e 7B60     		str	r3, [r7, #4]
 815              	.L34:
 627:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 816              		.loc 1 627 0 is_stmt 0 discriminator 1
 817 0030 7B68     		ldr	r3, [r7, #4]
 818 0032 0F2B     		cmp	r3, #15
 819 0034 EAD9     		bls	.L36
 634:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 635:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 820              		.loc 1 636 0 is_stmt 1
 821 0036 BD46     		mov	sp, r7
 822 0038 02B0     		add	sp, sp, #8
 823              		@ sp needed
 824 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 27


 825              	.L38:
 826              		.align	2
 827              	.L37:
 828 003c 00000000 		.word	CapSense_sensorEnableMask
 829              		.cfi_endproc
 830              	.LFE41:
 831              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 832              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 833              		.align	2
 834              		.global	CapSense_UpdateWidgetBaseline
 835              		.code	16
 836              		.thumb_func
 837              		.type	CapSense_UpdateWidgetBaseline, %function
 838              	CapSense_UpdateWidgetBaseline:
 839              	.LFB42:
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 654:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 663:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 840              		.loc 1 668 0
 841              		.cfi_startproc
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 88B0     		sub	sp, sp, #32
 847              		.cfi_def_cfa_offset 40
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 28


 850 0006 7860     		str	r0, [r7, #4]
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 671:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 672:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 673:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 675:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 676:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 851              		.loc 1 676 0
 852 0008 164A     		ldr	r2, .L43
 853 000a 7B68     		ldr	r3, [r7, #4]
 854 000c D318     		add	r3, r2, r3
 855 000e 1B78     		ldrb	r3, [r3]
 856 0010 BB61     		str	r3, [r7, #24]
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 678:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 679:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 857              		.loc 1 679 0
 858 0012 154A     		ldr	r2, .L43+4
 859 0014 7B68     		ldr	r3, [r7, #4]
 860 0016 D318     		add	r3, r2, r3
 861 0018 1B78     		ldrb	r3, [r3]
 862 001a 7B61     		str	r3, [r7, #20]
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 681:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 863              		.loc 1 682 0
 864 001c 124A     		ldr	r2, .L43+4
 865 001e 7B68     		ldr	r3, [r7, #4]
 866 0020 D318     		add	r3, r2, r3
 867 0022 1B78     		ldrb	r3, [r3]
 868 0024 1A1C     		mov	r2, r3
 869 0026 BB69     		ldr	r3, [r7, #24]
 870 0028 D318     		add	r3, r2, r3
 871 002a 3B61     		str	r3, [r7, #16]
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 684:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 872              		.loc 1 684 0
 873 002c 7B69     		ldr	r3, [r7, #20]
 874 002e FB61     		str	r3, [r7, #28]
 875 0030 11E0     		b	.L40
 876              	.L42:
 685:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 686:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 877              		.loc 1 686 0
 878 0032 0E4A     		ldr	r2, .L43+8
 879 0034 FB69     		ldr	r3, [r7, #28]
 880 0036 101C     		mov	r0, r2
 881 0038 191C     		mov	r1, r3
 882 003a FFF7FEFF 		bl	CapSense_GetBitValue
 883 003e 031C     		mov	r3, r0
 884 0040 FB60     		str	r3, [r7, #12]
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 688:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 885              		.loc 1 688 0
 886 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 29


 887 0044 002B     		cmp	r3, #0
 888 0046 03D0     		beq	.L41
 689:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 690:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 889              		.loc 1 690 0
 890 0048 FB69     		ldr	r3, [r7, #28]
 891 004a 181C     		mov	r0, r3
 892 004c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 893              	.L41:
 684:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 894              		.loc 1 684 0 discriminator 2
 895 0050 FB69     		ldr	r3, [r7, #28]
 896 0052 0133     		add	r3, r3, #1
 897 0054 FB61     		str	r3, [r7, #28]
 898              	.L40:
 684:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 899              		.loc 1 684 0 is_stmt 0 discriminator 1
 900 0056 FA69     		ldr	r2, [r7, #28]
 901 0058 3B69     		ldr	r3, [r7, #16]
 902 005a 9A42     		cmp	r2, r3
 903 005c E9D3     		bcc	.L42
 691:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 692:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 904              		.loc 1 693 0 is_stmt 1
 905 005e BD46     		mov	sp, r7
 906 0060 08B0     		add	sp, sp, #32
 907              		@ sp needed
 908 0062 80BD     		pop	{r7, pc}
 909              	.L44:
 910              		.align	2
 911              	.L43:
 912 0064 00000000 		.word	CapSense_numberOfSensors
 913 0068 00000000 		.word	CapSense_rawDataIndex
 914 006c 00000000 		.word	CapSense_sensorEnableMask
 915              		.cfi_endproc
 916              	.LFE42:
 917              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 918              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 919              		.align	2
 920              		.global	CapSense_GetBaselineData
 921              		.code	16
 922              		.thumb_func
 923              		.type	CapSense_GetBaselineData, %function
 924              	CapSense_GetBaselineData:
 925              	.LFB43:
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 30


 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 926              		.loc 1 717 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 718:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 937              		.loc 1 718 0
 938 0008 034B     		ldr	r3, .L47
 939 000a 7A68     		ldr	r2, [r7, #4]
 940 000c 5200     		lsl	r2, r2, #1
 941 000e D35A     		ldrh	r3, [r2, r3]
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 942              		.loc 1 719 0
 943 0010 181C     		mov	r0, r3
 944 0012 BD46     		mov	sp, r7
 945 0014 02B0     		add	sp, sp, #8
 946              		@ sp needed
 947 0016 80BD     		pop	{r7, pc}
 948              	.L48:
 949              		.align	2
 950              	.L47:
 951 0018 00000000 		.word	CapSense_sensorBaseline
 952              		.cfi_endproc
 953              	.LFE43:
 954              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 955              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 956              		.align	2
 957              		.global	CapSense_SetBaselineData
 958              		.code	16
 959              		.thumb_func
 960              		.type	CapSense_SetBaselineData, %function
 961              	CapSense_SetBaselineData:
 962              	.LFB44:
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 31


 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 963              		.loc 1 744 0
 964              		.cfi_startproc
 965 0000 80B5     		push	{r7, lr}
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              		.cfi_def_cfa_offset 16
 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0A1C     		mov	r2, r1
 975 000a BB1C     		add	r3, r7, #2
 976 000c 1A80     		strh	r2, [r3]
 745:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 977              		.loc 1 745 0
 978 000e 044B     		ldr	r3, .L50
 979 0010 7A68     		ldr	r2, [r7, #4]
 980 0012 5200     		lsl	r2, r2, #1
 981 0014 B91C     		add	r1, r7, #2
 982 0016 0988     		ldrh	r1, [r1]
 983 0018 D152     		strh	r1, [r2, r3]
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 984              		.loc 1 746 0
 985 001a BD46     		mov	sp, r7
 986 001c 02B0     		add	sp, sp, #8
 987              		@ sp needed
 988 001e 80BD     		pop	{r7, pc}
 989              	.L51:
 990              		.align	2
 991              	.L50:
 992 0020 00000000 		.word	CapSense_sensorBaseline
 993              		.cfi_endproc
 994              	.LFE44:
 995              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 996              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 997              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 32


 998              		.global	CapSense_GetDiffCountData
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	CapSense_GetDiffCountData, %function
 1002              	CapSense_GetDiffCountData:
 1003              	.LFB45:
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1004              		.loc 1 771 0
 1005              		.cfi_startproc
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]
 772:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 1015              		.loc 1 772 0
 1016 0008 034A     		ldr	r2, .L54
 1017 000a 7B68     		ldr	r3, [r7, #4]
 1018 000c D318     		add	r3, r2, r3
 1019 000e 1B78     		ldrb	r3, [r3]
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1020              		.loc 1 773 0
 1021 0010 181C     		mov	r0, r3
 1022 0012 BD46     		mov	sp, r7
 1023 0014 02B0     		add	sp, sp, #8
 1024              		@ sp needed
 1025 0016 80BD     		pop	{r7, pc}
 1026              	.L55:
 1027              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 33


 1028              	.L54:
 1029 0018 00000000 		.word	CapSense_sensorSignal
 1030              		.cfi_endproc
 1031              	.LFE45:
 1032              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 1033              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_SetDiffCountData
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_SetDiffCountData, %function
 1039              	CapSense_SetDiffCountData:
 1040              	.LFB46:
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1041              		.loc 1 798 0
 1042              		.cfi_startproc
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 1052 0008 0A1C     		mov	r2, r1
 1053 000a FB1C     		add	r3, r7, #3
 1054 000c 1A70     		strb	r2, [r3]
 799:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1055              		.loc 1 799 0
 1056 000e 044A     		ldr	r2, .L57
 1057 0010 7B68     		ldr	r3, [r7, #4]
 1058 0012 D318     		add	r3, r2, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 34


 1059 0014 FA1C     		add	r2, r7, #3
 1060 0016 1278     		ldrb	r2, [r2]
 1061 0018 1A70     		strb	r2, [r3]
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1062              		.loc 1 800 0
 1063 001a BD46     		mov	sp, r7
 1064 001c 02B0     		add	sp, sp, #8
 1065              		@ sp needed
 1066 001e 80BD     		pop	{r7, pc}
 1067              	.L58:
 1068              		.align	2
 1069              	.L57:
 1070 0020 00000000 		.word	CapSense_sensorSignal
 1071              		.cfi_endproc
 1072              	.LFE46:
 1073              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1074              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1075              		.align	2
 1076              		.global	CapSense_GetFingerThreshold
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	CapSense_GetFingerThreshold, %function
 1080              	CapSense_GetFingerThreshold:
 1081              	.LFB47:
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1082              		.loc 1 825 0
 1083              		.cfi_startproc
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 35


 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 7860     		str	r0, [r7, #4]
 826:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1093              		.loc 1 826 0
 1094 0008 034A     		ldr	r2, .L61
 1095 000a 7B68     		ldr	r3, [r7, #4]
 1096 000c D318     		add	r3, r2, r3
 1097 000e 1B78     		ldrb	r3, [r3]
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1098              		.loc 1 827 0
 1099 0010 181C     		mov	r0, r3
 1100 0012 BD46     		mov	sp, r7
 1101 0014 02B0     		add	sp, sp, #8
 1102              		@ sp needed
 1103 0016 80BD     		pop	{r7, pc}
 1104              	.L62:
 1105              		.align	2
 1106              	.L61:
 1107 0018 00000000 		.word	CapSense_fingerThreshold
 1108              		.cfi_endproc
 1109              	.LFE47:
 1110              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1111              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1112              		.align	2
 1113              		.global	CapSense_GetNoiseThreshold
 1114              		.code	16
 1115              		.thumb_func
 1116              		.type	CapSense_GetNoiseThreshold, %function
 1117              	CapSense_GetNoiseThreshold:
 1118              	.LFB48:
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1119              		.loc 1 852 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 36


 1120              		.cfi_startproc
 1121 0000 80B5     		push	{r7, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 82B0     		sub	sp, sp, #8
 1126              		.cfi_def_cfa_offset 16
 1127 0004 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 1129 0006 7860     		str	r0, [r7, #4]
 853:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1130              		.loc 1 853 0
 1131 0008 034A     		ldr	r2, .L65
 1132 000a 7B68     		ldr	r3, [r7, #4]
 1133 000c D318     		add	r3, r2, r3
 1134 000e 1B78     		ldrb	r3, [r3]
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1135              		.loc 1 854 0
 1136 0010 181C     		mov	r0, r3
 1137 0012 BD46     		mov	sp, r7
 1138 0014 02B0     		add	sp, sp, #8
 1139              		@ sp needed
 1140 0016 80BD     		pop	{r7, pc}
 1141              	.L66:
 1142              		.align	2
 1143              	.L65:
 1144 0018 00000000 		.word	CapSense_noiseThreshold
 1145              		.cfi_endproc
 1146              	.LFE48:
 1147              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1148              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1149              		.align	2
 1150              		.global	CapSense_GetFingerHysteresis
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	CapSense_GetFingerHysteresis, %function
 1154              	CapSense_GetFingerHysteresis:
 1155              	.LFB49:
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 37


 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1156              		.loc 1 880 0
 1157              		.cfi_startproc
 1158 0000 80B5     		push	{r7, lr}
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 82B0     		sub	sp, sp, #8
 1163              		.cfi_def_cfa_offset 16
 1164 0004 00AF     		add	r7, sp, #0
 1165              		.cfi_def_cfa_register 7
 1166 0006 7860     		str	r0, [r7, #4]
 881:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1167              		.loc 1 881 0
 1168 0008 034A     		ldr	r2, .L69
 1169 000a 7B68     		ldr	r3, [r7, #4]
 1170 000c D318     		add	r3, r2, r3
 1171 000e 1B78     		ldrb	r3, [r3]
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1172              		.loc 1 882 0
 1173 0010 181C     		mov	r0, r3
 1174 0012 BD46     		mov	sp, r7
 1175 0014 02B0     		add	sp, sp, #8
 1176              		@ sp needed
 1177 0016 80BD     		pop	{r7, pc}
 1178              	.L70:
 1179              		.align	2
 1180              	.L69:
 1181 0018 00000000 		.word	CapSense_hysteresis
 1182              		.cfi_endproc
 1183              	.LFE49:
 1184              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1185              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1186              		.align	2
 1187              		.global	CapSense_GetNegativeNoiseThreshold
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1191              	CapSense_GetNegativeNoiseThreshold:
 1192              	.LFB50:
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 38


 894:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 896:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 897:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 898:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 899:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 900:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 901:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 902:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 903:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 904:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 905:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 906:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 908:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1193              		.loc 1 908 0
 1194              		.cfi_startproc
 1195 0000 80B5     		push	{r7, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 82B0     		sub	sp, sp, #8
 1200              		.cfi_def_cfa_offset 16
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 1203 0006 7860     		str	r0, [r7, #4]
 909:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1204              		.loc 1 910 0
 1205 0008 034A     		ldr	r2, .L73
 1206 000a 7B68     		ldr	r3, [r7, #4]
 1207 000c D318     		add	r3, r2, r3
 1208 000e 1B78     		ldrb	r3, [r3]
 911:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 913:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 914:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1209              		.loc 1 914 0
 1210 0010 181C     		mov	r0, r3
 1211 0012 BD46     		mov	sp, r7
 1212 0014 02B0     		add	sp, sp, #8
 1213              		@ sp needed
 1214 0016 80BD     		pop	{r7, pc}
 1215              	.L74:
 1216              		.align	2
 1217              	.L73:
 1218 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1219              		.cfi_endproc
 1220              	.LFE50:
 1221              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1222              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1223              		.align	2
 1224              		.global	CapSense_SetFingerThreshold
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	CapSense_SetFingerThreshold, %function
 1228              	CapSense_SetFingerThreshold:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 39


 1229              	.LFB51:
 915:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 916:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 917:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1230              		.loc 1 941 0
 1231              		.cfi_startproc
 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 82B0     		sub	sp, sp, #8
 1237              		.cfi_def_cfa_offset 16
 1238 0004 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
 1240 0006 7860     		str	r0, [r7, #4]
 1241 0008 0A1C     		mov	r2, r1
 1242 000a FB1C     		add	r3, r7, #3
 1243 000c 1A70     		strb	r2, [r3]
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1244              		.loc 1 942 0
 1245 000e 044A     		ldr	r2, .L76
 1246 0010 7B68     		ldr	r3, [r7, #4]
 1247 0012 D318     		add	r3, r2, r3
 1248 0014 FA1C     		add	r2, r7, #3
 1249 0016 1278     		ldrb	r2, [r2]
 1250 0018 1A70     		strb	r2, [r3]
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1251              		.loc 1 943 0
 1252 001a BD46     		mov	sp, r7
 1253 001c 02B0     		add	sp, sp, #8
 1254              		@ sp needed
 1255 001e 80BD     		pop	{r7, pc}
 1256              	.L77:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 40


 1257              		.align	2
 1258              	.L76:
 1259 0020 00000000 		.word	CapSense_fingerThreshold
 1260              		.cfi_endproc
 1261              	.LFE51:
 1262              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1263              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1264              		.align	2
 1265              		.global	CapSense_SetNoiseThreshold
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	CapSense_SetNoiseThreshold, %function
 1269              	CapSense_SetNoiseThreshold:
 1270              	.LFB52:
 944:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1271              		.loc 1 969 0
 1272              		.cfi_startproc
 1273 0000 80B5     		push	{r7, lr}
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 7, -8
 1276              		.cfi_offset 14, -4
 1277 0002 82B0     		sub	sp, sp, #8
 1278              		.cfi_def_cfa_offset 16
 1279 0004 00AF     		add	r7, sp, #0
 1280              		.cfi_def_cfa_register 7
 1281 0006 7860     		str	r0, [r7, #4]
 1282 0008 0A1C     		mov	r2, r1
 1283 000a FB1C     		add	r3, r7, #3
 1284 000c 1A70     		strb	r2, [r3]
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1285              		.loc 1 970 0
 1286 000e 044A     		ldr	r2, .L79
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 41


 1287 0010 7B68     		ldr	r3, [r7, #4]
 1288 0012 D318     		add	r3, r2, r3
 1289 0014 FA1C     		add	r2, r7, #3
 1290 0016 1278     		ldrb	r2, [r2]
 1291 0018 1A70     		strb	r2, [r3]
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1292              		.loc 1 971 0
 1293 001a BD46     		mov	sp, r7
 1294 001c 02B0     		add	sp, sp, #8
 1295              		@ sp needed
 1296 001e 80BD     		pop	{r7, pc}
 1297              	.L80:
 1298              		.align	2
 1299              	.L79:
 1300 0020 00000000 		.word	CapSense_noiseThreshold
 1301              		.cfi_endproc
 1302              	.LFE52:
 1303              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1304              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1305              		.align	2
 1306              		.global	CapSense_SetFingerHysteresis
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	CapSense_SetFingerHysteresis, %function
 1310              	CapSense_SetFingerHysteresis:
 1311              	.LFB53:
 972:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1312              		.loc 1 997 0
 1313              		.cfi_startproc
 1314 0000 80B5     		push	{r7, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 42


 1317              		.cfi_offset 14, -4
 1318 0002 82B0     		sub	sp, sp, #8
 1319              		.cfi_def_cfa_offset 16
 1320 0004 00AF     		add	r7, sp, #0
 1321              		.cfi_def_cfa_register 7
 1322 0006 7860     		str	r0, [r7, #4]
 1323 0008 0A1C     		mov	r2, r1
 1324 000a FB1C     		add	r3, r7, #3
 1325 000c 1A70     		strb	r2, [r3]
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1326              		.loc 1 998 0
 1327 000e 044A     		ldr	r2, .L82
 1328 0010 7B68     		ldr	r3, [r7, #4]
 1329 0012 D318     		add	r3, r2, r3
 1330 0014 FA1C     		add	r2, r7, #3
 1331 0016 1278     		ldrb	r2, [r2]
 1332 0018 1A70     		strb	r2, [r3]
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1333              		.loc 1 999 0
 1334 001a BD46     		mov	sp, r7
 1335 001c 02B0     		add	sp, sp, #8
 1336              		@ sp needed
 1337 001e 80BD     		pop	{r7, pc}
 1338              	.L83:
 1339              		.align	2
 1340              	.L82:
 1341 0020 00000000 		.word	CapSense_hysteresis
 1342              		.cfi_endproc
 1343              	.LFE53:
 1344              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1345              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1346              		.align	2
 1347              		.global	CapSense_SetNegativeNoiseThreshold
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1351              	CapSense_SetNegativeNoiseThreshold:
 1352              	.LFB54:
1000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1001:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 43


1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1353              		.loc 1 1026 0
 1354              		.cfi_startproc
 1355 0000 80B5     		push	{r7, lr}
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 82B0     		sub	sp, sp, #8
 1360              		.cfi_def_cfa_offset 16
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 7860     		str	r0, [r7, #4]
 1364 0008 0A1C     		mov	r2, r1
 1365 000a FB1C     		add	r3, r7, #3
 1366 000c 1A70     		strb	r2, [r3]
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1367              		.loc 1 1027 0
 1368 000e 044A     		ldr	r2, .L85
 1369 0010 7B68     		ldr	r3, [r7, #4]
 1370 0012 D318     		add	r3, r2, r3
 1371 0014 FA1C     		add	r2, r7, #3
 1372 0016 1278     		ldrb	r2, [r2]
 1373 0018 1A70     		strb	r2, [r3]
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1374              		.loc 1 1028 0
 1375 001a BD46     		mov	sp, r7
 1376 001c 02B0     		add	sp, sp, #8
 1377              		@ sp needed
 1378 001e 80BD     		pop	{r7, pc}
 1379              	.L86:
 1380              		.align	2
 1381              	.L85:
 1382 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1383              		.cfi_endproc
 1384              	.LFE54:
 1385              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1386              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1387              		.align	2
 1388              		.global	CapSense_SetDebounce
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	CapSense_SetDebounce, %function
 1392              	CapSense_SetDebounce:
 1393              	.LFB55:
1029:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 44


1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1394              		.loc 1 1054 0
 1395              		.cfi_startproc
 1396 0000 80B5     		push	{r7, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400 0002 82B0     		sub	sp, sp, #8
 1401              		.cfi_def_cfa_offset 16
 1402 0004 00AF     		add	r7, sp, #0
 1403              		.cfi_def_cfa_register 7
 1404 0006 7860     		str	r0, [r7, #4]
 1405 0008 0A1C     		mov	r2, r1
 1406 000a FB1C     		add	r3, r7, #3
 1407 000c 1A70     		strb	r2, [r3]
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1408              		.loc 1 1055 0
 1409 000e 044A     		ldr	r2, .L88
 1410 0010 7B68     		ldr	r3, [r7, #4]
 1411 0012 D318     		add	r3, r2, r3
 1412 0014 FA1C     		add	r2, r7, #3
 1413 0016 1278     		ldrb	r2, [r2]
 1414 0018 1A70     		strb	r2, [r3]
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1415              		.loc 1 1056 0
 1416 001a BD46     		mov	sp, r7
 1417 001c 02B0     		add	sp, sp, #8
 1418              		@ sp needed
 1419 001e 80BD     		pop	{r7, pc}
 1420              	.L89:
 1421              		.align	2
 1422              	.L88:
 1423 0020 00000000 		.word	CapSense_debounce
 1424              		.cfi_endproc
 1425              	.LFE55:
 1426              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1427              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1428              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 45


 1429              		.global	CapSense_SetLowBaselineReset
 1430              		.code	16
 1431              		.thumb_func
 1432              		.type	CapSense_SetLowBaselineReset, %function
 1433              	CapSense_SetLowBaselineReset:
 1434              	.LFB56:
1057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1063:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1064:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1065:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1066:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1067:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1068:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1069:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1070:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1071:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1072:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1073:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1074:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1075:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1076:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1077:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1078:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1079:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1080:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1081:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1082:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1435              		.loc 1 1082 0
 1436              		.cfi_startproc
 1437 0000 80B5     		push	{r7, lr}
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 82B0     		sub	sp, sp, #8
 1442              		.cfi_def_cfa_offset 16
 1443 0004 00AF     		add	r7, sp, #0
 1444              		.cfi_def_cfa_register 7
 1445 0006 7860     		str	r0, [r7, #4]
 1446 0008 0A1C     		mov	r2, r1
 1447 000a FB1C     		add	r3, r7, #3
 1448 000c 1A70     		strb	r2, [r3]
1083:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1449              		.loc 1 1083 0
 1450 000e 044A     		ldr	r2, .L91
 1451 0010 7B68     		ldr	r3, [r7, #4]
 1452 0012 D318     		add	r3, r2, r3
 1453 0014 FA1C     		add	r2, r7, #3
 1454 0016 1278     		ldrb	r2, [r2]
 1455 0018 1A70     		strb	r2, [r3]
1084:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1456              		.loc 1 1084 0
 1457 001a BD46     		mov	sp, r7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 46


 1458 001c 02B0     		add	sp, sp, #8
 1459              		@ sp needed
 1460 001e 80BD     		pop	{r7, pc}
 1461              	.L92:
 1462              		.align	2
 1463              	.L91:
 1464 0020 00000000 		.word	CapSense_lowBaselineReset
 1465              		.cfi_endproc
 1466              	.LFE56:
 1467              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1468              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1469              		.align	2
 1470              		.global	CapSense_CheckIsSensorActive
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	CapSense_CheckIsSensorActive, %function
 1474              	CapSense_CheckIsSensorActive:
 1475              	.LFB57:
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1122:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1123:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 47


1124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1126:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1128:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1476              		.loc 1 1128 0
 1477              		.cfi_startproc
 1478 0000 80B5     		push	{r7, lr}
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 84B0     		sub	sp, sp, #16
 1483              		.cfi_def_cfa_offset 24
 1484 0004 00AF     		add	r7, sp, #0
 1485              		.cfi_def_cfa_register 7
 1486 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1132:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1136:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1487              		.loc 1 1138 0
 1488 0008 0E23     		mov	r3, #14
 1489 000a FB18     		add	r3, r7, r3
 1490 000c 4B49     		ldr	r1, .L104
 1491 000e 7A68     		ldr	r2, [r7, #4]
 1492 0010 8A18     		add	r2, r1, r2
 1493 0012 1278     		ldrb	r2, [r2]
 1494 0014 1A70     		strb	r2, [r3]
1139:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1495              		.loc 1 1140 0
 1496 0016 0E23     		mov	r3, #14
 1497 0018 FB18     		add	r3, r7, r3
 1498 001a 1A78     		ldrb	r2, [r3]
 1499 001c 0D23     		mov	r3, #13
 1500 001e FB18     		add	r3, r7, r3
 1501 0020 4749     		ldr	r1, .L104+4
 1502 0022 8A5C     		ldrb	r2, [r1, r2]
 1503 0024 1A70     		strb	r2, [r3]
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1504              		.loc 1 1141 0
 1505 0026 0E23     		mov	r3, #14
 1506 0028 FB18     		add	r3, r7, r3
 1507 002a 1A78     		ldrb	r2, [r3]
 1508 002c 0C23     		mov	r3, #12
 1509 002e FB18     		add	r3, r7, r3
 1510 0030 4449     		ldr	r1, .L104+8
 1511 0032 8A5C     		ldrb	r2, [r1, r2]
 1512 0034 1A70     		strb	r2, [r3]
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1513              		.loc 1 1142 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 48


 1514 0036 0E23     		mov	r3, #14
 1515 0038 FB18     		add	r3, r7, r3
 1516 003a 1A78     		ldrb	r2, [r3]
 1517 003c 0B23     		mov	r3, #11
 1518 003e FB18     		add	r3, r7, r3
 1519 0040 4149     		ldr	r1, .L104+12
 1520 0042 8A5C     		ldrb	r2, [r1, r2]
 1521 0044 1A70     		strb	r2, [r3]
1143:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 1522              		.loc 1 1144 0
 1523 0046 0E23     		mov	r3, #14
 1524 0048 FB18     		add	r3, r7, r3
 1525 004a 1B78     		ldrb	r3, [r3]
 1526 004c 012B     		cmp	r3, #1
 1527 004e 0AD8     		bhi	.L94
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1528              		.loc 1 1146 0
 1529 0050 0F23     		mov	r3, #15
 1530 0052 FB18     		add	r3, r7, r3
 1531 0054 0622     		mov	r2, #6
 1532 0056 1A70     		strb	r2, [r3]
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 1533              		.loc 1 1147 0
 1534 0058 0F23     		mov	r3, #15
 1535 005a FB18     		add	r3, r7, r3
 1536 005c 1B78     		ldrb	r3, [r3]
 1537 005e 3B4A     		ldr	r2, .L104+16
 1538 0060 0121     		mov	r1, #1
 1539 0062 D154     		strb	r1, [r2, r3]
 1540 0064 06E0     		b	.L95
 1541              	.L94:
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u);
 1542              		.loc 1 1151 0
 1543 0066 0F23     		mov	r3, #15
 1544 0068 FB18     		add	r3, r7, r3
 1545 006a 0E22     		mov	r2, #14
 1546 006c BA18     		add	r2, r7, r2
 1547 006e 1278     		ldrb	r2, [r2]
 1548 0070 023A     		sub	r2, r2, #2
 1549 0072 1A70     		strb	r2, [r3]
 1550              	.L95:
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1551              		.loc 1 1156 0
 1552 0074 364A     		ldr	r2, .L104+20
 1553 0076 7B68     		ldr	r3, [r7, #4]
 1554 0078 101C     		mov	r0, r2
 1555 007a 191C     		mov	r1, r3
 1556 007c FFF7FEFF 		bl	CapSense_GetBitValue
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 49


 1557 0080 031E     		sub	r3, r0, #0
 1558 0082 1DD0     		beq	.L96
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1159:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1559              		.loc 1 1159 0
 1560 0084 334A     		ldr	r2, .L104+24
 1561 0086 7B68     		ldr	r3, [r7, #4]
 1562 0088 D318     		add	r3, r2, r3
 1563 008a 1B78     		ldrb	r3, [r3]
 1564 008c 191C     		mov	r1, r3
 1565 008e 0D23     		mov	r3, #13
 1566 0090 FB18     		add	r3, r7, r3
 1567 0092 1A78     		ldrb	r2, [r3]
 1568 0094 0C23     		mov	r3, #12
 1569 0096 FB18     		add	r3, r7, r3
 1570 0098 1B78     		ldrb	r3, [r3]
 1571 009a D31A     		sub	r3, r2, r3
 1572 009c 9942     		cmp	r1, r3
 1573 009e 3DDA     		bge	.L98
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1161:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1574              		.loc 1 1161 0
 1575 00a0 2B4A     		ldr	r2, .L104+20
 1576 00a2 7B68     		ldr	r3, [r7, #4]
 1577 00a4 101C     		mov	r0, r2
 1578 00a6 191C     		mov	r1, r3
 1579 00a8 0022     		mov	r2, #0
 1580 00aa FFF7FEFF 		bl	CapSense_SetBitValue
1162:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1163:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1581              		.loc 1 1163 0
 1582 00ae 0F23     		mov	r3, #15
 1583 00b0 FB18     		add	r3, r7, r3
 1584 00b2 1B78     		ldrb	r3, [r3]
 1585 00b4 254A     		ldr	r2, .L104+16
 1586 00b6 0B21     		mov	r1, #11
 1587 00b8 7918     		add	r1, r7, r1
 1588 00ba 0978     		ldrb	r1, [r1]
 1589 00bc D154     		strb	r1, [r2, r3]
 1590 00be 2DE0     		b	.L98
 1591              	.L96:
1164:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1165:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1166:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1167:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1168:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1169:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1592              		.loc 1 1169 0
 1593 00c0 244A     		ldr	r2, .L104+24
 1594 00c2 7B68     		ldr	r3, [r7, #4]
 1595 00c4 D318     		add	r3, r2, r3
 1596 00c6 1B78     		ldrb	r3, [r3]
 1597 00c8 191C     		mov	r1, r3
 1598 00ca 0D23     		mov	r3, #13
 1599 00cc FB18     		add	r3, r7, r3
 1600 00ce 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 50


 1601 00d0 0C23     		mov	r3, #12
 1602 00d2 FB18     		add	r3, r7, r3
 1603 00d4 1B78     		ldrb	r3, [r3]
 1604 00d6 D318     		add	r3, r2, r3
 1605 00d8 9942     		cmp	r1, r3
 1606 00da 17DB     		blt	.L99
1170:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1171:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1607              		.loc 1 1171 0
 1608 00dc 0F23     		mov	r3, #15
 1609 00de FB18     		add	r3, r7, r3
 1610 00e0 1B78     		ldrb	r3, [r3]
 1611 00e2 1A4A     		ldr	r2, .L104+16
 1612 00e4 D25C     		ldrb	r2, [r2, r3]
 1613 00e6 013A     		sub	r2, r2, #1
 1614 00e8 D1B2     		uxtb	r1, r2
 1615 00ea 184A     		ldr	r2, .L104+16
 1616 00ec D154     		strb	r1, [r2, r3]
1172:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1173:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1617              		.loc 1 1173 0
 1618 00ee 0F23     		mov	r3, #15
 1619 00f0 FB18     		add	r3, r7, r3
 1620 00f2 1B78     		ldrb	r3, [r3]
 1621 00f4 154A     		ldr	r2, .L104+16
 1622 00f6 D35C     		ldrb	r3, [r2, r3]
 1623 00f8 002B     		cmp	r3, #0
 1624 00fa 0FD1     		bne	.L98
1174:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1175:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1625              		.loc 1 1175 0
 1626 00fc 144A     		ldr	r2, .L104+20
 1627 00fe 7B68     		ldr	r3, [r7, #4]
 1628 0100 101C     		mov	r0, r2
 1629 0102 191C     		mov	r1, r3
 1630 0104 0122     		mov	r2, #1
 1631 0106 FFF7FEFF 		bl	CapSense_SetBitValue
 1632 010a 07E0     		b	.L98
 1633              	.L99:
1176:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1177:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1178:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1179:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1180:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1181:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1634              		.loc 1 1181 0
 1635 010c 0F23     		mov	r3, #15
 1636 010e FB18     		add	r3, r7, r3
 1637 0110 1B78     		ldrb	r3, [r3]
 1638 0112 0E4A     		ldr	r2, .L104+16
 1639 0114 0B21     		mov	r1, #11
 1640 0116 7918     		add	r1, r7, r1
 1641 0118 0978     		ldrb	r1, [r1]
 1642 011a D154     		strb	r1, [r2, r3]
 1643              	.L98:
1182:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1183:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 51


1184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1185:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1644              		.loc 1 1185 0
 1645 011c 0C4A     		ldr	r2, .L104+20
 1646 011e 7B68     		ldr	r3, [r7, #4]
 1647 0120 101C     		mov	r0, r2
 1648 0122 191C     		mov	r1, r3
 1649 0124 FFF7FEFF 		bl	CapSense_GetBitValue
 1650 0128 031E     		sub	r3, r0, #0
 1651 012a 01D0     		beq	.L101
 1652              		.loc 1 1185 0 is_stmt 0 discriminator 1
 1653 012c 0123     		mov	r3, #1
 1654 012e 00E0     		b	.L102
 1655              	.L101:
 1656              		.loc 1 1185 0 discriminator 2
 1657 0130 0023     		mov	r3, #0
 1658              	.L102:
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1659              		.loc 1 1186 0 is_stmt 1 discriminator 4
 1660 0132 181C     		mov	r0, r3
 1661 0134 BD46     		mov	sp, r7
 1662 0136 04B0     		add	sp, sp, #16
 1663              		@ sp needed
 1664 0138 80BD     		pop	{r7, pc}
 1665              	.L105:
 1666 013a C046     		.align	2
 1667              	.L104:
 1668 013c 00000000 		.word	CapSense_widgetNumber
 1669 0140 00000000 		.word	CapSense_fingerThreshold
 1670 0144 00000000 		.word	CapSense_hysteresis
 1671 0148 00000000 		.word	CapSense_debounce
 1672 014c 44000000 		.word	CapSense_debounceCounter
 1673 0150 00000000 		.word	CapSense_sensorOnMask
 1674 0154 00000000 		.word	CapSense_sensorSignal
 1675              		.cfi_endproc
 1676              	.LFE57:
 1677              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1678              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1679              		.align	2
 1680              		.global	CapSense_CheckIsWidgetActive
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	CapSense_CheckIsWidgetActive, %function
 1684              	CapSense_CheckIsWidgetActive:
 1685              	.LFB58:
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1195:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 52


1199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1686              		.loc 1 1218 0
 1687              		.cfi_startproc
 1688 0000 80B5     		push	{r7, lr}
 1689              		.cfi_def_cfa_offset 8
 1690              		.cfi_offset 7, -8
 1691              		.cfi_offset 14, -4
 1692 0002 86B0     		sub	sp, sp, #24
 1693              		.cfi_def_cfa_offset 32
 1694 0004 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
 1696 0006 7860     		str	r0, [r7, #4]
1219:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1697              		.loc 1 1219 0
 1698 0008 114A     		ldr	r2, .L110
 1699 000a 7B68     		ldr	r3, [r7, #4]
 1700 000c D318     		add	r3, r2, r3
 1701 000e 1B78     		ldrb	r3, [r3]
 1702 0010 7B61     		str	r3, [r7, #20]
1220:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1703              		.loc 1 1220 0
 1704 0012 104A     		ldr	r2, .L110+4
 1705 0014 7B68     		ldr	r3, [r7, #4]
 1706 0016 D318     		add	r3, r2, r3
 1707 0018 1B78     		ldrb	r3, [r3]
 1708 001a 1A1C     		mov	r2, r3
 1709 001c 7B69     		ldr	r3, [r7, #20]
 1710 001e D318     		add	r3, r2, r3
 1711 0020 FB60     		str	r3, [r7, #12]
1221:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1712              		.loc 1 1221 0
 1713 0022 0023     		mov	r3, #0
 1714 0024 3B61     		str	r3, [r7, #16]
 1715              	.L108:
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1223:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1224:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1225:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 53


1226:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1716              		.loc 1 1226 0
 1717 0026 7B69     		ldr	r3, [r7, #20]
 1718 0028 181C     		mov	r0, r3
 1719 002a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1720 002e 031E     		sub	r3, r0, #0
 1721 0030 01D0     		beq	.L107
1227:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1228:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1722              		.loc 1 1228 0
 1723 0032 0123     		mov	r3, #1
 1724 0034 3B61     		str	r3, [r7, #16]
 1725              	.L107:
1229:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1230:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1726              		.loc 1 1230 0
 1727 0036 7B69     		ldr	r3, [r7, #20]
 1728 0038 0133     		add	r3, r3, #1
 1729 003a 7B61     		str	r3, [r7, #20]
1231:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1730              		.loc 1 1232 0
 1731 003c 7A69     		ldr	r2, [r7, #20]
 1732 003e FB68     		ldr	r3, [r7, #12]
 1733 0040 9A42     		cmp	r2, r3
 1734 0042 F0D3     		bcc	.L108
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1735              		.loc 1 1236 0
 1736 0044 3B69     		ldr	r3, [r7, #16]
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1737              		.loc 1 1237 0
 1738 0046 181C     		mov	r0, r3
 1739 0048 BD46     		mov	sp, r7
 1740 004a 06B0     		add	sp, sp, #24
 1741              		@ sp needed
 1742 004c 80BD     		pop	{r7, pc}
 1743              	.L111:
 1744 004e C046     		.align	2
 1745              	.L110:
 1746 0050 00000000 		.word	CapSense_rawDataIndex
 1747 0054 00000000 		.word	CapSense_numberOfSensors
 1748              		.cfi_endproc
 1749              	.LFE58:
 1750              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1751              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1752              		.align	2
 1753              		.global	CapSense_CheckIsAnyWidgetActive
 1754              		.code	16
 1755              		.thumb_func
 1756              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1757              	CapSense_CheckIsAnyWidgetActive:
 1758              	.LFB59:
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 54


1240:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1759              		.loc 1 1264 0
 1760              		.cfi_startproc
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 82B0     		sub	sp, sp, #8
 1766              		.cfi_def_cfa_offset 16
 1767 0004 00AF     		add	r7, sp, #0
 1768              		.cfi_def_cfa_register 7
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1266:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1267:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1769              		.loc 1 1267 0
 1770 0006 0023     		mov	r3, #0
 1771 0008 3B60     		str	r3, [r7]
1268:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1269:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1772              		.loc 1 1269 0
 1773 000a 0023     		mov	r3, #0
 1774 000c 7B60     		str	r3, [r7, #4]
 1775 000e 0AE0     		b	.L113
 1776              	.L115:
1270:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1271:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1777              		.loc 1 1271 0
 1778 0010 7B68     		ldr	r3, [r7, #4]
 1779 0012 181C     		mov	r0, r3
 1780 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1781 0018 031E     		sub	r3, r0, #0
 1782 001a 01D0     		beq	.L114
1272:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 55


1273:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1783              		.loc 1 1273 0
 1784 001c 0123     		mov	r3, #1
 1785 001e 3B60     		str	r3, [r7]
 1786              	.L114:
1269:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1787              		.loc 1 1269 0 discriminator 2
 1788 0020 7B68     		ldr	r3, [r7, #4]
 1789 0022 0133     		add	r3, r3, #1
 1790 0024 7B60     		str	r3, [r7, #4]
 1791              	.L113:
1269:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1792              		.loc 1 1269 0 is_stmt 0 discriminator 1
 1793 0026 7B68     		ldr	r3, [r7, #4]
 1794 0028 072B     		cmp	r3, #7
 1795 002a F1D9     		bls	.L115
1274:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1275:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1276:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1279:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1796              		.loc 1 1279 0 is_stmt 1
 1797 002c 3B68     		ldr	r3, [r7]
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1798              		.loc 1 1280 0
 1799 002e 181C     		mov	r0, r3
 1800 0030 BD46     		mov	sp, r7
 1801 0032 02B0     		add	sp, sp, #8
 1802              		@ sp needed
 1803 0034 80BD     		pop	{r7, pc}
 1804              		.cfi_endproc
 1805              	.LFE59:
 1806              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1807 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1808              		.align	2
 1809              		.global	CapSense_EnableWidget
 1810              		.code	16
 1811              		.thumb_func
 1812              		.type	CapSense_EnableWidget, %function
 1813              	CapSense_EnableWidget:
 1814              	.LFB60:
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 56


1296:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1815              		.loc 1 1311 0
 1816              		.cfi_startproc
 1817 0000 80B5     		push	{r7, lr}
 1818              		.cfi_def_cfa_offset 8
 1819              		.cfi_offset 7, -8
 1820              		.cfi_offset 14, -4
 1821 0002 84B0     		sub	sp, sp, #16
 1822              		.cfi_def_cfa_offset 24
 1823 0004 00AF     		add	r7, sp, #0
 1824              		.cfi_def_cfa_register 7
 1825 0006 7860     		str	r0, [r7, #4]
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1313:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1826              		.loc 1 1313 0
 1827 0008 0F23     		mov	r3, #15
 1828 000a FB18     		add	r3, r7, r3
 1829 000c 1549     		ldr	r1, .L119
 1830 000e 7A68     		ldr	r2, [r7, #4]
 1831 0010 8A18     		add	r2, r1, r2
 1832 0012 1278     		ldrb	r2, [r2]
 1833 0014 1A70     		strb	r2, [r3]
1314:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1834              		.loc 1 1314 0
 1835 0016 144A     		ldr	r2, .L119+4
 1836 0018 7B68     		ldr	r3, [r7, #4]
 1837 001a D318     		add	r3, r2, r3
 1838 001c 1978     		ldrb	r1, [r3]
 1839 001e 0E23     		mov	r3, #14
 1840 0020 FB18     		add	r3, r7, r3
 1841 0022 0F22     		mov	r2, #15
 1842 0024 BA18     		add	r2, r7, r2
 1843 0026 1278     		ldrb	r2, [r2]
 1844 0028 8A18     		add	r2, r1, r2
 1845 002a 1A70     		strb	r2, [r3]
 1846              	.L118:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1316:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1317:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1318:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1319:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1847              		.loc 1 1319 0 discriminator 1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 57


 1848 002c 0F23     		mov	r3, #15
 1849 002e FB18     		add	r3, r7, r3
 1850 0030 1B78     		ldrb	r3, [r3]
 1851 0032 0E4A     		ldr	r2, .L119+8
 1852 0034 101C     		mov	r0, r2
 1853 0036 191C     		mov	r1, r3
 1854 0038 0122     		mov	r2, #1
 1855 003a FFF7FEFF 		bl	CapSense_SetBitValue
1320:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1856              		.loc 1 1320 0 discriminator 1
 1857 003e 0F23     		mov	r3, #15
 1858 0040 FB18     		add	r3, r7, r3
 1859 0042 1A78     		ldrb	r2, [r3]
 1860 0044 0F23     		mov	r3, #15
 1861 0046 FB18     		add	r3, r7, r3
 1862 0048 0132     		add	r2, r2, #1
 1863 004a 1A70     		strb	r2, [r3]
1321:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1322:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1864              		.loc 1 1322 0 discriminator 1
 1865 004c 0F23     		mov	r3, #15
 1866 004e FA18     		add	r2, r7, r3
 1867 0050 0E23     		mov	r3, #14
 1868 0052 FB18     		add	r3, r7, r3
 1869 0054 1278     		ldrb	r2, [r2]
 1870 0056 1B78     		ldrb	r3, [r3]
 1871 0058 9A42     		cmp	r2, r3
 1872 005a E7D3     		bcc	.L118
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1873              		.loc 1 1323 0
 1874 005c BD46     		mov	sp, r7
 1875 005e 04B0     		add	sp, sp, #16
 1876              		@ sp needed
 1877 0060 80BD     		pop	{r7, pc}
 1878              	.L120:
 1879 0062 C046     		.align	2
 1880              	.L119:
 1881 0064 00000000 		.word	CapSense_rawDataIndex
 1882 0068 00000000 		.word	CapSense_numberOfSensors
 1883 006c 00000000 		.word	CapSense_sensorEnableMask
 1884              		.cfi_endproc
 1885              	.LFE60:
 1886              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1887              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1888              		.align	2
 1889              		.global	CapSense_DisableWidget
 1890              		.code	16
 1891              		.thumb_func
 1892              		.type	CapSense_DisableWidget, %function
 1893              	CapSense_DisableWidget:
 1894              	.LFB61:
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 58


1330:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1338:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1339:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1348:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1349:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1351:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1352:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1353:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1354:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1895              		.loc 1 1354 0
 1896              		.cfi_startproc
 1897 0000 80B5     		push	{r7, lr}
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 84B0     		sub	sp, sp, #16
 1902              		.cfi_def_cfa_offset 24
 1903 0004 00AF     		add	r7, sp, #0
 1904              		.cfi_def_cfa_register 7
 1905 0006 7860     		str	r0, [r7, #4]
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1906              		.loc 1 1355 0
 1907 0008 0F23     		mov	r3, #15
 1908 000a FB18     		add	r3, r7, r3
 1909 000c 1549     		ldr	r1, .L123
 1910 000e 7A68     		ldr	r2, [r7, #4]
 1911 0010 8A18     		add	r2, r1, r2
 1912 0012 1278     		ldrb	r2, [r2]
 1913 0014 1A70     		strb	r2, [r3]
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1914              		.loc 1 1356 0
 1915 0016 144A     		ldr	r2, .L123+4
 1916 0018 7B68     		ldr	r3, [r7, #4]
 1917 001a D318     		add	r3, r2, r3
 1918 001c 1978     		ldrb	r1, [r3]
 1919 001e 0E23     		mov	r3, #14
 1920 0020 FB18     		add	r3, r7, r3
 1921 0022 0F22     		mov	r2, #15
 1922 0024 BA18     		add	r2, r7, r2
 1923 0026 1278     		ldrb	r2, [r2]
 1924 0028 8A18     		add	r2, r1, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 59


 1925 002a 1A70     		strb	r2, [r3]
 1926              	.L122:
1357:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1927              		.loc 1 1362 0 discriminator 1
 1928 002c 0F23     		mov	r3, #15
 1929 002e FB18     		add	r3, r7, r3
 1930 0030 1B78     		ldrb	r3, [r3]
 1931 0032 0E4A     		ldr	r2, .L123+8
 1932 0034 101C     		mov	r0, r2
 1933 0036 191C     		mov	r1, r3
 1934 0038 0022     		mov	r2, #0
 1935 003a FFF7FEFF 		bl	CapSense_SetBitValue
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1936              		.loc 1 1363 0 discriminator 1
 1937 003e 0F23     		mov	r3, #15
 1938 0040 FB18     		add	r3, r7, r3
 1939 0042 1A78     		ldrb	r2, [r3]
 1940 0044 0F23     		mov	r3, #15
 1941 0046 FB18     		add	r3, r7, r3
 1942 0048 0132     		add	r2, r2, #1
 1943 004a 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1944              		.loc 1 1365 0 discriminator 1
 1945 004c 0F23     		mov	r3, #15
 1946 004e FA18     		add	r2, r7, r3
 1947 0050 0E23     		mov	r3, #14
 1948 0052 FB18     		add	r3, r7, r3
 1949 0054 1278     		ldrb	r2, [r2]
 1950 0056 1B78     		ldrb	r3, [r3]
 1951 0058 9A42     		cmp	r2, r3
 1952 005a E7D3     		bcc	.L122
1366:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1953              		.loc 1 1366 0
 1954 005c BD46     		mov	sp, r7
 1955 005e 04B0     		add	sp, sp, #16
 1956              		@ sp needed
 1957 0060 80BD     		pop	{r7, pc}
 1958              	.L124:
 1959 0062 C046     		.align	2
 1960              	.L123:
 1961 0064 00000000 		.word	CapSense_rawDataIndex
 1962 0068 00000000 		.word	CapSense_numberOfSensors
 1963 006c 00000000 		.word	CapSense_sensorEnableMask
 1964              		.cfi_endproc
 1965              	.LFE61:
 1966              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1967              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1968              		.align	2
 1969              		.global	CapSense_FindMaximum
 1970              		.code	16
 1971              		.thumb_func
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 60


 1972              		.type	CapSense_FindMaximum, %function
 1973              	CapSense_FindMaximum:
 1974              	.LFB62:
1367:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1368:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1369:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1975              		.loc 1 1405 0
 1976              		.cfi_startproc
 1977 0000 90B5     		push	{r4, r7, lr}
 1978              		.cfi_def_cfa_offset 12
 1979              		.cfi_offset 4, -12
 1980              		.cfi_offset 7, -8
 1981              		.cfi_offset 14, -4
 1982 0002 85B0     		sub	sp, sp, #20
 1983              		.cfi_def_cfa_offset 32
 1984 0004 00AF     		add	r7, sp, #0
 1985              		.cfi_def_cfa_register 7
 1986 0006 041C     		mov	r4, r0
 1987 0008 081C     		mov	r0, r1
 1988 000a 111C     		mov	r1, r2
 1989 000c FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 61


 1990 000e 221C     		add	r2, r4, #0
 1991 0010 1A70     		strb	r2, [r3]
 1992 0012 BB1D     		add	r3, r7, #6
 1993 0014 021C     		add	r2, r0, #0
 1994 0016 1A70     		strb	r2, [r3]
 1995 0018 7B1D     		add	r3, r7, #5
 1996 001a 0A1C     		add	r2, r1, #0
 1997 001c 1A70     		strb	r2, [r3]
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1998              		.loc 1 1416 0
 1999 001e 0E23     		mov	r3, #14
 2000 0020 FB18     		add	r3, r7, r3
 2001 0022 FF22     		mov	r2, #255
 2002 0024 1A70     		strb	r2, [r3]
1417:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 2003              		.loc 1 1418 0
 2004 0026 0D23     		mov	r3, #13
 2005 0028 FB18     		add	r3, r7, r3
 2006 002a 0022     		mov	r2, #0
 2007 002c 1A70     		strb	r2, [r3]
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 2008              		.loc 1 1419 0
 2009 002e FB1D     		add	r3, r7, #7
 2010 0030 1A78     		ldrb	r2, [r3]
 2011 0032 204B     		ldr	r3, .L130
 2012 0034 D318     		add	r3, r2, r3
 2013 0036 BB60     		str	r3, [r7, #8]
1420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 62


1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1454:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1459:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1481:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1482:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 63


1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 2014              		.loc 1 1516 0
 2015 0038 0F23     		mov	r3, #15
 2016 003a FB18     		add	r3, r7, r3
 2017 003c 0022     		mov	r2, #0
 2018 003e 1A70     		strb	r2, [r3]
 2019 0040 2AE0     		b	.L126
 2020              	.L128:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 2021              		.loc 1 1519 0
 2022 0042 0F23     		mov	r3, #15
 2023 0044 FB18     		add	r3, r7, r3
 2024 0046 1B78     		ldrb	r3, [r3]
 2025 0048 BA68     		ldr	r2, [r7, #8]
 2026 004a D318     		add	r3, r2, r3
 2027 004c 1B78     		ldrb	r3, [r3]
 2028 004e 7A1D     		add	r2, r7, #5
 2029 0050 1278     		ldrb	r2, [r2]
 2030 0052 9A42     		cmp	r2, r3
 2031 0054 19D2     		bcs	.L127
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 2032              		.loc 1 1521 0
 2033 0056 0F23     		mov	r3, #15
 2034 0058 FB18     		add	r3, r7, r3
 2035 005a 1B78     		ldrb	r3, [r3]
 2036 005c BA68     		ldr	r2, [r7, #8]
 2037 005e D318     		add	r3, r2, r3
 2038 0060 1B78     		ldrb	r3, [r3]
 2039 0062 0D22     		mov	r2, #13
 2040 0064 BA18     		add	r2, r7, r2
 2041 0066 1278     		ldrb	r2, [r2]
 2042 0068 9A42     		cmp	r2, r3
 2043 006a 0ED2     		bcs	.L127
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 64


1523:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 2044              		.loc 1 1523 0
 2045 006c 0E23     		mov	r3, #14
 2046 006e FB18     		add	r3, r7, r3
 2047 0070 0F22     		mov	r2, #15
 2048 0072 BA18     		add	r2, r7, r2
 2049 0074 1278     		ldrb	r2, [r2]
 2050 0076 1A70     		strb	r2, [r3]
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 2051              		.loc 1 1524 0
 2052 0078 0F23     		mov	r3, #15
 2053 007a FB18     		add	r3, r7, r3
 2054 007c 1B78     		ldrb	r3, [r3]
 2055 007e BA68     		ldr	r2, [r7, #8]
 2056 0080 D218     		add	r2, r2, r3
 2057 0082 0D23     		mov	r3, #13
 2058 0084 FB18     		add	r3, r7, r3
 2059 0086 1278     		ldrb	r2, [r2]
 2060 0088 1A70     		strb	r2, [r3]
 2061              	.L127:
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2062              		.loc 1 1516 0 discriminator 2
 2063 008a 0F23     		mov	r3, #15
 2064 008c FB18     		add	r3, r7, r3
 2065 008e 1A78     		ldrb	r2, [r3]
 2066 0090 0F23     		mov	r3, #15
 2067 0092 FB18     		add	r3, r7, r3
 2068 0094 0132     		add	r2, r2, #1
 2069 0096 1A70     		strb	r2, [r3]
 2070              	.L126:
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2071              		.loc 1 1516 0 is_stmt 0 discriminator 1
 2072 0098 0F23     		mov	r3, #15
 2073 009a FA18     		add	r2, r7, r3
 2074 009c BB1D     		add	r3, r7, #6
 2075 009e 1278     		ldrb	r2, [r2]
 2076 00a0 1B78     		ldrb	r3, [r3]
 2077 00a2 9A42     		cmp	r2, r3
 2078 00a4 CDD3     		bcc	.L128
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 2079              		.loc 1 1529 0 is_stmt 1
 2080 00a6 0E23     		mov	r3, #14
 2081 00a8 FB18     		add	r3, r7, r3
 2082 00aa 1B78     		ldrb	r3, [r3]
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2083              		.loc 1 1530 0
 2084 00ac 181C     		mov	r0, r3
 2085 00ae BD46     		mov	sp, r7
 2086 00b0 05B0     		add	sp, sp, #20
 2087              		@ sp needed
 2088 00b2 90BD     		pop	{r4, r7, pc}
 2089              	.L131:
 2090              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 65


 2091              	.L130:
 2092 00b4 00000000 		.word	CapSense_sensorSignal
 2093              		.cfi_endproc
 2094              	.LFE62:
 2095              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2096              		.global	__aeabi_idiv
 2097              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2098              		.align	2
 2099              		.global	CapSense_CalcCentroid
 2100              		.code	16
 2101              		.thumb_func
 2102              		.type	CapSense_CalcCentroid, %function
 2103              	CapSense_CalcCentroid:
 2104              	.LFB63:
1531:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1532:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1561:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1564:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2105              		.loc 1 1565 0
 2106              		.cfi_startproc
 2107 0000 B0B5     		push	{r4, r5, r7, lr}
 2108              		.cfi_def_cfa_offset 16
 2109              		.cfi_offset 4, -16
 2110              		.cfi_offset 5, -12
 2111              		.cfi_offset 7, -8
 2112              		.cfi_offset 14, -4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 66


 2113 0002 86B0     		sub	sp, sp, #24
 2114              		.cfi_def_cfa_offset 40
 2115 0004 00AF     		add	r7, sp, #0
 2116              		.cfi_def_cfa_register 7
 2117 0006 051C     		mov	r5, r0
 2118 0008 0C1C     		mov	r4, r1
 2119 000a 101C     		mov	r0, r2
 2120 000c 191C     		mov	r1, r3
 2121 000e FB1D     		add	r3, r7, #7
 2122 0010 2A1C     		add	r2, r5, #0
 2123 0012 1A70     		strb	r2, [r3]
 2124 0014 BB1D     		add	r3, r7, #6
 2125 0016 221C     		add	r2, r4, #0
 2126 0018 1A70     		strb	r2, [r3]
 2127 001a 7B1D     		add	r3, r7, #5
 2128 001c 021C     		add	r2, r0, #0
 2129 001e 1A70     		strb	r2, [r3]
 2130 0020 BB1C     		add	r3, r7, #2
 2131 0022 0A1C     		add	r2, r1, #0
 2132 0024 1A80     		strh	r2, [r3]
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1575:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2133              		.loc 1 1584 0
 2134 0026 BB1D     		add	r3, r7, #6
 2135 0028 1A78     		ldrb	r2, [r3]
 2136 002a 584B     		ldr	r3, .L142
 2137 002c D318     		add	r3, r2, r3
 2138 002e 3B61     		str	r3, [r7, #16]
1585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1594:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 67


1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2139              		.loc 1 1597 0
 2140 0030 FB1D     		add	r3, r7, #7
 2141 0032 1B78     		ldrb	r3, [r3]
 2142 0034 3A69     		ldr	r2, [r7, #16]
 2143 0036 D318     		add	r3, r2, r3
 2144 0038 1A78     		ldrb	r2, [r3]
 2145 003a 554B     		ldr	r3, .L142+4
 2146 003c 5A70     		strb	r2, [r3, #1]
1598:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2147              		.loc 1 1600 0
 2148 003e FB1D     		add	r3, r7, #7
 2149 0040 1B78     		ldrb	r3, [r3]
 2150 0042 002B     		cmp	r3, #0
 2151 0044 0CD1     		bne	.L133
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
 2152              		.loc 1 1602 0
 2153 0046 7B1D     		add	r3, r7, #5
 2154 0048 1B78     		ldrb	r3, [r3]
 2155 004a 013B     		sub	r3, r3, #1
 2156 004c 3A69     		ldr	r2, [r7, #16]
 2157 004e D318     		add	r3, r2, r3
 2158 0050 1A78     		ldrb	r2, [r3]
 2159 0052 4F4B     		ldr	r3, .L142+4
 2160 0054 1A70     		strb	r2, [r3]
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
 2161              		.loc 1 1603 0
 2162 0056 3B69     		ldr	r3, [r7, #16]
 2163 0058 5A78     		ldrb	r2, [r3, #1]
 2164 005a 4D4B     		ldr	r3, .L142+4
 2165 005c 9A70     		strb	r2, [r3, #2]
 2166 005e 23E0     		b	.L134
 2167              	.L133:
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
 2168              		.loc 1 1605 0
 2169 0060 FB1D     		add	r3, r7, #7
 2170 0062 1A78     		ldrb	r2, [r3]
 2171 0064 7B1D     		add	r3, r7, #5
 2172 0066 1B78     		ldrb	r3, [r3]
 2173 0068 013B     		sub	r3, r3, #1
 2174 006a 9A42     		cmp	r2, r3
 2175 006c 0CD1     		bne	.L135
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 2176              		.loc 1 1607 0
 2177 006e FB1D     		add	r3, r7, #7
 2178 0070 1B78     		ldrb	r3, [r3]
 2179 0072 013B     		sub	r3, r3, #1
 2180 0074 3A69     		ldr	r2, [r7, #16]
 2181 0076 D318     		add	r3, r2, r3
 2182 0078 1A78     		ldrb	r2, [r3]
 2183 007a 454B     		ldr	r3, .L142+4
 2184 007c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 68


1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
 2185              		.loc 1 1608 0
 2186 007e 3B69     		ldr	r3, [r7, #16]
 2187 0080 1A78     		ldrb	r2, [r3]
 2188 0082 434B     		ldr	r3, .L142+4
 2189 0084 9A70     		strb	r2, [r3, #2]
 2190 0086 0FE0     		b	.L134
 2191              	.L135:
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 2192              		.loc 1 1612 0
 2193 0088 FB1D     		add	r3, r7, #7
 2194 008a 1B78     		ldrb	r3, [r3]
 2195 008c 013B     		sub	r3, r3, #1
 2196 008e 3A69     		ldr	r2, [r7, #16]
 2197 0090 D318     		add	r3, r2, r3
 2198 0092 1A78     		ldrb	r2, [r3]
 2199 0094 3E4B     		ldr	r3, .L142+4
 2200 0096 1A70     		strb	r2, [r3]
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
 2201              		.loc 1 1613 0
 2202 0098 FB1D     		add	r3, r7, #7
 2203 009a 1B78     		ldrb	r3, [r3]
 2204 009c 0133     		add	r3, r3, #1
 2205 009e 3A69     		ldr	r2, [r7, #16]
 2206 00a0 D318     		add	r3, r2, r3
 2207 00a2 1A78     		ldrb	r2, [r3]
 2208 00a4 3A4B     		ldr	r3, .L142+4
 2209 00a6 9A70     		strb	r2, [r3, #2]
 2210              	.L134:
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 69


1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1678:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1682:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2211              		.loc 1 1684 0
 2212 00a8 394B     		ldr	r3, .L142+4
 2213 00aa 1B78     		ldrb	r3, [r3]
 2214 00ac 2822     		mov	r2, #40
 2215 00ae BA18     		add	r2, r7, r2
 2216 00b0 1278     		ldrb	r2, [r2]
 2217 00b2 9A42     		cmp	r2, r3
 2218 00b4 09D2     		bcs	.L136
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2219              		.loc 1 1686 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 70


 2220 00b6 364B     		ldr	r3, .L142+4
 2221 00b8 1A78     		ldrb	r2, [r3]
 2222 00ba 2823     		mov	r3, #40
 2223 00bc FB18     		add	r3, r7, r3
 2224 00be 1B78     		ldrb	r3, [r3]
 2225 00c0 D31A     		sub	r3, r2, r3
 2226 00c2 DAB2     		uxtb	r2, r3
 2227 00c4 324B     		ldr	r3, .L142+4
 2228 00c6 1A70     		strb	r2, [r3]
 2229 00c8 02E0     		b	.L137
 2230              	.L136:
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2231              		.loc 1 1690 0
 2232 00ca 314B     		ldr	r3, .L142+4
 2233 00cc 0022     		mov	r2, #0
 2234 00ce 1A70     		strb	r2, [r3]
 2235              	.L137:
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2236              		.loc 1 1694 0
 2237 00d0 2F4B     		ldr	r3, .L142+4
 2238 00d2 5A78     		ldrb	r2, [r3, #1]
 2239 00d4 2823     		mov	r3, #40
 2240 00d6 FB18     		add	r3, r7, r3
 2241 00d8 1B78     		ldrb	r3, [r3]
 2242 00da D31A     		sub	r3, r2, r3
 2243 00dc DAB2     		uxtb	r2, r3
 2244 00de 2C4B     		ldr	r3, .L142+4
 2245 00e0 5A70     		strb	r2, [r3, #1]
1695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2246              		.loc 1 1697 0
 2247 00e2 2B4B     		ldr	r3, .L142+4
 2248 00e4 9B78     		ldrb	r3, [r3, #2]
 2249 00e6 2822     		mov	r2, #40
 2250 00e8 BA18     		add	r2, r7, r2
 2251 00ea 1278     		ldrb	r2, [r2]
 2252 00ec 9A42     		cmp	r2, r3
 2253 00ee 09D2     		bcs	.L138
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2254              		.loc 1 1699 0
 2255 00f0 274B     		ldr	r3, .L142+4
 2256 00f2 9A78     		ldrb	r2, [r3, #2]
 2257 00f4 2823     		mov	r3, #40
 2258 00f6 FB18     		add	r3, r7, r3
 2259 00f8 1B78     		ldrb	r3, [r3]
 2260 00fa D31A     		sub	r3, r2, r3
 2261 00fc DAB2     		uxtb	r2, r3
 2262 00fe 244B     		ldr	r3, .L142+4
 2263 0100 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 71


 2264 0102 02E0     		b	.L139
 2265              	.L138:
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2266              		.loc 1 1703 0
 2267 0104 224B     		ldr	r3, .L142+4
 2268 0106 0022     		mov	r2, #0
 2269 0108 9A70     		strb	r2, [r3, #2]
 2270              	.L139:
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2271              		.loc 1 1708 0
 2272 010a 214B     		ldr	r3, .L142+4
 2273 010c 9B78     		ldrb	r3, [r3, #2]
 2274 010e 1A1C     		mov	r2, r3
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2275              		.loc 1 1709 0
 2276 0110 1F4B     		ldr	r3, .L142+4
 2277 0112 1B78     		ldrb	r3, [r3]
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2278              		.loc 1 1708 0
 2279 0114 D31A     		sub	r3, r2, r3
 2280 0116 FB60     		str	r3, [r7, #12]
1710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2281              		.loc 1 1712 0
 2282 0118 1D4B     		ldr	r3, .L142+4
 2283 011a 1B78     		ldrb	r3, [r3]
 2284 011c 1A1C     		mov	r2, r3
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2285              		.loc 1 1713 0
 2286 011e 1C4B     		ldr	r3, .L142+4
 2287 0120 5B78     		ldrb	r3, [r3, #1]
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2288              		.loc 1 1712 0
 2289 0122 D318     		add	r3, r2, r3
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2290              		.loc 1 1714 0
 2291 0124 1A4A     		ldr	r2, .L142+4
 2292 0126 9278     		ldrb	r2, [r2, #2]
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2293              		.loc 1 1712 0
 2294 0128 9B18     		add	r3, r3, r2
 2295 012a 7B61     		str	r3, [r7, #20]
1715:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2296              		.loc 1 1717 0
 2297 012c FB68     		ldr	r3, [r7, #12]
 2298 012e 1B02     		lsl	r3, r3, #8
 2299 0130 181C     		mov	r0, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 72


 2300 0132 7969     		ldr	r1, [r7, #20]
 2301 0134 FFF7FEFF 		bl	__aeabi_idiv
 2302 0138 031C     		mov	r3, r0
 2303 013a 1A1C     		mov	r2, r3
 2304 013c FB1D     		add	r3, r7, #7
 2305 013e 1B78     		ldrb	r3, [r3]
 2306 0140 1B02     		lsl	r3, r3, #8
 2307 0142 D318     		add	r3, r2, r3
 2308 0144 7B61     		str	r3, [r7, #20]
1718:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
 2309              		.loc 1 1721 0
 2310 0146 7B69     		ldr	r3, [r7, #20]
 2311 0148 002B     		cmp	r3, #0
 2312 014a 08DA     		bge	.L140
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
 2313              		.loc 1 1723 0
 2314 014c 7B1D     		add	r3, r7, #5
 2315 014e 1B78     		ldrb	r3, [r3]
 2316 0150 9BB2     		uxth	r3, r3
 2317 0152 1B02     		lsl	r3, r3, #8
 2318 0154 9BB2     		uxth	r3, r3
 2319 0156 1A1C     		mov	r2, r3
 2320 0158 7B69     		ldr	r3, [r7, #20]
 2321 015a 9B18     		add	r3, r3, r2
 2322 015c 7B61     		str	r3, [r7, #20]
 2323              	.L140:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1726:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2324              		.loc 1 1727 0
 2325 015e BB1C     		add	r3, r7, #2
 2326 0160 1B88     		ldrh	r3, [r3]
 2327 0162 1AB2     		sxth	r2, r3
 2328 0164 7B69     		ldr	r3, [r7, #20]
 2329 0166 5343     		mul	r3, r2
 2330 0168 7B61     		str	r3, [r7, #20]
1728:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2331              		.loc 1 1730 0
 2332 016a 7B69     		ldr	r3, [r7, #20]
 2333 016c FE22     		mov	r2, #254
 2334 016e D201     		lsl	r2, r2, #7
 2335 0170 9446     		mov	ip, r2
 2336 0172 6344     		add	r3, r3, ip
 2337 0174 1A0C     		lsr	r2, r3, #16
 2338 0176 0B23     		mov	r3, #11
 2339 0178 FB18     		add	r3, r7, r3
 2340 017a 1A70     		strb	r2, [r3]
1731:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2341              		.loc 1 1732 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 73


 2342 017c 0B23     		mov	r3, #11
 2343 017e FB18     		add	r3, r7, r3
 2344 0180 1B78     		ldrb	r3, [r3]
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2345              		.loc 1 1733 0
 2346 0182 181C     		mov	r0, r3
 2347 0184 BD46     		mov	sp, r7
 2348 0186 06B0     		add	sp, sp, #24
 2349              		@ sp needed
 2350 0188 B0BD     		pop	{r4, r5, r7, pc}
 2351              	.L143:
 2352 018a C046     		.align	2
 2353              	.L142:
 2354 018c 00000000 		.word	CapSense_sensorSignal
 2355 0190 4C000000 		.word	CapSense_centroid.5444
 2356              		.cfi_endproc
 2357              	.LFE63:
 2358              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2359              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2360              		.align	2
 2361              		.global	CapSense_GetCentroidPos
 2362              		.code	16
 2363              		.thumb_func
 2364              		.type	CapSense_GetCentroidPos, %function
 2365              	CapSense_GetCentroidPos:
 2366              	.LFB64:
1734:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1735:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1736:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1737:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 74


1765:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2367              		.loc 1 1774 0
 2368              		.cfi_startproc
 2369 0000 90B5     		push	{r4, r7, lr}
 2370              		.cfi_def_cfa_offset 12
 2371              		.cfi_offset 4, -12
 2372              		.cfi_offset 7, -8
 2373              		.cfi_offset 14, -4
 2374 0002 87B0     		sub	sp, sp, #28
 2375              		.cfi_def_cfa_offset 40
 2376 0004 02AF     		add	r7, sp, #8
 2377              		.cfi_def_cfa 7, 32
 2378 0006 7860     		str	r0, [r7, #4]
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1778:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1784:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1791:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2379              		.loc 1 1794 0
 2380 0008 0D23     		mov	r3, #13
 2381 000a FB18     		add	r3, r7, r3
 2382 000c 2449     		ldr	r1, .L148
 2383 000e 7A68     		ldr	r2, [r7, #4]
 2384 0010 8A18     		add	r2, r1, r2
 2385 0012 1278     		ldrb	r2, [r2]
 2386 0014 1A70     		strb	r2, [r3]
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2387              		.loc 1 1795 0
 2388 0016 0C23     		mov	r3, #12
 2389 0018 FB18     		add	r3, r7, r3
 2390 001a 2249     		ldr	r1, .L148+4
 2391 001c 7A68     		ldr	r2, [r7, #4]
 2392 001e 8A18     		add	r2, r1, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 75


 2393 0020 1278     		ldrb	r2, [r2]
 2394 0022 1A70     		strb	r2, [r3]
1796:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1808:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2395              		.loc 1 1813 0
 2396 0024 204A     		ldr	r2, .L148+8
 2397 0026 7B68     		ldr	r3, [r7, #4]
 2398 0028 D318     		add	r3, r2, r3
 2399 002a 1A78     		ldrb	r2, [r3]
 2400 002c 0B23     		mov	r3, #11
 2401 002e FC18     		add	r4, r7, r3
 2402 0030 0D23     		mov	r3, #13
 2403 0032 FB18     		add	r3, r7, r3
 2404 0034 1978     		ldrb	r1, [r3]
 2405 0036 0C23     		mov	r3, #12
 2406 0038 FB18     		add	r3, r7, r3
 2407 003a 1B78     		ldrb	r3, [r3]
 2408 003c 081C     		mov	r0, r1
 2409 003e 191C     		mov	r1, r3
 2410 0040 FFF7FEFF 		bl	CapSense_FindMaximum
 2411 0044 031C     		mov	r3, r0
 2412 0046 2370     		strb	r3, [r4]
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2413              		.loc 1 1816 0
 2414 0048 0B23     		mov	r3, #11
 2415 004a FB18     		add	r3, r7, r3
 2416 004c 1B78     		ldrb	r3, [r3]
 2417 004e FF2B     		cmp	r3, #255
 2418 0050 1AD0     		beq	.L145
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2419              		.loc 1 1819 0
 2420 0052 164B     		ldr	r3, .L148+12
 2421 0054 7A68     		ldr	r2, [r7, #4]
 2422 0056 5200     		lsl	r2, r2, #1
 2423 0058 D45A     		ldrh	r4, [r2, r3]
 2424 005a 154A     		ldr	r2, .L148+16
 2425 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 76


 2426 005e D318     		add	r3, r2, r3
 2427 0060 1B78     		ldrb	r3, [r3]
 2428 0062 0B22     		mov	r2, #11
 2429 0064 BA18     		add	r2, r7, r2
 2430 0066 1078     		ldrb	r0, [r2]
 2431 0068 0D22     		mov	r2, #13
 2432 006a BA18     		add	r2, r7, r2
 2433 006c 1178     		ldrb	r1, [r2]
 2434 006e 0C22     		mov	r2, #12
 2435 0070 BA18     		add	r2, r7, r2
 2436 0072 1278     		ldrb	r2, [r2]
 2437 0074 0093     		str	r3, [sp]
 2438 0076 231C     		mov	r3, r4
 2439 0078 FFF7FEFF 		bl	CapSense_CalcCentroid
 2440 007c 031C     		mov	r3, r0
 2441 007e 1A1C     		mov	r2, r3
 2442 0080 0E23     		mov	r3, #14
 2443 0082 FB18     		add	r3, r7, r3
 2444 0084 1A80     		strh	r2, [r3]
 2445 0086 04E0     		b	.L146
 2446              	.L145:
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1821:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1828:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1837:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1848:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 77


1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1882:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1904:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 78


1913:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1918:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2447              		.loc 1 1923 0
 2448 0088 0E23     		mov	r3, #14
 2449 008a FB18     		add	r3, r7, r3
 2450 008c 0122     		mov	r2, #1
 2451 008e 5242     		neg	r2, r2
 2452 0090 1A80     		strh	r2, [r3]
 2453              	.L146:
1924:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1933:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1934:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2454              		.loc 1 1935 0
 2455 0092 0E23     		mov	r3, #14
 2456 0094 FB18     		add	r3, r7, r3
 2457 0096 1B88     		ldrh	r3, [r3]
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2458              		.loc 1 1936 0
 2459 0098 181C     		mov	r0, r3
 2460 009a BD46     		mov	sp, r7
 2461 009c 05B0     		add	sp, sp, #20
 2462              		@ sp needed
 2463 009e 90BD     		pop	{r4, r7, pc}
 2464              	.L149:
 2465              		.align	2
 2466              	.L148:
 2467 00a0 00000000 		.word	CapSense_rawDataIndex
 2468 00a4 00000000 		.word	CapSense_numberOfSensors
 2469 00a8 00000000 		.word	CapSense_fingerThreshold
 2470 00ac 10000000 		.word	CapSense_centroidMult
 2471 00b0 00000000 		.word	CapSense_noiseThreshold
 2472              		.cfi_endproc
 2473              	.LFE64:
 2474              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2475              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2476              		.align	2
 2477              		.global	CapSense_GetRadialCentroidPos
 2478              		.code	16
 2479              		.thumb_func
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 79


 2480              		.type	CapSense_GetRadialCentroidPos, %function
 2481              	CapSense_GetRadialCentroidPos:
 2482              	.LFB65:
1937:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1938:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1939:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1940:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2483              		.loc 1 1977 0
 2484              		.cfi_startproc
 2485 0000 90B5     		push	{r4, r7, lr}
 2486              		.cfi_def_cfa_offset 12
 2487              		.cfi_offset 4, -12
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 87B0     		sub	sp, sp, #28
 2491              		.cfi_def_cfa_offset 40
 2492 0004 02AF     		add	r7, sp, #8
 2493              		.cfi_def_cfa 7, 32
 2494 0006 7860     		str	r0, [r7, #4]
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 80


1979:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2495              		.loc 1 1980 0
 2496 0008 0D23     		mov	r3, #13
 2497 000a FB18     		add	r3, r7, r3
 2498 000c 5349     		ldr	r1, .L156
 2499 000e 7A68     		ldr	r2, [r7, #4]
 2500 0010 8A18     		add	r2, r1, r2
 2501 0012 1278     		ldrb	r2, [r2]
 2502 0014 1A70     		strb	r2, [r3]
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2503              		.loc 1 1981 0
 2504 0016 0C23     		mov	r3, #12
 2505 0018 FB18     		add	r3, r7, r3
 2506 001a 5149     		ldr	r1, .L156+4
 2507 001c 7A68     		ldr	r2, [r7, #4]
 2508 001e 8A18     		add	r2, r1, r2
 2509 0020 1278     		ldrb	r2, [r2]
 2510 0022 1A70     		strb	r2, [r3]
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1983:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1990:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2511              		.loc 1 1993 0
 2512 0024 0B23     		mov	r3, #11
 2513 0026 FB18     		add	r3, r7, r3
 2514 0028 4E49     		ldr	r1, .L156+8
 2515 002a 7A68     		ldr	r2, [r7, #4]
 2516 002c 8A18     		add	r2, r1, r2
 2517 002e 1278     		ldrb	r2, [r2]
 2518 0030 1A70     		strb	r2, [r3]
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2519              		.loc 1 1994 0
 2520 0032 0A23     		mov	r3, #10
 2521 0034 FB18     		add	r3, r7, r3
 2522 0036 4C49     		ldr	r1, .L156+12
 2523 0038 7A68     		ldr	r2, [r7, #4]
 2524 003a 8A18     		add	r2, r1, r2
 2525 003c 1278     		ldrb	r2, [r2]
 2526 003e 1A70     		strb	r2, [r3]
1995:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2527              		.loc 1 2000 0
 2528 0040 4A4A     		ldr	r2, .L156+16
 2529 0042 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 81


 2530 0044 D318     		add	r3, r2, r3
 2531 0046 1A78     		ldrb	r2, [r3]
 2532 0048 0923     		mov	r3, #9
 2533 004a FC18     		add	r4, r7, r3
 2534 004c 0B23     		mov	r3, #11
 2535 004e FB18     		add	r3, r7, r3
 2536 0050 1978     		ldrb	r1, [r3]
 2537 0052 0A23     		mov	r3, #10
 2538 0054 FB18     		add	r3, r7, r3
 2539 0056 1B78     		ldrb	r3, [r3]
 2540 0058 081C     		mov	r0, r1
 2541 005a 191C     		mov	r1, r3
 2542 005c FFF7FEFF 		bl	CapSense_FindMaximum
 2543 0060 031C     		mov	r3, r0
 2544 0062 2370     		strb	r3, [r4]
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2545              		.loc 1 2003 0
 2546 0064 0923     		mov	r3, #9
 2547 0066 FB18     		add	r3, r7, r3
 2548 0068 1B78     		ldrb	r3, [r3]
 2549 006a FF2B     		cmp	r3, #255
 2550 006c 5ED0     		beq	.L151
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2551              		.loc 1 2006 0
 2552 006e 404B     		ldr	r3, .L156+20
 2553 0070 7A68     		ldr	r2, [r7, #4]
 2554 0072 5200     		lsl	r2, r2, #1
 2555 0074 D45A     		ldrh	r4, [r2, r3]
 2556 0076 3F4A     		ldr	r2, .L156+24
 2557 0078 7B68     		ldr	r3, [r7, #4]
 2558 007a D318     		add	r3, r2, r3
 2559 007c 1B78     		ldrb	r3, [r3]
 2560 007e 0922     		mov	r2, #9
 2561 0080 BA18     		add	r2, r7, r2
 2562 0082 1078     		ldrb	r0, [r2]
 2563 0084 0B22     		mov	r2, #11
 2564 0086 BA18     		add	r2, r7, r2
 2565 0088 1178     		ldrb	r1, [r2]
 2566 008a 0A22     		mov	r2, #10
 2567 008c BA18     		add	r2, r7, r2
 2568 008e 1278     		ldrb	r2, [r2]
 2569 0090 0093     		str	r3, [sp]
 2570 0092 231C     		mov	r3, r4
 2571 0094 FFF7FEFF 		bl	CapSense_CalcCentroid
 2572 0098 031C     		mov	r3, r0
 2573 009a 1A1C     		mov	r2, r3
 2574 009c 0E23     		mov	r3, #14
 2575 009e FB18     		add	r3, r7, r3
 2576 00a0 1A80     		strh	r2, [r3]
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
2008:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 82


2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2577              		.loc 1 2011 0
 2578 00a2 0C23     		mov	r3, #12
 2579 00a4 FB18     		add	r3, r7, r3
 2580 00a6 1B78     		ldrb	r3, [r3]
 2581 00a8 1F22     		mov	r2, #31
 2582 00aa 1340     		and	r3, r2
 2583 00ac 4FD0     		beq	.L154
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2584              		.loc 1 2014 0
 2585 00ae 0823     		mov	r3, #8
 2586 00b0 FB18     		add	r3, r7, r3
 2587 00b2 0D22     		mov	r2, #13
 2588 00b4 BA18     		add	r2, r7, r2
 2589 00b6 1278     		ldrb	r2, [r2]
 2590 00b8 0132     		add	r2, r2, #1
 2591 00ba 1A70     		strb	r2, [r3]
2015:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2592              		.loc 1 2016 0
 2593 00bc 0D23     		mov	r3, #13
 2594 00be FB18     		add	r3, r7, r3
 2595 00c0 1B78     		ldrb	r3, [r3]
 2596 00c2 264A     		ldr	r2, .L156
 2597 00c4 D35C     		ldrb	r3, [r2, r3]
 2598 00c6 002B     		cmp	r3, #0
 2599 00c8 0FD1     		bne	.L153
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2600              		.loc 1 2019 0
 2601 00ca 0823     		mov	r3, #8
 2602 00cc FB18     		add	r3, r7, r3
 2603 00ce 1B78     		ldrb	r3, [r3]
 2604 00d0 0E22     		mov	r2, #14
 2605 00d2 BA18     		add	r2, r7, r2
 2606 00d4 1288     		ldrh	r2, [r2]
 2607 00d6 D1B2     		uxtb	r1, r2
 2608 00d8 204A     		ldr	r2, .L156
 2609 00da D154     		strb	r1, [r2, r3]
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2024:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 83


2035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2610              		.loc 1 2036 0
 2611 00dc 0D23     		mov	r3, #13
 2612 00de FB18     		add	r3, r7, r3
 2613 00e0 1B78     		ldrb	r3, [r3]
 2614 00e2 1E4A     		ldr	r2, .L156
 2615 00e4 0121     		mov	r1, #1
 2616 00e6 D154     		strb	r1, [r2, r3]
 2617 00e8 31E0     		b	.L154
 2618              	.L153:
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2055:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2070:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 84


2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
 2619              		.loc 1 2083 0
 2620 00ea 0C23     		mov	r3, #12
 2621 00ec FB18     		add	r3, r7, r3
 2622 00ee 1B78     		ldrb	r3, [r3]
 2623 00f0 0822     		mov	r2, #8
 2624 00f2 1340     		and	r3, r2
 2625 00f4 2BD0     		beq	.L154
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2626              		.loc 1 2086 0
 2627 00f6 0823     		mov	r3, #8
 2628 00f8 FB18     		add	r3, r7, r3
 2629 00fa 1B78     		ldrb	r3, [r3]
 2630 00fc 174A     		ldr	r2, .L156
 2631 00fe D35C     		ldrb	r3, [r2, r3]
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2632              		.loc 1 2085 0
 2633 0100 9AB2     		uxth	r2, r3
 2634 0102 0E23     		mov	r3, #14
 2635 0104 FC18     		add	r4, r7, r3
 2636 0106 0E23     		mov	r3, #14
 2637 0108 FB18     		add	r3, r7, r3
 2638 010a 1B88     		ldrh	r3, [r3]
 2639 010c 181C     		mov	r0, r3
 2640 010e 111C     		mov	r1, r2
 2641 0110 FFF7FEFF 		bl	CapSense_IIR4Filter
 2642 0114 031C     		mov	r3, r0
 2643 0116 2380     		strh	r3, [r4]
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2644              		.loc 1 2087 0
 2645 0118 0823     		mov	r3, #8
 2646 011a FB18     		add	r3, r7, r3
 2647 011c 1B78     		ldrb	r3, [r3]
 2648 011e 0E22     		mov	r2, #14
 2649 0120 BA18     		add	r2, r7, r2
 2650 0122 1288     		ldrh	r2, [r2]
 2651 0124 D1B2     		uxtb	r1, r2
 2652 0126 0D4A     		ldr	r2, .L156
 2653 0128 D154     		strb	r1, [r2, r3]
 2654 012a 10E0     		b	.L154
 2655              	.L151:
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2092:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 85


2102:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2106:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2656              		.loc 1 2111 0
 2657 012c 0E23     		mov	r3, #14
 2658 012e FB18     		add	r3, r7, r3
 2659 0130 0122     		mov	r2, #1
 2660 0132 5242     		neg	r2, r2
 2661 0134 1A80     		strh	r2, [r3]
2112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
 2662              		.loc 1 2115 0
 2663 0136 0C23     		mov	r3, #12
 2664 0138 FB18     		add	r3, r7, r3
 2665 013a 1B78     		ldrb	r3, [r3]
 2666 013c 1F22     		mov	r2, #31
 2667 013e 1340     		and	r3, r2
 2668 0140 05D0     		beq	.L154
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2669              		.loc 1 2117 0
 2670 0142 0D23     		mov	r3, #13
 2671 0144 FB18     		add	r3, r7, r3
 2672 0146 1B78     		ldrb	r3, [r3]
 2673 0148 044A     		ldr	r2, .L156
 2674 014a 0021     		mov	r1, #0
 2675 014c D154     		strb	r1, [r2, r3]
 2676              	.L154:
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2677              		.loc 1 2122 0
 2678 014e 0E23     		mov	r3, #14
 2679 0150 FB18     		add	r3, r7, r3
 2680 0152 1B88     		ldrh	r3, [r3]
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2681              		.loc 1 2123 0
 2682 0154 181C     		mov	r0, r3
 2683 0156 BD46     		mov	sp, r7
 2684 0158 05B0     		add	sp, sp, #20
 2685              		@ sp needed
 2686 015a 90BD     		pop	{r4, r7, pc}
 2687              	.L157:
 2688              		.align	2
 2689              	.L156:
 2690 015c 20000000 		.word	CapSense_posFiltersData
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 86


 2691 0160 1C000000 		.word	CapSense_posFiltersMask
 2692 0164 00000000 		.word	CapSense_rawDataIndex
 2693 0168 00000000 		.word	CapSense_numberOfSensors
 2694 016c 00000000 		.word	CapSense_fingerThreshold
 2695 0170 10000000 		.word	CapSense_centroidMult
 2696 0174 00000000 		.word	CapSense_noiseThreshold
 2697              		.cfi_endproc
 2698              	.LFE65:
 2699              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2700              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2701              		.align	2
 2702              		.global	CapSense_MedianFilter
 2703              		.code	16
 2704              		.thumb_func
 2705              		.type	CapSense_MedianFilter, %function
 2706              	CapSense_MedianFilter:
 2707              	.LFB66:
2124:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2126:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2127:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 87


2164:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2218:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 88


2221:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2235:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 89


2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2281:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2301:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2305:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2317:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2321:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2333:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 90


2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2337:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2344:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2372:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2375:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2376:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2377:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2378:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 91


2392:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2708              		.loc 1 2406 0
 2709              		.cfi_startproc
 2710 0000 90B5     		push	{r4, r7, lr}
 2711              		.cfi_def_cfa_offset 12
 2712              		.cfi_offset 4, -12
 2713              		.cfi_offset 7, -8
 2714              		.cfi_offset 14, -4
 2715 0002 85B0     		sub	sp, sp, #20
 2716              		.cfi_def_cfa_offset 32
 2717 0004 00AF     		add	r7, sp, #0
 2718              		.cfi_def_cfa_register 7
 2719 0006 041C     		mov	r4, r0
 2720 0008 081C     		mov	r0, r1
 2721 000a 111C     		mov	r1, r2
 2722 000c BB1D     		add	r3, r7, #6
 2723 000e 221C     		add	r2, r4, #0
 2724 0010 1A80     		strh	r2, [r3]
 2725 0012 3B1D     		add	r3, r7, #4
 2726 0014 021C     		add	r2, r0, #0
 2727 0016 1A80     		strh	r2, [r3]
 2728 0018 BB1C     		add	r3, r7, #2
 2729 001a 0A1C     		add	r2, r1, #0
 2730 001c 1A80     		strh	r2, [r3]
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2731              		.loc 1 2409 0
 2732 001e BA1D     		add	r2, r7, #6
 2733 0020 3B1D     		add	r3, r7, #4
 2734 0022 1288     		ldrh	r2, [r2]
 2735 0024 1B88     		ldrh	r3, [r3]
 2736 0026 9A42     		cmp	r2, r3
 2737 0028 0DD9     		bls	.L159
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2738              		.loc 1 2411 0
 2739 002a 0E23     		mov	r3, #14
 2740 002c FB18     		add	r3, r7, r3
 2741 002e 3A1D     		add	r2, r7, #4
 2742 0030 1288     		ldrh	r2, [r2]
 2743 0032 1A80     		strh	r2, [r3]
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 92


 2744              		.loc 1 2412 0
 2745 0034 3B1D     		add	r3, r7, #4
 2746 0036 BA1D     		add	r2, r7, #6
 2747 0038 1288     		ldrh	r2, [r2]
 2748 003a 1A80     		strh	r2, [r3]
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2749              		.loc 1 2413 0
 2750 003c BB1D     		add	r3, r7, #6
 2751 003e 0E22     		mov	r2, #14
 2752 0040 BA18     		add	r2, r7, r2
 2753 0042 1288     		ldrh	r2, [r2]
 2754 0044 1A80     		strh	r2, [r3]
 2755              	.L159:
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2415:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2756              		.loc 1 2416 0
 2757 0046 3A1D     		add	r2, r7, #4
 2758 0048 BB1C     		add	r3, r7, #2
 2759 004a 1288     		ldrh	r2, [r2]
 2760 004c 1B88     		ldrh	r3, [r3]
 2761 004e 9A42     		cmp	r2, r3
 2762 0050 03D9     		bls	.L160
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2763              		.loc 1 2418 0
 2764 0052 3B1D     		add	r3, r7, #4
 2765 0054 BA1C     		add	r2, r7, #2
 2766 0056 1288     		ldrh	r2, [r2]
 2767 0058 1A80     		strh	r2, [r3]
 2768              	.L160:
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2769              		.loc 1 2421 0
 2770 005a 3B1D     		add	r3, r7, #4
 2771 005c BA1D     		add	r2, r7, #6
 2772 005e 1088     		ldrh	r0, [r2]
 2773 0060 1B88     		ldrh	r3, [r3]
 2774 0062 99B2     		uxth	r1, r3
 2775 0064 82B2     		uxth	r2, r0
 2776 0066 9142     		cmp	r1, r2
 2777 0068 00D2     		bcs	.L161
 2778 006a 031C     		add	r3, r0, #0
 2779              	.L161:
 2780 006c 9BB2     		uxth	r3, r3
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2781              		.loc 1 2422 0
 2782 006e 181C     		mov	r0, r3
 2783 0070 BD46     		mov	sp, r7
 2784 0072 05B0     		add	sp, sp, #20
 2785              		@ sp needed
 2786 0074 90BD     		pop	{r4, r7, pc}
 2787              		.cfi_endproc
 2788              	.LFE66:
 2789              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2790 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 93


 2791              		.align	2
 2792              		.global	CapSense_IIR4Filter
 2793              		.code	16
 2794              		.thumb_func
 2795              		.type	CapSense_IIR4Filter, %function
 2796              	CapSense_IIR4Filter:
 2797              	.LFB67:
2423:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2460:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2462:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2463:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2464:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 94


2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2490:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2497:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2500:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2502:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2798              		.loc 1 2526 0
 2799              		.cfi_startproc
 2800 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 95


 2801              		.cfi_def_cfa_offset 8
 2802              		.cfi_offset 7, -8
 2803              		.cfi_offset 14, -4
 2804 0002 84B0     		sub	sp, sp, #16
 2805              		.cfi_def_cfa_offset 24
 2806 0004 00AF     		add	r7, sp, #0
 2807              		.cfi_def_cfa_register 7
 2808 0006 021C     		mov	r2, r0
 2809 0008 BB1D     		add	r3, r7, #6
 2810 000a 1A80     		strh	r2, [r3]
 2811 000c 3B1D     		add	r3, r7, #4
 2812 000e 0A1C     		add	r2, r1, #0
 2813 0010 1A80     		strh	r2, [r3]
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2528:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2814              		.loc 1 2530 0
 2815 0012 BB1D     		add	r3, r7, #6
 2816 0014 1A88     		ldrh	r2, [r3]
 2817 0016 3B1D     		add	r3, r7, #4
 2818 0018 1B88     		ldrh	r3, [r3]
 2819 001a D318     		add	r3, r2, r3
 2820 001c FB60     		str	r3, [r7, #12]
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2821              		.loc 1 2531 0
 2822 001e 3B1D     		add	r3, r7, #4
 2823 0020 1B88     		ldrh	r3, [r3]
 2824 0022 5B00     		lsl	r3, r3, #1
 2825 0024 FA68     		ldr	r2, [r7, #12]
 2826 0026 D318     		add	r3, r2, r3
 2827 0028 FB60     		str	r3, [r7, #12]
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2828              		.loc 1 2532 0
 2829 002a FB68     		ldr	r3, [r7, #12]
 2830 002c 9B08     		lsr	r3, r3, #2
 2831 002e FB60     		str	r3, [r7, #12]
2533:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2832              		.loc 1 2534 0
 2833 0030 FB68     		ldr	r3, [r7, #12]
 2834 0032 9BB2     		uxth	r3, r3
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2835              		.loc 1 2535 0
 2836 0034 181C     		mov	r0, r3
 2837 0036 BD46     		mov	sp, r7
 2838 0038 04B0     		add	sp, sp, #16
 2839              		@ sp needed
 2840 003a 80BD     		pop	{r7, pc}
 2841              		.cfi_endproc
 2842              	.LFE67:
 2843              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2844              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2845              		.align	2
 2846              		.global	CapSense_GetWidgetNumber
 2847              		.code	16
 2848              		.thumb_func
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 96


 2849              		.type	CapSense_GetWidgetNumber, %function
 2850              	CapSense_GetWidgetNumber:
 2851              	.LFB68:
2536:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2539:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2540:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2541:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2578:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2581:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 97


2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2613:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2621:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 98


2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2650:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2658:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2661:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 99


2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2709:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2710:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2711:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2713:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2714:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2715:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2716:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2717:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2718:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2719:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2720:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2721:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2722:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2724:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2725:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2726:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2727:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2728:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2729:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2730:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2731:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2732:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2733:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2852              		.loc 1 2759 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 100


 2853              		.cfi_startproc
 2854 0000 80B5     		push	{r7, lr}
 2855              		.cfi_def_cfa_offset 8
 2856              		.cfi_offset 7, -8
 2857              		.cfi_offset 14, -4
 2858 0002 82B0     		sub	sp, sp, #8
 2859              		.cfi_def_cfa_offset 16
 2860 0004 00AF     		add	r7, sp, #0
 2861              		.cfi_def_cfa_register 7
 2862 0006 7860     		str	r0, [r7, #4]
2760:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2863              		.loc 1 2760 0
 2864 0008 034A     		ldr	r2, .L167
 2865 000a 7B68     		ldr	r3, [r7, #4]
 2866 000c D318     		add	r3, r2, r3
 2867 000e 1B78     		ldrb	r3, [r3]
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2868              		.loc 1 2761 0
 2869 0010 181C     		mov	r0, r3
 2870 0012 BD46     		mov	sp, r7
 2871 0014 02B0     		add	sp, sp, #8
 2872              		@ sp needed
 2873 0016 80BD     		pop	{r7, pc}
 2874              	.L168:
 2875              		.align	2
 2876              	.L167:
 2877 0018 00000000 		.word	CapSense_widgetNumber
 2878              		.cfi_endproc
 2879              	.LFE68:
 2880              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2881              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2882              		.align	2
 2883              		.global	CapSense_GetLowBaselineReset
 2884              		.code	16
 2885              		.thumb_func
 2886              		.type	CapSense_GetLowBaselineReset, %function
 2887              	CapSense_GetLowBaselineReset:
 2888              	.LFB69:
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 101


2781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2889              		.loc 1 2785 0
 2890              		.cfi_startproc
 2891 0000 80B5     		push	{r7, lr}
 2892              		.cfi_def_cfa_offset 8
 2893              		.cfi_offset 7, -8
 2894              		.cfi_offset 14, -4
 2895 0002 82B0     		sub	sp, sp, #8
 2896              		.cfi_def_cfa_offset 16
 2897 0004 00AF     		add	r7, sp, #0
 2898              		.cfi_def_cfa_register 7
 2899 0006 7860     		str	r0, [r7, #4]
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2900              		.loc 1 2786 0
 2901 0008 034A     		ldr	r2, .L171
 2902 000a 7B68     		ldr	r3, [r7, #4]
 2903 000c D318     		add	r3, r2, r3
 2904 000e 1B78     		ldrb	r3, [r3]
2787:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2905              		.loc 1 2787 0
 2906 0010 181C     		mov	r0, r3
 2907 0012 BD46     		mov	sp, r7
 2908 0014 02B0     		add	sp, sp, #8
 2909              		@ sp needed
 2910 0016 80BD     		pop	{r7, pc}
 2911              	.L172:
 2912              		.align	2
 2913              	.L171:
 2914 0018 00000000 		.word	CapSense_lowBaselineReset
 2915              		.cfi_endproc
 2916              	.LFE69:
 2917              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2918              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2919              		.align	2
 2920              		.global	CapSense_GetDebounce
 2921              		.code	16
 2922              		.thumb_func
 2923              		.type	CapSense_GetDebounce, %function
 2924              	CapSense_GetDebounce:
 2925              	.LFB70:
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2791:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2793:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2794:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2795:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2796:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2797:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2798:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2799:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2800:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 102


2801:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2802:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2803:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2804:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2805:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2806:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2807:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2808:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2809:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2810:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2811:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2926              		.loc 1 2811 0
 2927              		.cfi_startproc
 2928 0000 80B5     		push	{r7, lr}
 2929              		.cfi_def_cfa_offset 8
 2930              		.cfi_offset 7, -8
 2931              		.cfi_offset 14, -4
 2932 0002 82B0     		sub	sp, sp, #8
 2933              		.cfi_def_cfa_offset 16
 2934 0004 00AF     		add	r7, sp, #0
 2935              		.cfi_def_cfa_register 7
 2936 0006 7860     		str	r0, [r7, #4]
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2937              		.loc 1 2812 0
 2938 0008 034A     		ldr	r2, .L175
 2939 000a 7B68     		ldr	r3, [r7, #4]
 2940 000c D318     		add	r3, r2, r3
 2941 000e 1B78     		ldrb	r3, [r3]
2813:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2942              		.loc 1 2813 0
 2943 0010 181C     		mov	r0, r3
 2944 0012 BD46     		mov	sp, r7
 2945 0014 02B0     		add	sp, sp, #8
 2946              		@ sp needed
 2947 0016 80BD     		pop	{r7, pc}
 2948              	.L176:
 2949              		.align	2
 2950              	.L175:
 2951 0018 00000000 		.word	CapSense_debounce
 2952              		.cfi_endproc
 2953              	.LFE70:
 2954              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2955              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2956              		.align	2
 2957              		.global	CapSense_EnableRawDataFilters
 2958              		.code	16
 2959              		.thumb_func
 2960              		.type	CapSense_EnableRawDataFilters, %function
 2961              	CapSense_EnableRawDataFilters:
 2962              	.LFB71:
2814:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2815:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 103


2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2963              		.loc 1 2837 0
 2964              		.cfi_startproc
 2965 0000 80B5     		push	{r7, lr}
 2966              		.cfi_def_cfa_offset 8
 2967              		.cfi_offset 7, -8
 2968              		.cfi_offset 14, -4
 2969 0002 00AF     		add	r7, sp, #0
 2970              		.cfi_def_cfa_register 7
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2971              		.loc 1 2838 0
 2972 0004 024B     		ldr	r3, .L178
 2973 0006 0122     		mov	r2, #1
 2974 0008 1A70     		strb	r2, [r3]
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2975              		.loc 1 2839 0
 2976 000a BD46     		mov	sp, r7
 2977              		@ sp needed
 2978 000c 80BD     		pop	{r7, pc}
 2979              	.L179:
 2980 000e C046     		.align	2
 2981              	.L178:
 2982 0010 00000000 		.word	CapSense_enableRawFilters
 2983              		.cfi_endproc
 2984              	.LFE71:
 2985              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2986              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2987              		.align	2
 2988              		.global	CapSense_DisableRawDataFilters
 2989              		.code	16
 2990              		.thumb_func
 2991              		.type	CapSense_DisableRawDataFilters, %function
 2992              	CapSense_DisableRawDataFilters:
 2993              	.LFB72:
2840:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2841:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2842:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2843:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2844:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2845:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2846:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 104


2847:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2848:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2849:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2850:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2851:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2852:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2853:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2854:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2855:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2856:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2857:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2858:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2859:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2860:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2861:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2862:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2994              		.loc 1 2862 0
 2995              		.cfi_startproc
 2996 0000 80B5     		push	{r7, lr}
 2997              		.cfi_def_cfa_offset 8
 2998              		.cfi_offset 7, -8
 2999              		.cfi_offset 14, -4
 3000 0002 00AF     		add	r7, sp, #0
 3001              		.cfi_def_cfa_register 7
2863:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 3002              		.loc 1 2863 0
 3003 0004 024B     		ldr	r3, .L181
 3004 0006 0022     		mov	r2, #0
 3005 0008 1A70     		strb	r2, [r3]
2864:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 3006              		.loc 1 2864 0
 3007 000a BD46     		mov	sp, r7
 3008              		@ sp needed
 3009 000c 80BD     		pop	{r7, pc}
 3010              	.L182:
 3011 000e C046     		.align	2
 3012              	.L181:
 3013 0010 00000000 		.word	CapSense_enableRawFilters
 3014              		.cfi_endproc
 3015              	.LFE72:
 3016              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 3017              		.bss
 3018 004b 00       		.align	2
 3019              	CapSense_centroid.5444:
 3020 004c 000000   		.space	3
 3021 004f 00       		.text
 3022              	.Letext0:
 3023              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3024              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 3025              		.section	.debug_info,"",%progbits
 3026              	.Ldebug_info0:
 3027 0000 590E0000 		.4byte	0xe59
 3028 0004 0400     		.2byte	0x4
 3029 0006 00000000 		.4byte	.Ldebug_abbrev0
 3030 000a 04       		.byte	0x4
 3031 000b 01       		.uleb128 0x1
 3032 000c 3B060000 		.4byte	.LASF143
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 105


 3033 0010 01       		.byte	0x1
 3034 0011 D6090000 		.4byte	.LASF144
 3035 0015 14040000 		.4byte	.LASF145
 3036 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3037 001d 00000000 		.4byte	0
 3038 0021 00000000 		.4byte	.Ldebug_line0
 3039 0025 02       		.uleb128 0x2
 3040 0026 01       		.byte	0x1
 3041 0027 06       		.byte	0x6
 3042 0028 270A0000 		.4byte	.LASF0
 3043 002c 02       		.uleb128 0x2
 3044 002d 01       		.byte	0x1
 3045 002e 08       		.byte	0x8
 3046 002f 27090000 		.4byte	.LASF1
 3047 0033 02       		.uleb128 0x2
 3048 0034 02       		.byte	0x2
 3049 0035 05       		.byte	0x5
 3050 0036 F8070000 		.4byte	.LASF2
 3051 003a 02       		.uleb128 0x2
 3052 003b 02       		.byte	0x2
 3053 003c 07       		.byte	0x7
 3054 003d 330A0000 		.4byte	.LASF3
 3055 0041 02       		.uleb128 0x2
 3056 0042 04       		.byte	0x4
 3057 0043 05       		.byte	0x5
 3058 0044 02080000 		.4byte	.LASF4
 3059 0048 02       		.uleb128 0x2
 3060 0049 04       		.byte	0x4
 3061 004a 07       		.byte	0x7
 3062 004b B9080000 		.4byte	.LASF5
 3063 004f 02       		.uleb128 0x2
 3064 0050 08       		.byte	0x8
 3065 0051 05       		.byte	0x5
 3066 0052 BB050000 		.4byte	.LASF6
 3067 0056 02       		.uleb128 0x2
 3068 0057 08       		.byte	0x8
 3069 0058 07       		.byte	0x7
 3070 0059 18030000 		.4byte	.LASF7
 3071 005d 03       		.uleb128 0x3
 3072 005e 04       		.byte	0x4
 3073 005f 05       		.byte	0x5
 3074 0060 696E7400 		.ascii	"int\000"
 3075 0064 02       		.uleb128 0x2
 3076 0065 04       		.byte	0x4
 3077 0066 07       		.byte	0x7
 3078 0067 21010000 		.4byte	.LASF8
 3079 006b 04       		.uleb128 0x4
 3080 006c C30A0000 		.4byte	.LASF9
 3081 0070 02       		.byte	0x2
 3082 0071 3801     		.2byte	0x138
 3083 0073 2C000000 		.4byte	0x2c
 3084 0077 04       		.uleb128 0x4
 3085 0078 7A050000 		.4byte	.LASF10
 3086 007c 02       		.byte	0x2
 3087 007d 3901     		.2byte	0x139
 3088 007f 3A000000 		.4byte	0x3a
 3089 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 106


 3090 0084 51070000 		.4byte	.LASF11
 3091 0088 02       		.byte	0x2
 3092 0089 3A01     		.2byte	0x13a
 3093 008b 48000000 		.4byte	0x48
 3094 008f 04       		.uleb128 0x4
 3095 0090 3E010000 		.4byte	.LASF12
 3096 0094 02       		.byte	0x2
 3097 0095 3C01     		.2byte	0x13c
 3098 0097 33000000 		.4byte	0x33
 3099 009b 04       		.uleb128 0x4
 3100 009c BE020000 		.4byte	.LASF13
 3101 00a0 02       		.byte	0x2
 3102 00a1 3D01     		.2byte	0x13d
 3103 00a3 41000000 		.4byte	0x41
 3104 00a7 02       		.uleb128 0x2
 3105 00a8 04       		.byte	0x4
 3106 00a9 04       		.byte	0x4
 3107 00aa B8020000 		.4byte	.LASF14
 3108 00ae 02       		.uleb128 0x2
 3109 00af 08       		.byte	0x8
 3110 00b0 04       		.byte	0x4
 3111 00b1 C90A0000 		.4byte	.LASF15
 3112 00b5 02       		.uleb128 0x2
 3113 00b6 01       		.byte	0x1
 3114 00b7 08       		.byte	0x8
 3115 00b8 43050000 		.4byte	.LASF16
 3116 00bc 02       		.uleb128 0x2
 3117 00bd 04       		.byte	0x4
 3118 00be 07       		.byte	0x7
 3119 00bf B0080000 		.4byte	.LASF17
 3120 00c3 05       		.uleb128 0x5
 3121 00c4 5C       		.byte	0x5c
 3122 00c5 03       		.byte	0x3
 3123 00c6 2F       		.byte	0x2f
 3124 00c7 E0010000 		.4byte	0x1e0
 3125 00cb 06       		.uleb128 0x6
 3126 00cc 86050000 		.4byte	.LASF18
 3127 00d0 03       		.byte	0x3
 3128 00d1 31       		.byte	0x31
 3129 00d2 E0010000 		.4byte	0x1e0
 3130 00d6 00       		.byte	0
 3131 00d7 06       		.uleb128 0x6
 3132 00d8 E9070000 		.4byte	.LASF19
 3133 00dc 03       		.byte	0x3
 3134 00dd 32       		.byte	0x32
 3135 00de E0010000 		.4byte	0x1e0
 3136 00e2 04       		.byte	0x4
 3137 00e3 06       		.uleb128 0x6
 3138 00e4 B1090000 		.4byte	.LASF20
 3139 00e8 03       		.byte	0x3
 3140 00e9 33       		.byte	0x33
 3141 00ea E0010000 		.4byte	0x1e0
 3142 00ee 08       		.byte	0x8
 3143 00ef 06       		.uleb128 0x6
 3144 00f0 1A090000 		.4byte	.LASF21
 3145 00f4 03       		.byte	0x3
 3146 00f5 34       		.byte	0x34
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 107


 3147 00f6 E0010000 		.4byte	0x1e0
 3148 00fa 0C       		.byte	0xc
 3149 00fb 06       		.uleb128 0x6
 3150 00fc 1D0A0000 		.4byte	.LASF22
 3151 0100 03       		.byte	0x3
 3152 0101 35       		.byte	0x35
 3153 0102 E0010000 		.4byte	0x1e0
 3154 0106 10       		.byte	0x10
 3155 0107 06       		.uleb128 0x6
 3156 0108 31080000 		.4byte	.LASF23
 3157 010c 03       		.byte	0x3
 3158 010d 36       		.byte	0x36
 3159 010e E6010000 		.4byte	0x1e6
 3160 0112 14       		.byte	0x14
 3161 0113 06       		.uleb128 0x6
 3162 0114 CA020000 		.4byte	.LASF24
 3163 0118 03       		.byte	0x3
 3164 0119 37       		.byte	0x37
 3165 011a F1010000 		.4byte	0x1f1
 3166 011e 18       		.byte	0x18
 3167 011f 06       		.uleb128 0x6
 3168 0120 58040000 		.4byte	.LASF25
 3169 0124 03       		.byte	0x3
 3170 0125 38       		.byte	0x38
 3171 0126 E0010000 		.4byte	0x1e0
 3172 012a 1C       		.byte	0x1c
 3173 012b 06       		.uleb128 0x6
 3174 012c 03030000 		.4byte	.LASF26
 3175 0130 03       		.byte	0x3
 3176 0131 39       		.byte	0x39
 3177 0132 E0010000 		.4byte	0x1e0
 3178 0136 20       		.byte	0x20
 3179 0137 06       		.uleb128 0x6
 3180 0138 8D010000 		.4byte	.LASF27
 3181 013c 03       		.byte	0x3
 3182 013d 3A       		.byte	0x3a
 3183 013e E0010000 		.4byte	0x1e0
 3184 0142 24       		.byte	0x24
 3185 0143 06       		.uleb128 0x6
 3186 0144 F1060000 		.4byte	.LASF28
 3187 0148 03       		.byte	0x3
 3188 0149 3B       		.byte	0x3b
 3189 014a F7010000 		.4byte	0x1f7
 3190 014e 28       		.byte	0x28
 3191 014f 06       		.uleb128 0x6
 3192 0150 44010000 		.4byte	.LASF29
 3193 0154 03       		.byte	0x3
 3194 0155 3C       		.byte	0x3c
 3195 0156 F7010000 		.4byte	0x1f7
 3196 015a 2C       		.byte	0x2c
 3197 015b 06       		.uleb128 0x6
 3198 015c E3080000 		.4byte	.LASF30
 3199 0160 03       		.byte	0x3
 3200 0161 3D       		.byte	0x3d
 3201 0162 F7010000 		.4byte	0x1f7
 3202 0166 30       		.byte	0x30
 3203 0167 06       		.uleb128 0x6
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 108


 3204 0168 86080000 		.4byte	.LASF31
 3205 016c 03       		.byte	0x3
 3206 016d 3E       		.byte	0x3e
 3207 016e E0010000 		.4byte	0x1e0
 3208 0172 34       		.byte	0x34
 3209 0173 06       		.uleb128 0x6
 3210 0174 48000000 		.4byte	.LASF32
 3211 0178 03       		.byte	0x3
 3212 0179 3F       		.byte	0x3f
 3213 017a E0010000 		.4byte	0x1e0
 3214 017e 38       		.byte	0x38
 3215 017f 06       		.uleb128 0x6
 3216 0180 6B050000 		.4byte	.LASF33
 3217 0184 03       		.byte	0x3
 3218 0185 40       		.byte	0x40
 3219 0186 E6010000 		.4byte	0x1e6
 3220 018a 3C       		.byte	0x3c
 3221 018b 06       		.uleb128 0x6
 3222 018c 08020000 		.4byte	.LASF34
 3223 0190 03       		.byte	0x3
 3224 0191 41       		.byte	0x41
 3225 0192 E6010000 		.4byte	0x1e6
 3226 0196 40       		.byte	0x40
 3227 0197 06       		.uleb128 0x6
 3228 0198 95000000 		.4byte	.LASF35
 3229 019c 03       		.byte	0x3
 3230 019d 42       		.byte	0x42
 3231 019e E6010000 		.4byte	0x1e6
 3232 01a2 44       		.byte	0x44
 3233 01a3 06       		.uleb128 0x6
 3234 01a4 13060000 		.4byte	.LASF36
 3235 01a8 03       		.byte	0x3
 3236 01a9 43       		.byte	0x43
 3237 01aa 0C020000 		.4byte	0x20c
 3238 01ae 48       		.byte	0x48
 3239 01af 06       		.uleb128 0x6
 3240 01b0 EB050000 		.4byte	.LASF37
 3241 01b4 03       		.byte	0x3
 3242 01b5 44       		.byte	0x44
 3243 01b6 1D020000 		.4byte	0x21d
 3244 01ba 4C       		.byte	0x4c
 3245 01bb 06       		.uleb128 0x6
 3246 01bc 6E040000 		.4byte	.LASF38
 3247 01c0 03       		.byte	0x3
 3248 01c1 45       		.byte	0x45
 3249 01c2 0C020000 		.4byte	0x20c
 3250 01c6 50       		.byte	0x50
 3251 01c7 06       		.uleb128 0x6
 3252 01c8 A5000000 		.4byte	.LASF39
 3253 01cc 03       		.byte	0x3
 3254 01cd 46       		.byte	0x46
 3255 01ce 37020000 		.4byte	0x237
 3256 01d2 54       		.byte	0x54
 3257 01d3 06       		.uleb128 0x6
 3258 01d4 640A0000 		.4byte	.LASF40
 3259 01d8 03       		.byte	0x3
 3260 01d9 47       		.byte	0x47
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 109


 3261 01da 52020000 		.4byte	0x252
 3262 01de 58       		.byte	0x58
 3263 01df 00       		.byte	0
 3264 01e0 07       		.uleb128 0x7
 3265 01e1 04       		.byte	0x4
 3266 01e2 6B000000 		.4byte	0x6b
 3267 01e6 07       		.uleb128 0x7
 3268 01e7 04       		.byte	0x4
 3269 01e8 EC010000 		.4byte	0x1ec
 3270 01ec 08       		.uleb128 0x8
 3271 01ed 6B000000 		.4byte	0x6b
 3272 01f1 07       		.uleb128 0x7
 3273 01f2 04       		.byte	0x4
 3274 01f3 83000000 		.4byte	0x83
 3275 01f7 07       		.uleb128 0x7
 3276 01f8 04       		.byte	0x4
 3277 01f9 77000000 		.4byte	0x77
 3278 01fd 09       		.uleb128 0x9
 3279 01fe 77000000 		.4byte	0x77
 3280 0202 0C020000 		.4byte	0x20c
 3281 0206 0A       		.uleb128 0xa
 3282 0207 83000000 		.4byte	0x83
 3283 020b 00       		.byte	0
 3284 020c 07       		.uleb128 0x7
 3285 020d 04       		.byte	0x4
 3286 020e FD010000 		.4byte	0x1fd
 3287 0212 0B       		.uleb128 0xb
 3288 0213 1D020000 		.4byte	0x21d
 3289 0217 0A       		.uleb128 0xa
 3290 0218 83000000 		.4byte	0x83
 3291 021c 00       		.byte	0
 3292 021d 07       		.uleb128 0x7
 3293 021e 04       		.byte	0x4
 3294 021f 12020000 		.4byte	0x212
 3295 0223 09       		.uleb128 0x9
 3296 0224 83000000 		.4byte	0x83
 3297 0228 37020000 		.4byte	0x237
 3298 022c 0A       		.uleb128 0xa
 3299 022d E6010000 		.4byte	0x1e6
 3300 0231 0A       		.uleb128 0xa
 3301 0232 83000000 		.4byte	0x83
 3302 0236 00       		.byte	0
 3303 0237 07       		.uleb128 0x7
 3304 0238 04       		.byte	0x4
 3305 0239 23020000 		.4byte	0x223
 3306 023d 0B       		.uleb128 0xb
 3307 023e 52020000 		.4byte	0x252
 3308 0242 0A       		.uleb128 0xa
 3309 0243 E0010000 		.4byte	0x1e0
 3310 0247 0A       		.uleb128 0xa
 3311 0248 83000000 		.4byte	0x83
 3312 024c 0A       		.uleb128 0xa
 3313 024d 83000000 		.4byte	0x83
 3314 0251 00       		.byte	0
 3315 0252 07       		.uleb128 0x7
 3316 0253 04       		.byte	0x4
 3317 0254 3D020000 		.4byte	0x23d
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 110


 3318 0258 0C       		.uleb128 0xc
 3319 0259 D00A0000 		.4byte	.LASF41
 3320 025d 03       		.byte	0x3
 3321 025e 48       		.byte	0x48
 3322 025f C3000000 		.4byte	0xc3
 3323 0263 05       		.uleb128 0x5
 3324 0264 0C       		.byte	0xc
 3325 0265 03       		.byte	0x3
 3326 0266 4A       		.byte	0x4a
 3327 0267 B4020000 		.4byte	0x2b4
 3328 026b 06       		.uleb128 0x6
 3329 026c 04050000 		.4byte	.LASF42
 3330 0270 03       		.byte	0x3
 3331 0271 4C       		.byte	0x4c
 3332 0272 6B000000 		.4byte	0x6b
 3333 0276 00       		.byte	0
 3334 0277 06       		.uleb128 0x6
 3335 0278 15020000 		.4byte	.LASF43
 3336 027c 03       		.byte	0x3
 3337 027d 4D       		.byte	0x4d
 3338 027e 6B000000 		.4byte	0x6b
 3339 0282 01       		.byte	0x1
 3340 0283 06       		.uleb128 0x6
 3341 0284 2E010000 		.4byte	.LASF44
 3342 0288 03       		.byte	0x3
 3343 0289 4E       		.byte	0x4e
 3344 028a 6B000000 		.4byte	0x6b
 3345 028e 02       		.byte	0x2
 3346 028f 06       		.uleb128 0x6
 3347 0290 1D050000 		.4byte	.LASF45
 3348 0294 03       		.byte	0x3
 3349 0295 4F       		.byte	0x4f
 3350 0296 77000000 		.4byte	0x77
 3351 029a 04       		.byte	0x4
 3352 029b 06       		.uleb128 0x6
 3353 029c C3070000 		.4byte	.LASF46
 3354 02a0 03       		.byte	0x3
 3355 02a1 50       		.byte	0x50
 3356 02a2 77000000 		.4byte	0x77
 3357 02a6 06       		.byte	0x6
 3358 02a7 06       		.uleb128 0x6
 3359 02a8 CB080000 		.4byte	.LASF47
 3360 02ac 03       		.byte	0x3
 3361 02ad 51       		.byte	0x51
 3362 02ae B4020000 		.4byte	0x2b4
 3363 02b2 08       		.byte	0x8
 3364 02b3 00       		.byte	0
 3365 02b4 07       		.uleb128 0x7
 3366 02b5 04       		.byte	0x4
 3367 02b6 BA020000 		.4byte	0x2ba
 3368 02ba 08       		.uleb128 0x8
 3369 02bb 58020000 		.4byte	0x258
 3370 02bf 0C       		.uleb128 0xc
 3371 02c0 D1010000 		.4byte	.LASF48
 3372 02c4 03       		.byte	0x3
 3373 02c5 52       		.byte	0x52
 3374 02c6 63020000 		.4byte	0x263
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 111


 3375 02ca 0D       		.uleb128 0xd
 3376 02cb C9060000 		.4byte	.LASF49
 3377 02cf 01       		.byte	0x1
 3378 02d0 A0       		.byte	0xa0
 3379 02d1 00000000 		.4byte	.LFB35
 3380 02d5 90000000 		.4byte	.LFE35-.LFB35
 3381 02d9 01       		.uleb128 0x1
 3382 02da 9C       		.byte	0x9c
 3383 02db FC020000 		.4byte	0x2fc
 3384 02df 0E       		.uleb128 0xe
 3385 02e0 16050000 		.4byte	.LASF51
 3386 02e4 01       		.byte	0x1
 3387 02e5 A0       		.byte	0xa0
 3388 02e6 83000000 		.4byte	0x83
 3389 02ea 02       		.uleb128 0x2
 3390 02eb 91       		.byte	0x91
 3391 02ec 6C       		.sleb128 -20
 3392 02ed 0F       		.uleb128 0xf
 3393 02ee 49030000 		.4byte	.LASF53
 3394 02f2 01       		.byte	0x1
 3395 02f3 A4       		.byte	0xa4
 3396 02f4 6B000000 		.4byte	0x6b
 3397 02f8 02       		.uleb128 0x2
 3398 02f9 91       		.byte	0x91
 3399 02fa 77       		.sleb128 -9
 3400 02fb 00       		.byte	0
 3401 02fc 10       		.uleb128 0x10
 3402 02fd AF010000 		.4byte	.LASF50
 3403 0301 01       		.byte	0x1
 3404 0302 EF       		.byte	0xef
 3405 0303 00000000 		.4byte	.LFB36
 3406 0307 28000000 		.4byte	.LFE36-.LFB36
 3407 030b 01       		.uleb128 0x1
 3408 030c 9C       		.byte	0x9c
 3409 030d 20030000 		.4byte	0x320
 3410 0311 0E       		.uleb128 0xe
 3411 0312 16050000 		.4byte	.LASF51
 3412 0316 01       		.byte	0x1
 3413 0317 EF       		.byte	0xef
 3414 0318 83000000 		.4byte	0x83
 3415 031c 02       		.uleb128 0x2
 3416 031d 91       		.byte	0x91
 3417 031e 74       		.sleb128 -12
 3418 031f 00       		.byte	0
 3419 0320 11       		.uleb128 0x11
 3420 0321 5B090000 		.4byte	.LASF52
 3421 0325 01       		.byte	0x1
 3422 0326 1401     		.2byte	0x114
 3423 0328 00000000 		.4byte	.LFB37
 3424 032c 26000000 		.4byte	.LFE37-.LFB37
 3425 0330 01       		.uleb128 0x1
 3426 0331 9C       		.byte	0x9c
 3427 0332 44030000 		.4byte	0x344
 3428 0336 12       		.uleb128 0x12
 3429 0337 6900     		.ascii	"i\000"
 3430 0339 01       		.byte	0x1
 3431 033a 1601     		.2byte	0x116
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 112


 3432 033c 83000000 		.4byte	0x83
 3433 0340 02       		.uleb128 0x2
 3434 0341 91       		.byte	0x91
 3435 0342 74       		.sleb128 -12
 3436 0343 00       		.byte	0
 3437 0344 11       		.uleb128 0x11
 3438 0345 51010000 		.4byte	.LASF54
 3439 0349 01       		.byte	0x1
 3440 034a 3701     		.2byte	0x137
 3441 034c 00000000 		.4byte	.LFB38
 3442 0350 50000000 		.4byte	.LFE38-.LFB38
 3443 0354 01       		.uleb128 0x1
 3444 0355 9C       		.byte	0x9c
 3445 0356 77030000 		.4byte	0x377
 3446 035a 12       		.uleb128 0x12
 3447 035b 6900     		.ascii	"i\000"
 3448 035d 01       		.byte	0x1
 3449 035e 3901     		.2byte	0x139
 3450 0360 83000000 		.4byte	0x83
 3451 0364 02       		.uleb128 0x2
 3452 0365 91       		.byte	0x91
 3453 0366 74       		.sleb128 -12
 3454 0367 13       		.uleb128 0x13
 3455 0368 04010000 		.4byte	.LASF55
 3456 036c 01       		.byte	0x1
 3457 036d 3A01     		.2byte	0x13a
 3458 036f 83000000 		.4byte	0x83
 3459 0373 02       		.uleb128 0x2
 3460 0374 91       		.byte	0x91
 3461 0375 70       		.sleb128 -16
 3462 0376 00       		.byte	0
 3463 0377 11       		.uleb128 0x11
 3464 0378 72000000 		.4byte	.LASF56
 3465 037c 01       		.byte	0x1
 3466 037d 7801     		.2byte	0x178
 3467 037f 00000000 		.4byte	.LFB39
 3468 0383 38020000 		.4byte	.LFE39-.LFB39
 3469 0387 01       		.uleb128 0x1
 3470 0388 9C       		.byte	0x9c
 3471 0389 F7030000 		.4byte	0x3f7
 3472 038d 14       		.uleb128 0x14
 3473 038e 16050000 		.4byte	.LASF51
 3474 0392 01       		.byte	0x1
 3475 0393 7801     		.2byte	0x178
 3476 0395 83000000 		.4byte	0x83
 3477 0399 02       		.uleb128 0x2
 3478 039a 91       		.byte	0x91
 3479 039b 5C       		.sleb128 -36
 3480 039c 13       		.uleb128 0x13
 3481 039d 69040000 		.4byte	.LASF57
 3482 03a1 01       		.byte	0x1
 3483 03a2 7A01     		.2byte	0x17a
 3484 03a4 83000000 		.4byte	0x83
 3485 03a8 02       		.uleb128 0x2
 3486 03a9 91       		.byte	0x91
 3487 03aa 60       		.sleb128 -32
 3488 03ab 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 113


 3489 03ac 0F040000 		.4byte	.LASF58
 3490 03b0 01       		.byte	0x1
 3491 03b1 7B01     		.2byte	0x17b
 3492 03b3 83000000 		.4byte	0x83
 3493 03b7 02       		.uleb128 0x2
 3494 03b8 91       		.byte	0x91
 3495 03b9 6C       		.sleb128 -20
 3496 03ba 13       		.uleb128 0x13
 3497 03bb 890A0000 		.4byte	.LASF59
 3498 03bf 01       		.byte	0x1
 3499 03c0 7C01     		.2byte	0x17c
 3500 03c2 77000000 		.4byte	0x77
 3501 03c6 02       		.uleb128 0x2
 3502 03c7 91       		.byte	0x91
 3503 03c8 6A       		.sleb128 -22
 3504 03c9 13       		.uleb128 0x13
 3505 03ca 8A040000 		.4byte	.LASF60
 3506 03ce 01       		.byte	0x1
 3507 03cf 7D01     		.2byte	0x17d
 3508 03d1 77000000 		.4byte	0x77
 3509 03d5 02       		.uleb128 0x2
 3510 03d6 91       		.byte	0x91
 3511 03d7 68       		.sleb128 -24
 3512 03d8 13       		.uleb128 0x13
 3513 03d9 49030000 		.4byte	.LASF53
 3514 03dd 01       		.byte	0x1
 3515 03de 7E01     		.2byte	0x17e
 3516 03e0 6B000000 		.4byte	0x6b
 3517 03e4 02       		.uleb128 0x2
 3518 03e5 91       		.byte	0x91
 3519 03e6 67       		.sleb128 -25
 3520 03e7 13       		.uleb128 0x13
 3521 03e8 D4080000 		.4byte	.LASF61
 3522 03ec 01       		.byte	0x1
 3523 03ed 7F01     		.2byte	0x17f
 3524 03ef 6B000000 		.4byte	0x6b
 3525 03f3 02       		.uleb128 0x2
 3526 03f4 91       		.byte	0x91
 3527 03f5 66       		.sleb128 -26
 3528 03f6 00       		.byte	0
 3529 03f7 11       		.uleb128 0x11
 3530 03f8 1D060000 		.4byte	.LASF62
 3531 03fc 01       		.byte	0x1
 3532 03fd 3802     		.2byte	0x238
 3533 03ff 00000000 		.4byte	.LFB40
 3534 0403 1E000000 		.4byte	.LFE40-.LFB40
 3535 0407 01       		.uleb128 0x1
 3536 0408 9C       		.byte	0x9c
 3537 0409 1D040000 		.4byte	0x41d
 3538 040d 14       		.uleb128 0x14
 3539 040e 16050000 		.4byte	.LASF51
 3540 0412 01       		.byte	0x1
 3541 0413 3802     		.2byte	0x238
 3542 0415 83000000 		.4byte	0x83
 3543 0419 02       		.uleb128 0x2
 3544 041a 91       		.byte	0x91
 3545 041b 74       		.sleb128 -12
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 114


 3546 041c 00       		.byte	0
 3547 041d 11       		.uleb128 0x11
 3548 041e CB000000 		.4byte	.LASF63
 3549 0422 01       		.byte	0x1
 3550 0423 6E02     		.2byte	0x26e
 3551 0425 00000000 		.4byte	.LFB41
 3552 0429 40000000 		.4byte	.LFE41-.LFB41
 3553 042d 01       		.uleb128 0x1
 3554 042e 9C       		.byte	0x9c
 3555 042f 50040000 		.4byte	0x450
 3556 0433 12       		.uleb128 0x12
 3557 0434 6900     		.ascii	"i\000"
 3558 0436 01       		.byte	0x1
 3559 0437 7002     		.2byte	0x270
 3560 0439 83000000 		.4byte	0x83
 3561 043d 02       		.uleb128 0x2
 3562 043e 91       		.byte	0x91
 3563 043f 74       		.sleb128 -12
 3564 0440 13       		.uleb128 0x13
 3565 0441 04010000 		.4byte	.LASF55
 3566 0445 01       		.byte	0x1
 3567 0446 7102     		.2byte	0x271
 3568 0448 83000000 		.4byte	0x83
 3569 044c 02       		.uleb128 0x2
 3570 044d 91       		.byte	0x91
 3571 044e 70       		.sleb128 -16
 3572 044f 00       		.byte	0
 3573 0450 11       		.uleb128 0x11
 3574 0451 86020000 		.4byte	.LASF64
 3575 0455 01       		.byte	0x1
 3576 0456 9B02     		.2byte	0x29b
 3577 0458 00000000 		.4byte	.LFB42
 3578 045c 70000000 		.4byte	.LFE42-.LFB42
 3579 0460 01       		.uleb128 0x1
 3580 0461 9C       		.byte	0x9c
 3581 0462 BF040000 		.4byte	0x4bf
 3582 0466 14       		.uleb128 0x14
 3583 0467 49030000 		.4byte	.LASF53
 3584 046b 01       		.byte	0x1
 3585 046c 9B02     		.2byte	0x29b
 3586 046e 83000000 		.4byte	0x83
 3587 0472 02       		.uleb128 0x2
 3588 0473 91       		.byte	0x91
 3589 0474 5C       		.sleb128 -36
 3590 0475 13       		.uleb128 0x13
 3591 0476 9A040000 		.4byte	.LASF65
 3592 047a 01       		.byte	0x1
 3593 047b 9D02     		.2byte	0x29d
 3594 047d 83000000 		.4byte	0x83
 3595 0481 02       		.uleb128 0x2
 3596 0482 91       		.byte	0x91
 3597 0483 70       		.sleb128 -16
 3598 0484 13       		.uleb128 0x13
 3599 0485 0B080000 		.4byte	.LASF66
 3600 0489 01       		.byte	0x1
 3601 048a 9E02     		.2byte	0x29e
 3602 048c 83000000 		.4byte	0x83
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 115


 3603 0490 02       		.uleb128 0x2
 3604 0491 91       		.byte	0x91
 3605 0492 6C       		.sleb128 -20
 3606 0493 13       		.uleb128 0x13
 3607 0494 B8070000 		.4byte	.LASF67
 3608 0498 01       		.byte	0x1
 3609 0499 9F02     		.2byte	0x29f
 3610 049b 83000000 		.4byte	0x83
 3611 049f 02       		.uleb128 0x2
 3612 04a0 91       		.byte	0x91
 3613 04a1 68       		.sleb128 -24
 3614 04a2 12       		.uleb128 0x12
 3615 04a3 6900     		.ascii	"i\000"
 3616 04a5 01       		.byte	0x1
 3617 04a6 A002     		.2byte	0x2a0
 3618 04a8 83000000 		.4byte	0x83
 3619 04ac 02       		.uleb128 0x2
 3620 04ad 91       		.byte	0x91
 3621 04ae 74       		.sleb128 -12
 3622 04af 13       		.uleb128 0x13
 3623 04b0 04010000 		.4byte	.LASF55
 3624 04b4 01       		.byte	0x1
 3625 04b5 A102     		.2byte	0x2a1
 3626 04b7 83000000 		.4byte	0x83
 3627 04bb 02       		.uleb128 0x2
 3628 04bc 91       		.byte	0x91
 3629 04bd 64       		.sleb128 -28
 3630 04be 00       		.byte	0
 3631 04bf 15       		.uleb128 0x15
 3632 04c0 7B090000 		.4byte	.LASF70
 3633 04c4 01       		.byte	0x1
 3634 04c5 CC02     		.2byte	0x2cc
 3635 04c7 77000000 		.4byte	0x77
 3636 04cb 00000000 		.4byte	.LFB43
 3637 04cf 1C000000 		.4byte	.LFE43-.LFB43
 3638 04d3 01       		.uleb128 0x1
 3639 04d4 9C       		.byte	0x9c
 3640 04d5 E9040000 		.4byte	0x4e9
 3641 04d9 14       		.uleb128 0x14
 3642 04da 16050000 		.4byte	.LASF51
 3643 04de 01       		.byte	0x1
 3644 04df CC02     		.2byte	0x2cc
 3645 04e1 83000000 		.4byte	0x83
 3646 04e5 02       		.uleb128 0x2
 3647 04e6 91       		.byte	0x91
 3648 04e7 74       		.sleb128 -12
 3649 04e8 00       		.byte	0
 3650 04e9 16       		.uleb128 0x16
 3651 04ea EF010000 		.4byte	.LASF68
 3652 04ee 01       		.byte	0x1
 3653 04ef E702     		.2byte	0x2e7
 3654 04f1 00000000 		.4byte	.LFB44
 3655 04f5 24000000 		.4byte	.LFE44-.LFB44
 3656 04f9 01       		.uleb128 0x1
 3657 04fa 9C       		.byte	0x9c
 3658 04fb 1E050000 		.4byte	0x51e
 3659 04ff 14       		.uleb128 0x14
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 116


 3660 0500 16050000 		.4byte	.LASF51
 3661 0504 01       		.byte	0x1
 3662 0505 E702     		.2byte	0x2e7
 3663 0507 83000000 		.4byte	0x83
 3664 050b 02       		.uleb128 0x2
 3665 050c 91       		.byte	0x91
 3666 050d 74       		.sleb128 -12
 3667 050e 14       		.uleb128 0x14
 3668 050f 81050000 		.4byte	.LASF69
 3669 0513 01       		.byte	0x1
 3670 0514 E702     		.2byte	0x2e7
 3671 0516 77000000 		.4byte	0x77
 3672 051a 02       		.uleb128 0x2
 3673 051b 91       		.byte	0x91
 3674 051c 72       		.sleb128 -14
 3675 051d 00       		.byte	0
 3676 051e 15       		.uleb128 0x15
 3677 051f F5030000 		.4byte	.LASF71
 3678 0523 01       		.byte	0x1
 3679 0524 0203     		.2byte	0x302
 3680 0526 6B000000 		.4byte	0x6b
 3681 052a 00000000 		.4byte	.LFB45
 3682 052e 1C000000 		.4byte	.LFE45-.LFB45
 3683 0532 01       		.uleb128 0x1
 3684 0533 9C       		.byte	0x9c
 3685 0534 48050000 		.4byte	0x548
 3686 0538 14       		.uleb128 0x14
 3687 0539 16050000 		.4byte	.LASF51
 3688 053d 01       		.byte	0x1
 3689 053e 0203     		.2byte	0x302
 3690 0540 83000000 		.4byte	0x83
 3691 0544 02       		.uleb128 0x2
 3692 0545 91       		.byte	0x91
 3693 0546 74       		.sleb128 -12
 3694 0547 00       		.byte	0
 3695 0548 16       		.uleb128 0x16
 3696 0549 25020000 		.4byte	.LASF72
 3697 054d 01       		.byte	0x1
 3698 054e 1D03     		.2byte	0x31d
 3699 0550 00000000 		.4byte	.LFB46
 3700 0554 24000000 		.4byte	.LFE46-.LFB46
 3701 0558 01       		.uleb128 0x1
 3702 0559 9C       		.byte	0x9c
 3703 055a 7D050000 		.4byte	0x57d
 3704 055e 14       		.uleb128 0x14
 3705 055f 16050000 		.4byte	.LASF51
 3706 0563 01       		.byte	0x1
 3707 0564 1D03     		.2byte	0x31d
 3708 0566 83000000 		.4byte	0x83
 3709 056a 02       		.uleb128 0x2
 3710 056b 91       		.byte	0x91
 3711 056c 74       		.sleb128 -12
 3712 056d 14       		.uleb128 0x14
 3713 056e D2030000 		.4byte	.LASF73
 3714 0572 01       		.byte	0x1
 3715 0573 1D03     		.2byte	0x31d
 3716 0575 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 117


 3717 0579 02       		.uleb128 0x2
 3718 057a 91       		.byte	0x91
 3719 057b 73       		.sleb128 -13
 3720 057c 00       		.byte	0
 3721 057d 15       		.uleb128 0x15
 3722 057e 92070000 		.4byte	.LASF74
 3723 0582 01       		.byte	0x1
 3724 0583 3803     		.2byte	0x338
 3725 0585 6B000000 		.4byte	0x6b
 3726 0589 00000000 		.4byte	.LFB47
 3727 058d 1C000000 		.4byte	.LFE47-.LFB47
 3728 0591 01       		.uleb128 0x1
 3729 0592 9C       		.byte	0x9c
 3730 0593 A7050000 		.4byte	0x5a7
 3731 0597 14       		.uleb128 0x14
 3732 0598 49030000 		.4byte	.LASF53
 3733 059c 01       		.byte	0x1
 3734 059d 3803     		.2byte	0x338
 3735 059f 83000000 		.4byte	0x83
 3736 05a3 02       		.uleb128 0x2
 3737 05a4 91       		.byte	0x91
 3738 05a5 74       		.sleb128 -12
 3739 05a6 00       		.byte	0
 3740 05a7 15       		.uleb128 0x15
 3741 05a8 E8020000 		.4byte	.LASF75
 3742 05ac 01       		.byte	0x1
 3743 05ad 5303     		.2byte	0x353
 3744 05af 6B000000 		.4byte	0x6b
 3745 05b3 00000000 		.4byte	.LFB48
 3746 05b7 1C000000 		.4byte	.LFE48-.LFB48
 3747 05bb 01       		.uleb128 0x1
 3748 05bc 9C       		.byte	0x9c
 3749 05bd D1050000 		.4byte	0x5d1
 3750 05c1 14       		.uleb128 0x14
 3751 05c2 49030000 		.4byte	.LASF53
 3752 05c6 01       		.byte	0x1
 3753 05c7 5303     		.2byte	0x353
 3754 05c9 83000000 		.4byte	0x83
 3755 05cd 02       		.uleb128 0x2
 3756 05ce 91       		.byte	0x91
 3757 05cf 74       		.sleb128 -12
 3758 05d0 00       		.byte	0
 3759 05d1 15       		.uleb128 0x15
 3760 05d2 D8030000 		.4byte	.LASF76
 3761 05d6 01       		.byte	0x1
 3762 05d7 6F03     		.2byte	0x36f
 3763 05d9 6B000000 		.4byte	0x6b
 3764 05dd 00000000 		.4byte	.LFB49
 3765 05e1 1C000000 		.4byte	.LFE49-.LFB49
 3766 05e5 01       		.uleb128 0x1
 3767 05e6 9C       		.byte	0x9c
 3768 05e7 FB050000 		.4byte	0x5fb
 3769 05eb 14       		.uleb128 0x14
 3770 05ec 49030000 		.4byte	.LASF53
 3771 05f0 01       		.byte	0x1
 3772 05f1 6F03     		.2byte	0x36f
 3773 05f3 83000000 		.4byte	0x83
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 118


 3774 05f7 02       		.uleb128 0x2
 3775 05f8 91       		.byte	0x91
 3776 05f9 74       		.sleb128 -12
 3777 05fa 00       		.byte	0
 3778 05fb 15       		.uleb128 0x15
 3779 05fc 48050000 		.4byte	.LASF77
 3780 0600 01       		.byte	0x1
 3781 0601 8B03     		.2byte	0x38b
 3782 0603 6B000000 		.4byte	0x6b
 3783 0607 00000000 		.4byte	.LFB50
 3784 060b 1C000000 		.4byte	.LFE50-.LFB50
 3785 060f 01       		.uleb128 0x1
 3786 0610 9C       		.byte	0x9c
 3787 0611 25060000 		.4byte	0x625
 3788 0615 14       		.uleb128 0x14
 3789 0616 49030000 		.4byte	.LASF53
 3790 061a 01       		.byte	0x1
 3791 061b 8B03     		.2byte	0x38b
 3792 061d 83000000 		.4byte	0x83
 3793 0621 02       		.uleb128 0x2
 3794 0622 91       		.byte	0x91
 3795 0623 74       		.sleb128 -12
 3796 0624 00       		.byte	0
 3797 0625 16       		.uleb128 0x16
 3798 0626 97030000 		.4byte	.LASF78
 3799 062a 01       		.byte	0x1
 3800 062b AC03     		.2byte	0x3ac
 3801 062d 00000000 		.4byte	.LFB51
 3802 0631 24000000 		.4byte	.LFE51-.LFB51
 3803 0635 01       		.uleb128 0x1
 3804 0636 9C       		.byte	0x9c
 3805 0637 5A060000 		.4byte	0x65a
 3806 063b 14       		.uleb128 0x14
 3807 063c 49030000 		.4byte	.LASF53
 3808 0640 01       		.byte	0x1
 3809 0641 AC03     		.2byte	0x3ac
 3810 0643 83000000 		.4byte	0x83
 3811 0647 02       		.uleb128 0x2
 3812 0648 91       		.byte	0x91
 3813 0649 74       		.sleb128 -12
 3814 064a 14       		.uleb128 0x14
 3815 064b D2030000 		.4byte	.LASF73
 3816 064f 01       		.byte	0x1
 3817 0650 AC03     		.2byte	0x3ac
 3818 0652 6B000000 		.4byte	0x6b
 3819 0656 02       		.uleb128 0x2
 3820 0657 91       		.byte	0x91
 3821 0658 73       		.sleb128 -13
 3822 0659 00       		.byte	0
 3823 065a 16       		.uleb128 0x16
 3824 065b 6B020000 		.4byte	.LASF79
 3825 065f 01       		.byte	0x1
 3826 0660 C803     		.2byte	0x3c8
 3827 0662 00000000 		.4byte	.LFB52
 3828 0666 24000000 		.4byte	.LFE52-.LFB52
 3829 066a 01       		.uleb128 0x1
 3830 066b 9C       		.byte	0x9c
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 119


 3831 066c 8F060000 		.4byte	0x68f
 3832 0670 14       		.uleb128 0x14
 3833 0671 49030000 		.4byte	.LASF53
 3834 0675 01       		.byte	0x1
 3835 0676 C803     		.2byte	0x3c8
 3836 0678 83000000 		.4byte	0x83
 3837 067c 02       		.uleb128 0x2
 3838 067d 91       		.byte	0x91
 3839 067e 74       		.sleb128 -12
 3840 067f 14       		.uleb128 0x14
 3841 0680 D2030000 		.4byte	.LASF73
 3842 0684 01       		.byte	0x1
 3843 0685 C803     		.2byte	0x3c8
 3844 0687 6B000000 		.4byte	0x6b
 3845 068b 02       		.uleb128 0x2
 3846 068c 91       		.byte	0x91
 3847 068d 73       		.sleb128 -13
 3848 068e 00       		.byte	0
 3849 068f 16       		.uleb128 0x16
 3850 0690 75070000 		.4byte	.LASF80
 3851 0694 01       		.byte	0x1
 3852 0695 E403     		.2byte	0x3e4
 3853 0697 00000000 		.4byte	.LFB53
 3854 069b 24000000 		.4byte	.LFE53-.LFB53
 3855 069f 01       		.uleb128 0x1
 3856 06a0 9C       		.byte	0x9c
 3857 06a1 C4060000 		.4byte	0x6c4
 3858 06a5 14       		.uleb128 0x14
 3859 06a6 49030000 		.4byte	.LASF53
 3860 06aa 01       		.byte	0x1
 3861 06ab E403     		.2byte	0x3e4
 3862 06ad 83000000 		.4byte	0x83
 3863 06b1 02       		.uleb128 0x2
 3864 06b2 91       		.byte	0x91
 3865 06b3 74       		.sleb128 -12
 3866 06b4 14       		.uleb128 0x14
 3867 06b5 D2030000 		.4byte	.LASF73
 3868 06b9 01       		.byte	0x1
 3869 06ba E403     		.2byte	0x3e4
 3870 06bc 6B000000 		.4byte	0x6b
 3871 06c0 02       		.uleb128 0x2
 3872 06c1 91       		.byte	0x91
 3873 06c2 73       		.sleb128 -13
 3874 06c3 00       		.byte	0
 3875 06c4 16       		.uleb128 0x16
 3876 06c5 2E070000 		.4byte	.LASF81
 3877 06c9 01       		.byte	0x1
 3878 06ca 0104     		.2byte	0x401
 3879 06cc 00000000 		.4byte	.LFB54
 3880 06d0 24000000 		.4byte	.LFE54-.LFB54
 3881 06d4 01       		.uleb128 0x1
 3882 06d5 9C       		.byte	0x9c
 3883 06d6 F9060000 		.4byte	0x6f9
 3884 06da 14       		.uleb128 0x14
 3885 06db 49030000 		.4byte	.LASF53
 3886 06df 01       		.byte	0x1
 3887 06e0 0104     		.2byte	0x401
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 120


 3888 06e2 83000000 		.4byte	0x83
 3889 06e6 02       		.uleb128 0x2
 3890 06e7 91       		.byte	0x91
 3891 06e8 74       		.sleb128 -12
 3892 06e9 14       		.uleb128 0x14
 3893 06ea D2030000 		.4byte	.LASF73
 3894 06ee 01       		.byte	0x1
 3895 06ef 0104     		.2byte	0x401
 3896 06f1 6B000000 		.4byte	0x6b
 3897 06f5 02       		.uleb128 0x2
 3898 06f6 91       		.byte	0x91
 3899 06f7 73       		.sleb128 -13
 3900 06f8 00       		.byte	0
 3901 06f9 16       		.uleb128 0x16
 3902 06fa F5080000 		.4byte	.LASF82
 3903 06fe 01       		.byte	0x1
 3904 06ff 1D04     		.2byte	0x41d
 3905 0701 00000000 		.4byte	.LFB55
 3906 0705 24000000 		.4byte	.LFE55-.LFB55
 3907 0709 01       		.uleb128 0x1
 3908 070a 9C       		.byte	0x9c
 3909 070b 2E070000 		.4byte	0x72e
 3910 070f 14       		.uleb128 0x14
 3911 0710 49030000 		.4byte	.LASF53
 3912 0714 01       		.byte	0x1
 3913 0715 1D04     		.2byte	0x41d
 3914 0717 83000000 		.4byte	0x83
 3915 071b 02       		.uleb128 0x2
 3916 071c 91       		.byte	0x91
 3917 071d 74       		.sleb128 -12
 3918 071e 14       		.uleb128 0x14
 3919 071f D2030000 		.4byte	.LASF73
 3920 0723 01       		.byte	0x1
 3921 0724 1D04     		.2byte	0x41d
 3922 0726 6B000000 		.4byte	0x6b
 3923 072a 02       		.uleb128 0x2
 3924 072b 91       		.byte	0x91
 3925 072c 73       		.sleb128 -13
 3926 072d 00       		.byte	0
 3927 072e 16       		.uleb128 0x16
 3928 072f 94090000 		.4byte	.LASF83
 3929 0733 01       		.byte	0x1
 3930 0734 3904     		.2byte	0x439
 3931 0736 00000000 		.4byte	.LFB56
 3932 073a 24000000 		.4byte	.LFE56-.LFB56
 3933 073e 01       		.uleb128 0x1
 3934 073f 9C       		.byte	0x9c
 3935 0740 63070000 		.4byte	0x763
 3936 0744 14       		.uleb128 0x14
 3937 0745 16050000 		.4byte	.LASF51
 3938 0749 01       		.byte	0x1
 3939 074a 3904     		.2byte	0x439
 3940 074c 83000000 		.4byte	0x83
 3941 0750 02       		.uleb128 0x2
 3942 0751 91       		.byte	0x91
 3943 0752 74       		.sleb128 -12
 3944 0753 14       		.uleb128 0x14
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 121


 3945 0754 D2030000 		.4byte	.LASF73
 3946 0758 01       		.byte	0x1
 3947 0759 3904     		.2byte	0x439
 3948 075b 6B000000 		.4byte	0x6b
 3949 075f 02       		.uleb128 0x2
 3950 0760 91       		.byte	0x91
 3951 0761 73       		.sleb128 -13
 3952 0762 00       		.byte	0
 3953 0763 17       		.uleb128 0x17
 3954 0764 F6050000 		.4byte	.LASF84
 3955 0768 01       		.byte	0x1
 3956 0769 6704     		.2byte	0x467
 3957 076b 83000000 		.4byte	0x83
 3958 076f 00000000 		.4byte	.LFB57
 3959 0773 58010000 		.4byte	.LFE57-.LFB57
 3960 0777 01       		.uleb128 0x1
 3961 0778 9C       		.byte	0x9c
 3962 0779 D8070000 		.4byte	0x7d8
 3963 077d 14       		.uleb128 0x14
 3964 077e 16050000 		.4byte	.LASF51
 3965 0782 01       		.byte	0x1
 3966 0783 6704     		.2byte	0x467
 3967 0785 83000000 		.4byte	0x83
 3968 0789 02       		.uleb128 0x2
 3969 078a 91       		.byte	0x91
 3970 078b 6C       		.sleb128 -20
 3971 078c 13       		.uleb128 0x13
 3972 078d 49030000 		.4byte	.LASF53
 3973 0791 01       		.byte	0x1
 3974 0792 6904     		.2byte	0x469
 3975 0794 6B000000 		.4byte	0x6b
 3976 0798 02       		.uleb128 0x2
 3977 0799 91       		.byte	0x91
 3978 079a 76       		.sleb128 -10
 3979 079b 13       		.uleb128 0x13
 3980 079c E2050000 		.4byte	.LASF85
 3981 07a0 01       		.byte	0x1
 3982 07a1 6A04     		.2byte	0x46a
 3983 07a3 6B000000 		.4byte	0x6b
 3984 07a7 02       		.uleb128 0x2
 3985 07a8 91       		.byte	0x91
 3986 07a9 73       		.sleb128 -13
 3987 07aa 13       		.uleb128 0x13
 3988 07ab 4D090000 		.4byte	.LASF86
 3989 07af 01       		.byte	0x1
 3990 07b0 6B04     		.2byte	0x46b
 3991 07b2 6B000000 		.4byte	0x6b
 3992 07b6 02       		.uleb128 0x2
 3993 07b7 91       		.byte	0x91
 3994 07b8 77       		.sleb128 -9
 3995 07b9 13       		.uleb128 0x13
 3996 07ba 0A090000 		.4byte	.LASF87
 3997 07be 01       		.byte	0x1
 3998 07bf 6D04     		.2byte	0x46d
 3999 07c1 6B000000 		.4byte	0x6b
 4000 07c5 02       		.uleb128 0x2
 4001 07c6 91       		.byte	0x91
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 122


 4002 07c7 75       		.sleb128 -11
 4003 07c8 13       		.uleb128 0x13
 4004 07c9 7F040000 		.4byte	.LASF88
 4005 07cd 01       		.byte	0x1
 4006 07ce 6E04     		.2byte	0x46e
 4007 07d0 6B000000 		.4byte	0x6b
 4008 07d4 02       		.uleb128 0x2
 4009 07d5 91       		.byte	0x91
 4010 07d6 74       		.sleb128 -12
 4011 07d7 00       		.byte	0
 4012 07d8 17       		.uleb128 0x17
 4013 07d9 A60A0000 		.4byte	.LASF89
 4014 07dd 01       		.byte	0x1
 4015 07de C104     		.2byte	0x4c1
 4016 07e0 83000000 		.4byte	0x83
 4017 07e4 00000000 		.4byte	.LFB58
 4018 07e8 58000000 		.4byte	.LFE58-.LFB58
 4019 07ec 01       		.uleb128 0x1
 4020 07ed 9C       		.byte	0x9c
 4021 07ee 2F080000 		.4byte	0x82f
 4022 07f2 14       		.uleb128 0x14
 4023 07f3 49030000 		.4byte	.LASF53
 4024 07f7 01       		.byte	0x1
 4025 07f8 C104     		.2byte	0x4c1
 4026 07fa 83000000 		.4byte	0x83
 4027 07fe 02       		.uleb128 0x2
 4028 07ff 91       		.byte	0x91
 4029 0800 64       		.sleb128 -28
 4030 0801 13       		.uleb128 0x13
 4031 0802 A0050000 		.4byte	.LASF90
 4032 0806 01       		.byte	0x1
 4033 0807 C304     		.2byte	0x4c3
 4034 0809 83000000 		.4byte	0x83
 4035 080d 02       		.uleb128 0x2
 4036 080e 91       		.byte	0x91
 4037 080f 74       		.sleb128 -12
 4038 0810 13       		.uleb128 0x13
 4039 0811 14010000 		.4byte	.LASF91
 4040 0815 01       		.byte	0x1
 4041 0816 C404     		.2byte	0x4c4
 4042 0818 83000000 		.4byte	0x83
 4043 081c 02       		.uleb128 0x2
 4044 081d 91       		.byte	0x91
 4045 081e 6C       		.sleb128 -20
 4046 081f 13       		.uleb128 0x13
 4047 0820 FD090000 		.4byte	.LASF92
 4048 0824 01       		.byte	0x1
 4049 0825 C504     		.2byte	0x4c5
 4050 0827 83000000 		.4byte	0x83
 4051 082b 02       		.uleb128 0x2
 4052 082c 91       		.byte	0x91
 4053 082d 70       		.sleb128 -16
 4054 082e 00       		.byte	0
 4055 082f 17       		.uleb128 0x17
 4056 0830 AB040000 		.4byte	.LASF93
 4057 0834 01       		.byte	0x1
 4058 0835 EF04     		.2byte	0x4ef
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 123


 4059 0837 83000000 		.4byte	0x83
 4060 083b 00000000 		.4byte	.LFB59
 4061 083f 36000000 		.4byte	.LFE59-.LFB59
 4062 0843 01       		.uleb128 0x1
 4063 0844 9C       		.byte	0x9c
 4064 0845 66080000 		.4byte	0x866
 4065 0849 12       		.uleb128 0x12
 4066 084a 6900     		.ascii	"i\000"
 4067 084c 01       		.byte	0x1
 4068 084d F204     		.2byte	0x4f2
 4069 084f 83000000 		.4byte	0x83
 4070 0853 02       		.uleb128 0x2
 4071 0854 91       		.byte	0x91
 4072 0855 74       		.sleb128 -12
 4073 0856 13       		.uleb128 0x13
 4074 0857 FD090000 		.4byte	.LASF92
 4075 085b 01       		.byte	0x1
 4076 085c F304     		.2byte	0x4f3
 4077 085e 83000000 		.4byte	0x83
 4078 0862 02       		.uleb128 0x2
 4079 0863 91       		.byte	0x91
 4080 0864 70       		.sleb128 -16
 4081 0865 00       		.byte	0
 4082 0866 11       		.uleb128 0x11
 4083 0867 2D050000 		.4byte	.LASF94
 4084 086b 01       		.byte	0x1
 4085 086c 1E05     		.2byte	0x51e
 4086 086e 00000000 		.4byte	.LFB60
 4087 0872 70000000 		.4byte	.LFE60-.LFB60
 4088 0876 01       		.uleb128 0x1
 4089 0877 9C       		.byte	0x9c
 4090 0878 AA080000 		.4byte	0x8aa
 4091 087c 14       		.uleb128 0x14
 4092 087d 49030000 		.4byte	.LASF53
 4093 0881 01       		.byte	0x1
 4094 0882 1E05     		.2byte	0x51e
 4095 0884 83000000 		.4byte	0x83
 4096 0888 02       		.uleb128 0x2
 4097 0889 91       		.byte	0x91
 4098 088a 6C       		.sleb128 -20
 4099 088b 13       		.uleb128 0x13
 4100 088c A0050000 		.4byte	.LASF90
 4101 0890 01       		.byte	0x1
 4102 0891 2105     		.2byte	0x521
 4103 0893 6B000000 		.4byte	0x6b
 4104 0897 02       		.uleb128 0x2
 4105 0898 91       		.byte	0x91
 4106 0899 77       		.sleb128 -9
 4107 089a 13       		.uleb128 0x13
 4108 089b 14010000 		.4byte	.LASF91
 4109 089f 01       		.byte	0x1
 4110 08a0 2205     		.2byte	0x522
 4111 08a2 6B000000 		.4byte	0x6b
 4112 08a6 02       		.uleb128 0x2
 4113 08a7 91       		.byte	0x91
 4114 08a8 76       		.sleb128 -10
 4115 08a9 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 124


 4116 08aa 11       		.uleb128 0x11
 4117 08ab B4000000 		.4byte	.LASF95
 4118 08af 01       		.byte	0x1
 4119 08b0 4905     		.2byte	0x549
 4120 08b2 00000000 		.4byte	.LFB61
 4121 08b6 70000000 		.4byte	.LFE61-.LFB61
 4122 08ba 01       		.uleb128 0x1
 4123 08bb 9C       		.byte	0x9c
 4124 08bc EE080000 		.4byte	0x8ee
 4125 08c0 14       		.uleb128 0x14
 4126 08c1 49030000 		.4byte	.LASF53
 4127 08c5 01       		.byte	0x1
 4128 08c6 4905     		.2byte	0x549
 4129 08c8 83000000 		.4byte	0x83
 4130 08cc 02       		.uleb128 0x2
 4131 08cd 91       		.byte	0x91
 4132 08ce 6C       		.sleb128 -20
 4133 08cf 13       		.uleb128 0x13
 4134 08d0 A0050000 		.4byte	.LASF90
 4135 08d4 01       		.byte	0x1
 4136 08d5 4B05     		.2byte	0x54b
 4137 08d7 6B000000 		.4byte	0x6b
 4138 08db 02       		.uleb128 0x2
 4139 08dc 91       		.byte	0x91
 4140 08dd 77       		.sleb128 -9
 4141 08de 13       		.uleb128 0x13
 4142 08df 14010000 		.4byte	.LASF91
 4143 08e3 01       		.byte	0x1
 4144 08e4 4C05     		.2byte	0x54c
 4145 08e6 6B000000 		.4byte	0x6b
 4146 08ea 02       		.uleb128 0x2
 4147 08eb 91       		.byte	0x91
 4148 08ec 76       		.sleb128 -10
 4149 08ed 00       		.byte	0
 4150 08ee 15       		.uleb128 0x15
 4151 08ef 1C080000 		.4byte	.LASF96
 4152 08f3 01       		.byte	0x1
 4153 08f4 7B05     		.2byte	0x57b
 4154 08f6 6B000000 		.4byte	0x6b
 4155 08fa 00000000 		.4byte	.LFB62
 4156 08fe B8000000 		.4byte	.LFE62-.LFB62
 4157 0902 01       		.uleb128 0x1
 4158 0903 9C       		.byte	0x9c
 4159 0904 70090000 		.4byte	0x970
 4160 0908 14       		.uleb128 0x14
 4161 0909 51040000 		.4byte	.LASF97
 4162 090d 01       		.byte	0x1
 4163 090e 7B05     		.2byte	0x57b
 4164 0910 6B000000 		.4byte	0x6b
 4165 0914 02       		.uleb128 0x2
 4166 0915 91       		.byte	0x91
 4167 0916 67       		.sleb128 -25
 4168 0917 14       		.uleb128 0x14
 4169 0918 C4020000 		.4byte	.LASF98
 4170 091c 01       		.byte	0x1
 4171 091d 7B05     		.2byte	0x57b
 4172 091f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 125


 4173 0923 02       		.uleb128 0x2
 4174 0924 91       		.byte	0x91
 4175 0925 66       		.sleb128 -26
 4176 0926 14       		.uleb128 0x14
 4177 0927 0A090000 		.4byte	.LASF87
 4178 092b 01       		.byte	0x1
 4179 092c 7B05     		.2byte	0x57b
 4180 092e 6B000000 		.4byte	0x6b
 4181 0932 02       		.uleb128 0x2
 4182 0933 91       		.byte	0x91
 4183 0934 65       		.sleb128 -27
 4184 0935 12       		.uleb128 0x12
 4185 0936 6900     		.ascii	"i\000"
 4186 0938 01       		.byte	0x1
 4187 0939 7E05     		.2byte	0x57e
 4188 093b 6B000000 		.4byte	0x6b
 4189 093f 02       		.uleb128 0x2
 4190 0940 91       		.byte	0x91
 4191 0941 6F       		.sleb128 -17
 4192 0942 13       		.uleb128 0x13
 4193 0943 A8080000 		.4byte	.LASF99
 4194 0947 01       		.byte	0x1
 4195 0948 8805     		.2byte	0x588
 4196 094a 6B000000 		.4byte	0x6b
 4197 094e 02       		.uleb128 0x2
 4198 094f 91       		.byte	0x91
 4199 0950 6E       		.sleb128 -18
 4200 0951 13       		.uleb128 0x13
 4201 0952 17080000 		.4byte	.LASF100
 4202 0956 01       		.byte	0x1
 4203 0957 8A05     		.2byte	0x58a
 4204 0959 6B000000 		.4byte	0x6b
 4205 095d 02       		.uleb128 0x2
 4206 095e 91       		.byte	0x91
 4207 095f 6D       		.sleb128 -19
 4208 0960 13       		.uleb128 0x13
 4209 0961 67070000 		.4byte	.LASF101
 4210 0965 01       		.byte	0x1
 4211 0966 8B05     		.2byte	0x58b
 4212 0968 E0010000 		.4byte	0x1e0
 4213 096c 02       		.uleb128 0x2
 4214 096d 91       		.byte	0x91
 4215 096e 68       		.sleb128 -24
 4216 096f 00       		.byte	0
 4217 0970 17       		.uleb128 0x17
 4218 0971 DB060000 		.4byte	.LASF102
 4219 0975 01       		.byte	0x1
 4220 0976 1A06     		.2byte	0x61a
 4221 0978 6B000000 		.4byte	0x6b
 4222 097c 00000000 		.4byte	.LFB63
 4223 0980 94010000 		.4byte	.LFE63-.LFB63
 4224 0984 01       		.uleb128 0x1
 4225 0985 9C       		.byte	0x9c
 4226 0986 240A0000 		.4byte	0xa24
 4227 098a 14       		.uleb128 0x14
 4228 098b A8080000 		.4byte	.LASF99
 4229 098f 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 126


 4230 0990 1A06     		.2byte	0x61a
 4231 0992 6B000000 		.4byte	0x6b
 4232 0996 02       		.uleb128 0x2
 4233 0997 91       		.byte	0x91
 4234 0998 5F       		.sleb128 -33
 4235 0999 14       		.uleb128 0x14
 4236 099a 51040000 		.4byte	.LASF97
 4237 099e 01       		.byte	0x1
 4238 099f 1A06     		.2byte	0x61a
 4239 09a1 6B000000 		.4byte	0x6b
 4240 09a5 02       		.uleb128 0x2
 4241 09a6 91       		.byte	0x91
 4242 09a7 5E       		.sleb128 -34
 4243 09a8 14       		.uleb128 0x14
 4244 09a9 C4020000 		.4byte	.LASF98
 4245 09ad 01       		.byte	0x1
 4246 09ae 1B06     		.2byte	0x61b
 4247 09b0 6B000000 		.4byte	0x6b
 4248 09b4 02       		.uleb128 0x2
 4249 09b5 91       		.byte	0x91
 4250 09b6 5D       		.sleb128 -35
 4251 09b7 14       		.uleb128 0x14
 4252 09b8 95050000 		.4byte	.LASF103
 4253 09bc 01       		.byte	0x1
 4254 09bd 1B06     		.2byte	0x61b
 4255 09bf 77000000 		.4byte	0x77
 4256 09c3 02       		.uleb128 0x2
 4257 09c4 91       		.byte	0x91
 4258 09c5 5A       		.sleb128 -38
 4259 09c6 14       		.uleb128 0x14
 4260 09c7 D4080000 		.4byte	.LASF61
 4261 09cb 01       		.byte	0x1
 4262 09cc 1B06     		.2byte	0x61b
 4263 09ce 6B000000 		.4byte	0x6b
 4264 09d2 02       		.uleb128 0x2
 4265 09d3 91       		.byte	0x91
 4266 09d4 00       		.sleb128 0
 4267 09d5 13       		.uleb128 0x13
 4268 09d6 A9050000 		.4byte	.LASF104
 4269 09da 01       		.byte	0x1
 4270 09db 2506     		.2byte	0x625
 4271 09dd 240A0000 		.4byte	0xa24
 4272 09e1 05       		.uleb128 0x5
 4273 09e2 03       		.byte	0x3
 4274 09e3 4C000000 		.4byte	CapSense_centroid.5444
 4275 09e7 13       		.uleb128 0x13
 4276 09e8 0F0B0000 		.4byte	.LASF105
 4277 09ec 01       		.byte	0x1
 4278 09ed 2C06     		.2byte	0x62c
 4279 09ef 6B000000 		.4byte	0x6b
 4280 09f3 02       		.uleb128 0x2
 4281 09f4 91       		.byte	0x91
 4282 09f5 63       		.sleb128 -29
 4283 09f6 13       		.uleb128 0x13
 4284 09f7 AE070000 		.4byte	.LASF106
 4285 09fb 01       		.byte	0x1
 4286 09fc 2D06     		.2byte	0x62d
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 127


 4287 09fe 83000000 		.4byte	0x83
 4288 0a02 02       		.uleb128 0x2
 4289 0a03 91       		.byte	0x91
 4290 0a04 64       		.sleb128 -28
 4291 0a05 13       		.uleb128 0x13
 4292 0a06 7A080000 		.4byte	.LASF107
 4293 0a0a 01       		.byte	0x1
 4294 0a0b 2E06     		.2byte	0x62e
 4295 0a0d 9B000000 		.4byte	0x9b
 4296 0a11 02       		.uleb128 0x2
 4297 0a12 91       		.byte	0x91
 4298 0a13 6C       		.sleb128 -20
 4299 0a14 13       		.uleb128 0x13
 4300 0a15 67070000 		.4byte	.LASF101
 4301 0a19 01       		.byte	0x1
 4302 0a1a 3006     		.2byte	0x630
 4303 0a1c E0010000 		.4byte	0x1e0
 4304 0a20 02       		.uleb128 0x2
 4305 0a21 91       		.byte	0x91
 4306 0a22 68       		.sleb128 -24
 4307 0a23 00       		.byte	0
 4308 0a24 18       		.uleb128 0x18
 4309 0a25 6B000000 		.4byte	0x6b
 4310 0a29 340A0000 		.4byte	0xa34
 4311 0a2d 19       		.uleb128 0x19
 4312 0a2e BC000000 		.4byte	0xbc
 4313 0a32 02       		.byte	0x2
 4314 0a33 00       		.byte	0
 4315 0a34 17       		.uleb128 0x17
 4316 0a35 D1070000 		.4byte	.LASF108
 4317 0a39 01       		.byte	0x1
 4318 0a3a ED06     		.2byte	0x6ed
 4319 0a3c 77000000 		.4byte	0x77
 4320 0a40 00000000 		.4byte	.LFB64
 4321 0a44 B4000000 		.4byte	.LFE64-.LFB64
 4322 0a48 01       		.uleb128 0x1
 4323 0a49 9C       		.byte	0x9c
 4324 0a4a 9A0A0000 		.4byte	0xa9a
 4325 0a4e 14       		.uleb128 0x14
 4326 0a4f 49030000 		.4byte	.LASF53
 4327 0a53 01       		.byte	0x1
 4328 0a54 ED06     		.2byte	0x6ed
 4329 0a56 83000000 		.4byte	0x83
 4330 0a5a 02       		.uleb128 0x2
 4331 0a5b 91       		.byte	0x91
 4332 0a5c 64       		.sleb128 -28
 4333 0a5d 13       		.uleb128 0x13
 4334 0a5e A8080000 		.4byte	.LASF99
 4335 0a62 01       		.byte	0x1
 4336 0a63 0007     		.2byte	0x700
 4337 0a65 6B000000 		.4byte	0x6b
 4338 0a69 02       		.uleb128 0x2
 4339 0a6a 91       		.byte	0x91
 4340 0a6b 6B       		.sleb128 -21
 4341 0a6c 13       		.uleb128 0x13
 4342 0a6d 0F0B0000 		.4byte	.LASF105
 4343 0a71 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 128


 4344 0a72 0107     		.2byte	0x701
 4345 0a74 77000000 		.4byte	0x77
 4346 0a78 02       		.uleb128 0x2
 4347 0a79 91       		.byte	0x91
 4348 0a7a 6E       		.sleb128 -18
 4349 0a7b 13       		.uleb128 0x13
 4350 0a7c 51040000 		.4byte	.LASF97
 4351 0a80 01       		.byte	0x1
 4352 0a81 0207     		.2byte	0x702
 4353 0a83 6B000000 		.4byte	0x6b
 4354 0a87 02       		.uleb128 0x2
 4355 0a88 91       		.byte	0x91
 4356 0a89 6D       		.sleb128 -19
 4357 0a8a 13       		.uleb128 0x13
 4358 0a8b C4020000 		.4byte	.LASF98
 4359 0a8f 01       		.byte	0x1
 4360 0a90 0307     		.2byte	0x703
 4361 0a92 6B000000 		.4byte	0x6b
 4362 0a96 02       		.uleb128 0x2
 4363 0a97 91       		.byte	0x91
 4364 0a98 6C       		.sleb128 -20
 4365 0a99 00       		.byte	0
 4366 0a9a 17       		.uleb128 0x17
 4367 0a9b 460A0000 		.4byte	.LASF109
 4368 0a9f 01       		.byte	0x1
 4369 0aa0 B807     		.2byte	0x7b8
 4370 0aa2 77000000 		.4byte	0x77
 4371 0aa6 00000000 		.4byte	.LFB65
 4372 0aaa 78010000 		.4byte	.LFE65-.LFB65
 4373 0aae 01       		.uleb128 0x1
 4374 0aaf 9C       		.byte	0x9c
 4375 0ab0 2D0B0000 		.4byte	0xb2d
 4376 0ab4 14       		.uleb128 0x14
 4377 0ab5 49030000 		.4byte	.LASF53
 4378 0ab9 01       		.byte	0x1
 4379 0aba B807     		.2byte	0x7b8
 4380 0abc 83000000 		.4byte	0x83
 4381 0ac0 02       		.uleb128 0x2
 4382 0ac1 91       		.byte	0x91
 4383 0ac2 64       		.sleb128 -28
 4384 0ac3 13       		.uleb128 0x13
 4385 0ac4 EB000000 		.4byte	.LASF110
 4386 0ac8 01       		.byte	0x1
 4387 0ac9 BB07     		.2byte	0x7bb
 4388 0acb 6B000000 		.4byte	0x6b
 4389 0acf 02       		.uleb128 0x2
 4390 0ad0 91       		.byte	0x91
 4391 0ad1 68       		.sleb128 -24
 4392 0ad2 13       		.uleb128 0x13
 4393 0ad3 58070000 		.4byte	.LASF111
 4394 0ad7 01       		.byte	0x1
 4395 0ad8 BC07     		.2byte	0x7bc
 4396 0ada 6B000000 		.4byte	0x6b
 4397 0ade 02       		.uleb128 0x2
 4398 0adf 91       		.byte	0x91
 4399 0ae0 6D       		.sleb128 -19
 4400 0ae1 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 129


 4401 0ae2 D9020000 		.4byte	.LASF112
 4402 0ae6 01       		.byte	0x1
 4403 0ae7 BD07     		.2byte	0x7bd
 4404 0ae9 6B000000 		.4byte	0x6b
 4405 0aed 02       		.uleb128 0x2
 4406 0aee 91       		.byte	0x91
 4407 0aef 6C       		.sleb128 -20
 4408 0af0 13       		.uleb128 0x13
 4409 0af1 A8080000 		.4byte	.LASF99
 4410 0af5 01       		.byte	0x1
 4411 0af6 C707     		.2byte	0x7c7
 4412 0af8 6B000000 		.4byte	0x6b
 4413 0afc 02       		.uleb128 0x2
 4414 0afd 91       		.byte	0x91
 4415 0afe 69       		.sleb128 -23
 4416 0aff 13       		.uleb128 0x13
 4417 0b00 0F0B0000 		.4byte	.LASF105
 4418 0b04 01       		.byte	0x1
 4419 0b05 C807     		.2byte	0x7c8
 4420 0b07 77000000 		.4byte	0x77
 4421 0b0b 02       		.uleb128 0x2
 4422 0b0c 91       		.byte	0x91
 4423 0b0d 6E       		.sleb128 -18
 4424 0b0e 13       		.uleb128 0x13
 4425 0b0f 51040000 		.4byte	.LASF97
 4426 0b13 01       		.byte	0x1
 4427 0b14 C907     		.2byte	0x7c9
 4428 0b16 6B000000 		.4byte	0x6b
 4429 0b1a 02       		.uleb128 0x2
 4430 0b1b 91       		.byte	0x91
 4431 0b1c 6B       		.sleb128 -21
 4432 0b1d 13       		.uleb128 0x13
 4433 0b1e C4020000 		.4byte	.LASF98
 4434 0b22 01       		.byte	0x1
 4435 0b23 CA07     		.2byte	0x7ca
 4436 0b25 6B000000 		.4byte	0x6b
 4437 0b29 02       		.uleb128 0x2
 4438 0b2a 91       		.byte	0x91
 4439 0b2b 6A       		.sleb128 -22
 4440 0b2c 00       		.byte	0
 4441 0b2d 15       		.uleb128 0x15
 4442 0b2e 730A0000 		.4byte	.LASF113
 4443 0b32 01       		.byte	0x1
 4444 0b33 6509     		.2byte	0x965
 4445 0b35 77000000 		.4byte	0x77
 4446 0b39 00000000 		.4byte	.LFB66
 4447 0b3d 76000000 		.4byte	.LFE66-.LFB66
 4448 0b41 01       		.uleb128 0x1
 4449 0b42 9C       		.byte	0x9c
 4450 0b43 810B0000 		.4byte	0xb81
 4451 0b47 1A       		.uleb128 0x1a
 4452 0b48 783100   		.ascii	"x1\000"
 4453 0b4b 01       		.byte	0x1
 4454 0b4c 6509     		.2byte	0x965
 4455 0b4e 77000000 		.4byte	0x77
 4456 0b52 02       		.uleb128 0x2
 4457 0b53 91       		.byte	0x91
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 130


 4458 0b54 66       		.sleb128 -26
 4459 0b55 1A       		.uleb128 0x1a
 4460 0b56 783200   		.ascii	"x2\000"
 4461 0b59 01       		.byte	0x1
 4462 0b5a 6509     		.2byte	0x965
 4463 0b5c 77000000 		.4byte	0x77
 4464 0b60 02       		.uleb128 0x2
 4465 0b61 91       		.byte	0x91
 4466 0b62 64       		.sleb128 -28
 4467 0b63 1A       		.uleb128 0x1a
 4468 0b64 783300   		.ascii	"x3\000"
 4469 0b67 01       		.byte	0x1
 4470 0b68 6509     		.2byte	0x965
 4471 0b6a 77000000 		.4byte	0x77
 4472 0b6e 02       		.uleb128 0x2
 4473 0b6f 91       		.byte	0x91
 4474 0b70 62       		.sleb128 -30
 4475 0b71 12       		.uleb128 0x12
 4476 0b72 746D7000 		.ascii	"tmp\000"
 4477 0b76 01       		.byte	0x1
 4478 0b77 6709     		.2byte	0x967
 4479 0b79 77000000 		.4byte	0x77
 4480 0b7d 02       		.uleb128 0x2
 4481 0b7e 91       		.byte	0x91
 4482 0b7f 6E       		.sleb128 -18
 4483 0b80 00       		.byte	0
 4484 0b81 15       		.uleb128 0x15
 4485 0b82 1B000000 		.4byte	.LASF114
 4486 0b86 01       		.byte	0x1
 4487 0b87 DD09     		.2byte	0x9dd
 4488 0b89 77000000 		.4byte	0x77
 4489 0b8d 00000000 		.4byte	.LFB67
 4490 0b91 3C000000 		.4byte	.LFE67-.LFB67
 4491 0b95 01       		.uleb128 0x1
 4492 0b96 9C       		.byte	0x9c
 4493 0b97 C70B0000 		.4byte	0xbc7
 4494 0b9b 1A       		.uleb128 0x1a
 4495 0b9c 783100   		.ascii	"x1\000"
 4496 0b9f 01       		.byte	0x1
 4497 0ba0 DD09     		.2byte	0x9dd
 4498 0ba2 77000000 		.4byte	0x77
 4499 0ba6 02       		.uleb128 0x2
 4500 0ba7 91       		.byte	0x91
 4501 0ba8 6E       		.sleb128 -18
 4502 0ba9 1A       		.uleb128 0x1a
 4503 0baa 783200   		.ascii	"x2\000"
 4504 0bad 01       		.byte	0x1
 4505 0bae DD09     		.2byte	0x9dd
 4506 0bb0 77000000 		.4byte	0x77
 4507 0bb4 02       		.uleb128 0x2
 4508 0bb5 91       		.byte	0x91
 4509 0bb6 6C       		.sleb128 -20
 4510 0bb7 12       		.uleb128 0x12
 4511 0bb8 746D7000 		.ascii	"tmp\000"
 4512 0bbc 01       		.byte	0x1
 4513 0bbd DF09     		.2byte	0x9df
 4514 0bbf 83000000 		.4byte	0x83
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 131


 4515 0bc3 02       		.uleb128 0x2
 4516 0bc4 91       		.byte	0x91
 4517 0bc5 74       		.sleb128 -12
 4518 0bc6 00       		.byte	0
 4519 0bc7 15       		.uleb128 0x15
 4520 0bc8 C9050000 		.4byte	.LASF115
 4521 0bcc 01       		.byte	0x1
 4522 0bcd C60A     		.2byte	0xac6
 4523 0bcf 83000000 		.4byte	0x83
 4524 0bd3 00000000 		.4byte	.LFB68
 4525 0bd7 1C000000 		.4byte	.LFE68-.LFB68
 4526 0bdb 01       		.uleb128 0x1
 4527 0bdc 9C       		.byte	0x9c
 4528 0bdd F10B0000 		.4byte	0xbf1
 4529 0be1 14       		.uleb128 0x14
 4530 0be2 16050000 		.4byte	.LASF51
 4531 0be6 01       		.byte	0x1
 4532 0be7 C60A     		.2byte	0xac6
 4533 0be9 83000000 		.4byte	0x83
 4534 0bed 02       		.uleb128 0x2
 4535 0bee 91       		.byte	0x91
 4536 0bef 74       		.sleb128 -12
 4537 0bf0 00       		.byte	0
 4538 0bf1 15       		.uleb128 0x15
 4539 0bf2 11070000 		.4byte	.LASF116
 4540 0bf6 01       		.byte	0x1
 4541 0bf7 E00A     		.2byte	0xae0
 4542 0bf9 6B000000 		.4byte	0x6b
 4543 0bfd 00000000 		.4byte	.LFB69
 4544 0c01 1C000000 		.4byte	.LFE69-.LFB69
 4545 0c05 01       		.uleb128 0x1
 4546 0c06 9C       		.byte	0x9c
 4547 0c07 1B0C0000 		.4byte	0xc1b
 4548 0c0b 14       		.uleb128 0x14
 4549 0c0c 16050000 		.4byte	.LASF51
 4550 0c10 01       		.byte	0x1
 4551 0c11 E00A     		.2byte	0xae0
 4552 0c13 83000000 		.4byte	0x83
 4553 0c17 02       		.uleb128 0x2
 4554 0c18 91       		.byte	0x91
 4555 0c19 74       		.sleb128 -12
 4556 0c1a 00       		.byte	0
 4557 0c1b 15       		.uleb128 0x15
 4558 0c1c 910A0000 		.4byte	.LASF117
 4559 0c20 01       		.byte	0x1
 4560 0c21 FA0A     		.2byte	0xafa
 4561 0c23 6B000000 		.4byte	0x6b
 4562 0c27 00000000 		.4byte	.LFB70
 4563 0c2b 1C000000 		.4byte	.LFE70-.LFB70
 4564 0c2f 01       		.uleb128 0x1
 4565 0c30 9C       		.byte	0x9c
 4566 0c31 450C0000 		.4byte	0xc45
 4567 0c35 14       		.uleb128 0x14
 4568 0c36 49030000 		.4byte	.LASF53
 4569 0c3a 01       		.byte	0x1
 4570 0c3b FA0A     		.2byte	0xafa
 4571 0c3d 83000000 		.4byte	0x83
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 132


 4572 0c41 02       		.uleb128 0x2
 4573 0c42 91       		.byte	0x91
 4574 0c43 74       		.sleb128 -12
 4575 0c44 00       		.byte	0
 4576 0c45 1B       		.uleb128 0x1b
 4577 0c46 42080000 		.4byte	.LASF118
 4578 0c4a 01       		.byte	0x1
 4579 0c4b 140B     		.2byte	0xb14
 4580 0c4d 00000000 		.4byte	.LFB71
 4581 0c51 14000000 		.4byte	.LFE71-.LFB71
 4582 0c55 01       		.uleb128 0x1
 4583 0c56 9C       		.byte	0x9c
 4584 0c57 1B       		.uleb128 0x1b
 4585 0c58 B3030000 		.4byte	.LASF119
 4586 0c5c 01       		.byte	0x1
 4587 0c5d 2D0B     		.2byte	0xb2d
 4588 0c5f 00000000 		.4byte	.LFB72
 4589 0c63 14000000 		.4byte	.LFE72-.LFB72
 4590 0c67 01       		.uleb128 0x1
 4591 0c68 9C       		.byte	0x9c
 4592 0c69 18       		.uleb128 0x18
 4593 0c6a 6B000000 		.4byte	0x6b
 4594 0c6e 790C0000 		.4byte	0xc79
 4595 0c72 19       		.uleb128 0x19
 4596 0c73 BC000000 		.4byte	0xbc
 4597 0c77 06       		.byte	0x6
 4598 0c78 00       		.byte	0
 4599 0c79 0F       		.uleb128 0xf
 4600 0c7a 2F000000 		.4byte	.LASF120
 4601 0c7e 01       		.byte	0x1
 4602 0c7f 55       		.byte	0x55
 4603 0c80 690C0000 		.4byte	0xc69
 4604 0c84 05       		.uleb128 0x5
 4605 0c85 03       		.byte	0x3
 4606 0c86 44000000 		.4byte	CapSense_debounceCounter
 4607 0c8a 18       		.uleb128 0x18
 4608 0c8b 77000000 		.4byte	0x77
 4609 0c8f 9A0C0000 		.4byte	0xc9a
 4610 0c93 19       		.uleb128 0x19
 4611 0c94 BC000000 		.4byte	0xbc
 4612 0c98 01       		.byte	0x1
 4613 0c99 00       		.byte	0
 4614 0c9a 0F       		.uleb128 0xf
 4615 0c9b C0090000 		.4byte	.LASF121
 4616 0c9f 01       		.byte	0x1
 4617 0ca0 6F       		.byte	0x6f
 4618 0ca1 AB0C0000 		.4byte	0xcab
 4619 0ca5 05       		.uleb128 0x5
 4620 0ca6 03       		.byte	0x3
 4621 0ca7 10000000 		.4byte	CapSense_centroidMult
 4622 0cab 08       		.uleb128 0x8
 4623 0cac 8A0C0000 		.4byte	0xc8a
 4624 0cb0 18       		.uleb128 0x18
 4625 0cb1 6B000000 		.4byte	0x6b
 4626 0cb5 C00C0000 		.4byte	0xcc0
 4627 0cb9 19       		.uleb128 0x19
 4628 0cba BC000000 		.4byte	0xbc
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 133


 4629 0cbe 01       		.byte	0x1
 4630 0cbf 00       		.byte	0
 4631 0cc0 0F       		.uleb128 0xf
 4632 0cc1 50030000 		.4byte	.LASF122
 4633 0cc5 01       		.byte	0x1
 4634 0cc6 73       		.byte	0x73
 4635 0cc7 B00C0000 		.4byte	0xcb0
 4636 0ccb 05       		.uleb128 0x5
 4637 0ccc 03       		.byte	0x3
 4638 0ccd 1C000000 		.4byte	CapSense_posFiltersMask
 4639 0cd1 18       		.uleb128 0x18
 4640 0cd2 6B000000 		.4byte	0x6b
 4641 0cd6 E10C0000 		.4byte	0xce1
 4642 0cda 19       		.uleb128 0x19
 4643 0cdb BC000000 		.4byte	0xbc
 4644 0cdf 05       		.byte	0x5
 4645 0ce0 00       		.byte	0
 4646 0ce1 0F       		.uleb128 0xf
 4647 0ce2 75010000 		.4byte	.LASF123
 4648 0ce6 01       		.byte	0x1
 4649 0ce7 77       		.byte	0x77
 4650 0ce8 D10C0000 		.4byte	0xcd1
 4651 0cec 05       		.uleb128 0x5
 4652 0ced 03       		.byte	0x3
 4653 0cee 20000000 		.4byte	CapSense_posFiltersData
 4654 0cf2 18       		.uleb128 0x18
 4655 0cf3 77000000 		.4byte	0x77
 4656 0cf7 020D0000 		.4byte	0xd02
 4657 0cfb 19       		.uleb128 0x19
 4658 0cfc BC000000 		.4byte	0xbc
 4659 0d00 0F       		.byte	0xf
 4660 0d01 00       		.byte	0
 4661 0d02 1C       		.uleb128 0x1c
 4662 0d03 FE060000 		.4byte	.LASF124
 4663 0d07 01       		.byte	0x1
 4664 0d08 2C       		.byte	0x2c
 4665 0d09 F20C0000 		.4byte	0xcf2
 4666 0d0d 1C       		.uleb128 0x1c
 4667 0d0e 2F030000 		.4byte	.LASF125
 4668 0d12 01       		.byte	0x1
 4669 0d13 2D       		.byte	0x2d
 4670 0d14 B00C0000 		.4byte	0xcb0
 4671 0d18 18       		.uleb128 0x18
 4672 0d19 6B000000 		.4byte	0x6b
 4673 0d1d 280D0000 		.4byte	0xd28
 4674 0d21 19       		.uleb128 0x19
 4675 0d22 BC000000 		.4byte	0xbc
 4676 0d26 0F       		.byte	0xf
 4677 0d27 00       		.byte	0
 4678 0d28 1C       		.uleb128 0x1c
 4679 0d29 81030000 		.4byte	.LASF126
 4680 0d2d 01       		.byte	0x1
 4681 0d2e 2E       		.byte	0x2e
 4682 0d2f 330D0000 		.4byte	0xd33
 4683 0d33 08       		.uleb128 0x8
 4684 0d34 180D0000 		.4byte	0xd18
 4685 0d38 1D       		.uleb128 0x1d
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 134


 4686 0d39 90080000 		.4byte	.LASF127
 4687 0d3d 01       		.byte	0x1
 4688 0d3e 34       		.byte	0x34
 4689 0d3f F20C0000 		.4byte	0xcf2
 4690 0d43 05       		.uleb128 0x5
 4691 0d44 03       		.byte	0x3
 4692 0d45 00000000 		.4byte	CapSense_sensorBaseline
 4693 0d49 1D       		.uleb128 0x1d
 4694 0d4a 00000000 		.4byte	.LASF128
 4695 0d4e 01       		.byte	0x1
 4696 0d4f 35       		.byte	0x35
 4697 0d50 180D0000 		.4byte	0xd18
 4698 0d54 05       		.uleb128 0x5
 4699 0d55 03       		.byte	0x3
 4700 0d56 00000000 		.4byte	CapSense_sensorBaselineLow
 4701 0d5a 1D       		.uleb128 0x1d
 4702 0d5b 3F020000 		.4byte	.LASF129
 4703 0d5f 01       		.byte	0x1
 4704 0d60 36       		.byte	0x36
 4705 0d61 180D0000 		.4byte	0xd18
 4706 0d65 05       		.uleb128 0x5
 4707 0d66 03       		.byte	0x3
 4708 0d67 00000000 		.4byte	CapSense_sensorSignal
 4709 0d6b 1D       		.uleb128 0x1d
 4710 0d6c 180B0000 		.4byte	.LASF130
 4711 0d70 01       		.byte	0x1
 4712 0d71 37       		.byte	0x37
 4713 0d72 B00C0000 		.4byte	0xcb0
 4714 0d76 05       		.uleb128 0x5
 4715 0d77 03       		.byte	0x3
 4716 0d78 00000000 		.4byte	CapSense_sensorOnMask
 4717 0d7c 1D       		.uleb128 0x1d
 4718 0d7d 55000000 		.4byte	.LASF131
 4719 0d81 01       		.byte	0x1
 4720 0d82 39       		.byte	0x39
 4721 0d83 180D0000 		.4byte	0xd18
 4722 0d87 05       		.uleb128 0x5
 4723 0d88 03       		.byte	0x3
 4724 0d89 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4725 0d8d 1D       		.uleb128 0x1d
 4726 0d8e 60080000 		.4byte	.LASF132
 4727 0d92 01       		.byte	0x1
 4728 0d93 3A       		.byte	0x3a
 4729 0d94 180D0000 		.4byte	0xd18
 4730 0d98 05       		.uleb128 0x5
 4731 0d99 03       		.byte	0x3
 4732 0d9a 00000000 		.4byte	CapSense_lowBaselineReset
 4733 0d9e 18       		.uleb128 0x18
 4734 0d9f 6B000000 		.4byte	0x6b
 4735 0da3 AE0D0000 		.4byte	0xdae
 4736 0da7 19       		.uleb128 0x19
 4737 0da8 BC000000 		.4byte	0xbc
 4738 0dac 07       		.byte	0x7
 4739 0dad 00       		.byte	0
 4740 0dae 1D       		.uleb128 0x1d
 4741 0daf 68030000 		.4byte	.LASF133
 4742 0db3 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 135


 4743 0db4 49       		.byte	0x49
 4744 0db5 9E0D0000 		.4byte	0xd9e
 4745 0db9 05       		.uleb128 0x5
 4746 0dba 03       		.byte	0x3
 4747 0dbb 00000000 		.4byte	CapSense_fingerThreshold
 4748 0dbf 1D       		.uleb128 0x1d
 4749 0dc0 35090000 		.4byte	.LASF134
 4750 0dc4 01       		.byte	0x1
 4751 0dc5 4B       		.byte	0x4b
 4752 0dc6 9E0D0000 		.4byte	0xd9e
 4753 0dca 05       		.uleb128 0x5
 4754 0dcb 03       		.byte	0x3
 4755 0dcc 00000000 		.4byte	CapSense_noiseThreshold
 4756 0dd0 1D       		.uleb128 0x1d
 4757 0dd1 E4040000 		.4byte	.LASF135
 4758 0dd5 01       		.byte	0x1
 4759 0dd6 4D       		.byte	0x4d
 4760 0dd7 9E0D0000 		.4byte	0xd9e
 4761 0ddb 05       		.uleb128 0x5
 4762 0ddc 03       		.byte	0x3
 4763 0ddd 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4764 0de1 1D       		.uleb128 0x1d
 4765 0de2 A4020000 		.4byte	.LASF136
 4766 0de6 01       		.byte	0x1
 4767 0de7 4F       		.byte	0x4f
 4768 0de8 9E0D0000 		.4byte	0xd9e
 4769 0dec 05       		.uleb128 0x5
 4770 0ded 03       		.byte	0x3
 4771 0dee 00000000 		.4byte	CapSense_hysteresis
 4772 0df2 1D       		.uleb128 0x1d
 4773 0df3 9D010000 		.4byte	.LASF137
 4774 0df7 01       		.byte	0x1
 4775 0df8 51       		.byte	0x51
 4776 0df9 9E0D0000 		.4byte	0xd9e
 4777 0dfd 05       		.uleb128 0x5
 4778 0dfe 03       		.byte	0x3
 4779 0dff 00000000 		.4byte	CapSense_debounce
 4780 0e03 1D       		.uleb128 0x1d
 4781 0e04 55020000 		.4byte	.LASF138
 4782 0e08 01       		.byte	0x1
 4783 0e09 59       		.byte	0x59
 4784 0e0a 140E0000 		.4byte	0xe14
 4785 0e0e 05       		.uleb128 0x5
 4786 0e0f 03       		.byte	0x3
 4787 0e10 00000000 		.4byte	CapSense_rawDataIndex
 4788 0e14 08       		.uleb128 0x8
 4789 0e15 9E0D0000 		.4byte	0xd9e
 4790 0e19 1D       		.uleb128 0x1d
 4791 0e1a CB040000 		.4byte	.LASF139
 4792 0e1e 01       		.byte	0x1
 4793 0e1f 64       		.byte	0x64
 4794 0e20 2A0E0000 		.4byte	0xe2a
 4795 0e24 05       		.uleb128 0x5
 4796 0e25 03       		.byte	0x3
 4797 0e26 00000000 		.4byte	CapSense_numberOfSensors
 4798 0e2a 08       		.uleb128 0x8
 4799 0e2b 9E0D0000 		.4byte	0xd9e
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 136


 4800 0e2f 1D       		.uleb128 0x1d
 4801 0e30 F70A0000 		.4byte	.LASF140
 4802 0e34 01       		.byte	0x1
 4803 0e35 27       		.byte	0x27
 4804 0e36 F20C0000 		.4byte	0xcf2
 4805 0e3a 05       		.uleb128 0x5
 4806 0e3b 03       		.byte	0x3
 4807 0e3c 00000000 		.4byte	CapSense_rawFilterData1
 4808 0e40 1C       		.uleb128 0x1c
 4809 0e41 F4000000 		.4byte	.LASF141
 4810 0e45 01       		.byte	0x1
 4811 0e46 41       		.byte	0x41
 4812 0e47 BF020000 		.4byte	0x2bf
 4813 0e4b 1D       		.uleb128 0x1d
 4814 0e4c 030A0000 		.4byte	.LASF142
 4815 0e50 01       		.byte	0x1
 4816 0e51 45       		.byte	0x45
 4817 0e52 6B000000 		.4byte	0x6b
 4818 0e56 05       		.uleb128 0x5
 4819 0e57 03       		.byte	0x3
 4820 0e58 00000000 		.4byte	CapSense_enableRawFilters
 4821 0e5c 00       		.byte	0
 4822              		.section	.debug_abbrev,"",%progbits
 4823              	.Ldebug_abbrev0:
 4824 0000 01       		.uleb128 0x1
 4825 0001 11       		.uleb128 0x11
 4826 0002 01       		.byte	0x1
 4827 0003 25       		.uleb128 0x25
 4828 0004 0E       		.uleb128 0xe
 4829 0005 13       		.uleb128 0x13
 4830 0006 0B       		.uleb128 0xb
 4831 0007 03       		.uleb128 0x3
 4832 0008 0E       		.uleb128 0xe
 4833 0009 1B       		.uleb128 0x1b
 4834 000a 0E       		.uleb128 0xe
 4835 000b 55       		.uleb128 0x55
 4836 000c 17       		.uleb128 0x17
 4837 000d 11       		.uleb128 0x11
 4838 000e 01       		.uleb128 0x1
 4839 000f 10       		.uleb128 0x10
 4840 0010 17       		.uleb128 0x17
 4841 0011 00       		.byte	0
 4842 0012 00       		.byte	0
 4843 0013 02       		.uleb128 0x2
 4844 0014 24       		.uleb128 0x24
 4845 0015 00       		.byte	0
 4846 0016 0B       		.uleb128 0xb
 4847 0017 0B       		.uleb128 0xb
 4848 0018 3E       		.uleb128 0x3e
 4849 0019 0B       		.uleb128 0xb
 4850 001a 03       		.uleb128 0x3
 4851 001b 0E       		.uleb128 0xe
 4852 001c 00       		.byte	0
 4853 001d 00       		.byte	0
 4854 001e 03       		.uleb128 0x3
 4855 001f 24       		.uleb128 0x24
 4856 0020 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 137


 4857 0021 0B       		.uleb128 0xb
 4858 0022 0B       		.uleb128 0xb
 4859 0023 3E       		.uleb128 0x3e
 4860 0024 0B       		.uleb128 0xb
 4861 0025 03       		.uleb128 0x3
 4862 0026 08       		.uleb128 0x8
 4863 0027 00       		.byte	0
 4864 0028 00       		.byte	0
 4865 0029 04       		.uleb128 0x4
 4866 002a 16       		.uleb128 0x16
 4867 002b 00       		.byte	0
 4868 002c 03       		.uleb128 0x3
 4869 002d 0E       		.uleb128 0xe
 4870 002e 3A       		.uleb128 0x3a
 4871 002f 0B       		.uleb128 0xb
 4872 0030 3B       		.uleb128 0x3b
 4873 0031 05       		.uleb128 0x5
 4874 0032 49       		.uleb128 0x49
 4875 0033 13       		.uleb128 0x13
 4876 0034 00       		.byte	0
 4877 0035 00       		.byte	0
 4878 0036 05       		.uleb128 0x5
 4879 0037 13       		.uleb128 0x13
 4880 0038 01       		.byte	0x1
 4881 0039 0B       		.uleb128 0xb
 4882 003a 0B       		.uleb128 0xb
 4883 003b 3A       		.uleb128 0x3a
 4884 003c 0B       		.uleb128 0xb
 4885 003d 3B       		.uleb128 0x3b
 4886 003e 0B       		.uleb128 0xb
 4887 003f 01       		.uleb128 0x1
 4888 0040 13       		.uleb128 0x13
 4889 0041 00       		.byte	0
 4890 0042 00       		.byte	0
 4891 0043 06       		.uleb128 0x6
 4892 0044 0D       		.uleb128 0xd
 4893 0045 00       		.byte	0
 4894 0046 03       		.uleb128 0x3
 4895 0047 0E       		.uleb128 0xe
 4896 0048 3A       		.uleb128 0x3a
 4897 0049 0B       		.uleb128 0xb
 4898 004a 3B       		.uleb128 0x3b
 4899 004b 0B       		.uleb128 0xb
 4900 004c 49       		.uleb128 0x49
 4901 004d 13       		.uleb128 0x13
 4902 004e 38       		.uleb128 0x38
 4903 004f 0B       		.uleb128 0xb
 4904 0050 00       		.byte	0
 4905 0051 00       		.byte	0
 4906 0052 07       		.uleb128 0x7
 4907 0053 0F       		.uleb128 0xf
 4908 0054 00       		.byte	0
 4909 0055 0B       		.uleb128 0xb
 4910 0056 0B       		.uleb128 0xb
 4911 0057 49       		.uleb128 0x49
 4912 0058 13       		.uleb128 0x13
 4913 0059 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 138


 4914 005a 00       		.byte	0
 4915 005b 08       		.uleb128 0x8
 4916 005c 26       		.uleb128 0x26
 4917 005d 00       		.byte	0
 4918 005e 49       		.uleb128 0x49
 4919 005f 13       		.uleb128 0x13
 4920 0060 00       		.byte	0
 4921 0061 00       		.byte	0
 4922 0062 09       		.uleb128 0x9
 4923 0063 15       		.uleb128 0x15
 4924 0064 01       		.byte	0x1
 4925 0065 27       		.uleb128 0x27
 4926 0066 19       		.uleb128 0x19
 4927 0067 49       		.uleb128 0x49
 4928 0068 13       		.uleb128 0x13
 4929 0069 01       		.uleb128 0x1
 4930 006a 13       		.uleb128 0x13
 4931 006b 00       		.byte	0
 4932 006c 00       		.byte	0
 4933 006d 0A       		.uleb128 0xa
 4934 006e 05       		.uleb128 0x5
 4935 006f 00       		.byte	0
 4936 0070 49       		.uleb128 0x49
 4937 0071 13       		.uleb128 0x13
 4938 0072 00       		.byte	0
 4939 0073 00       		.byte	0
 4940 0074 0B       		.uleb128 0xb
 4941 0075 15       		.uleb128 0x15
 4942 0076 01       		.byte	0x1
 4943 0077 27       		.uleb128 0x27
 4944 0078 19       		.uleb128 0x19
 4945 0079 01       		.uleb128 0x1
 4946 007a 13       		.uleb128 0x13
 4947 007b 00       		.byte	0
 4948 007c 00       		.byte	0
 4949 007d 0C       		.uleb128 0xc
 4950 007e 16       		.uleb128 0x16
 4951 007f 00       		.byte	0
 4952 0080 03       		.uleb128 0x3
 4953 0081 0E       		.uleb128 0xe
 4954 0082 3A       		.uleb128 0x3a
 4955 0083 0B       		.uleb128 0xb
 4956 0084 3B       		.uleb128 0x3b
 4957 0085 0B       		.uleb128 0xb
 4958 0086 49       		.uleb128 0x49
 4959 0087 13       		.uleb128 0x13
 4960 0088 00       		.byte	0
 4961 0089 00       		.byte	0
 4962 008a 0D       		.uleb128 0xd
 4963 008b 2E       		.uleb128 0x2e
 4964 008c 01       		.byte	0x1
 4965 008d 3F       		.uleb128 0x3f
 4966 008e 19       		.uleb128 0x19
 4967 008f 03       		.uleb128 0x3
 4968 0090 0E       		.uleb128 0xe
 4969 0091 3A       		.uleb128 0x3a
 4970 0092 0B       		.uleb128 0xb
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 139


 4971 0093 3B       		.uleb128 0x3b
 4972 0094 0B       		.uleb128 0xb
 4973 0095 27       		.uleb128 0x27
 4974 0096 19       		.uleb128 0x19
 4975 0097 11       		.uleb128 0x11
 4976 0098 01       		.uleb128 0x1
 4977 0099 12       		.uleb128 0x12
 4978 009a 06       		.uleb128 0x6
 4979 009b 40       		.uleb128 0x40
 4980 009c 18       		.uleb128 0x18
 4981 009d 9742     		.uleb128 0x2117
 4982 009f 19       		.uleb128 0x19
 4983 00a0 01       		.uleb128 0x1
 4984 00a1 13       		.uleb128 0x13
 4985 00a2 00       		.byte	0
 4986 00a3 00       		.byte	0
 4987 00a4 0E       		.uleb128 0xe
 4988 00a5 05       		.uleb128 0x5
 4989 00a6 00       		.byte	0
 4990 00a7 03       		.uleb128 0x3
 4991 00a8 0E       		.uleb128 0xe
 4992 00a9 3A       		.uleb128 0x3a
 4993 00aa 0B       		.uleb128 0xb
 4994 00ab 3B       		.uleb128 0x3b
 4995 00ac 0B       		.uleb128 0xb
 4996 00ad 49       		.uleb128 0x49
 4997 00ae 13       		.uleb128 0x13
 4998 00af 02       		.uleb128 0x2
 4999 00b0 18       		.uleb128 0x18
 5000 00b1 00       		.byte	0
 5001 00b2 00       		.byte	0
 5002 00b3 0F       		.uleb128 0xf
 5003 00b4 34       		.uleb128 0x34
 5004 00b5 00       		.byte	0
 5005 00b6 03       		.uleb128 0x3
 5006 00b7 0E       		.uleb128 0xe
 5007 00b8 3A       		.uleb128 0x3a
 5008 00b9 0B       		.uleb128 0xb
 5009 00ba 3B       		.uleb128 0x3b
 5010 00bb 0B       		.uleb128 0xb
 5011 00bc 49       		.uleb128 0x49
 5012 00bd 13       		.uleb128 0x13
 5013 00be 02       		.uleb128 0x2
 5014 00bf 18       		.uleb128 0x18
 5015 00c0 00       		.byte	0
 5016 00c1 00       		.byte	0
 5017 00c2 10       		.uleb128 0x10
 5018 00c3 2E       		.uleb128 0x2e
 5019 00c4 01       		.byte	0x1
 5020 00c5 3F       		.uleb128 0x3f
 5021 00c6 19       		.uleb128 0x19
 5022 00c7 03       		.uleb128 0x3
 5023 00c8 0E       		.uleb128 0xe
 5024 00c9 3A       		.uleb128 0x3a
 5025 00ca 0B       		.uleb128 0xb
 5026 00cb 3B       		.uleb128 0x3b
 5027 00cc 0B       		.uleb128 0xb
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 140


 5028 00cd 27       		.uleb128 0x27
 5029 00ce 19       		.uleb128 0x19
 5030 00cf 11       		.uleb128 0x11
 5031 00d0 01       		.uleb128 0x1
 5032 00d1 12       		.uleb128 0x12
 5033 00d2 06       		.uleb128 0x6
 5034 00d3 40       		.uleb128 0x40
 5035 00d4 18       		.uleb128 0x18
 5036 00d5 9642     		.uleb128 0x2116
 5037 00d7 19       		.uleb128 0x19
 5038 00d8 01       		.uleb128 0x1
 5039 00d9 13       		.uleb128 0x13
 5040 00da 00       		.byte	0
 5041 00db 00       		.byte	0
 5042 00dc 11       		.uleb128 0x11
 5043 00dd 2E       		.uleb128 0x2e
 5044 00de 01       		.byte	0x1
 5045 00df 3F       		.uleb128 0x3f
 5046 00e0 19       		.uleb128 0x19
 5047 00e1 03       		.uleb128 0x3
 5048 00e2 0E       		.uleb128 0xe
 5049 00e3 3A       		.uleb128 0x3a
 5050 00e4 0B       		.uleb128 0xb
 5051 00e5 3B       		.uleb128 0x3b
 5052 00e6 05       		.uleb128 0x5
 5053 00e7 27       		.uleb128 0x27
 5054 00e8 19       		.uleb128 0x19
 5055 00e9 11       		.uleb128 0x11
 5056 00ea 01       		.uleb128 0x1
 5057 00eb 12       		.uleb128 0x12
 5058 00ec 06       		.uleb128 0x6
 5059 00ed 40       		.uleb128 0x40
 5060 00ee 18       		.uleb128 0x18
 5061 00ef 9642     		.uleb128 0x2116
 5062 00f1 19       		.uleb128 0x19
 5063 00f2 01       		.uleb128 0x1
 5064 00f3 13       		.uleb128 0x13
 5065 00f4 00       		.byte	0
 5066 00f5 00       		.byte	0
 5067 00f6 12       		.uleb128 0x12
 5068 00f7 34       		.uleb128 0x34
 5069 00f8 00       		.byte	0
 5070 00f9 03       		.uleb128 0x3
 5071 00fa 08       		.uleb128 0x8
 5072 00fb 3A       		.uleb128 0x3a
 5073 00fc 0B       		.uleb128 0xb
 5074 00fd 3B       		.uleb128 0x3b
 5075 00fe 05       		.uleb128 0x5
 5076 00ff 49       		.uleb128 0x49
 5077 0100 13       		.uleb128 0x13
 5078 0101 02       		.uleb128 0x2
 5079 0102 18       		.uleb128 0x18
 5080 0103 00       		.byte	0
 5081 0104 00       		.byte	0
 5082 0105 13       		.uleb128 0x13
 5083 0106 34       		.uleb128 0x34
 5084 0107 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 141


 5085 0108 03       		.uleb128 0x3
 5086 0109 0E       		.uleb128 0xe
 5087 010a 3A       		.uleb128 0x3a
 5088 010b 0B       		.uleb128 0xb
 5089 010c 3B       		.uleb128 0x3b
 5090 010d 05       		.uleb128 0x5
 5091 010e 49       		.uleb128 0x49
 5092 010f 13       		.uleb128 0x13
 5093 0110 02       		.uleb128 0x2
 5094 0111 18       		.uleb128 0x18
 5095 0112 00       		.byte	0
 5096 0113 00       		.byte	0
 5097 0114 14       		.uleb128 0x14
 5098 0115 05       		.uleb128 0x5
 5099 0116 00       		.byte	0
 5100 0117 03       		.uleb128 0x3
 5101 0118 0E       		.uleb128 0xe
 5102 0119 3A       		.uleb128 0x3a
 5103 011a 0B       		.uleb128 0xb
 5104 011b 3B       		.uleb128 0x3b
 5105 011c 05       		.uleb128 0x5
 5106 011d 49       		.uleb128 0x49
 5107 011e 13       		.uleb128 0x13
 5108 011f 02       		.uleb128 0x2
 5109 0120 18       		.uleb128 0x18
 5110 0121 00       		.byte	0
 5111 0122 00       		.byte	0
 5112 0123 15       		.uleb128 0x15
 5113 0124 2E       		.uleb128 0x2e
 5114 0125 01       		.byte	0x1
 5115 0126 3F       		.uleb128 0x3f
 5116 0127 19       		.uleb128 0x19
 5117 0128 03       		.uleb128 0x3
 5118 0129 0E       		.uleb128 0xe
 5119 012a 3A       		.uleb128 0x3a
 5120 012b 0B       		.uleb128 0xb
 5121 012c 3B       		.uleb128 0x3b
 5122 012d 05       		.uleb128 0x5
 5123 012e 27       		.uleb128 0x27
 5124 012f 19       		.uleb128 0x19
 5125 0130 49       		.uleb128 0x49
 5126 0131 13       		.uleb128 0x13
 5127 0132 11       		.uleb128 0x11
 5128 0133 01       		.uleb128 0x1
 5129 0134 12       		.uleb128 0x12
 5130 0135 06       		.uleb128 0x6
 5131 0136 40       		.uleb128 0x40
 5132 0137 18       		.uleb128 0x18
 5133 0138 9742     		.uleb128 0x2117
 5134 013a 19       		.uleb128 0x19
 5135 013b 01       		.uleb128 0x1
 5136 013c 13       		.uleb128 0x13
 5137 013d 00       		.byte	0
 5138 013e 00       		.byte	0
 5139 013f 16       		.uleb128 0x16
 5140 0140 2E       		.uleb128 0x2e
 5141 0141 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 142


 5142 0142 3F       		.uleb128 0x3f
 5143 0143 19       		.uleb128 0x19
 5144 0144 03       		.uleb128 0x3
 5145 0145 0E       		.uleb128 0xe
 5146 0146 3A       		.uleb128 0x3a
 5147 0147 0B       		.uleb128 0xb
 5148 0148 3B       		.uleb128 0x3b
 5149 0149 05       		.uleb128 0x5
 5150 014a 27       		.uleb128 0x27
 5151 014b 19       		.uleb128 0x19
 5152 014c 11       		.uleb128 0x11
 5153 014d 01       		.uleb128 0x1
 5154 014e 12       		.uleb128 0x12
 5155 014f 06       		.uleb128 0x6
 5156 0150 40       		.uleb128 0x40
 5157 0151 18       		.uleb128 0x18
 5158 0152 9742     		.uleb128 0x2117
 5159 0154 19       		.uleb128 0x19
 5160 0155 01       		.uleb128 0x1
 5161 0156 13       		.uleb128 0x13
 5162 0157 00       		.byte	0
 5163 0158 00       		.byte	0
 5164 0159 17       		.uleb128 0x17
 5165 015a 2E       		.uleb128 0x2e
 5166 015b 01       		.byte	0x1
 5167 015c 3F       		.uleb128 0x3f
 5168 015d 19       		.uleb128 0x19
 5169 015e 03       		.uleb128 0x3
 5170 015f 0E       		.uleb128 0xe
 5171 0160 3A       		.uleb128 0x3a
 5172 0161 0B       		.uleb128 0xb
 5173 0162 3B       		.uleb128 0x3b
 5174 0163 05       		.uleb128 0x5
 5175 0164 27       		.uleb128 0x27
 5176 0165 19       		.uleb128 0x19
 5177 0166 49       		.uleb128 0x49
 5178 0167 13       		.uleb128 0x13
 5179 0168 11       		.uleb128 0x11
 5180 0169 01       		.uleb128 0x1
 5181 016a 12       		.uleb128 0x12
 5182 016b 06       		.uleb128 0x6
 5183 016c 40       		.uleb128 0x40
 5184 016d 18       		.uleb128 0x18
 5185 016e 9642     		.uleb128 0x2116
 5186 0170 19       		.uleb128 0x19
 5187 0171 01       		.uleb128 0x1
 5188 0172 13       		.uleb128 0x13
 5189 0173 00       		.byte	0
 5190 0174 00       		.byte	0
 5191 0175 18       		.uleb128 0x18
 5192 0176 01       		.uleb128 0x1
 5193 0177 01       		.byte	0x1
 5194 0178 49       		.uleb128 0x49
 5195 0179 13       		.uleb128 0x13
 5196 017a 01       		.uleb128 0x1
 5197 017b 13       		.uleb128 0x13
 5198 017c 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 143


 5199 017d 00       		.byte	0
 5200 017e 19       		.uleb128 0x19
 5201 017f 21       		.uleb128 0x21
 5202 0180 00       		.byte	0
 5203 0181 49       		.uleb128 0x49
 5204 0182 13       		.uleb128 0x13
 5205 0183 2F       		.uleb128 0x2f
 5206 0184 0B       		.uleb128 0xb
 5207 0185 00       		.byte	0
 5208 0186 00       		.byte	0
 5209 0187 1A       		.uleb128 0x1a
 5210 0188 05       		.uleb128 0x5
 5211 0189 00       		.byte	0
 5212 018a 03       		.uleb128 0x3
 5213 018b 08       		.uleb128 0x8
 5214 018c 3A       		.uleb128 0x3a
 5215 018d 0B       		.uleb128 0xb
 5216 018e 3B       		.uleb128 0x3b
 5217 018f 05       		.uleb128 0x5
 5218 0190 49       		.uleb128 0x49
 5219 0191 13       		.uleb128 0x13
 5220 0192 02       		.uleb128 0x2
 5221 0193 18       		.uleb128 0x18
 5222 0194 00       		.byte	0
 5223 0195 00       		.byte	0
 5224 0196 1B       		.uleb128 0x1b
 5225 0197 2E       		.uleb128 0x2e
 5226 0198 00       		.byte	0
 5227 0199 3F       		.uleb128 0x3f
 5228 019a 19       		.uleb128 0x19
 5229 019b 03       		.uleb128 0x3
 5230 019c 0E       		.uleb128 0xe
 5231 019d 3A       		.uleb128 0x3a
 5232 019e 0B       		.uleb128 0xb
 5233 019f 3B       		.uleb128 0x3b
 5234 01a0 05       		.uleb128 0x5
 5235 01a1 27       		.uleb128 0x27
 5236 01a2 19       		.uleb128 0x19
 5237 01a3 11       		.uleb128 0x11
 5238 01a4 01       		.uleb128 0x1
 5239 01a5 12       		.uleb128 0x12
 5240 01a6 06       		.uleb128 0x6
 5241 01a7 40       		.uleb128 0x40
 5242 01a8 18       		.uleb128 0x18
 5243 01a9 9742     		.uleb128 0x2117
 5244 01ab 19       		.uleb128 0x19
 5245 01ac 00       		.byte	0
 5246 01ad 00       		.byte	0
 5247 01ae 1C       		.uleb128 0x1c
 5248 01af 34       		.uleb128 0x34
 5249 01b0 00       		.byte	0
 5250 01b1 03       		.uleb128 0x3
 5251 01b2 0E       		.uleb128 0xe
 5252 01b3 3A       		.uleb128 0x3a
 5253 01b4 0B       		.uleb128 0xb
 5254 01b5 3B       		.uleb128 0x3b
 5255 01b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 144


 5256 01b7 49       		.uleb128 0x49
 5257 01b8 13       		.uleb128 0x13
 5258 01b9 3F       		.uleb128 0x3f
 5259 01ba 19       		.uleb128 0x19
 5260 01bb 3C       		.uleb128 0x3c
 5261 01bc 19       		.uleb128 0x19
 5262 01bd 00       		.byte	0
 5263 01be 00       		.byte	0
 5264 01bf 1D       		.uleb128 0x1d
 5265 01c0 34       		.uleb128 0x34
 5266 01c1 00       		.byte	0
 5267 01c2 03       		.uleb128 0x3
 5268 01c3 0E       		.uleb128 0xe
 5269 01c4 3A       		.uleb128 0x3a
 5270 01c5 0B       		.uleb128 0xb
 5271 01c6 3B       		.uleb128 0x3b
 5272 01c7 0B       		.uleb128 0xb
 5273 01c8 49       		.uleb128 0x49
 5274 01c9 13       		.uleb128 0x13
 5275 01ca 3F       		.uleb128 0x3f
 5276 01cb 19       		.uleb128 0x19
 5277 01cc 02       		.uleb128 0x2
 5278 01cd 18       		.uleb128 0x18
 5279 01ce 00       		.byte	0
 5280 01cf 00       		.byte	0
 5281 01d0 00       		.byte	0
 5282              		.section	.debug_aranges,"",%progbits
 5283 0000 44010000 		.4byte	0x144
 5284 0004 0200     		.2byte	0x2
 5285 0006 00000000 		.4byte	.Ldebug_info0
 5286 000a 04       		.byte	0x4
 5287 000b 00       		.byte	0
 5288 000c 0000     		.2byte	0
 5289 000e 0000     		.2byte	0
 5290 0010 00000000 		.4byte	.LFB35
 5291 0014 90000000 		.4byte	.LFE35-.LFB35
 5292 0018 00000000 		.4byte	.LFB36
 5293 001c 28000000 		.4byte	.LFE36-.LFB36
 5294 0020 00000000 		.4byte	.LFB37
 5295 0024 26000000 		.4byte	.LFE37-.LFB37
 5296 0028 00000000 		.4byte	.LFB38
 5297 002c 50000000 		.4byte	.LFE38-.LFB38
 5298 0030 00000000 		.4byte	.LFB39
 5299 0034 38020000 		.4byte	.LFE39-.LFB39
 5300 0038 00000000 		.4byte	.LFB40
 5301 003c 1E000000 		.4byte	.LFE40-.LFB40
 5302 0040 00000000 		.4byte	.LFB41
 5303 0044 40000000 		.4byte	.LFE41-.LFB41
 5304 0048 00000000 		.4byte	.LFB42
 5305 004c 70000000 		.4byte	.LFE42-.LFB42
 5306 0050 00000000 		.4byte	.LFB43
 5307 0054 1C000000 		.4byte	.LFE43-.LFB43
 5308 0058 00000000 		.4byte	.LFB44
 5309 005c 24000000 		.4byte	.LFE44-.LFB44
 5310 0060 00000000 		.4byte	.LFB45
 5311 0064 1C000000 		.4byte	.LFE45-.LFB45
 5312 0068 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 145


 5313 006c 24000000 		.4byte	.LFE46-.LFB46
 5314 0070 00000000 		.4byte	.LFB47
 5315 0074 1C000000 		.4byte	.LFE47-.LFB47
 5316 0078 00000000 		.4byte	.LFB48
 5317 007c 1C000000 		.4byte	.LFE48-.LFB48
 5318 0080 00000000 		.4byte	.LFB49
 5319 0084 1C000000 		.4byte	.LFE49-.LFB49
 5320 0088 00000000 		.4byte	.LFB50
 5321 008c 1C000000 		.4byte	.LFE50-.LFB50
 5322 0090 00000000 		.4byte	.LFB51
 5323 0094 24000000 		.4byte	.LFE51-.LFB51
 5324 0098 00000000 		.4byte	.LFB52
 5325 009c 24000000 		.4byte	.LFE52-.LFB52
 5326 00a0 00000000 		.4byte	.LFB53
 5327 00a4 24000000 		.4byte	.LFE53-.LFB53
 5328 00a8 00000000 		.4byte	.LFB54
 5329 00ac 24000000 		.4byte	.LFE54-.LFB54
 5330 00b0 00000000 		.4byte	.LFB55
 5331 00b4 24000000 		.4byte	.LFE55-.LFB55
 5332 00b8 00000000 		.4byte	.LFB56
 5333 00bc 24000000 		.4byte	.LFE56-.LFB56
 5334 00c0 00000000 		.4byte	.LFB57
 5335 00c4 58010000 		.4byte	.LFE57-.LFB57
 5336 00c8 00000000 		.4byte	.LFB58
 5337 00cc 58000000 		.4byte	.LFE58-.LFB58
 5338 00d0 00000000 		.4byte	.LFB59
 5339 00d4 36000000 		.4byte	.LFE59-.LFB59
 5340 00d8 00000000 		.4byte	.LFB60
 5341 00dc 70000000 		.4byte	.LFE60-.LFB60
 5342 00e0 00000000 		.4byte	.LFB61
 5343 00e4 70000000 		.4byte	.LFE61-.LFB61
 5344 00e8 00000000 		.4byte	.LFB62
 5345 00ec B8000000 		.4byte	.LFE62-.LFB62
 5346 00f0 00000000 		.4byte	.LFB63
 5347 00f4 94010000 		.4byte	.LFE63-.LFB63
 5348 00f8 00000000 		.4byte	.LFB64
 5349 00fc B4000000 		.4byte	.LFE64-.LFB64
 5350 0100 00000000 		.4byte	.LFB65
 5351 0104 78010000 		.4byte	.LFE65-.LFB65
 5352 0108 00000000 		.4byte	.LFB66
 5353 010c 76000000 		.4byte	.LFE66-.LFB66
 5354 0110 00000000 		.4byte	.LFB67
 5355 0114 3C000000 		.4byte	.LFE67-.LFB67
 5356 0118 00000000 		.4byte	.LFB68
 5357 011c 1C000000 		.4byte	.LFE68-.LFB68
 5358 0120 00000000 		.4byte	.LFB69
 5359 0124 1C000000 		.4byte	.LFE69-.LFB69
 5360 0128 00000000 		.4byte	.LFB70
 5361 012c 1C000000 		.4byte	.LFE70-.LFB70
 5362 0130 00000000 		.4byte	.LFB71
 5363 0134 14000000 		.4byte	.LFE71-.LFB71
 5364 0138 00000000 		.4byte	.LFB72
 5365 013c 14000000 		.4byte	.LFE72-.LFB72
 5366 0140 00000000 		.4byte	0
 5367 0144 00000000 		.4byte	0
 5368              		.section	.debug_ranges,"",%progbits
 5369              	.Ldebug_ranges0:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 146


 5370 0000 00000000 		.4byte	.LFB35
 5371 0004 90000000 		.4byte	.LFE35
 5372 0008 00000000 		.4byte	.LFB36
 5373 000c 28000000 		.4byte	.LFE36
 5374 0010 00000000 		.4byte	.LFB37
 5375 0014 26000000 		.4byte	.LFE37
 5376 0018 00000000 		.4byte	.LFB38
 5377 001c 50000000 		.4byte	.LFE38
 5378 0020 00000000 		.4byte	.LFB39
 5379 0024 38020000 		.4byte	.LFE39
 5380 0028 00000000 		.4byte	.LFB40
 5381 002c 1E000000 		.4byte	.LFE40
 5382 0030 00000000 		.4byte	.LFB41
 5383 0034 40000000 		.4byte	.LFE41
 5384 0038 00000000 		.4byte	.LFB42
 5385 003c 70000000 		.4byte	.LFE42
 5386 0040 00000000 		.4byte	.LFB43
 5387 0044 1C000000 		.4byte	.LFE43
 5388 0048 00000000 		.4byte	.LFB44
 5389 004c 24000000 		.4byte	.LFE44
 5390 0050 00000000 		.4byte	.LFB45
 5391 0054 1C000000 		.4byte	.LFE45
 5392 0058 00000000 		.4byte	.LFB46
 5393 005c 24000000 		.4byte	.LFE46
 5394 0060 00000000 		.4byte	.LFB47
 5395 0064 1C000000 		.4byte	.LFE47
 5396 0068 00000000 		.4byte	.LFB48
 5397 006c 1C000000 		.4byte	.LFE48
 5398 0070 00000000 		.4byte	.LFB49
 5399 0074 1C000000 		.4byte	.LFE49
 5400 0078 00000000 		.4byte	.LFB50
 5401 007c 1C000000 		.4byte	.LFE50
 5402 0080 00000000 		.4byte	.LFB51
 5403 0084 24000000 		.4byte	.LFE51
 5404 0088 00000000 		.4byte	.LFB52
 5405 008c 24000000 		.4byte	.LFE52
 5406 0090 00000000 		.4byte	.LFB53
 5407 0094 24000000 		.4byte	.LFE53
 5408 0098 00000000 		.4byte	.LFB54
 5409 009c 24000000 		.4byte	.LFE54
 5410 00a0 00000000 		.4byte	.LFB55
 5411 00a4 24000000 		.4byte	.LFE55
 5412 00a8 00000000 		.4byte	.LFB56
 5413 00ac 24000000 		.4byte	.LFE56
 5414 00b0 00000000 		.4byte	.LFB57
 5415 00b4 58010000 		.4byte	.LFE57
 5416 00b8 00000000 		.4byte	.LFB58
 5417 00bc 58000000 		.4byte	.LFE58
 5418 00c0 00000000 		.4byte	.LFB59
 5419 00c4 36000000 		.4byte	.LFE59
 5420 00c8 00000000 		.4byte	.LFB60
 5421 00cc 70000000 		.4byte	.LFE60
 5422 00d0 00000000 		.4byte	.LFB61
 5423 00d4 70000000 		.4byte	.LFE61
 5424 00d8 00000000 		.4byte	.LFB62
 5425 00dc B8000000 		.4byte	.LFE62
 5426 00e0 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 147


 5427 00e4 94010000 		.4byte	.LFE63
 5428 00e8 00000000 		.4byte	.LFB64
 5429 00ec B4000000 		.4byte	.LFE64
 5430 00f0 00000000 		.4byte	.LFB65
 5431 00f4 78010000 		.4byte	.LFE65
 5432 00f8 00000000 		.4byte	.LFB66
 5433 00fc 76000000 		.4byte	.LFE66
 5434 0100 00000000 		.4byte	.LFB67
 5435 0104 3C000000 		.4byte	.LFE67
 5436 0108 00000000 		.4byte	.LFB68
 5437 010c 1C000000 		.4byte	.LFE68
 5438 0110 00000000 		.4byte	.LFB69
 5439 0114 1C000000 		.4byte	.LFE69
 5440 0118 00000000 		.4byte	.LFB70
 5441 011c 1C000000 		.4byte	.LFE70
 5442 0120 00000000 		.4byte	.LFB71
 5443 0124 14000000 		.4byte	.LFE71
 5444 0128 00000000 		.4byte	.LFB72
 5445 012c 14000000 		.4byte	.LFE72
 5446 0130 00000000 		.4byte	0
 5447 0134 00000000 		.4byte	0
 5448              		.section	.debug_line,"",%progbits
 5449              	.Ldebug_line0:
 5450 0000 9D040000 		.section	.debug_str,"MS",%progbits,1
 5450      02005C00 
 5450      00000201 
 5450      FB0E0D00 
 5450      01010101 
 5451              	.LASF128:
 5452 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5452      656E7365 
 5452      5F73656E 
 5452      736F7242 
 5452      6173656C 
 5453              	.LASF114:
 5454 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5454      656E7365 
 5454      5F494952 
 5454      3446696C 
 5454      74657200 
 5455              	.LASF120:
 5456 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 5456      656E7365 
 5456      5F646562 
 5456      6F756E63 
 5456      65436F75 
 5457              	.LASF32:
 5458 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5458      53706565 
 5458      6454626C 
 5458      00
 5459              	.LASF131:
 5460 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5460      656E7365 
 5460      5F6C6F77 
 5460      42617365 
 5460      6C696E65 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 148


 5461              	.LASF56:
 5462 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5462      656E7365 
 5462      5F557064 
 5462      61746542 
 5462      6173656C 
 5463              	.LASF35:
 5464 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5464      65724F66 
 5464      53656E73 
 5464      6F727300 
 5465              	.LASF39:
 5466 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5466      65744269 
 5466      7456616C 
 5466      756500
 5467              	.LASF95:
 5468 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5468      656E7365 
 5468      5F446973 
 5468      61626C65 
 5468      57696467 
 5469              	.LASF63:
 5470 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5470      656E7365 
 5470      5F557064 
 5470      61746545 
 5470      6E61626C 
 5471              	.LASF110:
 5472 00eb 706F7349 		.ascii	"posIndex\000"
 5472      6E646578 
 5472      00
 5473              	.LASF141:
 5474 00f4 43617053 		.ascii	"CapSense_config\000"
 5474      656E7365 
 5474      5F636F6E 
 5474      66696700 
 5475              	.LASF55:
 5476 0104 69735365 		.ascii	"isSensorEnabled\000"
 5476      6E736F72 
 5476      456E6162 
 5476      6C656400 
 5477              	.LASF91:
 5478 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5478      6653656E 
 5478      736F7273 
 5478      00
 5479              	.LASF8:
 5480 0121 756E7369 		.ascii	"unsigned int\000"
 5480      676E6564 
 5480      20696E74 
 5480      00
 5481              	.LASF44:
 5482 012e 746F7461 		.ascii	"totalSensorsNum\000"
 5482      6C53656E 
 5482      736F7273 
 5482      4E756D00 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 149


 5483              	.LASF12:
 5484 013e 696E7431 		.ascii	"int16\000"
 5484      3600
 5485              	.LASF29:
 5486 0144 73616D70 		.ascii	"sampleMaxTbl\000"
 5486      6C654D61 
 5486      7854626C 
 5486      00
 5487              	.LASF54:
 5488 0151 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5488      656E7365 
 5488      5F496E69 
 5488      7469616C 
 5488      697A6545 
 5489              	.LASF123:
 5490 0175 43617053 		.ascii	"CapSense_posFiltersData\000"
 5490      656E7365 
 5490      5F706F73 
 5490      46696C74 
 5490      65727344 
 5491              	.LASF27:
 5492 018d 7369676E 		.ascii	"signRegisterTbl\000"
 5492      52656769 
 5492      73746572 
 5492      54626C00 
 5493              	.LASF137:
 5494 019d 43617053 		.ascii	"CapSense_debounce\000"
 5494      656E7365 
 5494      5F646562 
 5494      6F756E63 
 5494      6500
 5495              	.LASF50:
 5496 01af 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5496      656E7365 
 5496      5F496E69 
 5496      7469616C 
 5496      697A6553 
 5497              	.LASF48:
 5498 01d1 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5498      656E7365 
 5498      5F434F4E 
 5498      4649475F 
 5498      54595045 
 5499              	.LASF68:
 5500 01ef 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5500      656E7365 
 5500      5F536574 
 5500      42617365 
 5500      6C696E65 
 5501              	.LASF34:
 5502 0208 72617744 		.ascii	"rawDataIndex\000"
 5502      61746149 
 5502      6E646578 
 5502      00
 5503              	.LASF43:
 5504 0215 746F7461 		.ascii	"totalWidgetsNum\000"
 5504      6C576964 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 150


 5504      67657473 
 5504      4E756D00 
 5505              	.LASF72:
 5506 0225 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5506      656E7365 
 5506      5F536574 
 5506      44696666 
 5506      436F756E 
 5507              	.LASF129:
 5508 023f 43617053 		.ascii	"CapSense_sensorSignal\000"
 5508      656E7365 
 5508      5F73656E 
 5508      736F7253 
 5508      69676E61 
 5509              	.LASF138:
 5510 0255 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5510      656E7365 
 5510      5F726177 
 5510      44617461 
 5510      496E6465 
 5511              	.LASF79:
 5512 026b 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5512      656E7365 
 5512      5F536574 
 5512      4E6F6973 
 5512      65546872 
 5513              	.LASF64:
 5514 0286 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5514      656E7365 
 5514      5F557064 
 5514      61746557 
 5514      69646765 
 5515              	.LASF136:
 5516 02a4 43617053 		.ascii	"CapSense_hysteresis\000"
 5516      656E7365 
 5516      5F687973 
 5516      74657265 
 5516      73697300 
 5517              	.LASF14:
 5518 02b8 666C6F61 		.ascii	"float\000"
 5518      7400
 5519              	.LASF13:
 5520 02be 696E7433 		.ascii	"int32\000"
 5520      3200
 5521              	.LASF98:
 5522 02c4 636F756E 		.ascii	"count\000"
 5522      7400
 5523              	.LASF24:
 5524 02ca 7265736F 		.ascii	"resolutionsTbl\000"
 5524      6C757469 
 5524      6F6E7354 
 5524      626C00
 5525              	.LASF112:
 5526 02d9 706F7346 		.ascii	"posFiltersMask\000"
 5526      696C7465 
 5526      72734D61 
 5526      736B00
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 151


 5527              	.LASF75:
 5528 02e8 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5528      656E7365 
 5528      5F476574 
 5528      4E6F6973 
 5528      65546872 
 5529              	.LASF26:
 5530 0303 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5530      696E6744 
 5530      69666665 
 5530      72656E63 
 5530      6554626C 
 5531              	.LASF7:
 5532 0318 6C6F6E67 		.ascii	"long long unsigned int\000"
 5532      206C6F6E 
 5532      6720756E 
 5532      7369676E 
 5532      65642069 
 5533              	.LASF125:
 5534 032f 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5534      656E7365 
 5534      5F73656E 
 5534      736F7245 
 5534      6E61626C 
 5535              	.LASF53:
 5536 0349 77696467 		.ascii	"widget\000"
 5536      657400
 5537              	.LASF122:
 5538 0350 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5538      656E7365 
 5538      5F706F73 
 5538      46696C74 
 5538      6572734D 
 5539              	.LASF133:
 5540 0368 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5540      656E7365 
 5540      5F66696E 
 5540      67657254 
 5540      68726573 
 5541              	.LASF126:
 5542 0381 43617053 		.ascii	"CapSense_widgetNumber\000"
 5542      656E7365 
 5542      5F776964 
 5542      6765744E 
 5542      756D6265 
 5543              	.LASF78:
 5544 0397 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5544      656E7365 
 5544      5F536574 
 5544      46696E67 
 5544      65725468 
 5545              	.LASF119:
 5546 03b3 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5546      656E7365 
 5546      5F446973 
 5546      61626C65 
 5546      52617744 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 152


 5547              	.LASF73:
 5548 03d2 76616C75 		.ascii	"value\000"
 5548      6500
 5549              	.LASF76:
 5550 03d8 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5550      656E7365 
 5550      5F476574 
 5550      46696E67 
 5550      65724879 
 5551              	.LASF71:
 5552 03f5 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5552      656E7365 
 5552      5F476574 
 5552      44696666 
 5552      436F756E 
 5553              	.LASF58:
 5554 040f 7369676E 		.ascii	"sign\000"
 5554      00
 5555              	.LASF145:
 5556 0414 433A5C55 		.ascii	"C:\\Users\\poornima\\Documents\\GitHub\\thingTouch\\"
 5556      73657273 
 5556      5C706F6F 
 5556      726E696D 
 5556      615C446F 
 5557 0442 32463553 		.ascii	"2F5S1SOC.cydsn\000"
 5557      31534F43 
 5557      2E637964 
 5557      736E00
 5558              	.LASF97:
 5559 0451 6F666673 		.ascii	"offset\000"
 5559      657400
 5560              	.LASF25:
 5561 0458 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5561      65456E76 
 5561      656C6F70 
 5561      6554626C 
 5561      00
 5562              	.LASF57:
 5563 0469 63616C63 		.ascii	"calc\000"
 5563      00
 5564              	.LASF38:
 5565 046e 70747252 		.ascii	"ptrReadSensorRaw\000"
 5565      65616453 
 5565      656E736F 
 5565      72526177 
 5565      00
 5566              	.LASF88:
 5567 047f 68797374 		.ascii	"hysteresis\000"
 5567      65726573 
 5567      697300
 5568              	.LASF60:
 5569 048a 66696C74 		.ascii	"filteredRawData\000"
 5569      65726564 
 5569      52617744 
 5569      61746100 
 5570              	.LASF65:
 5571 049a 73656E73 		.ascii	"sensorsPerWidget\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 153


 5571      6F727350 
 5571      65725769 
 5571      64676574 
 5571      00
 5572              	.LASF93:
 5573 04ab 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5573      656E7365 
 5573      5F436865 
 5573      636B4973 
 5573      416E7957 
 5574              	.LASF139:
 5575 04cb 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5575      656E7365 
 5575      5F6E756D 
 5575      6265724F 
 5575      6653656E 
 5576              	.LASF135:
 5577 04e4 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5577      656E7365 
 5577      5F6E6567 
 5577      61746976 
 5577      654E6F69 
 5578              	.LASF42:
 5579 0504 746F7461 		.ascii	"totalScanslotsNum\000"
 5579      6C536361 
 5579      6E736C6F 
 5579      74734E75 
 5579      6D00
 5580              	.LASF51:
 5581 0516 73656E73 		.ascii	"sensor\000"
 5581      6F7200
 5582              	.LASF45:
 5583 051d 73656E73 		.ascii	"sensetivitySeed\000"
 5583      65746976 
 5583      69747953 
 5583      65656400 
 5584              	.LASF94:
 5585 052d 43617053 		.ascii	"CapSense_EnableWidget\000"
 5585      656E7365 
 5585      5F456E61 
 5585      626C6557 
 5585      69646765 
 5586              	.LASF16:
 5587 0543 63686172 		.ascii	"char\000"
 5587      00
 5588              	.LASF77:
 5589 0548 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5589      656E7365 
 5589      5F476574 
 5589      4E656761 
 5589      74697665 
 5590              	.LASF33:
 5591 056b 70726573 		.ascii	"prescalerTable\000"
 5591      63616C65 
 5591      72546162 
 5591      6C6500
 5592              	.LASF10:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 154


 5593 057a 75696E74 		.ascii	"uint16\000"
 5593      313600
 5594              	.LASF69:
 5595 0581 64617461 		.ascii	"data\000"
 5595      00
 5596              	.LASF18:
 5597 0586 69646163 		.ascii	"idac1LevelsTbl\000"
 5597      314C6576 
 5597      656C7354 
 5597      626C00
 5598              	.LASF103:
 5599 0595 7265736F 		.ascii	"resolution\000"
 5599      6C757469 
 5599      6F6E00
 5600              	.LASF90:
 5601 05a0 72617749 		.ascii	"rawIndex\000"
 5601      6E646578 
 5601      00
 5602              	.LASF104:
 5603 05a9 43617053 		.ascii	"CapSense_centroid\000"
 5603      656E7365 
 5603      5F63656E 
 5603      74726F69 
 5603      6400
 5604              	.LASF6:
 5605 05bb 6C6F6E67 		.ascii	"long long int\000"
 5605      206C6F6E 
 5605      6720696E 
 5605      7400
 5606              	.LASF115:
 5607 05c9 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5607      656E7365 
 5607      5F476574 
 5607      57696467 
 5607      65744E75 
 5608              	.LASF85:
 5609 05e2 6465626F 		.ascii	"debounce\000"
 5609      756E6365 
 5609      00
 5610              	.LASF37:
 5611 05eb 70747250 		.ascii	"ptrPreScan\000"
 5611      72655363 
 5611      616E00
 5612              	.LASF84:
 5613 05f6 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5613      656E7365 
 5613      5F436865 
 5613      636B4973 
 5613      53656E73 
 5614              	.LASF36:
 5615 0613 70747247 		.ascii	"ptrGetRaw\000"
 5615      65745261 
 5615      7700
 5616              	.LASF62:
 5617 061d 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5617      656E7365 
 5617      5F557064 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 155


 5617      61746553 
 5617      656E736F 
 5618              	.LASF143:
 5619 063b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5619      4320342E 
 5619      392E3320 
 5619      32303135 
 5619      30333033 
 5620 066e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5620      20726576 
 5620      6973696F 
 5620      6E203232 
 5620      31323230 
 5621 06a1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5621      66756E63 
 5621      74696F6E 
 5621      2D736563 
 5621      74696F6E 
 5622              	.LASF49:
 5623 06c9 43617053 		.ascii	"CapSense_BaseInit\000"
 5623      656E7365 
 5623      5F426173 
 5623      65496E69 
 5623      7400
 5624              	.LASF102:
 5625 06db 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5625      656E7365 
 5625      5F43616C 
 5625      6343656E 
 5625      74726F69 
 5626              	.LASF28:
 5627 06f1 73616D70 		.ascii	"sampleMinTbl\000"
 5627      6C654D69 
 5627      6E54626C 
 5627      00
 5628              	.LASF124:
 5629 06fe 43617053 		.ascii	"CapSense_sensorRaw\000"
 5629      656E7365 
 5629      5F73656E 
 5629      736F7252 
 5629      617700
 5630              	.LASF116:
 5631 0711 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5631      656E7365 
 5631      5F476574 
 5631      4C6F7742 
 5631      6173656C 
 5632              	.LASF81:
 5633 072e 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5633      656E7365 
 5633      5F536574 
 5633      4E656761 
 5633      74697665 
 5634              	.LASF11:
 5635 0751 75696E74 		.ascii	"uint32\000"
 5635      333200
 5636              	.LASF111:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 156


 5637 0758 66697273 		.ascii	"firstTimeIndex\000"
 5637      7454696D 
 5637      65496E64 
 5637      657800
 5638              	.LASF101:
 5639 0767 73746172 		.ascii	"startOfSlider\000"
 5639      744F6653 
 5639      6C696465 
 5639      7200
 5640              	.LASF80:
 5641 0775 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5641      656E7365 
 5641      5F536574 
 5641      46696E67 
 5641      65724879 
 5642              	.LASF74:
 5643 0792 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5643      656E7365 
 5643      5F476574 
 5643      46696E67 
 5643      65725468 
 5644              	.LASF106:
 5645 07ae 6E756D65 		.ascii	"numerator\000"
 5645      7261746F 
 5645      7200
 5646              	.LASF67:
 5647 07b8 6C617374 		.ascii	"lastSensor\000"
 5647      53656E73 
 5647      6F7200
 5648              	.LASF46:
 5649 07c3 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5649      6B467265 
 5649      715F4D48 
 5649      7A00
 5650              	.LASF108:
 5651 07d1 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5651      656E7365 
 5651      5F476574 
 5651      43656E74 
 5651      726F6964 
 5652              	.LASF19:
 5653 07e9 69646163 		.ascii	"idac2LevelsTbl\000"
 5653      324C6576 
 5653      656C7354 
 5653      626C00
 5654              	.LASF2:
 5655 07f8 73686F72 		.ascii	"short int\000"
 5655      7420696E 
 5655      7400
 5656              	.LASF4:
 5657 0802 6C6F6E67 		.ascii	"long int\000"
 5657      20696E74 
 5657      00
 5658              	.LASF66:
 5659 080b 66697273 		.ascii	"firstSensor\000"
 5659      7453656E 
 5659      736F7200 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 157


 5660              	.LASF100:
 5661 0817 74656D70 		.ascii	"temp\000"
 5661      00
 5662              	.LASF96:
 5663 081c 43617053 		.ascii	"CapSense_FindMaximum\000"
 5663      656E7365 
 5663      5F46696E 
 5663      644D6178 
 5663      696D756D 
 5664              	.LASF23:
 5665 0831 77696467 		.ascii	"widgetNubmersTbl\000"
 5665      65744E75 
 5665      626D6572 
 5665      7354626C 
 5665      00
 5666              	.LASF118:
 5667 0842 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5667      656E7365 
 5667      5F456E61 
 5667      626C6552 
 5667      61774461 
 5668              	.LASF132:
 5669 0860 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5669      656E7365 
 5669      5F6C6F77 
 5669      42617365 
 5669      6C696E65 
 5670              	.LASF107:
 5671 087a 64656E6F 		.ascii	"denominator\000"
 5671      6D696E61 
 5671      746F7200 
 5672              	.LASF31:
 5673 0886 6B56616C 		.ascii	"kValueTbl\000"
 5673      75655462 
 5673      6C00
 5674              	.LASF127:
 5675 0890 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5675      656E7365 
 5675      5F73656E 
 5675      736F7242 
 5675      6173656C 
 5676              	.LASF99:
 5677 08a8 6D617869 		.ascii	"maximum\000"
 5677      6D756D00 
 5678              	.LASF17:
 5679 08b0 73697A65 		.ascii	"sizetype\000"
 5679      74797065 
 5679      00
 5680              	.LASF5:
 5681 08b9 6C6F6E67 		.ascii	"long unsigned int\000"
 5681      20756E73 
 5681      69676E65 
 5681      6420696E 
 5681      7400
 5682              	.LASF47:
 5683 08cb 706F696E 		.ascii	"pointers\000"
 5683      74657273 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 158


 5683      00
 5684              	.LASF61:
 5685 08d4 6E6F6973 		.ascii	"noiseThreshold\000"
 5685      65546872 
 5685      6573686F 
 5685      6C6400
 5686              	.LASF30:
 5687 08e3 70726576 		.ascii	"previousSampleTbl\000"
 5687      696F7573 
 5687      53616D70 
 5687      6C655462 
 5687      6C00
 5688              	.LASF82:
 5689 08f5 43617053 		.ascii	"CapSense_SetDebounce\000"
 5689      656E7365 
 5689      5F536574 
 5689      4465626F 
 5689      756E6365 
 5690              	.LASF87:
 5691 090a 66696E67 		.ascii	"fingerThreshold\000"
 5691      65725468 
 5691      72657368 
 5691      6F6C6400 
 5692              	.LASF21:
 5693 091a 63686172 		.ascii	"chargeDivTbl\000"
 5693      67654469 
 5693      7654626C 
 5693      00
 5694              	.LASF1:
 5695 0927 756E7369 		.ascii	"unsigned char\000"
 5695      676E6564 
 5695      20636861 
 5695      7200
 5696              	.LASF134:
 5697 0935 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5697      656E7365 
 5697      5F6E6F69 
 5697      73655468 
 5697      72657368 
 5698              	.LASF86:
 5699 094d 6465626F 		.ascii	"debounceIndex\000"
 5699      756E6365 
 5699      496E6465 
 5699      7800
 5700              	.LASF52:
 5701 095b 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5701      656E7365 
 5701      5F496E69 
 5701      7469616C 
 5701      697A6541 
 5702              	.LASF70:
 5703 097b 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5703      656E7365 
 5703      5F476574 
 5703      42617365 
 5703      6C696E65 
 5704              	.LASF83:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 159


 5705 0994 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5705      656E7365 
 5705      5F536574 
 5705      4C6F7742 
 5705      6173656C 
 5706              	.LASF20:
 5707 09b1 73656E73 		.ascii	"sensetivityTbl\000"
 5707      65746976 
 5707      69747954 
 5707      626C00
 5708              	.LASF121:
 5709 09c0 43617053 		.ascii	"CapSense_centroidMult\000"
 5709      656E7365 
 5709      5F63656E 
 5709      74726F69 
 5709      644D756C 
 5710              	.LASF144:
 5711 09d6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5711      72617465 
 5711      645F536F 
 5711      75726365 
 5711      5C50536F 
 5712              	.LASF92:
 5713 09fd 73746174 		.ascii	"state\000"
 5713      6500
 5714              	.LASF142:
 5715 0a03 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5715      656E7365 
 5715      5F656E61 
 5715      626C6552 
 5715      61774669 
 5716              	.LASF22:
 5717 0a1d 6D6F6444 		.ascii	"modDivTbl\000"
 5717      69765462 
 5717      6C00
 5718              	.LASF0:
 5719 0a27 7369676E 		.ascii	"signed char\000"
 5719      65642063 
 5719      68617200 
 5720              	.LASF3:
 5721 0a33 73686F72 		.ascii	"short unsigned int\000"
 5721      7420756E 
 5721      7369676E 
 5721      65642069 
 5721      6E7400
 5722              	.LASF109:
 5723 0a46 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5723      656E7365 
 5723      5F476574 
 5723      52616469 
 5723      616C4365 
 5724              	.LASF40:
 5725 0a64 70747253 		.ascii	"ptrSetBitValue\000"
 5725      65744269 
 5725      7456616C 
 5725      756500
 5726              	.LASF113:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccQ0lNOt.s 			page 160


 5727 0a73 43617053 		.ascii	"CapSense_MedianFilter\000"
 5727      656E7365 
 5727      5F4D6564 
 5727      69616E46 
 5727      696C7465 
 5728              	.LASF59:
 5729 0a89 74656D70 		.ascii	"tempRaw\000"
 5729      52617700 
 5730              	.LASF117:
 5731 0a91 43617053 		.ascii	"CapSense_GetDebounce\000"
 5731      656E7365 
 5731      5F476574 
 5731      4465626F 
 5731      756E6365 
 5732              	.LASF89:
 5733 0aa6 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5733      656E7365 
 5733      5F436865 
 5733      636B4973 
 5733      57696467 
 5734              	.LASF9:
 5735 0ac3 75696E74 		.ascii	"uint8\000"
 5735      3800
 5736              	.LASF15:
 5737 0ac9 646F7562 		.ascii	"double\000"
 5737      6C6500
 5738              	.LASF41:
 5739 0ad0 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5739      656E7365 
 5739      5F434F4E 
 5739      4649475F 
 5739      54595045 
 5740              	.LASF140:
 5741 0af7 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5741      656E7365 
 5741      5F726177 
 5741      46696C74 
 5741      65724461 
 5742              	.LASF105:
 5743 0b0f 706F7369 		.ascii	"position\000"
 5743      74696F6E 
 5743      00
 5744              	.LASF130:
 5745 0b18 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5745      656E7365 
 5745      5F73656E 
 5745      736F724F 
 5745      6E4D6173 
 5746              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
