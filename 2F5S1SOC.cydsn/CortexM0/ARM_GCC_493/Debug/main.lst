ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cache
  18              		.bss
  19              		.align	2
  20              		.type	cache, %object
  21              		.size	cache, 128
  22              	cache:
  23 0000 00000000 		.space	128
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	update
  25              		.align	2
  26              		.type	update, %object
  27              		.size	update, 128
  28              	update:
  29 0080 00000000 		.space	128
  29      00000000 
  29      00000000 
  29      00000000 
  29      00000000 
  30              		.comm	curPos1,2,2
  31              		.comm	oldCurPos1,2,2
  32              		.comm	curPos2,2,2
  33              		.comm	oldCurPos2,2,2
  34              		.comm	sock1,4,4
  35              		.comm	but1,4,4
  36              		.comm	but2,4,4
  37              		.comm	but3,4,4
  38              		.comm	but4,4,4
  39              		.comm	but5,4,4
  40              		.comm	oldSock1,4,4
  41              		.comm	oldBut1,4,4
  42              		.comm	oldBut2,4,4
  43              		.comm	oldBut3,4,4
  44              		.comm	oldBut4,4,4
  45              		.comm	oldBut5,4,4
  46              		.comm	temp1,1,1
  47              		.comm	temp2,1,1
  48              		.comm	temp3,1,1
  49              		.comm	temp4,1,1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 2


  50              		.comm	temp5,1,1
  51              		.comm	temp6,1,1
  52              		.comm	i2cReadBuffer,2,4
  53              		.comm	i2cWriteBuffer,4,4
  54              		.global	compare
  55              		.data
  56              		.align	2
  57              		.type	compare, %object
  58              		.size	compare, 2
  59              	compare:
  60 0000 52       		.byte	82
  61 0001 44       		.byte	68
  62 0002 0000     		.section	.rodata
  63              		.align	2
  64              	.LC3:
  65 0000 72657365 		.ascii	"reset\015\012\000"
  65      740D0A00 
  66              		.align	2
  67              	.LC6:
  68 0008 72657365 		.ascii	"reset completed\012\015\000"
  68      7420636F 
  68      6D706C65 
  68      7465640A 
  68      0D00
  69              		.section	.text.main,"ax",%progbits
  70              		.align	2
  71              		.global	main
  72              		.code	16
  73              		.thumb_func
  74              		.type	main, %function
  75              	main:
  76              	.LFB36:
  77              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.30
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  The project explains the usage of CapSense CSD component. The 2 buttons and
   8:main.c        **** *  linear sliders are used as sensing elements. LED displays buttons active
   9:main.c        **** *  state and slider position is shown on LCD.
  10:main.c        **** *
  11:main.c        **** ********************************************************************************
  12:main.c        **** * Copyright 2013, Cypress Semiconductor Corporation. All rights reserved.
  13:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  14:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  15:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  16:main.c        **** * accompanying the software package from which you obtained this software.
  17:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  18:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  19:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  20:main.c        **** *******************************************************************************/
  21:main.c        **** 
  22:main.c        **** #include <main.h>
  23:main.c        **** #include <CyFlash.h>
  24:main.c        **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 3


  25:main.c        **** /* CapSense Slider resoluton is set to 127 (7 bits).
  26:main.c        **** *  Since PWM has 16 bit resolution, slider position value should be shifted left
  27:main.c        **** *  by 9 bits.
  28:main.c        **** */
  29:main.c        **** #define SLIDER_POS_TO_COMPARE_SHIFT    (9u)
  30:main.c        **** 
  31:main.c        **** /* WDT counter configuration */
  32:main.c        **** #define WDT_COUNT0_MATCH    (0x0FFFu)
  33:main.c        **** #define WDT_COUNT1_MATCH    (0x0008u)
  34:main.c        **** 
  35:main.c        **** /* Prototype of WDT ISR */
  36:main.c        **** CY_ISR_PROTO(WdtIsrHandler);
  37:main.c        **** 
  38:main.c        **** /*Defining a Flash Row ,that is to be used for caching the latest status*/
  39:main.c        **** /* Defines second ROW from the last ROW */
  40:main.c        **** #define CY_TEST_FLASH_ROW       (CY_FLASH_NUMBER_ROWS - 2u)
  41:main.c        **** 
  42:main.c        **** /* Defines absolut address of ROW */
  43:main.c        **** #define CY_TEST_FLASH_ADDR      (CY_TEST_FLASH_ROW * CY_FLASH_SIZEOF_ROW)
  44:main.c        **** 
  45:main.c        **** /* Defines ID of the array to write */
  46:main.c        **** #define ARRAY_ID                ((uint8)(CY_TEST_FLASH_ROW / CY_FLASH_SIZEOF_ROW))
  47:main.c        **** 
  48:main.c        **** /* Defines second ROW from the last ROW in the defined array */
  49:main.c        **** #define ARRAY_ID_ROW_ADDR   ((uint16)(CY_FLASH_SIZEOF_ROW - 2u))
  50:main.c        **** 
  51:main.c        **** uint8 cache[CY_FLASH_SIZEOF_ROW]={0};
  52:main.c        **** uint8 update[CY_FLASH_SIZEOF_ROW]={0};
  53:main.c        **** uint16 curPos1, oldCurPos1, curPos2, oldCurPos2;
  54:main.c        **** uint32 sock1, but1, but2, but3, but4, but5, oldSock1, oldBut1, oldBut2, oldBut3, oldBut4, oldBut5;
  55:main.c        **** uint8 temp1,temp2,temp3,temp4,temp5,temp6;
  56:main.c        **** 
  57:main.c        **** /* I2C slave read and write buffers */
  58:main.c        **** //uint8 i2cReadBuffer [BUFFER_SIZE] = {PACKET_SOP, STS_CMD_FAIL, PACKET_EOP};
  59:main.c        **** uint8 i2cReadBuffer [READ_BUFFER_SIZE]; // we need to change this value according to our pwm buffer
  60:main.c        **** uint8 i2cWriteBuffer[WRITE_BUFFER_SIZE];
  61:main.c        **** 
  62:main.c        **** uint8 compare[2]={0x52,0x44};
  63:main.c        ****                   /*R ,D*/
  64:main.c        **** 
  65:main.c        **** /*******************************************************************************
  66:main.c        **** * Function Name: main
  67:main.c        **** ********************************************************************************
  68:main.c        **** * Summary:
  69:main.c        **** *  Main function performs following functions:
  70:main.c        **** *   1. Enable global interrupts.
  71:main.c        **** *   2. Initialize CapSense CSD and Start the sensor scanning loop.
  72:main.c        **** *   3. Process scanning results and display it on with LEDs.
  73:main.c        **** *
  74:main.c        **** * Parameters:
  75:main.c        **** *  None
  76:main.c        **** *
  77:main.c        **** * Return:
  78:main.c        **** *  None
  79:main.c        **** *
  80:main.c        **** *******************************************************************************/
  81:main.c        **** int main()
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 4


  82:main.c        **** {   uint8 i;
  78              		.loc 1 82 0
  79              		.cfi_startproc
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
  83:main.c        ****     
  84:main.c        ****     /* Start UART(SCB mode)*/ 
  85:main.c        ****     UART_Start();
  88              		.loc 1 85 0
  89 0006 FFF7FEFF 		bl	UART_Start
  86:main.c        ****     
  87:main.c        ****     /* Start I2C slave (SCB mode) */
  88:main.c        ****     I2C_Slave_I2CSlaveInitReadBuf(i2cReadBuffer, READ_BUFFER_SIZE);
  90              		.loc 1 88 0
  91 000a 984B     		ldr	r3, .L25
  92 000c 181C     		mov	r0, r3
  93 000e 0221     		mov	r1, #2
  94 0010 FFF7FEFF 		bl	I2C_Slave_I2CSlaveInitReadBuf
  89:main.c        ****     I2C_Slave_I2CSlaveInitWriteBuf(i2cWriteBuffer, WRITE_BUFFER_SIZE);
  95              		.loc 1 89 0
  96 0014 964B     		ldr	r3, .L25+4
  97 0016 181C     		mov	r0, r3
  98 0018 0421     		mov	r1, #4
  99 001a FFF7FEFF 		bl	I2C_Slave_I2CSlaveInitWriteBuf
  90:main.c        ****     I2C_Slave_Start();
 100              		.loc 1 90 0
 101 001e FFF7FEFF 		bl	I2C_Slave_Start
  91:main.c        ****    
  92:main.c        ****     /* Enable global interrupts */
  93:main.c        ****     CyGlobalIntEnable;
 102              		.loc 1 93 0
 103              	@ 93 "main.c" 1
 104 0022 62B6     		CPSIE   i
 105              	@ 0 "" 2
  94:main.c        **** 
  95:main.c        ****     /* Start PWM and CapSense components */
  96:main.c        ****     LED_CONTROL1_Start();
 106              		.loc 1 96 0
 107              		.code	16
 108 0024 FFF7FEFF 		bl	LED_CONTROL1_Start
  97:main.c        ****     LED_CONTROL2_Start();
 109              		.loc 1 97 0
 110 0028 FFF7FEFF 		bl	LED_CONTROL2_Start
  98:main.c        **** 
  99:main.c        ****     CapSense_Start();
 111              		.loc 1 99 0
 112 002c FFF7FEFF 		bl	CapSense_Start
 100:main.c        **** 
 101:main.c        ****     /* Initialize baselines */
 102:main.c        ****     CapSense_InitializeAllBaselines();
 113              		.loc 1 102 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 5


 114 0030 FFF7FEFF 		bl	CapSense_InitializeAllBaselines
 103:main.c        ****    
 104:main.c        ****     //UART_UartPutString("UPDATING THE STATUS \n\r");
 105:main.c        ****     
 106:main.c        ****     /* Reading from the Flash memory and setting up the widgets to previous status(status before th
 107:main.c        ****     for(i=0;i<8;i++){
 115              		.loc 1 107 0
 116 0034 FB1D     		add	r3, r7, #7
 117 0036 0022     		mov	r2, #0
 118 0038 1A70     		strb	r2, [r3]
 119 003a 0EE0     		b	.L2
 120              	.L3:
 108:main.c        ****         update[i]=(*((uint8 *) (CY_TEST_FLASH_ADDR + i)));
 121              		.loc 1 108 0 discriminator 3
 122 003c FB1D     		add	r3, r7, #7
 123 003e 1B78     		ldrb	r3, [r3]
 124 0040 FA1D     		add	r2, r7, #7
 125 0042 1278     		ldrb	r2, [r2]
 126 0044 8B49     		ldr	r1, .L25+8
 127 0046 8C46     		mov	ip, r1
 128 0048 6244     		add	r2, r2, ip
 129 004a 1178     		ldrb	r1, [r2]
 130 004c 8A4A     		ldr	r2, .L25+12
 131 004e D154     		strb	r1, [r2, r3]
 107:main.c        ****         update[i]=(*((uint8 *) (CY_TEST_FLASH_ADDR + i)));
 132              		.loc 1 107 0 discriminator 3
 133 0050 FB1D     		add	r3, r7, #7
 134 0052 1A78     		ldrb	r2, [r3]
 135 0054 FB1D     		add	r3, r7, #7
 136 0056 0132     		add	r2, r2, #1
 137 0058 1A70     		strb	r2, [r3]
 138              	.L2:
 107:main.c        ****         update[i]=(*((uint8 *) (CY_TEST_FLASH_ADDR + i)));
 139              		.loc 1 107 0 is_stmt 0 discriminator 1
 140 005a FB1D     		add	r3, r7, #7
 141 005c 1B78     		ldrb	r3, [r3]
 142 005e 072B     		cmp	r3, #7
 143 0060 ECD9     		bls	.L3
 109:main.c        ****     }
 110:main.c        ****       
 111:main.c        ****     for(i=0;i<8;i++){
 144              		.loc 1 111 0 is_stmt 1
 145 0062 FB1D     		add	r3, r7, #7
 146 0064 0022     		mov	r2, #0
 147 0066 1A70     		strb	r2, [r3]
 148 0068 11E0     		b	.L4
 149              	.L5:
 112:main.c        ****        //UART_UartPutChar(update[i]); 
 113:main.c        ****        //UART_UartPutString("\n\r");
 114:main.c        ****        ExecuteCommand(i,update[i]);
 150              		.loc 1 114 0 discriminator 3
 151 006a FB1D     		add	r3, r7, #7
 152 006c 1978     		ldrb	r1, [r3]
 153 006e FB1D     		add	r3, r7, #7
 154 0070 1B78     		ldrb	r3, [r3]
 155 0072 814A     		ldr	r2, .L25+12
 156 0074 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 6


 157 0076 081C     		mov	r0, r1
 158 0078 191C     		mov	r1, r3
 159 007a FFF7FEFF 		bl	ExecuteCommand
 115:main.c        ****        CyDelay(50);
 160              		.loc 1 115 0 discriminator 3
 161 007e 3220     		mov	r0, #50
 162 0080 FFF7FEFF 		bl	CyDelay
 111:main.c        ****        //UART_UartPutChar(update[i]); 
 163              		.loc 1 111 0 discriminator 3
 164 0084 FB1D     		add	r3, r7, #7
 165 0086 1A78     		ldrb	r2, [r3]
 166 0088 FB1D     		add	r3, r7, #7
 167 008a 0132     		add	r2, r2, #1
 168 008c 1A70     		strb	r2, [r3]
 169              	.L4:
 111:main.c        ****        //UART_UartPutChar(update[i]); 
 170              		.loc 1 111 0 is_stmt 0 discriminator 1
 171 008e FB1D     		add	r3, r7, #7
 172 0090 1B78     		ldrb	r3, [r3]
 173 0092 072B     		cmp	r3, #7
 174 0094 E9D9     		bls	.L5
 175              	.L24:
 116:main.c        ****     }
 117:main.c        ****     //UART_UartPutString("update finihsed \n\r");
 118:main.c        ****     
 119:main.c        ****     
 120:main.c        ****     //Capsense Loop
 121:main.c        ****     //UART_UartPutString("Main Loop Started \n\r");
 122:main.c        ****     while(1u)
 123:main.c        ****     {   //CyDelay(100);
 124:main.c        ****         //UART_UartPutString("before I2C_Slave_I2CSlaveStatus \n\r");
 125:main.c        ****         
 126:main.c        ****         /* Write complete: parse command packet */
 127:main.c        ****         if (0u != (I2C_Slave_I2CSlaveStatus() & I2C_Slave_I2C_SSTAT_WR_CMPLT))
 176              		.loc 1 127 0 is_stmt 1
 177 0096 FFF7FEFF 		bl	I2C_Slave_I2CSlaveStatus
 178 009a 021C     		mov	r2, r0
 179 009c 1023     		mov	r3, #16
 180 009e 1340     		and	r3, r2
 181 00a0 00D1     		bne	.LCB90
 182 00a2 CEE0     		b	.L6	@long jump
 183              	.LCB90:
 128:main.c        ****         {
 129:main.c        ****            // UART_UartPutString("inside I2C_Slave_I2CSlaveStatus \n\r");
 130:main.c        ****             
 131:main.c        ****             /* Check packet length */
 132:main.c        ****             if (1u <= I2C_Slave_I2CSlaveGetWriteBufSize())
 184              		.loc 1 132 0
 185 00a4 FFF7FEFF 		bl	I2C_Slave_I2CSlaveGetWriteBufSize
 186 00a8 031E     		sub	r3, r0, #0
 187 00aa 00D1     		bne	.LCB94
 188 00ac C5E0     		b	.L7	@long jump
 189              	.LCB94:
 190              	.LBB2:
 133:main.c        ****             {
 134:main.c        ****                 //UART_UartPutString("inside I2C_Slave_I2CSlaveGetWriteBufSize \n\r");
 135:main.c        ****                 //UART_UartPutString("before ExecuteCommand \n\r");
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 7


 136:main.c        ****                 //UART_UartPutString("String cmp pass \n\r");
 137:main.c        ****                 
 138:main.c        ****                 /*Sendind master a ready ack*/
 139:main.c        ****                 char8 temp = i2cWriteBuffer[0];
 191              		.loc 1 139 0
 192 00ae 704B     		ldr	r3, .L25+4
 193 00b0 1A78     		ldrb	r2, [r3]
 194 00b2 BB1D     		add	r3, r7, #6
 195 00b4 1A70     		strb	r2, [r3]
 140:main.c        ****                 char8 temp2 = i2cWriteBuffer[1];
 196              		.loc 1 140 0
 197 00b6 6E4B     		ldr	r3, .L25+4
 198 00b8 5A78     		ldrb	r2, [r3, #1]
 199 00ba 7B1D     		add	r3, r7, #5
 200 00bc 1A70     		strb	r2, [r3]
 141:main.c        ****                     UART_UartPutString(&temp);
 201              		.loc 1 141 0
 202 00be BB1D     		add	r3, r7, #6
 203 00c0 181C     		mov	r0, r3
 204 00c2 FFF7FEFF 		bl	UART_UartPutString
 142:main.c        ****                     UART_UartPutString(&temp2);
 205              		.loc 1 142 0
 206 00c6 7B1D     		add	r3, r7, #5
 207 00c8 181C     		mov	r0, r3
 208 00ca FFF7FEFF 		bl	UART_UartPutString
 143:main.c        ****                 
 144:main.c        ****                 if(i2cWriteBuffer[0]==0x52 && i2cWriteBuffer[1]==0x44 )
 209              		.loc 1 144 0
 210 00ce 684B     		ldr	r3, .L25+4
 211 00d0 1B78     		ldrb	r3, [r3]
 212 00d2 522B     		cmp	r3, #82
 213 00d4 1CD1     		bne	.L8
 214              		.loc 1 144 0 is_stmt 0 discriminator 1
 215 00d6 664B     		ldr	r3, .L25+4
 216 00d8 5B78     		ldrb	r3, [r3, #1]
 217 00da 442B     		cmp	r3, #68
 218 00dc 18D1     		bne	.L8
 145:main.c        ****                 {   
 146:main.c        ****                     //UART_UartPutString("ready ack sent \n\r");
 147:main.c        ****                     
 148:main.c        ****                     i2cReadBuffer[0] = 0x52;
 219              		.loc 1 148 0 is_stmt 1
 220 00de 634B     		ldr	r3, .L25
 221 00e0 5222     		mov	r2, #82
 222 00e2 1A70     		strb	r2, [r3]
 149:main.c        ****                     i2cReadBuffer[1] = 0x44;
 223              		.loc 1 149 0
 224 00e4 614B     		ldr	r3, .L25
 225 00e6 4422     		mov	r2, #68
 226 00e8 5A70     		strb	r2, [r3, #1]
 150:main.c        ****                     
 151:main.c        ****                     InterPin_Write(~InterPin_Read());
 227              		.loc 1 151 0
 228 00ea FFF7FEFF 		bl	InterPin_Read
 229 00ee 031C     		mov	r3, r0
 230 00f0 DB43     		mvn	r3, r3
 231 00f2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 8


 232 00f4 181C     		mov	r0, r3
 233 00f6 FFF7FEFF 		bl	InterPin_Write
 152:main.c        ****                     CyDelay(100);
 234              		.loc 1 152 0
 235 00fa 6420     		mov	r0, #100
 236 00fc FFF7FEFF 		bl	CyDelay
 153:main.c        ****                     InterPin_Write(~InterPin_Read());
 237              		.loc 1 153 0
 238 0100 FFF7FEFF 		bl	InterPin_Read
 239 0104 031C     		mov	r3, r0
 240 0106 DB43     		mvn	r3, r3
 241 0108 DBB2     		uxtb	r3, r3
 242 010a 181C     		mov	r0, r3
 243 010c FFF7FEFF 		bl	InterPin_Write
 244              	.L8:
 154:main.c        ****                     
 155:main.c        ****                 }
 156:main.c        ****                 if(i2cWriteBuffer[0]==0x52 && i2cWriteBuffer[1]==0x53 )
 245              		.loc 1 156 0
 246 0110 574B     		ldr	r3, .L25+4
 247 0112 1B78     		ldrb	r3, [r3]
 248 0114 522B     		cmp	r3, #82
 249 0116 3AD1     		bne	.L9
 250              		.loc 1 156 0 is_stmt 0 discriminator 1
 251 0118 554B     		ldr	r3, .L25+4
 252 011a 5B78     		ldrb	r3, [r3, #1]
 253 011c 532B     		cmp	r3, #83
 254 011e 36D1     		bne	.L9
 157:main.c        ****                 {   
 158:main.c        ****                     UART_UartPutString("reset\r\n");
 255              		.loc 1 158 0 is_stmt 1
 256 0120 564B     		ldr	r3, .L25+16
 257 0122 181C     		mov	r0, r3
 258 0124 FFF7FEFF 		bl	UART_UartPutString
 159:main.c        ****                    /* Setup ISR for interrupts at WDT counter 0 events. */
 160:main.c        ****     WdtIsr_StartEx(WdtIsrHandler);
 259              		.loc 1 160 0
 260 0128 554B     		ldr	r3, .L25+20
 261 012a 181C     		mov	r0, r3
 262 012c FFF7FEFF 		bl	WdtIsr_StartEx
 161:main.c        **** 
 162:main.c        **** 	/* Set WDT counter 0 to generate interrupt on match */
 163:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_INT);
 263              		.loc 1 163 0
 264 0130 0020     		mov	r0, #0
 265 0132 0121     		mov	r1, #1
 266 0134 FFF7FEFF 		bl	CySysWdtSetMode
 164:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER0, WDT_COUNT0_MATCH);
 267              		.loc 1 164 0
 268 0138 524B     		ldr	r3, .L25+24
 269 013a 0020     		mov	r0, #0
 270 013c 191C     		mov	r1, r3
 271 013e FFF7FEFF 		bl	CySysWdtSetMatch
 165:main.c        **** 	CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER0, 1u);
 272              		.loc 1 165 0
 273 0142 0020     		mov	r0, #0
 274 0144 0121     		mov	r1, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 9


 275 0146 FFF7FEFF 		bl	CySysWdtSetClearOnMatch
 166:main.c        **** 	
 167:main.c        **** 	/* Enable WDT counters 0 and 1 cascade */
 168:main.c        **** 	CySysWdtWriteCascade(CY_SYS_WDT_CASCADE_01);
 276              		.loc 1 168 0
 277 014a 0820     		mov	r0, #8
 278 014c FFF7FEFF 		bl	CySysWdtSetCascade
 169:main.c        ****     
 170:main.c        **** 	/* Set WDT counter 1 to generate reset on match */
 171:main.c        **** 	CySysWdtWriteMatch(CY_SYS_WDT_COUNTER1, WDT_COUNT1_MATCH);
 279              		.loc 1 171 0
 280 0150 0120     		mov	r0, #1
 281 0152 0821     		mov	r1, #8
 282 0154 FFF7FEFF 		bl	CySysWdtSetMatch
 172:main.c        **** 	CySysWdtWriteMode(CY_SYS_WDT_COUNTER1, CY_SYS_WDT_MODE_RESET);
 283              		.loc 1 172 0
 284 0158 0120     		mov	r0, #1
 285 015a 0221     		mov	r1, #2
 286 015c FFF7FEFF 		bl	CySysWdtSetMode
 173:main.c        ****     CySysWdtWriteClearOnMatch(CY_SYS_WDT_COUNTER1, 1u);
 287              		.loc 1 173 0
 288 0160 0120     		mov	r0, #1
 289 0162 0121     		mov	r1, #1
 290 0164 FFF7FEFF 		bl	CySysWdtSetClearOnMatch
 174:main.c        **** 	
 175:main.c        **** 	/* Enable WDT counters 0 and 1 */
 176:main.c        **** 	CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK | CY_SYS_WDT_COUNTER1_MASK);
 291              		.loc 1 176 0
 292 0168 0223     		mov	r3, #2
 293 016a FF33     		add	r3, r3, #255
 294 016c 181C     		mov	r0, r3
 295 016e FFF7FEFF 		bl	CySysWdtEnable
 177:main.c        **** 	
 178:main.c        **** 	/* Lock WDT registers and try to disable WDT counters 0 and 1 */
 179:main.c        **** 	CySysWdtLock();
 296              		.loc 1 179 0
 297 0172 FFF7FEFF 		bl	CySysWdtLock
 180:main.c        **** 	CySysWdtDisable(CY_SYS_WDT_COUNTER1_MASK);
 298              		.loc 1 180 0
 299 0176 8023     		mov	r3, #128
 300 0178 5B00     		lsl	r3, r3, #1
 301 017a 181C     		mov	r0, r3
 302 017c FFF7FEFF 		bl	CySysWdtDisable
 181:main.c        **** 	CySysWdtUnlock();
 303              		.loc 1 181 0
 304 0180 FFF7FEFF 		bl	CySysWdtUnlock
 182:main.c        ****                     
 183:main.c        ****                     UART_UartPutString("reset completed\n\r");
 305              		.loc 1 183 0
 306 0184 404B     		ldr	r3, .L25+28
 307 0186 181C     		mov	r0, r3
 308 0188 FFF7FEFF 		bl	UART_UartPutString
 309 018c 55E0     		b	.L7
 310              	.L9:
 184:main.c        ****                     
 185:main.c        ****                 }
 186:main.c        ****                 /*Sending data according to master request*/
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 10


 187:main.c        ****                 else if( i2cWriteBuffer[1]==0x72)
 311              		.loc 1 187 0
 312 018e 384B     		ldr	r3, .L25+4
 313 0190 5B78     		ldrb	r3, [r3, #1]
 314 0192 722B     		cmp	r3, #114
 315 0194 48D1     		bne	.L11
 188:main.c        ****                 {   i2cReadBuffer[0] = i2cWriteBuffer[0];
 316              		.loc 1 188 0
 317 0196 364B     		ldr	r3, .L25+4
 318 0198 1A78     		ldrb	r2, [r3]
 319 019a 344B     		ldr	r3, .L25
 320 019c 1A70     		strb	r2, [r3]
 189:main.c        ****                     switch(i2cWriteBuffer[1])
 321              		.loc 1 189 0
 322 019e 344B     		ldr	r3, .L25+4
 323 01a0 5B78     		ldrb	r3, [r3, #1]
 324 01a2 072B     		cmp	r3, #7
 325 01a4 2CD8     		bhi	.L12
 326 01a6 9A00     		lsl	r2, r3, #2
 327 01a8 384B     		ldr	r3, .L25+32
 328 01aa D318     		add	r3, r2, r3
 329 01ac 1B68     		ldr	r3, [r3]
 330 01ae 9F46     		mov	pc, r3
 331              		.section	.rodata
 332 001a 0000     		.align	2
 333              	.L14:
 334 001c B0010000 		.word	.L13
 335 0020 BA010000 		.word	.L15
 336 0024 C4010000 		.word	.L16
 337 0028 CE010000 		.word	.L17
 338 002c D8010000 		.word	.L18
 339 0030 E2010000 		.word	.L19
 340 0034 EC010000 		.word	.L20
 341 0038 F6010000 		.word	.L21
 342              		.section	.text.main
 343              	.L13:
 190:main.c        ****                     {
 191:main.c        ****                         case FAN1: i2cReadBuffer[1]=update[FAN1];
 344              		.loc 1 191 0
 345 01b0 314B     		ldr	r3, .L25+12
 346 01b2 1A78     		ldrb	r2, [r3]
 347 01b4 2D4B     		ldr	r3, .L25
 348 01b6 5A70     		strb	r2, [r3, #1]
 192:main.c        ****                                     break;
 349              		.loc 1 192 0
 350 01b8 22E0     		b	.L12
 351              	.L15:
 193:main.c        ****                         case FAN2: i2cReadBuffer[1]=update[FAN2];
 352              		.loc 1 193 0
 353 01ba 2F4B     		ldr	r3, .L25+12
 354 01bc 5A78     		ldrb	r2, [r3, #1]
 355 01be 2B4B     		ldr	r3, .L25
 356 01c0 5A70     		strb	r2, [r3, #1]
 194:main.c        ****                                     break;
 357              		.loc 1 194 0
 358 01c2 1DE0     		b	.L12
 359              	.L16:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 11


 195:main.c        ****                         case SWITCH1:i2cReadBuffer[1]=update[SWITCH1];
 360              		.loc 1 195 0
 361 01c4 2C4B     		ldr	r3, .L25+12
 362 01c6 9A78     		ldrb	r2, [r3, #2]
 363 01c8 284B     		ldr	r3, .L25
 364 01ca 5A70     		strb	r2, [r3, #1]
 196:main.c        ****                                     break;
 365              		.loc 1 196 0
 366 01cc 18E0     		b	.L12
 367              	.L17:
 197:main.c        ****                         case SWITCH2:i2cReadBuffer[1]=update[SWITCH2];
 368              		.loc 1 197 0
 369 01ce 2A4B     		ldr	r3, .L25+12
 370 01d0 DA78     		ldrb	r2, [r3, #3]
 371 01d2 264B     		ldr	r3, .L25
 372 01d4 5A70     		strb	r2, [r3, #1]
 198:main.c        ****                                     break;
 373              		.loc 1 198 0
 374 01d6 13E0     		b	.L12
 375              	.L18:
 199:main.c        ****                         case SWITCH3:i2cReadBuffer[1]=update[SWITCH3];
 376              		.loc 1 199 0
 377 01d8 274B     		ldr	r3, .L25+12
 378 01da 1A79     		ldrb	r2, [r3, #4]
 379 01dc 234B     		ldr	r3, .L25
 380 01de 5A70     		strb	r2, [r3, #1]
 200:main.c        ****                                     break;
 381              		.loc 1 200 0
 382 01e0 0EE0     		b	.L12
 383              	.L19:
 201:main.c        ****                         case SWITCH4:i2cReadBuffer[1]=update[SWITCH4];
 384              		.loc 1 201 0
 385 01e2 254B     		ldr	r3, .L25+12
 386 01e4 5A79     		ldrb	r2, [r3, #5]
 387 01e6 214B     		ldr	r3, .L25
 388 01e8 5A70     		strb	r2, [r3, #1]
 202:main.c        ****                                     break;
 389              		.loc 1 202 0
 390 01ea 09E0     		b	.L12
 391              	.L20:
 203:main.c        ****                         case SWITCH5:i2cReadBuffer[1]=update[SWITCH5];
 392              		.loc 1 203 0
 393 01ec 224B     		ldr	r3, .L25+12
 394 01ee 9A79     		ldrb	r2, [r3, #6]
 395 01f0 1E4B     		ldr	r3, .L25
 396 01f2 5A70     		strb	r2, [r3, #1]
 204:main.c        ****                                     break;
 397              		.loc 1 204 0
 398 01f4 04E0     		b	.L12
 399              	.L21:
 205:main.c        ****                         case SOCKET1:i2cReadBuffer[1]=update[SOCKET1];
 400              		.loc 1 205 0
 401 01f6 204B     		ldr	r3, .L25+12
 402 01f8 DA79     		ldrb	r2, [r3, #7]
 403 01fa 1C4B     		ldr	r3, .L25
 404 01fc 5A70     		strb	r2, [r3, #1]
 206:main.c        ****                                     break;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 12


 405              		.loc 1 206 0
 406 01fe C046     		mov	r8, r8
 407              	.L12:
 207:main.c        ****                     }
 208:main.c        ****                     InterPin_Write(~InterPin_Read());
 408              		.loc 1 208 0
 409 0200 FFF7FEFF 		bl	InterPin_Read
 410 0204 031C     		mov	r3, r0
 411 0206 DB43     		mvn	r3, r3
 412 0208 DBB2     		uxtb	r3, r3
 413 020a 181C     		mov	r0, r3
 414 020c FFF7FEFF 		bl	InterPin_Write
 209:main.c        ****                     CyDelay(50);
 415              		.loc 1 209 0
 416 0210 3220     		mov	r0, #50
 417 0212 FFF7FEFF 		bl	CyDelay
 210:main.c        ****                     InterPin_Write(~InterPin_Read());
 418              		.loc 1 210 0
 419 0216 FFF7FEFF 		bl	InterPin_Read
 420 021a 031C     		mov	r3, r0
 421 021c DB43     		mvn	r3, r3
 422 021e DBB2     		uxtb	r3, r3
 423 0220 181C     		mov	r0, r3
 424 0222 FFF7FEFF 		bl	InterPin_Write
 425 0226 08E0     		b	.L7
 426              	.L11:
 211:main.c        ****                     
 212:main.c        ****                 }
 213:main.c        ****                else
 214:main.c        ****                 {
 215:main.c        ****                 //UART_UartPutString("excecuting the master commands \n\r");
 216:main.c        ****                 ExecuteCommand(i2cWriteBuffer[0], i2cWriteBuffer[1]);
 427              		.loc 1 216 0
 428 0228 114B     		ldr	r3, .L25+4
 429 022a 1B78     		ldrb	r3, [r3]
 430 022c 1A1C     		mov	r2, r3
 431 022e 104B     		ldr	r3, .L25+4
 432 0230 5B78     		ldrb	r3, [r3, #1]
 433 0232 101C     		mov	r0, r2
 434 0234 191C     		mov	r1, r3
 435 0236 FFF7FEFF 		bl	ExecuteCommand
 436              	.L7:
 437              	.LBE2:
 217:main.c        ****                 }
 218:main.c        ****             }
 219:main.c        **** 
 220:main.c        ****             /* Clear slave write buffer and status */
 221:main.c        ****             I2C_Slave_I2CSlaveClearWriteBuf();
 438              		.loc 1 221 0
 439 023a FFF7FEFF 		bl	I2C_Slave_I2CSlaveClearWriteBuf
 222:main.c        ****             (void) I2C_Slave_I2CSlaveClearWriteStatus();
 440              		.loc 1 222 0
 441 023e FFF7FEFF 		bl	I2C_Slave_I2CSlaveClearWriteStatus
 442              	.L6:
 223:main.c        ****         }
 224:main.c        **** 
 225:main.c        **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 13


 226:main.c        ****         /* Read complete: expose buffer to master */
 227:main.c        ****         if (0u != (I2C_Slave_I2CSlaveStatus() & I2C_Slave_I2C_SSTAT_RD_CMPLT))
 443              		.loc 1 227 0
 444 0242 FFF7FEFF 		bl	I2C_Slave_I2CSlaveStatus
 445 0246 021C     		mov	r2, r0
 446 0248 0123     		mov	r3, #1
 447 024a 1340     		and	r3, r2
 448 024c 03D0     		beq	.L22
 228:main.c        ****         {
 229:main.c        ****             /* Clear slave read buffer and status */
 230:main.c        ****             I2C_Slave_I2CSlaveClearReadBuf();
 449              		.loc 1 230 0
 450 024e FFF7FEFF 		bl	I2C_Slave_I2CSlaveClearReadBuf
 231:main.c        ****             (void) I2C_Slave_I2CSlaveClearReadStatus();
 451              		.loc 1 231 0
 452 0252 FFF7FEFF 		bl	I2C_Slave_I2CSlaveClearReadStatus
 453              	.L22:
 232:main.c        ****         }
 233:main.c        ****         
 234:main.c        ****         /* Check whether the scanning of all enabled widgets is completed. */
 235:main.c        ****         if(0u == CapSense_IsBusy())
 454              		.loc 1 235 0
 455 0256 FFF7FEFF 		bl	CapSense_IsBusy
 456 025a 031E     		sub	r3, r0, #0
 457 025c 03D1     		bne	.L23
 236:main.c        ****        
 237:main.c        ****         {   // UART_UartPutString("Capsense");
 238:main.c        ****             /* Update all baselines */
 239:main.c        ****             CapSense_UpdateEnabledBaselines();
 458              		.loc 1 239 0
 459 025e FFF7FEFF 		bl	CapSense_UpdateEnabledBaselines
 240:main.c        **** 
 241:main.c        ****             /* Start scanning all enabled sensors */
 242:main.c        ****             CapSense_ScanEnabledWidgets();
 460              		.loc 1 242 0
 461 0262 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 462              	.L23:
 243:main.c        ****         }
 244:main.c        **** 
 245:main.c        ****         /* Display CapSense state using LEDs */
 246:main.c        ****         //UART_UartPutString("touch on the panel \n\r");
 247:main.c        ****         CapSense_DisplayState();
 463              		.loc 1 247 0
 464 0266 FFF7FEFF 		bl	CapSense_DisplayState
 248:main.c        ****        
 249:main.c        ****     }
 465              		.loc 1 249 0
 466 026a 14E7     		b	.L24
 467              	.L26:
 468              		.align	2
 469              	.L25:
 470 026c 00000000 		.word	i2cReadBuffer
 471 0270 00000000 		.word	i2cWriteBuffer
 472 0274 00FF0100 		.word	130816
 473 0278 00000000 		.word	update
 474 027c 00000000 		.word	.LC3
 475 0280 00000000 		.word	WdtIsrHandler
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 14


 476 0284 FF0F0000 		.word	4095
 477 0288 08000000 		.word	.LC6
 478 028c 1C000000 		.word	.L14
 479              		.cfi_endproc
 480              	.LFE36:
 481              		.size	main, .-main
 482              		.section	.text.CapSense_DisplayState,"ax",%progbits
 483              		.align	2
 484              		.global	CapSense_DisplayState
 485              		.code	16
 486              		.thumb_func
 487              		.type	CapSense_DisplayState, %function
 488              	CapSense_DisplayState:
 489              	.LFB37:
 250:main.c        **** }
 251:main.c        **** 
 252:main.c        **** /*******************************************************************************
 253:main.c        **** * Function Name: CapSense_DisplayState
 254:main.c        **** ********************************************************************************
 255:main.c        **** * Summary:
 256:main.c        **** *  Changes LEDs brightness by changing the duty cycle of PWM signals.
 257:main.c        **** *
 258:main.c        **** * Parameters:
 259:main.c        **** *  None
 260:main.c        **** *
 261:main.c        **** * Return:
 262:main.c        **** *  None
 263:main.c        **** *
 264:main.c        **** *******************************************************************************/
 265:main.c        **** void CapSense_DisplayState(void)
 266:main.c        **** {
 490              		.loc 1 266 0
 491              		.cfi_startproc
 492 0000 80B5     		push	{r7, lr}
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 267:main.c        ****     /* Find Radial Slider Position */
 268:main.c        ****     curPos1 = CapSense_GetRadialCentroidPos(CapSense_RADIALSLIDER0__RS);
 498              		.loc 1 268 0
 499 0004 0020     		mov	r0, #0
 500 0006 FFF7FEFF 		bl	CapSense_GetRadialCentroidPos
 501 000a 031C     		mov	r3, r0
 502 000c 1A1C     		mov	r2, r3
 503 000e D94B     		ldr	r3, .L56
 504 0010 1A80     		strh	r2, [r3]
 269:main.c        ****     curPos2 = CapSense_GetRadialCentroidPos(CapSense_RADIALSLIDER1__RS);
 505              		.loc 1 269 0
 506 0012 0120     		mov	r0, #1
 507 0014 FFF7FEFF 		bl	CapSense_GetRadialCentroidPos
 508 0018 031C     		mov	r3, r0
 509 001a 1A1C     		mov	r2, r3
 510 001c D64B     		ldr	r3, .L56+4
 511 001e 1A80     		strh	r2, [r3]
 270:main.c        ****     
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 15


 271:main.c        ****     /* Switch 1 - 5 and Socket 1Control Code */
 272:main.c        ****     but1 = CapSense_CheckIsSensorActive(CapSense_BUTTON0__BTN);
 512              		.loc 1 272 0
 513 0020 0220     		mov	r0, #2
 514 0022 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 515 0026 021C     		mov	r2, r0
 516 0028 D44B     		ldr	r3, .L56+8
 517 002a 1A60     		str	r2, [r3]
 273:main.c        ****     but2 = CapSense_CheckIsWidgetActive(CapSense_BUTTON1__BTN);
 518              		.loc 1 273 0
 519 002c 0320     		mov	r0, #3
 520 002e FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 521 0032 021C     		mov	r2, r0
 522 0034 D24B     		ldr	r3, .L56+12
 523 0036 1A60     		str	r2, [r3]
 274:main.c        ****     but3 = CapSense_CheckIsWidgetActive(CapSense_BUTTON2__BTN);
 524              		.loc 1 274 0
 525 0038 0420     		mov	r0, #4
 526 003a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 527 003e 021C     		mov	r2, r0
 528 0040 D04B     		ldr	r3, .L56+16
 529 0042 1A60     		str	r2, [r3]
 275:main.c        ****     but4 = CapSense_CheckIsWidgetActive(CapSense_BUTTON3__BTN);
 530              		.loc 1 275 0
 531 0044 0520     		mov	r0, #5
 532 0046 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 533 004a 021C     		mov	r2, r0
 534 004c CE4B     		ldr	r3, .L56+20
 535 004e 1A60     		str	r2, [r3]
 276:main.c        ****     but5 = CapSense_CheckIsWidgetActive(CapSense_BUTTON4__BTN);
 536              		.loc 1 276 0
 537 0050 0620     		mov	r0, #6
 538 0052 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 539 0056 021C     		mov	r2, r0
 540 0058 CC4B     		ldr	r3, .L56+24
 541 005a 1A60     		str	r2, [r3]
 277:main.c        ****     sock1= CapSense_CheckIsWidgetActive(CapSense_BUTTON5__BTN);
 542              		.loc 1 277 0
 543 005c 0720     		mov	r0, #7
 544 005e FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 545 0062 021C     		mov	r2, r0
 546 0064 CA4B     		ldr	r3, .L56+28
 547 0066 1A60     		str	r2, [r3]
 278:main.c        ****     
 279:main.c        ****     //CyDelay(50);
 280:main.c        ****     
 281:main.c        ****   /* Switch 1 Control Code */
 282:main.c        ****   if(but1==1 && temp1==1)
 548              		.loc 1 282 0
 549 0068 C44B     		ldr	r3, .L56+8
 550 006a 1B68     		ldr	r3, [r3]
 551 006c 012B     		cmp	r3, #1
 552 006e 36D1     		bne	.L28
 553              		.loc 1 282 0 is_stmt 0 discriminator 1
 554 0070 C84B     		ldr	r3, .L56+32
 555 0072 1B78     		ldrb	r3, [r3]
 556 0074 012B     		cmp	r3, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 16


 557 0076 32D1     		bne	.L28
 283:main.c        ****     {
 284:main.c        ****             if(oldBut1==0)
 558              		.loc 1 284 0 is_stmt 1
 559 0078 C74B     		ldr	r3, .L56+36
 560 007a 1B68     		ldr	r3, [r3]
 561 007c 002B     		cmp	r3, #0
 562 007e 0AD1     		bne	.L29
 285:main.c        ****             {
 286:main.c        ****                 //UART_UartPutString("in CapSense_DisplayState :: Switch 1, value 100 \n\r");
 287:main.c        ****                 UpdateSwitchLeds(SWITCH1, 100);
 563              		.loc 1 287 0
 564 0080 0220     		mov	r0, #2
 565 0082 6421     		mov	r1, #100
 566 0084 FFF7FEFF 		bl	UpdateSwitchLeds
 288:main.c        ****                 i2cReadBuffer[1] = 100u;
 567              		.loc 1 288 0
 568 0088 C44B     		ldr	r3, .L56+40
 569 008a 6422     		mov	r2, #100
 570 008c 5A70     		strb	r2, [r3, #1]
 289:main.c        ****                 oldBut1=1;
 571              		.loc 1 289 0
 572 008e C24B     		ldr	r3, .L56+36
 573 0090 0122     		mov	r2, #1
 574 0092 1A60     		str	r2, [r3]
 575 0094 09E0     		b	.L30
 576              	.L29:
 290:main.c        ****             }
 291:main.c        ****             
 292:main.c        ****             else
 293:main.c        ****             {
 294:main.c        ****                 //UART_UartPutString("in CapSense_DisplayState :: Switch 1, value 0  \n\r");
 295:main.c        ****                 UpdateSwitchLeds(SWITCH1, 0);
 577              		.loc 1 295 0
 578 0096 0220     		mov	r0, #2
 579 0098 0021     		mov	r1, #0
 580 009a FFF7FEFF 		bl	UpdateSwitchLeds
 296:main.c        ****                 i2cReadBuffer[1] = 0u;
 581              		.loc 1 296 0
 582 009e BF4B     		ldr	r3, .L56+40
 583 00a0 0022     		mov	r2, #0
 584 00a2 5A70     		strb	r2, [r3, #1]
 297:main.c        ****                 oldBut1=0;
 585              		.loc 1 297 0
 586 00a4 BC4B     		ldr	r3, .L56+36
 587 00a6 0022     		mov	r2, #0
 588 00a8 1A60     		str	r2, [r3]
 589              	.L30:
 298:main.c        ****             }
 299:main.c        ****         temp1=0;
 590              		.loc 1 299 0
 591 00aa BA4B     		ldr	r3, .L56+32
 592 00ac 0022     		mov	r2, #0
 593 00ae 1A70     		strb	r2, [r3]
 300:main.c        ****         i2cReadBuffer[0] = SWITCH1;
 594              		.loc 1 300 0
 595 00b0 BA4B     		ldr	r3, .L56+40
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 17


 596 00b2 0222     		mov	r2, #2
 597 00b4 1A70     		strb	r2, [r3]
 301:main.c        ****        
 302:main.c        ****         InterPin_Write(~InterPin_Read());
 598              		.loc 1 302 0
 599 00b6 FFF7FEFF 		bl	InterPin_Read
 600 00ba 031C     		mov	r3, r0
 601 00bc DB43     		mvn	r3, r3
 602 00be DBB2     		uxtb	r3, r3
 603 00c0 181C     		mov	r0, r3
 604 00c2 FFF7FEFF 		bl	InterPin_Write
 303:main.c        ****         CyDelay(50);
 605              		.loc 1 303 0
 606 00c6 3220     		mov	r0, #50
 607 00c8 FFF7FEFF 		bl	CyDelay
 304:main.c        ****         InterPin_Write(~InterPin_Read());
 608              		.loc 1 304 0
 609 00cc FFF7FEFF 		bl	InterPin_Read
 610 00d0 031C     		mov	r3, r0
 611 00d2 DB43     		mvn	r3, r3
 612 00d4 DBB2     		uxtb	r3, r3
 613 00d6 181C     		mov	r0, r3
 614 00d8 FFF7FEFF 		bl	InterPin_Write
 615 00dc 06E0     		b	.L31
 616              	.L28:
 305:main.c        ****             
 306:main.c        ****     }          
 307:main.c        ****     else if (but1==0)
 617              		.loc 1 307 0
 618 00de A74B     		ldr	r3, .L56+8
 619 00e0 1B68     		ldr	r3, [r3]
 620 00e2 002B     		cmp	r3, #0
 621 00e4 02D1     		bne	.L31
 308:main.c        ****     {
 309:main.c        ****         temp1=1;   
 622              		.loc 1 309 0
 623 00e6 AB4B     		ldr	r3, .L56+32
 624 00e8 0122     		mov	r2, #1
 625 00ea 1A70     		strb	r2, [r3]
 626              	.L31:
 310:main.c        ****     }
 311:main.c        ****         
 312:main.c        ****     /* Switch 2 Control Code */ 
 313:main.c        ****     if(but2==1 && temp2==1)
 627              		.loc 1 313 0
 628 00ec A44B     		ldr	r3, .L56+12
 629 00ee 1B68     		ldr	r3, [r3]
 630 00f0 012B     		cmp	r3, #1
 631 00f2 36D1     		bne	.L32
 632              		.loc 1 313 0 is_stmt 0 discriminator 1
 633 00f4 AA4B     		ldr	r3, .L56+44
 634 00f6 1B78     		ldrb	r3, [r3]
 635 00f8 012B     		cmp	r3, #1
 636 00fa 32D1     		bne	.L32
 314:main.c        ****    {
 315:main.c        ****             if(oldBut2==0)
 637              		.loc 1 315 0 is_stmt 1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 18


 638 00fc A94B     		ldr	r3, .L56+48
 639 00fe 1B68     		ldr	r3, [r3]
 640 0100 002B     		cmp	r3, #0
 641 0102 0AD1     		bne	.L33
 316:main.c        ****             {
 317:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 2, value 100  \n\r");
 318:main.c        ****                 UpdateSwitchLeds(SWITCH2, 100);
 642              		.loc 1 318 0
 643 0104 0320     		mov	r0, #3
 644 0106 6421     		mov	r1, #100
 645 0108 FFF7FEFF 		bl	UpdateSwitchLeds
 319:main.c        ****                 i2cReadBuffer[1] = 100u;
 646              		.loc 1 319 0
 647 010c A34B     		ldr	r3, .L56+40
 648 010e 6422     		mov	r2, #100
 649 0110 5A70     		strb	r2, [r3, #1]
 320:main.c        ****                 oldBut2=1;
 650              		.loc 1 320 0
 651 0112 A44B     		ldr	r3, .L56+48
 652 0114 0122     		mov	r2, #1
 653 0116 1A60     		str	r2, [r3]
 654 0118 09E0     		b	.L34
 655              	.L33:
 321:main.c        ****             }
 322:main.c        ****             else
 323:main.c        ****             {
 324:main.c        ****                 //UART_UartPutString("in CapSense_DisplayState :: Switch 2, value 0  \n\r");
 325:main.c        ****                 UpdateSwitchLeds(SWITCH2, 0);
 656              		.loc 1 325 0
 657 011a 0320     		mov	r0, #3
 658 011c 0021     		mov	r1, #0
 659 011e FFF7FEFF 		bl	UpdateSwitchLeds
 326:main.c        ****                 i2cReadBuffer[1] = 0u;
 660              		.loc 1 326 0
 661 0122 9E4B     		ldr	r3, .L56+40
 662 0124 0022     		mov	r2, #0
 663 0126 5A70     		strb	r2, [r3, #1]
 327:main.c        ****                 oldBut2=0;
 664              		.loc 1 327 0
 665 0128 9E4B     		ldr	r3, .L56+48
 666 012a 0022     		mov	r2, #0
 667 012c 1A60     		str	r2, [r3]
 668              	.L34:
 328:main.c        ****                 
 329:main.c        ****             }
 330:main.c        ****              
 331:main.c        ****         temp2=0;
 669              		.loc 1 331 0
 670 012e 9C4B     		ldr	r3, .L56+44
 671 0130 0022     		mov	r2, #0
 672 0132 1A70     		strb	r2, [r3]
 332:main.c        ****         i2cReadBuffer[0] = SWITCH2;
 673              		.loc 1 332 0
 674 0134 994B     		ldr	r3, .L56+40
 675 0136 0322     		mov	r2, #3
 676 0138 1A70     		strb	r2, [r3]
 333:main.c        ****        
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 19


 334:main.c        ****         InterPin_Write(~InterPin_Read());
 677              		.loc 1 334 0
 678 013a FFF7FEFF 		bl	InterPin_Read
 679 013e 031C     		mov	r3, r0
 680 0140 DB43     		mvn	r3, r3
 681 0142 DBB2     		uxtb	r3, r3
 682 0144 181C     		mov	r0, r3
 683 0146 FFF7FEFF 		bl	InterPin_Write
 335:main.c        ****         CyDelay(50);
 684              		.loc 1 335 0
 685 014a 3220     		mov	r0, #50
 686 014c FFF7FEFF 		bl	CyDelay
 336:main.c        ****         InterPin_Write(~InterPin_Read());
 687              		.loc 1 336 0
 688 0150 FFF7FEFF 		bl	InterPin_Read
 689 0154 031C     		mov	r3, r0
 690 0156 DB43     		mvn	r3, r3
 691 0158 DBB2     		uxtb	r3, r3
 692 015a 181C     		mov	r0, r3
 693 015c FFF7FEFF 		bl	InterPin_Write
 694 0160 06E0     		b	.L35
 695              	.L32:
 337:main.c        ****     }          
 338:main.c        ****     else if (but2==0)
 696              		.loc 1 338 0
 697 0162 874B     		ldr	r3, .L56+12
 698 0164 1B68     		ldr	r3, [r3]
 699 0166 002B     		cmp	r3, #0
 700 0168 02D1     		bne	.L35
 339:main.c        ****     {
 340:main.c        ****         temp2=1;   
 701              		.loc 1 340 0
 702 016a 8D4B     		ldr	r3, .L56+44
 703 016c 0122     		mov	r2, #1
 704 016e 1A70     		strb	r2, [r3]
 705              	.L35:
 341:main.c        ****     }
 342:main.c        ****     
 343:main.c        ****     /* Switch 3 Control Code */
 344:main.c        ****    if(but3==1 && temp3==1)
 706              		.loc 1 344 0
 707 0170 844B     		ldr	r3, .L56+16
 708 0172 1B68     		ldr	r3, [r3]
 709 0174 012B     		cmp	r3, #1
 710 0176 36D1     		bne	.L36
 711              		.loc 1 344 0 is_stmt 0 discriminator 1
 712 0178 8B4B     		ldr	r3, .L56+52
 713 017a 1B78     		ldrb	r3, [r3]
 714 017c 012B     		cmp	r3, #1
 715 017e 32D1     		bne	.L36
 345:main.c        ****         {
 346:main.c        ****             if(oldBut3==0)
 716              		.loc 1 346 0 is_stmt 1
 717 0180 8A4B     		ldr	r3, .L56+56
 718 0182 1B68     		ldr	r3, [r3]
 719 0184 002B     		cmp	r3, #0
 720 0186 0AD1     		bne	.L37
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 20


 347:main.c        ****             {
 348:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 3, value 100   A\n\r");
 349:main.c        ****                 UpdateSwitchLeds(SWITCH3, 100);
 721              		.loc 1 349 0
 722 0188 0420     		mov	r0, #4
 723 018a 6421     		mov	r1, #100
 724 018c FFF7FEFF 		bl	UpdateSwitchLeds
 350:main.c        ****                 i2cReadBuffer[1] = 1u;
 725              		.loc 1 350 0
 726 0190 824B     		ldr	r3, .L56+40
 727 0192 0122     		mov	r2, #1
 728 0194 5A70     		strb	r2, [r3, #1]
 351:main.c        ****                 oldBut3=1;
 729              		.loc 1 351 0
 730 0196 854B     		ldr	r3, .L56+56
 731 0198 0122     		mov	r2, #1
 732 019a 1A60     		str	r2, [r3]
 733 019c 09E0     		b	.L38
 734              	.L37:
 352:main.c        ****             }
 353:main.c        ****             
 354:main.c        ****             else
 355:main.c        ****             {
 356:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 3, value 0   A\n\r");
 357:main.c        ****                 UpdateSwitchLeds(SWITCH3, 0);
 735              		.loc 1 357 0
 736 019e 0420     		mov	r0, #4
 737 01a0 0021     		mov	r1, #0
 738 01a2 FFF7FEFF 		bl	UpdateSwitchLeds
 358:main.c        ****                 i2cReadBuffer[1] = 0u;
 739              		.loc 1 358 0
 740 01a6 7D4B     		ldr	r3, .L56+40
 741 01a8 0022     		mov	r2, #0
 742 01aa 5A70     		strb	r2, [r3, #1]
 359:main.c        ****                 oldBut3=0;
 743              		.loc 1 359 0
 744 01ac 7F4B     		ldr	r3, .L56+56
 745 01ae 0022     		mov	r2, #0
 746 01b0 1A60     		str	r2, [r3]
 747              	.L38:
 360:main.c        ****                 
 361:main.c        ****             }
 362:main.c        ****         temp3=0;
 748              		.loc 1 362 0
 749 01b2 7D4B     		ldr	r3, .L56+52
 750 01b4 0022     		mov	r2, #0
 751 01b6 1A70     		strb	r2, [r3]
 363:main.c        ****         i2cReadBuffer[0] = SWITCH3;
 752              		.loc 1 363 0
 753 01b8 784B     		ldr	r3, .L56+40
 754 01ba 0422     		mov	r2, #4
 755 01bc 1A70     		strb	r2, [r3]
 364:main.c        ****        
 365:main.c        ****         InterPin_Write(~InterPin_Read());
 756              		.loc 1 365 0
 757 01be FFF7FEFF 		bl	InterPin_Read
 758 01c2 031C     		mov	r3, r0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 21


 759 01c4 DB43     		mvn	r3, r3
 760 01c6 DBB2     		uxtb	r3, r3
 761 01c8 181C     		mov	r0, r3
 762 01ca FFF7FEFF 		bl	InterPin_Write
 366:main.c        ****         CyDelay(50);
 763              		.loc 1 366 0
 764 01ce 3220     		mov	r0, #50
 765 01d0 FFF7FEFF 		bl	CyDelay
 367:main.c        ****         InterPin_Write(~InterPin_Read());
 766              		.loc 1 367 0
 767 01d4 FFF7FEFF 		bl	InterPin_Read
 768 01d8 031C     		mov	r3, r0
 769 01da DB43     		mvn	r3, r3
 770 01dc DBB2     		uxtb	r3, r3
 771 01de 181C     		mov	r0, r3
 772 01e0 FFF7FEFF 		bl	InterPin_Write
 773 01e4 06E0     		b	.L39
 774              	.L36:
 368:main.c        ****         }          
 369:main.c        ****    else if (but3==0)
 775              		.loc 1 369 0
 776 01e6 674B     		ldr	r3, .L56+16
 777 01e8 1B68     		ldr	r3, [r3]
 778 01ea 002B     		cmp	r3, #0
 779 01ec 02D1     		bne	.L39
 370:main.c        ****    {
 371:main.c        ****     temp3=1;   
 780              		.loc 1 371 0
 781 01ee 6E4B     		ldr	r3, .L56+52
 782 01f0 0122     		mov	r2, #1
 783 01f2 1A70     		strb	r2, [r3]
 784              	.L39:
 372:main.c        ****    }
 373:main.c        ****         
 374:main.c        ****    /* Switch 4 Control Code */      
 375:main.c        ****   if(but4==1 && temp4==1)
 785              		.loc 1 375 0
 786 01f4 644B     		ldr	r3, .L56+20
 787 01f6 1B68     		ldr	r3, [r3]
 788 01f8 012B     		cmp	r3, #1
 789 01fa 36D1     		bne	.L40
 790              		.loc 1 375 0 is_stmt 0 discriminator 1
 791 01fc 6C4B     		ldr	r3, .L56+60
 792 01fe 1B78     		ldrb	r3, [r3]
 793 0200 012B     		cmp	r3, #1
 794 0202 32D1     		bne	.L40
 376:main.c        ****         {
 377:main.c        ****             if(oldBut4==0)
 795              		.loc 1 377 0 is_stmt 1
 796 0204 6B4B     		ldr	r3, .L56+64
 797 0206 1B68     		ldr	r3, [r3]
 798 0208 002B     		cmp	r3, #0
 799 020a 0AD1     		bne	.L41
 378:main.c        ****             {
 379:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 4, value 100 \n\r");
 380:main.c        ****                 UpdateSwitchLeds(SWITCH4, 100);
 800              		.loc 1 380 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 22


 801 020c 0520     		mov	r0, #5
 802 020e 6421     		mov	r1, #100
 803 0210 FFF7FEFF 		bl	UpdateSwitchLeds
 381:main.c        ****                 i2cReadBuffer[1] = 100u;
 804              		.loc 1 381 0
 805 0214 614B     		ldr	r3, .L56+40
 806 0216 6422     		mov	r2, #100
 807 0218 5A70     		strb	r2, [r3, #1]
 382:main.c        ****                 oldBut4=1;
 808              		.loc 1 382 0
 809 021a 664B     		ldr	r3, .L56+64
 810 021c 0122     		mov	r2, #1
 811 021e 1A60     		str	r2, [r3]
 812 0220 09E0     		b	.L42
 813              	.L41:
 383:main.c        ****             }
 384:main.c        ****             
 385:main.c        ****             else
 386:main.c        ****             {
 387:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 4, value 0  \n\r");
 388:main.c        ****                 UpdateSwitchLeds(SWITCH4, 0);
 814              		.loc 1 388 0
 815 0222 0520     		mov	r0, #5
 816 0224 0021     		mov	r1, #0
 817 0226 FFF7FEFF 		bl	UpdateSwitchLeds
 389:main.c        ****                 i2cReadBuffer[1] = 0u;
 818              		.loc 1 389 0
 819 022a 5C4B     		ldr	r3, .L56+40
 820 022c 0022     		mov	r2, #0
 821 022e 5A70     		strb	r2, [r3, #1]
 390:main.c        ****                 oldBut4=0;
 822              		.loc 1 390 0
 823 0230 604B     		ldr	r3, .L56+64
 824 0232 0022     		mov	r2, #0
 825 0234 1A60     		str	r2, [r3]
 826              	.L42:
 391:main.c        ****                 
 392:main.c        ****             }
 393:main.c        ****         temp4=0;
 827              		.loc 1 393 0
 828 0236 5E4B     		ldr	r3, .L56+60
 829 0238 0022     		mov	r2, #0
 830 023a 1A70     		strb	r2, [r3]
 394:main.c        ****         i2cReadBuffer[0] = SWITCH4;
 831              		.loc 1 394 0
 832 023c 574B     		ldr	r3, .L56+40
 833 023e 0522     		mov	r2, #5
 834 0240 1A70     		strb	r2, [r3]
 395:main.c        ****     
 396:main.c        ****         InterPin_Write(~InterPin_Read());
 835              		.loc 1 396 0
 836 0242 FFF7FEFF 		bl	InterPin_Read
 837 0246 031C     		mov	r3, r0
 838 0248 DB43     		mvn	r3, r3
 839 024a DBB2     		uxtb	r3, r3
 840 024c 181C     		mov	r0, r3
 841 024e FFF7FEFF 		bl	InterPin_Write
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 23


 397:main.c        ****         CyDelay(50);
 842              		.loc 1 397 0
 843 0252 3220     		mov	r0, #50
 844 0254 FFF7FEFF 		bl	CyDelay
 398:main.c        ****         InterPin_Write(~InterPin_Read());
 845              		.loc 1 398 0
 846 0258 FFF7FEFF 		bl	InterPin_Read
 847 025c 031C     		mov	r3, r0
 848 025e DB43     		mvn	r3, r3
 849 0260 DBB2     		uxtb	r3, r3
 850 0262 181C     		mov	r0, r3
 851 0264 FFF7FEFF 		bl	InterPin_Write
 852 0268 06E0     		b	.L43
 853              	.L40:
 399:main.c        ****          
 400:main.c        ****         }          
 401:main.c        ****    else if (but4==0)
 854              		.loc 1 401 0
 855 026a 474B     		ldr	r3, .L56+20
 856 026c 1B68     		ldr	r3, [r3]
 857 026e 002B     		cmp	r3, #0
 858 0270 02D1     		bne	.L43
 402:main.c        ****     {
 403:main.c        ****       temp4=1;   
 859              		.loc 1 403 0
 860 0272 4F4B     		ldr	r3, .L56+60
 861 0274 0122     		mov	r2, #1
 862 0276 1A70     		strb	r2, [r3]
 863              	.L43:
 404:main.c        ****     }
 405:main.c        **** 
 406:main.c        ****     /* Switch 5 Control Code */
 407:main.c        ****     
 408:main.c        ****    if(but5==1 && temp5==1)
 864              		.loc 1 408 0
 865 0278 444B     		ldr	r3, .L56+24
 866 027a 1B68     		ldr	r3, [r3]
 867 027c 012B     		cmp	r3, #1
 868 027e 36D1     		bne	.L44
 869              		.loc 1 408 0 is_stmt 0 discriminator 1
 870 0280 4D4B     		ldr	r3, .L56+68
 871 0282 1B78     		ldrb	r3, [r3]
 872 0284 012B     		cmp	r3, #1
 873 0286 32D1     		bne	.L44
 409:main.c        ****    {
 410:main.c        ****             if(oldBut5==0)
 874              		.loc 1 410 0 is_stmt 1
 875 0288 4C4B     		ldr	r3, .L56+72
 876 028a 1B68     		ldr	r3, [r3]
 877 028c 002B     		cmp	r3, #0
 878 028e 0AD1     		bne	.L45
 411:main.c        ****             {
 412:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 5, value 0  \n\r");
 413:main.c        ****                 UpdateSwitchLeds(SWITCH5, 100);
 879              		.loc 1 413 0
 880 0290 0620     		mov	r0, #6
 881 0292 6421     		mov	r1, #100
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 24


 882 0294 FFF7FEFF 		bl	UpdateSwitchLeds
 414:main.c        ****                 i2cReadBuffer[1] = 100u;
 883              		.loc 1 414 0
 884 0298 404B     		ldr	r3, .L56+40
 885 029a 6422     		mov	r2, #100
 886 029c 5A70     		strb	r2, [r3, #1]
 415:main.c        ****                 oldBut5=1;
 887              		.loc 1 415 0
 888 029e 474B     		ldr	r3, .L56+72
 889 02a0 0122     		mov	r2, #1
 890 02a2 1A60     		str	r2, [r3]
 891 02a4 09E0     		b	.L46
 892              	.L45:
 416:main.c        ****             }
 417:main.c        ****             
 418:main.c        ****             else
 419:main.c        ****             {
 420:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 5, value 0  \n\r");
 421:main.c        ****                 UpdateSwitchLeds(SWITCH5, 0);
 893              		.loc 1 421 0
 894 02a6 0620     		mov	r0, #6
 895 02a8 0021     		mov	r1, #0
 896 02aa FFF7FEFF 		bl	UpdateSwitchLeds
 422:main.c        ****                 i2cReadBuffer[1] = 0u;
 897              		.loc 1 422 0
 898 02ae 3B4B     		ldr	r3, .L56+40
 899 02b0 0022     		mov	r2, #0
 900 02b2 5A70     		strb	r2, [r3, #1]
 423:main.c        ****                 oldBut5=0;
 901              		.loc 1 423 0
 902 02b4 414B     		ldr	r3, .L56+72
 903 02b6 0022     		mov	r2, #0
 904 02b8 1A60     		str	r2, [r3]
 905              	.L46:
 424:main.c        ****                 
 425:main.c        ****             }
 426:main.c        ****         temp5=0;
 906              		.loc 1 426 0
 907 02ba 3F4B     		ldr	r3, .L56+68
 908 02bc 0022     		mov	r2, #0
 909 02be 1A70     		strb	r2, [r3]
 427:main.c        ****         i2cReadBuffer[0] = SWITCH5;
 910              		.loc 1 427 0
 911 02c0 364B     		ldr	r3, .L56+40
 912 02c2 0622     		mov	r2, #6
 913 02c4 1A70     		strb	r2, [r3]
 428:main.c        ****         
 429:main.c        ****         InterPin_Write(~InterPin_Read());
 914              		.loc 1 429 0
 915 02c6 FFF7FEFF 		bl	InterPin_Read
 916 02ca 031C     		mov	r3, r0
 917 02cc DB43     		mvn	r3, r3
 918 02ce DBB2     		uxtb	r3, r3
 919 02d0 181C     		mov	r0, r3
 920 02d2 FFF7FEFF 		bl	InterPin_Write
 430:main.c        ****         CyDelay(50);
 921              		.loc 1 430 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 25


 922 02d6 3220     		mov	r0, #50
 923 02d8 FFF7FEFF 		bl	CyDelay
 431:main.c        ****         InterPin_Write(~InterPin_Read());
 924              		.loc 1 431 0
 925 02dc FFF7FEFF 		bl	InterPin_Read
 926 02e0 031C     		mov	r3, r0
 927 02e2 DB43     		mvn	r3, r3
 928 02e4 DBB2     		uxtb	r3, r3
 929 02e6 181C     		mov	r0, r3
 930 02e8 FFF7FEFF 		bl	InterPin_Write
 931 02ec 06E0     		b	.L47
 932              	.L44:
 432:main.c        ****         }          
 433:main.c        ****    else if (but5==0)
 933              		.loc 1 433 0
 934 02ee 274B     		ldr	r3, .L56+24
 935 02f0 1B68     		ldr	r3, [r3]
 936 02f2 002B     		cmp	r3, #0
 937 02f4 02D1     		bne	.L47
 434:main.c        ****    {
 435:main.c        ****          temp5=1;   
 938              		.loc 1 435 0
 939 02f6 304B     		ldr	r3, .L56+68
 940 02f8 0122     		mov	r2, #1
 941 02fa 1A70     		strb	r2, [r3]
 942              	.L47:
 436:main.c        ****    }
 437:main.c        **** 
 438:main.c        ****    /* Socket 1 Control Code */
 439:main.c        ****    if(sock1==1 && temp6==1)
 943              		.loc 1 439 0
 944 02fc 244B     		ldr	r3, .L56+28
 945 02fe 1B68     		ldr	r3, [r3]
 946 0300 012B     		cmp	r3, #1
 947 0302 61D1     		bne	.L48
 948              		.loc 1 439 0 is_stmt 0 discriminator 1
 949 0304 2E4B     		ldr	r3, .L56+76
 950 0306 1B78     		ldrb	r3, [r3]
 951 0308 012B     		cmp	r3, #1
 952 030a 5DD1     		bne	.L48
 440:main.c        ****         {
 441:main.c        ****             if(oldSock1==0)
 953              		.loc 1 441 0 is_stmt 1
 954 030c 2D4B     		ldr	r3, .L56+80
 955 030e 1B68     		ldr	r3, [r3]
 956 0310 002B     		cmp	r3, #0
 957 0312 0AD1     		bne	.L49
 442:main.c        ****             {
 443:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 5, value 0  \n\r");
 444:main.c        ****                 UpdateSwitchLeds(SOCKET1, 100);
 958              		.loc 1 444 0
 959 0314 0720     		mov	r0, #7
 960 0316 6421     		mov	r1, #100
 961 0318 FFF7FEFF 		bl	UpdateSwitchLeds
 445:main.c        ****                 i2cReadBuffer[1] = 100u;
 962              		.loc 1 445 0
 963 031c 1F4B     		ldr	r3, .L56+40
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 26


 964 031e 6422     		mov	r2, #100
 965 0320 5A70     		strb	r2, [r3, #1]
 446:main.c        ****                 oldSock1=1;
 966              		.loc 1 446 0
 967 0322 284B     		ldr	r3, .L56+80
 968 0324 0122     		mov	r2, #1
 969 0326 1A60     		str	r2, [r3]
 970 0328 09E0     		b	.L50
 971              	.L49:
 447:main.c        ****             }
 448:main.c        ****             
 449:main.c        ****             else
 450:main.c        ****             {
 451:main.c        ****                // UART_UartPutString("in CapSense_DisplayState :: Switch 5, value 0  \n\r");
 452:main.c        ****                 UpdateSwitchLeds(SOCKET1, 0);
 972              		.loc 1 452 0
 973 032a 0720     		mov	r0, #7
 974 032c 0021     		mov	r1, #0
 975 032e FFF7FEFF 		bl	UpdateSwitchLeds
 453:main.c        ****                 i2cReadBuffer[1] = 0u;
 976              		.loc 1 453 0
 977 0332 1A4B     		ldr	r3, .L56+40
 978 0334 0022     		mov	r2, #0
 979 0336 5A70     		strb	r2, [r3, #1]
 454:main.c        ****                 oldSock1=0;
 980              		.loc 1 454 0
 981 0338 224B     		ldr	r3, .L56+80
 982 033a 0022     		mov	r2, #0
 983 033c 1A60     		str	r2, [r3]
 984              	.L50:
 455:main.c        ****                 
 456:main.c        ****             }
 457:main.c        ****         temp6=0;
 985              		.loc 1 457 0
 986 033e 204B     		ldr	r3, .L56+76
 987 0340 0022     		mov	r2, #0
 988 0342 1A70     		strb	r2, [r3]
 458:main.c        ****         i2cReadBuffer[0] = SOCKET1;
 989              		.loc 1 458 0
 990 0344 154B     		ldr	r3, .L56+40
 991 0346 0722     		mov	r2, #7
 992 0348 1A70     		strb	r2, [r3]
 459:main.c        ****         
 460:main.c        ****         InterPin_Write(~InterPin_Read());
 993              		.loc 1 460 0
 994 034a FFF7FEFF 		bl	InterPin_Read
 995 034e 031C     		mov	r3, r0
 996 0350 DB43     		mvn	r3, r3
 997 0352 DBB2     		uxtb	r3, r3
 998 0354 181C     		mov	r0, r3
 999 0356 FFF7FEFF 		bl	InterPin_Write
 461:main.c        ****         CyDelay(50);
 1000              		.loc 1 461 0
 1001 035a 3220     		mov	r0, #50
 1002 035c FFF7FEFF 		bl	CyDelay
 462:main.c        ****         InterPin_Write(~InterPin_Read());
 1003              		.loc 1 462 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 27


 1004 0360 FFF7FEFF 		bl	InterPin_Read
 1005 0364 031C     		mov	r3, r0
 1006 0366 DB43     		mvn	r3, r3
 1007 0368 DBB2     		uxtb	r3, r3
 1008 036a 181C     		mov	r0, r3
 1009 036c FFF7FEFF 		bl	InterPin_Write
 1010 0370 31E0     		b	.L51
 1011              	.L57:
 1012 0372 C046     		.align	2
 1013              	.L56:
 1014 0374 00000000 		.word	curPos1
 1015 0378 00000000 		.word	curPos2
 1016 037c 00000000 		.word	but1
 1017 0380 00000000 		.word	but2
 1018 0384 00000000 		.word	but3
 1019 0388 00000000 		.word	but4
 1020 038c 00000000 		.word	but5
 1021 0390 00000000 		.word	sock1
 1022 0394 00000000 		.word	temp1
 1023 0398 00000000 		.word	oldBut1
 1024 039c 00000000 		.word	i2cReadBuffer
 1025 03a0 00000000 		.word	temp2
 1026 03a4 00000000 		.word	oldBut2
 1027 03a8 00000000 		.word	temp3
 1028 03ac 00000000 		.word	oldBut3
 1029 03b0 00000000 		.word	temp4
 1030 03b4 00000000 		.word	oldBut4
 1031 03b8 00000000 		.word	temp5
 1032 03bc 00000000 		.word	oldBut5
 1033 03c0 00000000 		.word	temp6
 1034 03c4 00000000 		.word	oldSock1
 1035              	.L48:
 463:main.c        ****         }          
 464:main.c        ****    else if (sock1==0)
 1036              		.loc 1 464 0
 1037 03c8 404B     		ldr	r3, .L58
 1038 03ca 1B68     		ldr	r3, [r3]
 1039 03cc 002B     		cmp	r3, #0
 1040 03ce 02D1     		bne	.L51
 465:main.c        ****     {
 466:main.c        ****          temp6=1;   
 1041              		.loc 1 466 0
 1042 03d0 3F4B     		ldr	r3, .L58+4
 1043 03d2 0122     		mov	r2, #1
 1044 03d4 1A70     		strb	r2, [r3]
 1045              	.L51:
 467:main.c        ****     }
 468:main.c        ****     
 469:main.c        ****     /* Fan 1 Control Code */
 470:main.c        ****     
 471:main.c        ****     /* Reset position - FAN1 */
 472:main.c        ****     if(curPos1 == 0xFFFFu)
 1046              		.loc 1 472 0
 1047 03d6 3F4B     		ldr	r3, .L58+8
 1048 03d8 1B88     		ldrh	r3, [r3]
 1049 03da 3F4A     		ldr	r2, .L58+12
 1050 03dc 9342     		cmp	r3, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 28


 1051 03de 02D1     		bne	.L52
 473:main.c        ****     {
 474:main.c        ****         curPos1 = 0u;
 1052              		.loc 1 474 0
 1053 03e0 3C4B     		ldr	r3, .L58+8
 1054 03e2 0022     		mov	r2, #0
 1055 03e4 1A80     		strh	r2, [r3]
 1056              	.L52:
 475:main.c        ****     }
 476:main.c        ****     
 477:main.c        ****     /* Move bargraph */
 478:main.c        ****     if (curPos1 != oldCurPos1)
 1057              		.loc 1 478 0
 1058 03e6 3B4B     		ldr	r3, .L58+8
 1059 03e8 1A88     		ldrh	r2, [r3]
 1060 03ea 3C4B     		ldr	r3, .L58+16
 1061 03ec 1B88     		ldrh	r3, [r3]
 1062 03ee 9A42     		cmp	r2, r3
 1063 03f0 2DD0     		beq	.L53
 479:main.c        ****     {
 480:main.c        ****        //UART_UartPutString("in CapSense_DisplayState :: Fan 1\n");
 481:main.c        ****         
 482:main.c        ****         oldCurPos1 = curPos1;
 1064              		.loc 1 482 0
 1065 03f2 384B     		ldr	r3, .L58+8
 1066 03f4 1A88     		ldrh	r2, [r3]
 1067 03f6 394B     		ldr	r3, .L58+16
 1068 03f8 1A80     		strh	r2, [r3]
 483:main.c        ****         /* Display Slider bargraph */
 484:main.c        ****         if (curPos1 != 0u)
 1069              		.loc 1 484 0
 1070 03fa 364B     		ldr	r3, .L58+8
 1071 03fc 1B88     		ldrh	r3, [r3]
 1072 03fe 002B     		cmp	r3, #0
 1073 0400 25D0     		beq	.L53
 485:main.c        ****         {
 486:main.c        ****             LED_CONTROL1_WriteCompare((uint32)curPos1 << SLIDER_POS_TO_COMPARE_SHIFT);       
 1074              		.loc 1 486 0
 1075 0402 344B     		ldr	r3, .L58+8
 1076 0404 1B88     		ldrh	r3, [r3]
 1077 0406 5B02     		lsl	r3, r3, #9
 1078 0408 181C     		mov	r0, r3
 1079 040a FFF7FEFF 		bl	LED_CONTROL1_WriteCompare
 487:main.c        ****             i2cReadBuffer[0] = FAN1;
 1080              		.loc 1 487 0
 1081 040e 344B     		ldr	r3, .L58+20
 1082 0410 0022     		mov	r2, #0
 1083 0412 1A70     		strb	r2, [r3]
 488:main.c        ****             i2cReadBuffer[1] = curPos1;
 1084              		.loc 1 488 0
 1085 0414 2F4B     		ldr	r3, .L58+8
 1086 0416 1B88     		ldrh	r3, [r3]
 1087 0418 DAB2     		uxtb	r2, r3
 1088 041a 314B     		ldr	r3, .L58+20
 1089 041c 5A70     		strb	r2, [r3, #1]
 489:main.c        ****             UpdateLedsFan1(curPos1);
 1090              		.loc 1 489 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 29


 1091 041e 2D4B     		ldr	r3, .L58+8
 1092 0420 1B88     		ldrh	r3, [r3]
 1093 0422 181C     		mov	r0, r3
 1094 0424 FFF7FEFF 		bl	UpdateLedsFan1
 490:main.c        ****             InterPin_Write(~InterPin_Read());
 1095              		.loc 1 490 0
 1096 0428 FFF7FEFF 		bl	InterPin_Read
 1097 042c 031C     		mov	r3, r0
 1098 042e DB43     		mvn	r3, r3
 1099 0430 DBB2     		uxtb	r3, r3
 1100 0432 181C     		mov	r0, r3
 1101 0434 FFF7FEFF 		bl	InterPin_Write
 491:main.c        ****             CyDelay(50);
 1102              		.loc 1 491 0
 1103 0438 3220     		mov	r0, #50
 1104 043a FFF7FEFF 		bl	CyDelay
 492:main.c        ****             InterPin_Write(~InterPin_Read());
 1105              		.loc 1 492 0
 1106 043e FFF7FEFF 		bl	InterPin_Read
 1107 0442 031C     		mov	r3, r0
 1108 0444 DB43     		mvn	r3, r3
 1109 0446 DBB2     		uxtb	r3, r3
 1110 0448 181C     		mov	r0, r3
 1111 044a FFF7FEFF 		bl	InterPin_Write
 1112              	.L53:
 493:main.c        ****         }
 494:main.c        ****         else{
 495:main.c        ****            //UART_UartPutString("in CapSense_DisplayState :: Fan 1\n");
 496:main.c        ****         }
 497:main.c        ****     }
 498:main.c        ****     
 499:main.c        ****     /* Fan 2 Control Code */ 
 500:main.c        ****     
 501:main.c        ****     /* Reset position - FAN2*/
 502:main.c        ****     if(curPos2 == 0xFFFFu)
 1113              		.loc 1 502 0
 1114 044e 254B     		ldr	r3, .L58+24
 1115 0450 1B88     		ldrh	r3, [r3]
 1116 0452 214A     		ldr	r2, .L58+12
 1117 0454 9342     		cmp	r3, r2
 1118 0456 02D1     		bne	.L54
 503:main.c        ****     {
 504:main.c        ****         curPos2 = 0u;
 1119              		.loc 1 504 0
 1120 0458 224B     		ldr	r3, .L58+24
 1121 045a 0022     		mov	r2, #0
 1122 045c 1A80     		strh	r2, [r3]
 1123              	.L54:
 505:main.c        ****     }
 506:main.c        **** 
 507:main.c        ****     /* Move bargraph */
 508:main.c        ****     if (curPos2 != oldCurPos2)
 1124              		.loc 1 508 0
 1125 045e 214B     		ldr	r3, .L58+24
 1126 0460 1A88     		ldrh	r2, [r3]
 1127 0462 214B     		ldr	r3, .L58+28
 1128 0464 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 30


 1129 0466 9A42     		cmp	r2, r3
 1130 0468 2DD0     		beq	.L27
 509:main.c        ****     {
 510:main.c        ****         //UART_UartPutString("in CapSense_DisplayState :: Fan 1\n");
 511:main.c        ****         oldCurPos2 = curPos2;
 1131              		.loc 1 511 0
 1132 046a 1E4B     		ldr	r3, .L58+24
 1133 046c 1A88     		ldrh	r2, [r3]
 1134 046e 1E4B     		ldr	r3, .L58+28
 1135 0470 1A80     		strh	r2, [r3]
 512:main.c        ****         /* Display Slider bargraph */
 513:main.c        ****         if (curPos2 != 0u)
 1136              		.loc 1 513 0
 1137 0472 1C4B     		ldr	r3, .L58+24
 1138 0474 1B88     		ldrh	r3, [r3]
 1139 0476 002B     		cmp	r3, #0
 1140 0478 25D0     		beq	.L27
 514:main.c        ****         {
 515:main.c        ****             LED_CONTROL2_WriteCompare((uint32)curPos2 << SLIDER_POS_TO_COMPARE_SHIFT);
 1141              		.loc 1 515 0
 1142 047a 1A4B     		ldr	r3, .L58+24
 1143 047c 1B88     		ldrh	r3, [r3]
 1144 047e 5B02     		lsl	r3, r3, #9
 1145 0480 181C     		mov	r0, r3
 1146 0482 FFF7FEFF 		bl	LED_CONTROL2_WriteCompare
 516:main.c        ****             UpdateLedsFan2(curPos2);
 1147              		.loc 1 516 0
 1148 0486 174B     		ldr	r3, .L58+24
 1149 0488 1B88     		ldrh	r3, [r3]
 1150 048a 181C     		mov	r0, r3
 1151 048c FFF7FEFF 		bl	UpdateLedsFan2
 517:main.c        ****            
 518:main.c        ****             i2cReadBuffer[0] = FAN2;
 1152              		.loc 1 518 0
 1153 0490 134B     		ldr	r3, .L58+20
 1154 0492 0122     		mov	r2, #1
 1155 0494 1A70     		strb	r2, [r3]
 519:main.c        ****             i2cReadBuffer[1] = curPos2;
 1156              		.loc 1 519 0
 1157 0496 134B     		ldr	r3, .L58+24
 1158 0498 1B88     		ldrh	r3, [r3]
 1159 049a DAB2     		uxtb	r2, r3
 1160 049c 104B     		ldr	r3, .L58+20
 1161 049e 5A70     		strb	r2, [r3, #1]
 520:main.c        ****             InterPin_Write(~InterPin_Read());
 1162              		.loc 1 520 0
 1163 04a0 FFF7FEFF 		bl	InterPin_Read
 1164 04a4 031C     		mov	r3, r0
 1165 04a6 DB43     		mvn	r3, r3
 1166 04a8 DBB2     		uxtb	r3, r3
 1167 04aa 181C     		mov	r0, r3
 1168 04ac FFF7FEFF 		bl	InterPin_Write
 521:main.c        ****             CyDelay(50);
 1169              		.loc 1 521 0
 1170 04b0 3220     		mov	r0, #50
 1171 04b2 FFF7FEFF 		bl	CyDelay
 522:main.c        ****             InterPin_Write(~InterPin_Read());
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 31


 1172              		.loc 1 522 0
 1173 04b6 FFF7FEFF 		bl	InterPin_Read
 1174 04ba 031C     		mov	r3, r0
 1175 04bc DB43     		mvn	r3, r3
 1176 04be DBB2     		uxtb	r3, r3
 1177 04c0 181C     		mov	r0, r3
 1178 04c2 FFF7FEFF 		bl	InterPin_Write
 1179              	.L27:
 523:main.c        ****         }
 524:main.c        ****     }
 525:main.c        ****    
 526:main.c        **** }
 1180              		.loc 1 526 0
 1181 04c6 BD46     		mov	sp, r7
 1182              		@ sp needed
 1183 04c8 80BD     		pop	{r7, pc}
 1184              	.L59:
 1185 04ca C046     		.align	2
 1186              	.L58:
 1187 04cc 00000000 		.word	sock1
 1188 04d0 00000000 		.word	temp6
 1189 04d4 00000000 		.word	curPos1
 1190 04d8 FFFF0000 		.word	65535
 1191 04dc 00000000 		.word	oldCurPos1
 1192 04e0 00000000 		.word	i2cReadBuffer
 1193 04e4 00000000 		.word	curPos2
 1194 04e8 00000000 		.word	oldCurPos2
 1195              		.cfi_endproc
 1196              	.LFE37:
 1197              		.size	CapSense_DisplayState, .-CapSense_DisplayState
 1198              		.section	.text.ExecuteCommand,"ax",%progbits
 1199              		.align	2
 1200              		.global	ExecuteCommand
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	ExecuteCommand, %function
 1204              	ExecuteCommand:
 1205              	.LFB38:
 527:main.c        **** 
 528:main.c        **** /*******************************************************************************
 529:main.c        **** * Function Name: ExecuteCommand
 530:main.c        **** ********************************************************************************
 531:main.c        **** * Summary:
 532:main.c        **** *  Executes received command to control the LED color and returns status.
 533:main.c        **** *  If the command is unknown, the LED color is not changed.
 534:main.c        **** *
 535:main.c        **** * Parameters:
 536:main.c        **** *  cmd: command to execute. Available commands:
 537:main.c        **** *   - CMD_SET_RED:   set red color of the LED.
 538:main.c        **** *   - CMD_SET_GREEN: set green color of the LED.
 539:main.c        **** *   - CMD_SET_BLUE:  set blue color of the LED.
 540:main.c        **** *   - CMD_SET_OFF:   turn off the LED.
 541:main.c        **** *
 542:main.c        **** * Return:
 543:main.c        **** *  Returns status of command execution. There are two statuses
 544:main.c        **** *  - STS_CMD_DONE: command is executed successfully.
 545:main.c        **** *  - STS_CMD_FAIL: unknown command
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 32


 546:main.c        **** *
 547:main.c        **** *******************************************************************************/
 548:main.c        **** uint8 ExecuteCommand(uint32 cmd, uint32 value)
 549:main.c        **** {
 1206              		.loc 1 549 0
 1207              		.cfi_startproc
 1208 0000 80B5     		push	{r7, lr}
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 7, -8
 1211              		.cfi_offset 14, -4
 1212 0002 84B0     		sub	sp, sp, #16
 1213              		.cfi_def_cfa_offset 24
 1214 0004 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
 1216 0006 7860     		str	r0, [r7, #4]
 1217 0008 3960     		str	r1, [r7]
 550:main.c        ****     //UART_UartPutString("in ExecuteCommand \n");
 551:main.c        ****     uint8 status;
 552:main.c        ****     status = STS_CMD_DONE;
 1218              		.loc 1 552 0
 1219 000a 0F23     		mov	r3, #15
 1220 000c FB18     		add	r3, r7, r3
 1221 000e 0022     		mov	r2, #0
 1222 0010 1A70     		strb	r2, [r3]
 553:main.c        **** 
 554:main.c        ****     /* Execute received command */
 555:main.c        ****     switch (cmd)
 1223              		.loc 1 555 0
 1224 0012 7B68     		ldr	r3, [r7, #4]
 1225 0014 012B     		cmp	r3, #1
 1226 0016 09D0     		beq	.L62
 1227 0018 02D3     		bcc	.L63
 1228 001a 072B     		cmp	r3, #7
 1229 001c 15D8     		bhi	.L61
 1230 001e 0BE0     		b	.L67
 1231              	.L63:
 556:main.c        ****     {
 557:main.c        ****         case FAN1:
 558:main.c        ****          //   UART_UartPutString("in ExecuteCommand :: FAN1\n");
 559:main.c        ****             UpdateLedsFan1(value);
 1232              		.loc 1 559 0
 1233 0020 3B68     		ldr	r3, [r7]
 1234 0022 9BB2     		uxth	r3, r3
 1235 0024 181C     		mov	r0, r3
 1236 0026 FFF7FEFF 		bl	UpdateLedsFan1
 560:main.c        ****             break;
 1237              		.loc 1 560 0
 1238 002a 13E0     		b	.L65
 1239              	.L62:
 561:main.c        ****         case FAN2:
 562:main.c        ****            // UART_UartPutString("in ExecuteCommand :: FAN2\n");
 563:main.c        ****             UpdateLedsFan2(value);
 1240              		.loc 1 563 0
 1241 002c 3B68     		ldr	r3, [r7]
 1242 002e 9BB2     		uxth	r3, r3
 1243 0030 181C     		mov	r0, r3
 1244 0032 FFF7FEFF 		bl	UpdateLedsFan2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 33


 564:main.c        ****             break;
 1245              		.loc 1 564 0
 1246 0036 0DE0     		b	.L65
 1247              	.L67:
 565:main.c        ****         case SWITCH1:
 566:main.c        ****         case SWITCH2:
 567:main.c        ****         case SWITCH3:
 568:main.c        ****         case SWITCH4:
 569:main.c        ****         case SWITCH5:
 570:main.c        ****         case SOCKET1:
 571:main.c        ****             //UART_UartPutString("in ExecuteCommand :: Switch & Socket\n");
 572:main.c        ****             UpdateSwitchLeds(cmd, value);
 1248              		.loc 1 572 0
 1249 0038 7B68     		ldr	r3, [r7, #4]
 1250 003a 9AB2     		uxth	r2, r3
 1251 003c 3B68     		ldr	r3, [r7]
 1252 003e 9BB2     		uxth	r3, r3
 1253 0040 101C     		mov	r0, r2
 1254 0042 191C     		mov	r1, r3
 1255 0044 FFF7FEFF 		bl	UpdateSwitchLeds
 573:main.c        ****             break;
 1256              		.loc 1 573 0
 1257 0048 04E0     		b	.L65
 1258              	.L61:
 574:main.c        ****         default:
 575:main.c        ****             //UART_UartPutString("in ExecuteCommand :: default\n");
 576:main.c        ****             status = STS_CMD_FAIL;
 1259              		.loc 1 576 0
 1260 004a 0F23     		mov	r3, #15
 1261 004c FB18     		add	r3, r7, r3
 1262 004e FF22     		mov	r2, #255
 1263 0050 1A70     		strb	r2, [r3]
 577:main.c        ****             break;
 1264              		.loc 1 577 0
 1265 0052 C046     		mov	r8, r8
 1266              	.L65:
 578:main.c        ****     }
 579:main.c        **** 
 580:main.c        ****     return (status);                            
 1267              		.loc 1 580 0
 1268 0054 0F23     		mov	r3, #15
 1269 0056 FB18     		add	r3, r7, r3
 1270 0058 1B78     		ldrb	r3, [r3]
 581:main.c        **** }
 1271              		.loc 1 581 0
 1272 005a 181C     		mov	r0, r3
 1273 005c BD46     		mov	sp, r7
 1274 005e 04B0     		add	sp, sp, #16
 1275              		@ sp needed
 1276 0060 80BD     		pop	{r7, pc}
 1277              		.cfi_endproc
 1278              	.LFE38:
 1279              		.size	ExecuteCommand, .-ExecuteCommand
 1280 0062 C046     		.section	.text.UpdateSwitchLeds,"ax",%progbits
 1281              		.align	2
 1282              		.global	UpdateSwitchLeds
 1283              		.code	16
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 34


 1284              		.thumb_func
 1285              		.type	UpdateSwitchLeds, %function
 1286              	UpdateSwitchLeds:
 1287              	.LFB39:
 582:main.c        **** 
 583:main.c        **** void UpdateSwitchLeds(uint16 res, uint16 curPos)
 584:main.c        **** 
 585:main.c        **** {  
 1288              		.loc 1 585 0
 1289              		.cfi_startproc
 1290 0000 80B5     		push	{r7, lr}
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 82B0     		sub	sp, sp, #8
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
 1298 0006 021C     		mov	r2, r0
 1299 0008 BB1D     		add	r3, r7, #6
 1300 000a 1A80     		strh	r2, [r3]
 1301 000c 3B1D     		add	r3, r7, #4
 1302 000e 0A1C     		add	r2, r1, #0
 1303 0010 1A80     		strh	r2, [r3]
 586:main.c        ****     //UART_UartPutString("in UpdateSwitchLeds\n");
 587:main.c        ****                       
 588:main.c        ****        switch(res)
 1304              		.loc 1 588 0
 1305 0012 BB1D     		add	r3, r7, #6
 1306 0014 1B88     		ldrh	r3, [r3]
 1307 0016 072B     		cmp	r3, #7
 1308 0018 00D9     		bls	.LCB1071
 1309 001a F6E0     		b	.L69	@long jump
 1310              	.LCB1071:
 1311 001c 9A00     		lsl	r2, r3, #2
 1312 001e 8F4B     		ldr	r3, .L90
 1313 0020 D318     		add	r3, r2, r3
 1314 0022 1B68     		ldr	r3, [r3]
 1315 0024 9F46     		mov	pc, r3
 1316              		.section	.rodata
 1317              		.align	2
 1318              	.L71:
 1319 003c 0A020000 		.word	.L69
 1320 0040 0A020000 		.word	.L69
 1321 0044 26000000 		.word	.L70
 1322 0048 76000000 		.word	.L72
 1323 004c C6000000 		.word	.L73
 1324 0050 1A010000 		.word	.L74
 1325 0054 6A010000 		.word	.L75
 1326 0058 BA010000 		.word	.L76
 1327              		.section	.text.UpdateSwitchLeds
 1328              	.L70:
 589:main.c        ****     {
 590:main.c        ****             case SWITCH1:
 591:main.c        ****                 if(curPos == 100)
 1329              		.loc 1 591 0
 1330 0026 3B1D     		add	r3, r7, #4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 35


 1331 0028 1B88     		ldrh	r3, [r3]
 1332 002a 642B     		cmp	r3, #100
 1333 002c 11D1     		bne	.L77
 592:main.c        ****                 {
 593:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch1 :: on \n");
 594:main.c        ****                     LED11_Write(1);
 1334              		.loc 1 594 0
 1335 002e 0120     		mov	r0, #1
 1336 0030 FFF7FEFF 		bl	LED11_Write
 595:main.c        ****                     Triac3_Write(1);
 1337              		.loc 1 595 0
 1338 0034 0120     		mov	r0, #1
 1339 0036 FFF7FEFF 		bl	Triac3_Write
 596:main.c        ****                                       
 597:main.c        ****                     cache[2]=curPos;
 1340              		.loc 1 597 0
 1341 003a 3B1D     		add	r3, r7, #4
 1342 003c 1B88     		ldrh	r3, [r3]
 1343 003e DAB2     		uxtb	r2, r3
 1344 0040 874B     		ldr	r3, .L90+4
 1345 0042 9A70     		strb	r2, [r3, #2]
 598:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1346              		.loc 1 598 0
 1347 0044 874A     		ldr	r2, .L90+8
 1348 0046 864B     		ldr	r3, .L90+4
 1349 0048 101C     		mov	r0, r2
 1350 004a 191C     		mov	r1, r3
 1351 004c FFF7FEFF 		bl	CySysFlashWriteRow
 599:main.c        ****                     
 600:main.c        ****                 }
 601:main.c        ****                 else
 602:main.c        ****                 {
 603:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch1 :: off \n");
 604:main.c        ****                     LED11_Write(0);
 605:main.c        ****                     Triac3_Write(0);
 606:main.c        ****                                        
 607:main.c        ****                     cache[2]=curPos;
 608:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 609:main.c        ****                 }
 610:main.c        ****                 break;
 1352              		.loc 1 610 0
 1353 0050 00E1     		b	.L68
 1354              	.L77:
 604:main.c        ****                     Triac3_Write(0);
 1355              		.loc 1 604 0
 1356 0052 0020     		mov	r0, #0
 1357 0054 FFF7FEFF 		bl	LED11_Write
 605:main.c        ****                                        
 1358              		.loc 1 605 0
 1359 0058 0020     		mov	r0, #0
 1360 005a FFF7FEFF 		bl	Triac3_Write
 607:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1361              		.loc 1 607 0
 1362 005e 3B1D     		add	r3, r7, #4
 1363 0060 1B88     		ldrh	r3, [r3]
 1364 0062 DAB2     		uxtb	r2, r3
 1365 0064 7E4B     		ldr	r3, .L90+4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 36


 1366 0066 9A70     		strb	r2, [r3, #2]
 608:main.c        ****                 }
 1367              		.loc 1 608 0
 1368 0068 7E4A     		ldr	r2, .L90+8
 1369 006a 7D4B     		ldr	r3, .L90+4
 1370 006c 101C     		mov	r0, r2
 1371 006e 191C     		mov	r1, r3
 1372 0070 FFF7FEFF 		bl	CySysFlashWriteRow
 1373              		.loc 1 610 0
 1374 0074 EEE0     		b	.L68
 1375              	.L72:
 611:main.c        ****             case SWITCH2:
 612:main.c        ****                 if(curPos == 100 )
 1376              		.loc 1 612 0
 1377 0076 3B1D     		add	r3, r7, #4
 1378 0078 1B88     		ldrh	r3, [r3]
 1379 007a 642B     		cmp	r3, #100
 1380 007c 11D1     		bne	.L80
 613:main.c        ****                 {
 614:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch2 :: on \n");
 615:main.c        ****                     LED12_Write(1);
 1381              		.loc 1 615 0
 1382 007e 0120     		mov	r0, #1
 1383 0080 FFF7FEFF 		bl	LED12_Write
 616:main.c        ****                     Triac4_Write(1);
 1384              		.loc 1 616 0
 1385 0084 0120     		mov	r0, #1
 1386 0086 FFF7FEFF 		bl	Triac4_Write
 617:main.c        ****                                         
 618:main.c        ****                     cache[3]=curPos;
 1387              		.loc 1 618 0
 1388 008a 3B1D     		add	r3, r7, #4
 1389 008c 1B88     		ldrh	r3, [r3]
 1390 008e DAB2     		uxtb	r2, r3
 1391 0090 734B     		ldr	r3, .L90+4
 1392 0092 DA70     		strb	r2, [r3, #3]
 619:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1393              		.loc 1 619 0
 1394 0094 734A     		ldr	r2, .L90+8
 1395 0096 724B     		ldr	r3, .L90+4
 1396 0098 101C     		mov	r0, r2
 1397 009a 191C     		mov	r1, r3
 1398 009c FFF7FEFF 		bl	CySysFlashWriteRow
 620:main.c        ****                     
 621:main.c        ****                 }
 622:main.c        ****                 else
 623:main.c        ****                 {
 624:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch2 :: off \n");
 625:main.c        ****                     LED12_Write(0);
 626:main.c        ****                     Triac4_Write(0);
 627:main.c        ****                                        
 628:main.c        ****                     cache[3]=curPos;
 629:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 630:main.c        ****                     
 631:main.c        ****                 }
 632:main.c        ****                 break;
 1399              		.loc 1 632 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 37


 1400 00a0 D8E0     		b	.L68
 1401              	.L80:
 625:main.c        ****                     Triac4_Write(0);
 1402              		.loc 1 625 0
 1403 00a2 0020     		mov	r0, #0
 1404 00a4 FFF7FEFF 		bl	LED12_Write
 626:main.c        ****                                        
 1405              		.loc 1 626 0
 1406 00a8 0020     		mov	r0, #0
 1407 00aa FFF7FEFF 		bl	Triac4_Write
 628:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1408              		.loc 1 628 0
 1409 00ae 3B1D     		add	r3, r7, #4
 1410 00b0 1B88     		ldrh	r3, [r3]
 1411 00b2 DAB2     		uxtb	r2, r3
 1412 00b4 6A4B     		ldr	r3, .L90+4
 1413 00b6 DA70     		strb	r2, [r3, #3]
 629:main.c        ****                     
 1414              		.loc 1 629 0
 1415 00b8 6A4A     		ldr	r2, .L90+8
 1416 00ba 694B     		ldr	r3, .L90+4
 1417 00bc 101C     		mov	r0, r2
 1418 00be 191C     		mov	r1, r3
 1419 00c0 FFF7FEFF 		bl	CySysFlashWriteRow
 1420              		.loc 1 632 0
 1421 00c4 C6E0     		b	.L68
 1422              	.L73:
 633:main.c        ****             case SWITCH3:
 634:main.c        ****                 if(curPos == 0x100 )
 1423              		.loc 1 634 0
 1424 00c6 3B1D     		add	r3, r7, #4
 1425 00c8 1A88     		ldrh	r2, [r3]
 1426 00ca 8023     		mov	r3, #128
 1427 00cc 5B00     		lsl	r3, r3, #1
 1428 00ce 9A42     		cmp	r2, r3
 1429 00d0 11D1     		bne	.L82
 635:main.c        ****                 {
 636:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch3 :: on \n");
 637:main.c        ****                     LED13_Write(1);
 1430              		.loc 1 637 0
 1431 00d2 0120     		mov	r0, #1
 1432 00d4 FFF7FEFF 		bl	LED13_Write
 638:main.c        ****                     Triac5_Write(1);
 1433              		.loc 1 638 0
 1434 00d8 0120     		mov	r0, #1
 1435 00da FFF7FEFF 		bl	Triac5_Write
 639:main.c        ****                                        
 640:main.c        ****                     cache[4]=curPos;
 1436              		.loc 1 640 0
 1437 00de 3B1D     		add	r3, r7, #4
 1438 00e0 1B88     		ldrh	r3, [r3]
 1439 00e2 DAB2     		uxtb	r2, r3
 1440 00e4 5E4B     		ldr	r3, .L90+4
 1441 00e6 1A71     		strb	r2, [r3, #4]
 641:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1442              		.loc 1 641 0
 1443 00e8 5E4A     		ldr	r2, .L90+8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 38


 1444 00ea 5D4B     		ldr	r3, .L90+4
 1445 00ec 101C     		mov	r0, r2
 1446 00ee 191C     		mov	r1, r3
 1447 00f0 FFF7FEFF 		bl	CySysFlashWriteRow
 642:main.c        ****                     
 643:main.c        ****                 }
 644:main.c        ****                 else
 645:main.c        ****                 {
 646:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch3 :: off \n");
 647:main.c        ****                     LED13_Write(0);
 648:main.c        ****                     Triac5_Write(0);
 649:main.c        ****                                        
 650:main.c        ****                     cache[4]=curPos;
 651:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 652:main.c        ****                    
 653:main.c        ****                 }
 654:main.c        ****                 break;
 1448              		.loc 1 654 0
 1449 00f4 AEE0     		b	.L68
 1450              	.L82:
 647:main.c        ****                     Triac5_Write(0);
 1451              		.loc 1 647 0
 1452 00f6 0020     		mov	r0, #0
 1453 00f8 FFF7FEFF 		bl	LED13_Write
 648:main.c        ****                                        
 1454              		.loc 1 648 0
 1455 00fc 0020     		mov	r0, #0
 1456 00fe FFF7FEFF 		bl	Triac5_Write
 650:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1457              		.loc 1 650 0
 1458 0102 3B1D     		add	r3, r7, #4
 1459 0104 1B88     		ldrh	r3, [r3]
 1460 0106 DAB2     		uxtb	r2, r3
 1461 0108 554B     		ldr	r3, .L90+4
 1462 010a 1A71     		strb	r2, [r3, #4]
 651:main.c        ****                    
 1463              		.loc 1 651 0
 1464 010c 554A     		ldr	r2, .L90+8
 1465 010e 544B     		ldr	r3, .L90+4
 1466 0110 101C     		mov	r0, r2
 1467 0112 191C     		mov	r1, r3
 1468 0114 FFF7FEFF 		bl	CySysFlashWriteRow
 1469              		.loc 1 654 0
 1470 0118 9CE0     		b	.L68
 1471              	.L74:
 655:main.c        ****             case SWITCH4:
 656:main.c        ****                 if(curPos == 100 )
 1472              		.loc 1 656 0
 1473 011a 3B1D     		add	r3, r7, #4
 1474 011c 1B88     		ldrh	r3, [r3]
 1475 011e 642B     		cmp	r3, #100
 1476 0120 11D1     		bne	.L84
 657:main.c        ****                 {
 658:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch4 :: on \n");
 659:main.c        ****                     LED14_Write(1);
 1477              		.loc 1 659 0
 1478 0122 0120     		mov	r0, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 39


 1479 0124 FFF7FEFF 		bl	LED14_Write
 660:main.c        ****                     Triac6_Write(1);
 1480              		.loc 1 660 0
 1481 0128 0120     		mov	r0, #1
 1482 012a FFF7FEFF 		bl	Triac6_Write
 661:main.c        ****                                       
 662:main.c        ****                     cache[5]=curPos;
 1483              		.loc 1 662 0
 1484 012e 3B1D     		add	r3, r7, #4
 1485 0130 1B88     		ldrh	r3, [r3]
 1486 0132 DAB2     		uxtb	r2, r3
 1487 0134 4A4B     		ldr	r3, .L90+4
 1488 0136 5A71     		strb	r2, [r3, #5]
 663:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache); 
 1489              		.loc 1 663 0
 1490 0138 4A4A     		ldr	r2, .L90+8
 1491 013a 494B     		ldr	r3, .L90+4
 1492 013c 101C     		mov	r0, r2
 1493 013e 191C     		mov	r1, r3
 1494 0140 FFF7FEFF 		bl	CySysFlashWriteRow
 664:main.c        ****                 }
 665:main.c        ****                    
 666:main.c        ****                 else
 667:main.c        ****                 {
 668:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch4 :: off \n");
 669:main.c        ****                     LED14_Write(0);
 670:main.c        ****                     Triac6_Write(0);
 671:main.c        ****                   
 672:main.c        ****                     cache[5]=curPos;
 673:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 674:main.c        ****                 }   
 675:main.c        ****                    
 676:main.c        ****                 break;
 1495              		.loc 1 676 0
 1496 0144 86E0     		b	.L68
 1497              	.L84:
 669:main.c        ****                     Triac6_Write(0);
 1498              		.loc 1 669 0
 1499 0146 0020     		mov	r0, #0
 1500 0148 FFF7FEFF 		bl	LED14_Write
 670:main.c        ****                   
 1501              		.loc 1 670 0
 1502 014c 0020     		mov	r0, #0
 1503 014e FFF7FEFF 		bl	Triac6_Write
 672:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1504              		.loc 1 672 0
 1505 0152 3B1D     		add	r3, r7, #4
 1506 0154 1B88     		ldrh	r3, [r3]
 1507 0156 DAB2     		uxtb	r2, r3
 1508 0158 414B     		ldr	r3, .L90+4
 1509 015a 5A71     		strb	r2, [r3, #5]
 673:main.c        ****                 }   
 1510              		.loc 1 673 0
 1511 015c 414A     		ldr	r2, .L90+8
 1512 015e 404B     		ldr	r3, .L90+4
 1513 0160 101C     		mov	r0, r2
 1514 0162 191C     		mov	r1, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 40


 1515 0164 FFF7FEFF 		bl	CySysFlashWriteRow
 1516              		.loc 1 676 0
 1517 0168 74E0     		b	.L68
 1518              	.L75:
 677:main.c        ****             case SWITCH5:
 678:main.c        ****                 if(curPos == 100)
 1519              		.loc 1 678 0
 1520 016a 3B1D     		add	r3, r7, #4
 1521 016c 1B88     		ldrh	r3, [r3]
 1522 016e 642B     		cmp	r3, #100
 1523 0170 11D1     		bne	.L86
 679:main.c        ****                 {
 680:main.c        ****                    // UART_UartPutString("in UpdateSwitchLeds :: switch5 :: on \n");
 681:main.c        ****                     LED15_Write(1);
 1524              		.loc 1 681 0
 1525 0172 0120     		mov	r0, #1
 1526 0174 FFF7FEFF 		bl	LED15_Write
 682:main.c        ****                     Triac7_Write(1);
 1527              		.loc 1 682 0
 1528 0178 0120     		mov	r0, #1
 1529 017a FFF7FEFF 		bl	Triac7_Write
 683:main.c        ****                                         
 684:main.c        ****                     cache[6]=curPos;
 1530              		.loc 1 684 0
 1531 017e 3B1D     		add	r3, r7, #4
 1532 0180 1B88     		ldrh	r3, [r3]
 1533 0182 DAB2     		uxtb	r2, r3
 1534 0184 364B     		ldr	r3, .L90+4
 1535 0186 9A71     		strb	r2, [r3, #6]
 685:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1536              		.loc 1 685 0
 1537 0188 364A     		ldr	r2, .L90+8
 1538 018a 354B     		ldr	r3, .L90+4
 1539 018c 101C     		mov	r0, r2
 1540 018e 191C     		mov	r1, r3
 1541 0190 FFF7FEFF 		bl	CySysFlashWriteRow
 686:main.c        ****                     
 687:main.c        ****                 }
 688:main.c        ****                 else
 689:main.c        ****                 {
 690:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: switch5 :: off \n");
 691:main.c        ****                     LED15_Write(0);
 692:main.c        ****                     Triac7_Write(0);
 693:main.c        ****                                        
 694:main.c        ****                     cache[6]=curPos;
 695:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 696:main.c        ****                     
 697:main.c        ****                 }
 698:main.c        ****                 break;
 1542              		.loc 1 698 0
 1543 0194 5EE0     		b	.L68
 1544              	.L86:
 691:main.c        ****                     Triac7_Write(0);
 1545              		.loc 1 691 0
 1546 0196 0020     		mov	r0, #0
 1547 0198 FFF7FEFF 		bl	LED15_Write
 692:main.c        ****                                        
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 41


 1548              		.loc 1 692 0
 1549 019c 0020     		mov	r0, #0
 1550 019e FFF7FEFF 		bl	Triac7_Write
 694:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1551              		.loc 1 694 0
 1552 01a2 3B1D     		add	r3, r7, #4
 1553 01a4 1B88     		ldrh	r3, [r3]
 1554 01a6 DAB2     		uxtb	r2, r3
 1555 01a8 2D4B     		ldr	r3, .L90+4
 1556 01aa 9A71     		strb	r2, [r3, #6]
 695:main.c        ****                     
 1557              		.loc 1 695 0
 1558 01ac 2D4A     		ldr	r2, .L90+8
 1559 01ae 2C4B     		ldr	r3, .L90+4
 1560 01b0 101C     		mov	r0, r2
 1561 01b2 191C     		mov	r1, r3
 1562 01b4 FFF7FEFF 		bl	CySysFlashWriteRow
 1563              		.loc 1 698 0
 1564 01b8 4CE0     		b	.L68
 1565              	.L76:
 699:main.c        ****             case SOCKET1:
 700:main.c        ****                 if(curPos == 100 )
 1566              		.loc 1 700 0
 1567 01ba 3B1D     		add	r3, r7, #4
 1568 01bc 1B88     		ldrh	r3, [r3]
 1569 01be 642B     		cmp	r3, #100
 1570 01c0 11D1     		bne	.L88
 701:main.c        ****                 {
 702:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: socket1 :: on \n");
 703:main.c        ****                     LED16_Write(1);
 1571              		.loc 1 703 0
 1572 01c2 0120     		mov	r0, #1
 1573 01c4 FFF7FEFF 		bl	LED16_Write
 704:main.c        ****                     Triac8_Write(1);
 1574              		.loc 1 704 0
 1575 01c8 0120     		mov	r0, #1
 1576 01ca FFF7FEFF 		bl	Triac8_Write
 705:main.c        ****                                        
 706:main.c        ****                     cache[7]=curPos;
 1577              		.loc 1 706 0
 1578 01ce 3B1D     		add	r3, r7, #4
 1579 01d0 1B88     		ldrh	r3, [r3]
 1580 01d2 DAB2     		uxtb	r2, r3
 1581 01d4 224B     		ldr	r3, .L90+4
 1582 01d6 DA71     		strb	r2, [r3, #7]
 707:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1583              		.loc 1 707 0
 1584 01d8 224A     		ldr	r2, .L90+8
 1585 01da 214B     		ldr	r3, .L90+4
 1586 01dc 101C     		mov	r0, r2
 1587 01de 191C     		mov	r1, r3
 1588 01e0 FFF7FEFF 		bl	CySysFlashWriteRow
 708:main.c        ****                    
 709:main.c        ****                 }
 710:main.c        ****                 else
 711:main.c        ****                 {
 712:main.c        ****                     //UART_UartPutString("in UpdateSwitchLeds :: socket1 :: off \n");
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 42


 713:main.c        ****                     LED16_Write(0);
 714:main.c        ****                     Triac8_Write(0);
 715:main.c        ****                                        
 716:main.c        ****                     cache[7]=curPos;
 717:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 718:main.c        ****                    
 719:main.c        ****                 }
 720:main.c        ****                 break;
 1589              		.loc 1 720 0
 1590 01e4 36E0     		b	.L68
 1591              	.L88:
 713:main.c        ****                     Triac8_Write(0);
 1592              		.loc 1 713 0
 1593 01e6 0020     		mov	r0, #0
 1594 01e8 FFF7FEFF 		bl	LED16_Write
 714:main.c        ****                                        
 1595              		.loc 1 714 0
 1596 01ec 0020     		mov	r0, #0
 1597 01ee FFF7FEFF 		bl	Triac8_Write
 716:main.c        ****                     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1598              		.loc 1 716 0
 1599 01f2 3B1D     		add	r3, r7, #4
 1600 01f4 1B88     		ldrh	r3, [r3]
 1601 01f6 DAB2     		uxtb	r2, r3
 1602 01f8 194B     		ldr	r3, .L90+4
 1603 01fa DA71     		strb	r2, [r3, #7]
 717:main.c        ****                    
 1604              		.loc 1 717 0
 1605 01fc 194A     		ldr	r2, .L90+8
 1606 01fe 184B     		ldr	r3, .L90+4
 1607 0200 101C     		mov	r0, r2
 1608 0202 191C     		mov	r1, r3
 1609 0204 FFF7FEFF 		bl	CySysFlashWriteRow
 1610              		.loc 1 720 0
 1611 0208 24E0     		b	.L68
 1612              	.L69:
 721:main.c        ****             default:
 722:main.c        ****                 //UART_UartPutString("in UpdateSwitchLeds :: All :: on \n");
 723:main.c        ****                 LED11_Write(1);
 1613              		.loc 1 723 0
 1614 020a 0120     		mov	r0, #1
 1615 020c FFF7FEFF 		bl	LED11_Write
 724:main.c        ****                 LED12_Write(1);
 1616              		.loc 1 724 0
 1617 0210 0120     		mov	r0, #1
 1618 0212 FFF7FEFF 		bl	LED12_Write
 725:main.c        ****                 LED13_Write(1);
 1619              		.loc 1 725 0
 1620 0216 0120     		mov	r0, #1
 1621 0218 FFF7FEFF 		bl	LED13_Write
 726:main.c        ****                 LED14_Write(1);
 1622              		.loc 1 726 0
 1623 021c 0120     		mov	r0, #1
 1624 021e FFF7FEFF 		bl	LED14_Write
 727:main.c        ****                 LED15_Write(1);
 1625              		.loc 1 727 0
 1626 0222 0120     		mov	r0, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 43


 1627 0224 FFF7FEFF 		bl	LED15_Write
 728:main.c        ****                 LED16_Write(1);
 1628              		.loc 1 728 0
 1629 0228 0120     		mov	r0, #1
 1630 022a FFF7FEFF 		bl	LED16_Write
 729:main.c        ****                 Triac3_Write(1);
 1631              		.loc 1 729 0
 1632 022e 0120     		mov	r0, #1
 1633 0230 FFF7FEFF 		bl	Triac3_Write
 730:main.c        ****                 Triac4_Write(1);
 1634              		.loc 1 730 0
 1635 0234 0120     		mov	r0, #1
 1636 0236 FFF7FEFF 		bl	Triac4_Write
 731:main.c        ****                 Triac5_Write(1);
 1637              		.loc 1 731 0
 1638 023a 0120     		mov	r0, #1
 1639 023c FFF7FEFF 		bl	Triac5_Write
 732:main.c        ****                 Triac6_Write(1);
 1640              		.loc 1 732 0
 1641 0240 0120     		mov	r0, #1
 1642 0242 FFF7FEFF 		bl	Triac6_Write
 733:main.c        ****                 Triac7_Write(1);
 1643              		.loc 1 733 0
 1644 0246 0120     		mov	r0, #1
 1645 0248 FFF7FEFF 		bl	Triac7_Write
 734:main.c        ****                 Triac8_Write(1);
 1646              		.loc 1 734 0
 1647 024c 0120     		mov	r0, #1
 1648 024e FFF7FEFF 		bl	Triac8_Write
 735:main.c        ****                 break;
 1649              		.loc 1 735 0
 1650 0252 C046     		mov	r8, r8
 1651              	.L68:
 736:main.c        ****     }
 737:main.c        **** }
 1652              		.loc 1 737 0
 1653 0254 BD46     		mov	sp, r7
 1654 0256 02B0     		add	sp, sp, #8
 1655              		@ sp needed
 1656 0258 80BD     		pop	{r7, pc}
 1657              	.L91:
 1658 025a C046     		.align	2
 1659              	.L90:
 1660 025c 3C000000 		.word	.L71
 1661 0260 00000000 		.word	cache
 1662 0264 FE030000 		.word	1022
 1663              		.cfi_endproc
 1664              	.LFE39:
 1665              		.size	UpdateSwitchLeds, .-UpdateSwitchLeds
 1666              		.section	.text.UpdateLedsFan1,"ax",%progbits
 1667              		.align	2
 1668              		.global	UpdateLedsFan1
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	UpdateLedsFan1, %function
 1672              	UpdateLedsFan1:
 1673              	.LFB40:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 44


 738:main.c        **** 
 739:main.c        **** // Fan 1 - updating LED
 740:main.c        **** void UpdateLedsFan1(uint16 curPos)
 741:main.c        **** {
 1674              		.loc 1 741 0
 1675              		.cfi_startproc
 1676 0000 80B5     		push	{r7, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 82B0     		sub	sp, sp, #8
 1681              		.cfi_def_cfa_offset 16
 1682 0004 00AF     		add	r7, sp, #0
 1683              		.cfi_def_cfa_register 7
 1684 0006 021C     		mov	r2, r0
 1685 0008 BB1D     		add	r3, r7, #6
 1686 000a 1A80     		strh	r2, [r3]
 742:main.c        ****     /* Turn of all LEDs first */
 743:main.c        ****     LED6_Write(0);
 1687              		.loc 1 743 0
 1688 000c 0020     		mov	r0, #0
 1689 000e FFF7FEFF 		bl	LED6_Write
 744:main.c        ****     LED7_Write(0);
 1690              		.loc 1 744 0
 1691 0012 0020     		mov	r0, #0
 1692 0014 FFF7FEFF 		bl	LED7_Write
 745:main.c        ****     LED8_Write(0);
 1693              		.loc 1 745 0
 1694 0018 0020     		mov	r0, #0
 1695 001a FFF7FEFF 		bl	LED8_Write
 746:main.c        ****     LED9_Write(0);
 1696              		.loc 1 746 0
 1697 001e 0020     		mov	r0, #0
 1698 0020 FFF7FEFF 		bl	LED9_Write
 747:main.c        ****     LED10_Write(0);
 1699              		.loc 1 747 0
 1700 0024 0020     		mov	r0, #0
 1701 0026 FFF7FEFF 		bl	LED10_Write
 748:main.c        ****     Triac1_Write(0);
 1702              		.loc 1 748 0
 1703 002a 0020     		mov	r0, #0
 1704 002c FFF7FEFF 		bl	Triac1_Write
 749:main.c        ****     cache[0]=0;
 1705              		.loc 1 749 0
 1706 0030 3A4B     		ldr	r3, .L98
 1707 0032 0022     		mov	r2, #0
 1708 0034 1A70     		strb	r2, [r3]
 750:main.c        ****     CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1709              		.loc 1 750 0
 1710 0036 3A4A     		ldr	r2, .L98+4
 1711 0038 384B     		ldr	r3, .L98
 1712 003a 101C     		mov	r0, r2
 1713 003c 191C     		mov	r1, r3
 1714 003e FFF7FEFF 		bl	CySysFlashWriteRow
 751:main.c        ****     
 752:main.c        ****     //UART_UartPutString("in UpdateLedsFan1\n");
 753:main.c        ****     
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 45


 754:main.c        ****     if(curPos<0)
 755:main.c        ****     {
 756:main.c        ****         cache[0]=0;
 757:main.c        ****      CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 758:main.c        ****     
 759:main.c        ****     }
 760:main.c        ****     if (curPos > 10)
 1715              		.loc 1 760 0
 1716 0042 BB1D     		add	r3, r7, #6
 1717 0044 1B88     		ldrh	r3, [r3]
 1718 0046 0A2B     		cmp	r3, #10
 1719 0048 10D9     		bls	.L93
 761:main.c        ****     {
 762:main.c        ****         //UART_UartPutString("in UpdateLedsFan1 :: range >10\n");
 763:main.c        ****         LED6_Write(1);
 1720              		.loc 1 763 0
 1721 004a 0120     		mov	r0, #1
 1722 004c FFF7FEFF 		bl	LED6_Write
 764:main.c        ****         Triac1_Write(1);
 1723              		.loc 1 764 0
 1724 0050 0120     		mov	r0, #1
 1725 0052 FFF7FEFF 		bl	Triac1_Write
 765:main.c        ****         
 766:main.c        ****         cache[0]=curPos;
 1726              		.loc 1 766 0
 1727 0056 BB1D     		add	r3, r7, #6
 1728 0058 1B88     		ldrh	r3, [r3]
 1729 005a DAB2     		uxtb	r2, r3
 1730 005c 2F4B     		ldr	r3, .L98
 1731 005e 1A70     		strb	r2, [r3]
 767:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1732              		.loc 1 767 0
 1733 0060 2F4A     		ldr	r2, .L98+4
 1734 0062 2E4B     		ldr	r3, .L98
 1735 0064 101C     		mov	r0, r2
 1736 0066 191C     		mov	r1, r3
 1737 0068 FFF7FEFF 		bl	CySysFlashWriteRow
 1738              	.L93:
 768:main.c        ****         
 769:main.c        ****     }
 770:main.c        ****     
 771:main.c        ****     if (curPos > 20)
 1739              		.loc 1 771 0
 1740 006c BB1D     		add	r3, r7, #6
 1741 006e 1B88     		ldrh	r3, [r3]
 1742 0070 142B     		cmp	r3, #20
 1743 0072 10D9     		bls	.L94
 772:main.c        ****     {
 773:main.c        ****         //UART_UartPutString("in UpdateLedsFan1 :: range >20\n");
 774:main.c        ****         LED7_Write(1);
 1744              		.loc 1 774 0
 1745 0074 0120     		mov	r0, #1
 1746 0076 FFF7FEFF 		bl	LED7_Write
 775:main.c        ****         Triac1_Write(1);
 1747              		.loc 1 775 0
 1748 007a 0120     		mov	r0, #1
 1749 007c FFF7FEFF 		bl	Triac1_Write
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 46


 776:main.c        ****         
 777:main.c        ****         cache[0]=curPos;
 1750              		.loc 1 777 0
 1751 0080 BB1D     		add	r3, r7, #6
 1752 0082 1B88     		ldrh	r3, [r3]
 1753 0084 DAB2     		uxtb	r2, r3
 1754 0086 254B     		ldr	r3, .L98
 1755 0088 1A70     		strb	r2, [r3]
 778:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1756              		.loc 1 778 0
 1757 008a 254A     		ldr	r2, .L98+4
 1758 008c 234B     		ldr	r3, .L98
 1759 008e 101C     		mov	r0, r2
 1760 0090 191C     		mov	r1, r3
 1761 0092 FFF7FEFF 		bl	CySysFlashWriteRow
 1762              	.L94:
 779:main.c        ****     }
 780:main.c        ****     
 781:main.c        ****     if (curPos > 40)
 1763              		.loc 1 781 0
 1764 0096 BB1D     		add	r3, r7, #6
 1765 0098 1B88     		ldrh	r3, [r3]
 1766 009a 282B     		cmp	r3, #40
 1767 009c 10D9     		bls	.L95
 782:main.c        ****     {
 783:main.c        ****        // UART_UartPutString("in UpdateLedsFan1 :: range >40\n");
 784:main.c        ****         LED8_Write(1);
 1768              		.loc 1 784 0
 1769 009e 0120     		mov	r0, #1
 1770 00a0 FFF7FEFF 		bl	LED8_Write
 785:main.c        ****         Triac1_Write(1);
 1771              		.loc 1 785 0
 1772 00a4 0120     		mov	r0, #1
 1773 00a6 FFF7FEFF 		bl	Triac1_Write
 786:main.c        ****        
 787:main.c        ****         cache[0]=curPos;
 1774              		.loc 1 787 0
 1775 00aa BB1D     		add	r3, r7, #6
 1776 00ac 1B88     		ldrh	r3, [r3]
 1777 00ae DAB2     		uxtb	r2, r3
 1778 00b0 1A4B     		ldr	r3, .L98
 1779 00b2 1A70     		strb	r2, [r3]
 788:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1780              		.loc 1 788 0
 1781 00b4 1A4A     		ldr	r2, .L98+4
 1782 00b6 194B     		ldr	r3, .L98
 1783 00b8 101C     		mov	r0, r2
 1784 00ba 191C     		mov	r1, r3
 1785 00bc FFF7FEFF 		bl	CySysFlashWriteRow
 1786              	.L95:
 789:main.c        ****     }
 790:main.c        ****     
 791:main.c        ****     if (curPos > 60)
 1787              		.loc 1 791 0
 1788 00c0 BB1D     		add	r3, r7, #6
 1789 00c2 1B88     		ldrh	r3, [r3]
 1790 00c4 3C2B     		cmp	r3, #60
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 47


 1791 00c6 10D9     		bls	.L96
 792:main.c        ****     {
 793:main.c        ****        // UART_UartPutString("in UpdateLedsFan1 :: range > 60\n");
 794:main.c        ****         LED9_Write(1);
 1792              		.loc 1 794 0
 1793 00c8 0120     		mov	r0, #1
 1794 00ca FFF7FEFF 		bl	LED9_Write
 795:main.c        ****         Triac1_Write(1);
 1795              		.loc 1 795 0
 1796 00ce 0120     		mov	r0, #1
 1797 00d0 FFF7FEFF 		bl	Triac1_Write
 796:main.c        ****         
 797:main.c        ****         cache[0]=curPos;
 1798              		.loc 1 797 0
 1799 00d4 BB1D     		add	r3, r7, #6
 1800 00d6 1B88     		ldrh	r3, [r3]
 1801 00d8 DAB2     		uxtb	r2, r3
 1802 00da 104B     		ldr	r3, .L98
 1803 00dc 1A70     		strb	r2, [r3]
 798:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1804              		.loc 1 798 0
 1805 00de 104A     		ldr	r2, .L98+4
 1806 00e0 0E4B     		ldr	r3, .L98
 1807 00e2 101C     		mov	r0, r2
 1808 00e4 191C     		mov	r1, r3
 1809 00e6 FFF7FEFF 		bl	CySysFlashWriteRow
 1810              	.L96:
 799:main.c        ****     }
 800:main.c        ****     
 801:main.c        ****     if (curPos > 80)
 1811              		.loc 1 801 0
 1812 00ea BB1D     		add	r3, r7, #6
 1813 00ec 1B88     		ldrh	r3, [r3]
 1814 00ee 502B     		cmp	r3, #80
 1815 00f0 10D9     		bls	.L92
 802:main.c        ****     {
 803:main.c        ****         //UART_UartPutString("in UpdateLedsFan1 :: range > 80\n");
 804:main.c        ****         LED10_Write(1);
 1816              		.loc 1 804 0
 1817 00f2 0120     		mov	r0, #1
 1818 00f4 FFF7FEFF 		bl	LED10_Write
 805:main.c        ****         Triac1_Write(1);
 1819              		.loc 1 805 0
 1820 00f8 0120     		mov	r0, #1
 1821 00fa FFF7FEFF 		bl	Triac1_Write
 806:main.c        ****         
 807:main.c        ****         cache[0]=curPos;
 1822              		.loc 1 807 0
 1823 00fe BB1D     		add	r3, r7, #6
 1824 0100 1B88     		ldrh	r3, [r3]
 1825 0102 DAB2     		uxtb	r2, r3
 1826 0104 054B     		ldr	r3, .L98
 1827 0106 1A70     		strb	r2, [r3]
 808:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1828              		.loc 1 808 0
 1829 0108 054A     		ldr	r2, .L98+4
 1830 010a 044B     		ldr	r3, .L98
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 48


 1831 010c 101C     		mov	r0, r2
 1832 010e 191C     		mov	r1, r3
 1833 0110 FFF7FEFF 		bl	CySysFlashWriteRow
 1834              	.L92:
 809:main.c        ****         
 810:main.c        ****     }
 811:main.c        **** }
 1835              		.loc 1 811 0
 1836 0114 BD46     		mov	sp, r7
 1837 0116 02B0     		add	sp, sp, #8
 1838              		@ sp needed
 1839 0118 80BD     		pop	{r7, pc}
 1840              	.L99:
 1841 011a C046     		.align	2
 1842              	.L98:
 1843 011c 00000000 		.word	cache
 1844 0120 FE030000 		.word	1022
 1845              		.cfi_endproc
 1846              	.LFE40:
 1847              		.size	UpdateLedsFan1, .-UpdateLedsFan1
 1848              		.section	.text.UpdateLedsFan2,"ax",%progbits
 1849              		.align	2
 1850              		.global	UpdateLedsFan2
 1851              		.code	16
 1852              		.thumb_func
 1853              		.type	UpdateLedsFan2, %function
 1854              	UpdateLedsFan2:
 1855              	.LFB41:
 812:main.c        **** 
 813:main.c        **** // FAN2 - updating LED
 814:main.c        **** void UpdateLedsFan2(uint16 curPos)
 815:main.c        **** {
 1856              		.loc 1 815 0
 1857              		.cfi_startproc
 1858 0000 80B5     		push	{r7, lr}
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 7, -8
 1861              		.cfi_offset 14, -4
 1862 0002 82B0     		sub	sp, sp, #8
 1863              		.cfi_def_cfa_offset 16
 1864 0004 00AF     		add	r7, sp, #0
 1865              		.cfi_def_cfa_register 7
 1866 0006 021C     		mov	r2, r0
 1867 0008 BB1D     		add	r3, r7, #6
 1868 000a 1A80     		strh	r2, [r3]
 816:main.c        ****     /* Turn of all LEDs first */
 817:main.c        ****     LED1_Write(0);
 1869              		.loc 1 817 0
 1870 000c 0020     		mov	r0, #0
 1871 000e FFF7FEFF 		bl	LED1_Write
 818:main.c        ****     LED2_Write(0);
 1872              		.loc 1 818 0
 1873 0012 0020     		mov	r0, #0
 1874 0014 FFF7FEFF 		bl	LED2_Write
 819:main.c        ****     LED3_Write(0);
 1875              		.loc 1 819 0
 1876 0018 0020     		mov	r0, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 49


 1877 001a FFF7FEFF 		bl	LED3_Write
 820:main.c        ****     LED4_Write(0);
 1878              		.loc 1 820 0
 1879 001e 0020     		mov	r0, #0
 1880 0020 FFF7FEFF 		bl	LED4_Write
 821:main.c        ****     LED5_Write(0);
 1881              		.loc 1 821 0
 1882 0024 0020     		mov	r0, #0
 1883 0026 FFF7FEFF 		bl	LED5_Write
 822:main.c        ****     Triac2_Write(0);
 1884              		.loc 1 822 0
 1885 002a 0020     		mov	r0, #0
 1886 002c FFF7FEFF 		bl	Triac2_Write
 823:main.c        ****     //UART_UartPutString("in UpdateLedsFan2\n");
 824:main.c        ****        
 825:main.c        ****     if (curPos > 10)
 1887              		.loc 1 825 0
 1888 0030 BB1D     		add	r3, r7, #6
 1889 0032 1B88     		ldrh	r3, [r3]
 1890 0034 0A2B     		cmp	r3, #10
 1891 0036 10D9     		bls	.L101
 826:main.c        ****     {
 827:main.c        ****       //  UART_UartPutString("in UpdateLedsFan2 :: range >10\n");
 828:main.c        ****         LED1_Write(1);
 1892              		.loc 1 828 0
 1893 0038 0120     		mov	r0, #1
 1894 003a FFF7FEFF 		bl	LED1_Write
 829:main.c        ****         Triac2_Write(1);
 1895              		.loc 1 829 0
 1896 003e 0120     		mov	r0, #1
 1897 0040 FFF7FEFF 		bl	Triac2_Write
 830:main.c        ****         
 831:main.c        ****         cache[1]=curPos;
 1898              		.loc 1 831 0
 1899 0044 BB1D     		add	r3, r7, #6
 1900 0046 1B88     		ldrh	r3, [r3]
 1901 0048 DAB2     		uxtb	r2, r3
 1902 004a 2F4B     		ldr	r3, .L106
 1903 004c 5A70     		strb	r2, [r3, #1]
 832:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1904              		.loc 1 832 0
 1905 004e 2F4A     		ldr	r2, .L106+4
 1906 0050 2D4B     		ldr	r3, .L106
 1907 0052 101C     		mov	r0, r2
 1908 0054 191C     		mov	r1, r3
 1909 0056 FFF7FEFF 		bl	CySysFlashWriteRow
 1910              	.L101:
 833:main.c        ****         
 834:main.c        ****     }
 835:main.c        ****     
 836:main.c        ****     if (curPos > 20)
 1911              		.loc 1 836 0
 1912 005a BB1D     		add	r3, r7, #6
 1913 005c 1B88     		ldrh	r3, [r3]
 1914 005e 142B     		cmp	r3, #20
 1915 0060 10D9     		bls	.L102
 837:main.c        ****     {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 50


 838:main.c        ****       //  UART_UartPutString("in UpdateLedsFan2 :: range >20\n");
 839:main.c        ****         LED2_Write(1);
 1916              		.loc 1 839 0
 1917 0062 0120     		mov	r0, #1
 1918 0064 FFF7FEFF 		bl	LED2_Write
 840:main.c        ****         Triac2_Write(1);
 1919              		.loc 1 840 0
 1920 0068 0120     		mov	r0, #1
 1921 006a FFF7FEFF 		bl	Triac2_Write
 841:main.c        ****         
 842:main.c        ****         cache[1]=curPos;
 1922              		.loc 1 842 0
 1923 006e BB1D     		add	r3, r7, #6
 1924 0070 1B88     		ldrh	r3, [r3]
 1925 0072 DAB2     		uxtb	r2, r3
 1926 0074 244B     		ldr	r3, .L106
 1927 0076 5A70     		strb	r2, [r3, #1]
 843:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1928              		.loc 1 843 0
 1929 0078 244A     		ldr	r2, .L106+4
 1930 007a 234B     		ldr	r3, .L106
 1931 007c 101C     		mov	r0, r2
 1932 007e 191C     		mov	r1, r3
 1933 0080 FFF7FEFF 		bl	CySysFlashWriteRow
 1934              	.L102:
 844:main.c        ****     }
 845:main.c        ****     
 846:main.c        ****     if (curPos > 40)
 1935              		.loc 1 846 0
 1936 0084 BB1D     		add	r3, r7, #6
 1937 0086 1B88     		ldrh	r3, [r3]
 1938 0088 282B     		cmp	r3, #40
 1939 008a 10D9     		bls	.L103
 847:main.c        ****     {
 848:main.c        ****       //  UART_UartPutString("in UpdateLedsFan2 :: range >40\n");
 849:main.c        ****         LED3_Write(1);
 1940              		.loc 1 849 0
 1941 008c 0120     		mov	r0, #1
 1942 008e FFF7FEFF 		bl	LED3_Write
 850:main.c        ****         Triac2_Write(1);
 1943              		.loc 1 850 0
 1944 0092 0120     		mov	r0, #1
 1945 0094 FFF7FEFF 		bl	Triac2_Write
 851:main.c        ****         
 852:main.c        ****         cache[1]=curPos;
 1946              		.loc 1 852 0
 1947 0098 BB1D     		add	r3, r7, #6
 1948 009a 1B88     		ldrh	r3, [r3]
 1949 009c DAB2     		uxtb	r2, r3
 1950 009e 1A4B     		ldr	r3, .L106
 1951 00a0 5A70     		strb	r2, [r3, #1]
 853:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1952              		.loc 1 853 0
 1953 00a2 1A4A     		ldr	r2, .L106+4
 1954 00a4 184B     		ldr	r3, .L106
 1955 00a6 101C     		mov	r0, r2
 1956 00a8 191C     		mov	r1, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 51


 1957 00aa FFF7FEFF 		bl	CySysFlashWriteRow
 1958              	.L103:
 854:main.c        ****    }
 855:main.c        ****     
 856:main.c        ****     if (curPos > 60)
 1959              		.loc 1 856 0
 1960 00ae BB1D     		add	r3, r7, #6
 1961 00b0 1B88     		ldrh	r3, [r3]
 1962 00b2 3C2B     		cmp	r3, #60
 1963 00b4 10D9     		bls	.L104
 857:main.c        ****     {
 858:main.c        ****        // UART_UartPutString("in UpdateLedsFan2 :: range > 60\n");
 859:main.c        ****         LED4_Write(1);
 1964              		.loc 1 859 0
 1965 00b6 0120     		mov	r0, #1
 1966 00b8 FFF7FEFF 		bl	LED4_Write
 860:main.c        ****         Triac2_Write(1);
 1967              		.loc 1 860 0
 1968 00bc 0120     		mov	r0, #1
 1969 00be FFF7FEFF 		bl	Triac2_Write
 861:main.c        ****         
 862:main.c        ****         cache[1]=curPos;
 1970              		.loc 1 862 0
 1971 00c2 BB1D     		add	r3, r7, #6
 1972 00c4 1B88     		ldrh	r3, [r3]
 1973 00c6 DAB2     		uxtb	r2, r3
 1974 00c8 0F4B     		ldr	r3, .L106
 1975 00ca 5A70     		strb	r2, [r3, #1]
 863:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 1976              		.loc 1 863 0
 1977 00cc 0F4A     		ldr	r2, .L106+4
 1978 00ce 0E4B     		ldr	r3, .L106
 1979 00d0 101C     		mov	r0, r2
 1980 00d2 191C     		mov	r1, r3
 1981 00d4 FFF7FEFF 		bl	CySysFlashWriteRow
 1982              	.L104:
 864:main.c        ****     }
 865:main.c        ****     
 866:main.c        ****     if (curPos > 80)
 1983              		.loc 1 866 0
 1984 00d8 BB1D     		add	r3, r7, #6
 1985 00da 1B88     		ldrh	r3, [r3]
 1986 00dc 502B     		cmp	r3, #80
 1987 00de 10D9     		bls	.L100
 867:main.c        ****     {
 868:main.c        ****        // UART_UartPutString("in UpdateLedsFan2 :: range > 80\n");
 869:main.c        ****         LED5_Write(1);
 1988              		.loc 1 869 0
 1989 00e0 0120     		mov	r0, #1
 1990 00e2 FFF7FEFF 		bl	LED5_Write
 870:main.c        ****         Triac2_Write(1);
 1991              		.loc 1 870 0
 1992 00e6 0120     		mov	r0, #1
 1993 00e8 FFF7FEFF 		bl	Triac2_Write
 871:main.c        ****         
 872:main.c        ****         cache[1]=curPos;
 1994              		.loc 1 872 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 52


 1995 00ec BB1D     		add	r3, r7, #6
 1996 00ee 1B88     		ldrh	r3, [r3]
 1997 00f0 DAB2     		uxtb	r2, r3
 1998 00f2 054B     		ldr	r3, .L106
 1999 00f4 5A70     		strb	r2, [r3, #1]
 873:main.c        ****         CySysFlashWriteRow(CY_TEST_FLASH_ROW, cache);
 2000              		.loc 1 873 0
 2001 00f6 054A     		ldr	r2, .L106+4
 2002 00f8 034B     		ldr	r3, .L106
 2003 00fa 101C     		mov	r0, r2
 2004 00fc 191C     		mov	r1, r3
 2005 00fe FFF7FEFF 		bl	CySysFlashWriteRow
 2006              	.L100:
 874:main.c        ****     }
 875:main.c        **** }
 2007              		.loc 1 875 0
 2008 0102 BD46     		mov	sp, r7
 2009 0104 02B0     		add	sp, sp, #8
 2010              		@ sp needed
 2011 0106 80BD     		pop	{r7, pc}
 2012              	.L107:
 2013              		.align	2
 2014              	.L106:
 2015 0108 00000000 		.word	cache
 2016 010c FE030000 		.word	1022
 2017              		.cfi_endproc
 2018              	.LFE41:
 2019              		.size	UpdateLedsFan2, .-UpdateLedsFan2
 2020              		.section	.rodata
 2021              		.align	2
 2022              	.LC36:
 2023 005c 696E2057 		.ascii	"in WDT ISR\012\015\000"
 2023      44542049 
 2023      53520A0D 
 2023      00
 2024 0069 000000   		.section	.text.WdtIsrHandler,"ax",%progbits
 2025              		.align	2
 2026              		.global	WdtIsrHandler
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	WdtIsrHandler, %function
 2030              	WdtIsrHandler:
 2031              	.LFB42:
 876:main.c        **** CY_ISR(WdtIsrHandler)
 877:main.c        **** { 
 2032              		.loc 1 877 0
 2033              		.cfi_startproc
 2034 0000 80B5     		push	{r7, lr}
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 7, -8
 2037              		.cfi_offset 14, -4
 2038 0002 00AF     		add	r7, sp, #0
 2039              		.cfi_def_cfa_register 7
 878:main.c        ****     UART_UartPutString("in WDT ISR\n\r");
 2040              		.loc 1 878 0
 2041 0004 054B     		ldr	r3, .L109
 2042 0006 181C     		mov	r0, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 53


 2043 0008 FFF7FEFF 		bl	UART_UartPutString
 879:main.c        ****     /* Clear interrupts state */
 880:main.c        **** 	CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 2044              		.loc 1 880 0
 2045 000c 0420     		mov	r0, #4
 2046 000e FFF7FEFF 		bl	CySysWdtClearInterrupt
 881:main.c        ****     WdtIsr_ClearPending();
 2047              		.loc 1 881 0
 2048 0012 FFF7FEFF 		bl	WdtIsr_ClearPending
 882:main.c        ****    
 883:main.c        ****    
 884:main.c        **** }
 2049              		.loc 1 884 0
 2050 0016 BD46     		mov	sp, r7
 2051              		@ sp needed
 2052 0018 80BD     		pop	{r7, pc}
 2053              	.L110:
 2054 001a C046     		.align	2
 2055              	.L109:
 2056 001c 5C000000 		.word	.LC36
 2057              		.cfi_endproc
 2058              	.LFE42:
 2059              		.size	WdtIsrHandler, .-WdtIsrHandler
 2060              		.text
 2061              	.Letext0:
 2062              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2063              		.section	.debug_info,"",%progbits
 2064              	.Ldebug_info0:
 2065 0000 E8030000 		.4byte	0x3e8
 2066 0004 0400     		.2byte	0x4
 2067 0006 00000000 		.4byte	.Ldebug_abbrev0
 2068 000a 04       		.byte	0x4
 2069 000b 01       		.uleb128 0x1
 2070 000c 1F010000 		.4byte	.LASF54
 2071 0010 01       		.byte	0x1
 2072 0011 7B020000 		.4byte	.LASF55
 2073 0015 C1010000 		.4byte	.LASF56
 2074 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2075 001d 00000000 		.4byte	0
 2076 0021 00000000 		.4byte	.Ldebug_line0
 2077 0025 02       		.uleb128 0x2
 2078 0026 01       		.byte	0x1
 2079 0027 06       		.byte	0x6
 2080 0028 B4020000 		.4byte	.LASF0
 2081 002c 02       		.uleb128 0x2
 2082 002d 01       		.byte	0x1
 2083 002e 08       		.byte	0x8
 2084 002f 6C000000 		.4byte	.LASF1
 2085 0033 02       		.uleb128 0x2
 2086 0034 02       		.byte	0x2
 2087 0035 05       		.byte	0x5
 2088 0036 15010000 		.4byte	.LASF2
 2089 003a 02       		.uleb128 0x2
 2090 003b 02       		.byte	0x2
 2091 003c 07       		.byte	0x7
 2092 003d B4000000 		.4byte	.LASF3
 2093 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 54


 2094 0042 04       		.byte	0x4
 2095 0043 05       		.byte	0x5
 2096 0044 AB020000 		.4byte	.LASF4
 2097 0048 02       		.uleb128 0x2
 2098 0049 04       		.byte	0x4
 2099 004a 07       		.byte	0x7
 2100 004b 9D000000 		.4byte	.LASF5
 2101 004f 02       		.uleb128 0x2
 2102 0050 08       		.byte	0x8
 2103 0051 05       		.byte	0x5
 2104 0052 6D020000 		.4byte	.LASF6
 2105 0056 02       		.uleb128 0x2
 2106 0057 08       		.byte	0x8
 2107 0058 07       		.byte	0x7
 2108 0059 55000000 		.4byte	.LASF7
 2109 005d 03       		.uleb128 0x3
 2110 005e 04       		.byte	0x4
 2111 005f 05       		.byte	0x5
 2112 0060 696E7400 		.ascii	"int\000"
 2113 0064 02       		.uleb128 0x2
 2114 0065 04       		.byte	0x4
 2115 0066 07       		.byte	0x7
 2116 0067 FE010000 		.4byte	.LASF8
 2117 006b 04       		.uleb128 0x4
 2118 006c A5020000 		.4byte	.LASF9
 2119 0070 02       		.byte	0x2
 2120 0071 3801     		.2byte	0x138
 2121 0073 2C000000 		.4byte	0x2c
 2122 0077 04       		.uleb128 0x4
 2123 0078 AD010000 		.4byte	.LASF10
 2124 007c 02       		.byte	0x2
 2125 007d 3901     		.2byte	0x139
 2126 007f 3A000000 		.4byte	0x3a
 2127 0083 04       		.uleb128 0x4
 2128 0084 B4010000 		.4byte	.LASF11
 2129 0088 02       		.byte	0x2
 2130 0089 3A01     		.2byte	0x13a
 2131 008b 48000000 		.4byte	0x48
 2132 008f 02       		.uleb128 0x2
 2133 0090 04       		.byte	0x4
 2134 0091 04       		.byte	0x4
 2135 0092 4F000000 		.4byte	.LASF12
 2136 0096 02       		.uleb128 0x2
 2137 0097 08       		.byte	0x8
 2138 0098 04       		.byte	0x4
 2139 0099 E7000000 		.4byte	.LASF13
 2140 009d 04       		.uleb128 0x4
 2141 009e 97000000 		.4byte	.LASF14
 2142 00a2 02       		.byte	0x2
 2143 00a3 4901     		.2byte	0x149
 2144 00a5 A9000000 		.4byte	0xa9
 2145 00a9 02       		.uleb128 0x2
 2146 00aa 01       		.byte	0x1
 2147 00ab 08       		.byte	0x8
 2148 00ac 82020000 		.4byte	.LASF15
 2149 00b0 02       		.uleb128 0x2
 2150 00b1 04       		.byte	0x4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 55


 2151 00b2 07       		.byte	0x7
 2152 00b3 64020000 		.4byte	.LASF16
 2153 00b7 05       		.uleb128 0x5
 2154 00b8 4B020000 		.4byte	.LASF21
 2155 00bc 01       		.byte	0x1
 2156 00bd 51       		.byte	0x51
 2157 00be 5D000000 		.4byte	0x5d
 2158 00c2 00000000 		.4byte	.LFB36
 2159 00c6 90020000 		.4byte	.LFE36-.LFB36
 2160 00ca 01       		.uleb128 0x1
 2161 00cb 9C       		.byte	0x9c
 2162 00cc 03010000 		.4byte	0x103
 2163 00d0 06       		.uleb128 0x6
 2164 00d1 6900     		.ascii	"i\000"
 2165 00d3 01       		.byte	0x1
 2166 00d4 52       		.byte	0x52
 2167 00d5 6B000000 		.4byte	0x6b
 2168 00d9 02       		.uleb128 0x2
 2169 00da 91       		.byte	0x91
 2170 00db 77       		.sleb128 -9
 2171 00dc 07       		.uleb128 0x7
 2172 00dd AE000000 		.4byte	.LBB2
 2173 00e1 8C010000 		.4byte	.LBE2-.LBB2
 2174 00e5 08       		.uleb128 0x8
 2175 00e6 AF000000 		.4byte	.LASF17
 2176 00ea 01       		.byte	0x1
 2177 00eb 8B       		.byte	0x8b
 2178 00ec 9D000000 		.4byte	0x9d
 2179 00f0 02       		.uleb128 0x2
 2180 00f1 91       		.byte	0x91
 2181 00f2 76       		.sleb128 -10
 2182 00f3 08       		.uleb128 0x8
 2183 00f4 5E020000 		.4byte	.LASF18
 2184 00f8 01       		.byte	0x1
 2185 00f9 8C       		.byte	0x8c
 2186 00fa 9D000000 		.4byte	0x9d
 2187 00fe 02       		.uleb128 0x2
 2188 00ff 91       		.byte	0x91
 2189 0100 75       		.sleb128 -11
 2190 0101 00       		.byte	0
 2191 0102 00       		.byte	0
 2192 0103 09       		.uleb128 0x9
 2193 0104 EE000000 		.4byte	.LASF26
 2194 0108 01       		.byte	0x1
 2195 0109 0901     		.2byte	0x109
 2196 010b 00000000 		.4byte	.LFB37
 2197 010f EC040000 		.4byte	.LFE37-.LFB37
 2198 0113 01       		.uleb128 0x1
 2199 0114 9C       		.byte	0x9c
 2200 0115 0A       		.uleb128 0xa
 2201 0116 7A000000 		.4byte	.LASF57
 2202 011a 01       		.byte	0x1
 2203 011b 2402     		.2byte	0x224
 2204 011d 6B000000 		.4byte	0x6b
 2205 0121 00000000 		.4byte	.LFB38
 2206 0125 62000000 		.4byte	.LFE38-.LFB38
 2207 0129 01       		.uleb128 0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 56


 2208 012a 9C       		.byte	0x9c
 2209 012b 5D010000 		.4byte	0x15d
 2210 012f 0B       		.uleb128 0xb
 2211 0130 636D6400 		.ascii	"cmd\000"
 2212 0134 01       		.byte	0x1
 2213 0135 2402     		.2byte	0x224
 2214 0137 83000000 		.4byte	0x83
 2215 013b 02       		.uleb128 0x2
 2216 013c 91       		.byte	0x91
 2217 013d 6C       		.sleb128 -20
 2218 013e 0C       		.uleb128 0xc
 2219 013f 15000000 		.4byte	.LASF19
 2220 0143 01       		.byte	0x1
 2221 0144 2402     		.2byte	0x224
 2222 0146 83000000 		.4byte	0x83
 2223 014a 02       		.uleb128 0x2
 2224 014b 91       		.byte	0x91
 2225 014c 68       		.sleb128 -24
 2226 014d 0D       		.uleb128 0xd
 2227 014e 41000000 		.4byte	.LASF20
 2228 0152 01       		.byte	0x1
 2229 0153 2702     		.2byte	0x227
 2230 0155 6B000000 		.4byte	0x6b
 2231 0159 02       		.uleb128 0x2
 2232 015a 91       		.byte	0x91
 2233 015b 77       		.sleb128 -9
 2234 015c 00       		.byte	0
 2235 015d 0E       		.uleb128 0xe
 2236 015e 04010000 		.4byte	.LASF22
 2237 0162 01       		.byte	0x1
 2238 0163 4702     		.2byte	0x247
 2239 0165 00000000 		.4byte	.LFB39
 2240 0169 68020000 		.4byte	.LFE39-.LFB39
 2241 016d 01       		.uleb128 0x1
 2242 016e 9C       		.byte	0x9c
 2243 016f 92010000 		.4byte	0x192
 2244 0173 0B       		.uleb128 0xb
 2245 0174 72657300 		.ascii	"res\000"
 2246 0178 01       		.byte	0x1
 2247 0179 4702     		.2byte	0x247
 2248 017b 77000000 		.4byte	0x77
 2249 017f 02       		.uleb128 0x2
 2250 0180 91       		.byte	0x91
 2251 0181 76       		.sleb128 -10
 2252 0182 0C       		.uleb128 0xc
 2253 0183 C7000000 		.4byte	.LASF23
 2254 0187 01       		.byte	0x1
 2255 0188 4702     		.2byte	0x247
 2256 018a 77000000 		.4byte	0x77
 2257 018e 02       		.uleb128 0x2
 2258 018f 91       		.byte	0x91
 2259 0190 74       		.sleb128 -12
 2260 0191 00       		.byte	0
 2261 0192 0E       		.uleb128 0xe
 2262 0193 C8020000 		.4byte	.LASF24
 2263 0197 01       		.byte	0x1
 2264 0198 E402     		.2byte	0x2e4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 57


 2265 019a 00000000 		.4byte	.LFB40
 2266 019e 24010000 		.4byte	.LFE40-.LFB40
 2267 01a2 01       		.uleb128 0x1
 2268 01a3 9C       		.byte	0x9c
 2269 01a4 B8010000 		.4byte	0x1b8
 2270 01a8 0C       		.uleb128 0xc
 2271 01a9 C7000000 		.4byte	.LASF23
 2272 01ad 01       		.byte	0x1
 2273 01ae E402     		.2byte	0x2e4
 2274 01b0 77000000 		.4byte	0x77
 2275 01b4 02       		.uleb128 0x2
 2276 01b5 91       		.byte	0x91
 2277 01b6 76       		.sleb128 -10
 2278 01b7 00       		.byte	0
 2279 01b8 0E       		.uleb128 0xe
 2280 01b9 00000000 		.4byte	.LASF25
 2281 01bd 01       		.byte	0x1
 2282 01be 2E03     		.2byte	0x32e
 2283 01c0 00000000 		.4byte	.LFB41
 2284 01c4 10010000 		.4byte	.LFE41-.LFB41
 2285 01c8 01       		.uleb128 0x1
 2286 01c9 9C       		.byte	0x9c
 2287 01ca DE010000 		.4byte	0x1de
 2288 01ce 0C       		.uleb128 0xc
 2289 01cf C7000000 		.4byte	.LASF23
 2290 01d3 01       		.byte	0x1
 2291 01d4 2E03     		.2byte	0x32e
 2292 01d6 77000000 		.4byte	0x77
 2293 01da 02       		.uleb128 0x2
 2294 01db 91       		.byte	0x91
 2295 01dc 76       		.sleb128 -10
 2296 01dd 00       		.byte	0
 2297 01de 09       		.uleb128 0x9
 2298 01df 50020000 		.4byte	.LASF27
 2299 01e3 01       		.byte	0x1
 2300 01e4 6C03     		.2byte	0x36c
 2301 01e6 00000000 		.4byte	.LFB42
 2302 01ea 20000000 		.4byte	.LFE42-.LFB42
 2303 01ee 01       		.uleb128 0x1
 2304 01ef 9C       		.byte	0x9c
 2305 01f0 0F       		.uleb128 0xf
 2306 01f1 6B000000 		.4byte	0x6b
 2307 01f5 00020000 		.4byte	0x200
 2308 01f9 10       		.uleb128 0x10
 2309 01fa B0000000 		.4byte	0xb0
 2310 01fe 7F       		.byte	0x7f
 2311 01ff 00       		.byte	0
 2312 0200 11       		.uleb128 0x11
 2313 0201 0F000000 		.4byte	.LASF28
 2314 0205 01       		.byte	0x1
 2315 0206 33       		.byte	0x33
 2316 0207 F0010000 		.4byte	0x1f0
 2317 020b 05       		.uleb128 0x5
 2318 020c 03       		.byte	0x3
 2319 020d 00000000 		.4byte	cache
 2320 0211 11       		.uleb128 0x11
 2321 0212 48000000 		.4byte	.LASF29
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 58


 2322 0216 01       		.byte	0x1
 2323 0217 34       		.byte	0x34
 2324 0218 F0010000 		.4byte	0x1f0
 2325 021c 05       		.uleb128 0x5
 2326 021d 03       		.byte	0x3
 2327 021e 00000000 		.4byte	update
 2328 0222 11       		.uleb128 0x11
 2329 0223 31000000 		.4byte	.LASF30
 2330 0227 01       		.byte	0x1
 2331 0228 35       		.byte	0x35
 2332 0229 77000000 		.4byte	0x77
 2333 022d 05       		.uleb128 0x5
 2334 022e 03       		.byte	0x3
 2335 022f 00000000 		.4byte	curPos1
 2336 0233 11       		.uleb128 0x11
 2337 0234 1B000000 		.4byte	.LASF31
 2338 0238 01       		.byte	0x1
 2339 0239 35       		.byte	0x35
 2340 023a 77000000 		.4byte	0x77
 2341 023e 05       		.uleb128 0x5
 2342 023f 03       		.byte	0x3
 2343 0240 00000000 		.4byte	oldCurPos1
 2344 0244 11       		.uleb128 0x11
 2345 0245 39000000 		.4byte	.LASF32
 2346 0249 01       		.byte	0x1
 2347 024a 35       		.byte	0x35
 2348 024b 77000000 		.4byte	0x77
 2349 024f 05       		.uleb128 0x5
 2350 0250 03       		.byte	0x3
 2351 0251 00000000 		.4byte	curPos2
 2352 0255 11       		.uleb128 0x11
 2353 0256 26000000 		.4byte	.LASF33
 2354 025a 01       		.byte	0x1
 2355 025b 35       		.byte	0x35
 2356 025c 77000000 		.4byte	0x77
 2357 0260 05       		.uleb128 0x5
 2358 0261 03       		.byte	0x3
 2359 0262 00000000 		.4byte	oldCurPos2
 2360 0266 11       		.uleb128 0x11
 2361 0267 BB010000 		.4byte	.LASF34
 2362 026b 01       		.byte	0x1
 2363 026c 36       		.byte	0x36
 2364 026d 83000000 		.4byte	0x83
 2365 0271 05       		.uleb128 0x5
 2366 0272 03       		.byte	0x3
 2367 0273 00000000 		.4byte	sock1
 2368 0277 11       		.uleb128 0x11
 2369 0278 CE000000 		.4byte	.LASF35
 2370 027c 01       		.byte	0x1
 2371 027d 36       		.byte	0x36
 2372 027e 83000000 		.4byte	0x83
 2373 0282 05       		.uleb128 0x5
 2374 0283 03       		.byte	0x3
 2375 0284 00000000 		.4byte	but1
 2376 0288 11       		.uleb128 0x11
 2377 0289 D3000000 		.4byte	.LASF36
 2378 028d 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 59


 2379 028e 36       		.byte	0x36
 2380 028f 83000000 		.4byte	0x83
 2381 0293 05       		.uleb128 0x5
 2382 0294 03       		.byte	0x3
 2383 0295 00000000 		.4byte	but2
 2384 0299 11       		.uleb128 0x11
 2385 029a D8000000 		.4byte	.LASF37
 2386 029e 01       		.byte	0x1
 2387 029f 36       		.byte	0x36
 2388 02a0 83000000 		.4byte	0x83
 2389 02a4 05       		.uleb128 0x5
 2390 02a5 03       		.byte	0x3
 2391 02a6 00000000 		.4byte	but3
 2392 02aa 11       		.uleb128 0x11
 2393 02ab DD000000 		.4byte	.LASF38
 2394 02af 01       		.byte	0x1
 2395 02b0 36       		.byte	0x36
 2396 02b1 83000000 		.4byte	0x83
 2397 02b5 05       		.uleb128 0x5
 2398 02b6 03       		.byte	0x3
 2399 02b7 00000000 		.4byte	but4
 2400 02bb 11       		.uleb128 0x11
 2401 02bc E2000000 		.4byte	.LASF39
 2402 02c0 01       		.byte	0x1
 2403 02c1 36       		.byte	0x36
 2404 02c2 83000000 		.4byte	0x83
 2405 02c6 05       		.uleb128 0x5
 2406 02c7 03       		.byte	0x3
 2407 02c8 00000000 		.4byte	but5
 2408 02cc 11       		.uleb128 0x11
 2409 02cd 33020000 		.4byte	.LASF40
 2410 02d1 01       		.byte	0x1
 2411 02d2 36       		.byte	0x36
 2412 02d3 83000000 		.4byte	0x83
 2413 02d7 05       		.uleb128 0x5
 2414 02d8 03       		.byte	0x3
 2415 02d9 00000000 		.4byte	oldSock1
 2416 02dd 11       		.uleb128 0x11
 2417 02de 0B020000 		.4byte	.LASF41
 2418 02e2 01       		.byte	0x1
 2419 02e3 36       		.byte	0x36
 2420 02e4 83000000 		.4byte	0x83
 2421 02e8 05       		.uleb128 0x5
 2422 02e9 03       		.byte	0x3
 2423 02ea 00000000 		.4byte	oldBut1
 2424 02ee 11       		.uleb128 0x11
 2425 02ef 13020000 		.4byte	.LASF42
 2426 02f3 01       		.byte	0x1
 2427 02f4 36       		.byte	0x36
 2428 02f5 83000000 		.4byte	0x83
 2429 02f9 05       		.uleb128 0x5
 2430 02fa 03       		.byte	0x3
 2431 02fb 00000000 		.4byte	oldBut2
 2432 02ff 11       		.uleb128 0x11
 2433 0300 1B020000 		.4byte	.LASF43
 2434 0304 01       		.byte	0x1
 2435 0305 36       		.byte	0x36
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 60


 2436 0306 83000000 		.4byte	0x83
 2437 030a 05       		.uleb128 0x5
 2438 030b 03       		.byte	0x3
 2439 030c 00000000 		.4byte	oldBut3
 2440 0310 11       		.uleb128 0x11
 2441 0311 23020000 		.4byte	.LASF44
 2442 0315 01       		.byte	0x1
 2443 0316 36       		.byte	0x36
 2444 0317 83000000 		.4byte	0x83
 2445 031b 05       		.uleb128 0x5
 2446 031c 03       		.byte	0x3
 2447 031d 00000000 		.4byte	oldBut4
 2448 0321 11       		.uleb128 0x11
 2449 0322 2B020000 		.4byte	.LASF45
 2450 0326 01       		.byte	0x1
 2451 0327 36       		.byte	0x36
 2452 0328 83000000 		.4byte	0x83
 2453 032c 05       		.uleb128 0x5
 2454 032d 03       		.byte	0x3
 2455 032e 00000000 		.4byte	oldBut5
 2456 0332 11       		.uleb128 0x11
 2457 0333 87020000 		.4byte	.LASF46
 2458 0337 01       		.byte	0x1
 2459 0338 37       		.byte	0x37
 2460 0339 6B000000 		.4byte	0x6b
 2461 033d 05       		.uleb128 0x5
 2462 033e 03       		.byte	0x3
 2463 033f 00000000 		.4byte	temp1
 2464 0343 11       		.uleb128 0x11
 2465 0344 5E020000 		.4byte	.LASF18
 2466 0348 01       		.byte	0x1
 2467 0349 37       		.byte	0x37
 2468 034a 6B000000 		.4byte	0x6b
 2469 034e 05       		.uleb128 0x5
 2470 034f 03       		.byte	0x3
 2471 0350 00000000 		.4byte	temp2
 2472 0354 11       		.uleb128 0x11
 2473 0355 8D020000 		.4byte	.LASF47
 2474 0359 01       		.byte	0x1
 2475 035a 37       		.byte	0x37
 2476 035b 6B000000 		.4byte	0x6b
 2477 035f 05       		.uleb128 0x5
 2478 0360 03       		.byte	0x3
 2479 0361 00000000 		.4byte	temp3
 2480 0365 11       		.uleb128 0x11
 2481 0366 93020000 		.4byte	.LASF48
 2482 036a 01       		.byte	0x1
 2483 036b 37       		.byte	0x37
 2484 036c 6B000000 		.4byte	0x6b
 2485 0370 05       		.uleb128 0x5
 2486 0371 03       		.byte	0x3
 2487 0372 00000000 		.4byte	temp4
 2488 0376 11       		.uleb128 0x11
 2489 0377 99020000 		.4byte	.LASF49
 2490 037b 01       		.byte	0x1
 2491 037c 37       		.byte	0x37
 2492 037d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 61


 2493 0381 05       		.uleb128 0x5
 2494 0382 03       		.byte	0x3
 2495 0383 00000000 		.4byte	temp5
 2496 0387 11       		.uleb128 0x11
 2497 0388 9F020000 		.4byte	.LASF50
 2498 038c 01       		.byte	0x1
 2499 038d 37       		.byte	0x37
 2500 038e 6B000000 		.4byte	0x6b
 2501 0392 05       		.uleb128 0x5
 2502 0393 03       		.byte	0x3
 2503 0394 00000000 		.4byte	temp6
 2504 0398 0F       		.uleb128 0xf
 2505 0399 6B000000 		.4byte	0x6b
 2506 039d A8030000 		.4byte	0x3a8
 2507 03a1 10       		.uleb128 0x10
 2508 03a2 B0000000 		.4byte	0xb0
 2509 03a6 01       		.byte	0x1
 2510 03a7 00       		.byte	0
 2511 03a8 11       		.uleb128 0x11
 2512 03a9 89000000 		.4byte	.LASF51
 2513 03ad 01       		.byte	0x1
 2514 03ae 3B       		.byte	0x3b
 2515 03af 98030000 		.4byte	0x398
 2516 03b3 05       		.uleb128 0x5
 2517 03b4 03       		.byte	0x3
 2518 03b5 00000000 		.4byte	i2cReadBuffer
 2519 03b9 0F       		.uleb128 0xf
 2520 03ba 6B000000 		.4byte	0x6b
 2521 03be C9030000 		.4byte	0x3c9
 2522 03c2 10       		.uleb128 0x10
 2523 03c3 B0000000 		.4byte	0xb0
 2524 03c7 03       		.byte	0x3
 2525 03c8 00       		.byte	0
 2526 03c9 11       		.uleb128 0x11
 2527 03ca 3C020000 		.4byte	.LASF52
 2528 03ce 01       		.byte	0x1
 2529 03cf 3C       		.byte	0x3c
 2530 03d0 B9030000 		.4byte	0x3b9
 2531 03d4 05       		.uleb128 0x5
 2532 03d5 03       		.byte	0x3
 2533 03d6 00000000 		.4byte	i2cWriteBuffer
 2534 03da 11       		.uleb128 0x11
 2535 03db C0020000 		.4byte	.LASF53
 2536 03df 01       		.byte	0x1
 2537 03e0 3E       		.byte	0x3e
 2538 03e1 98030000 		.4byte	0x398
 2539 03e5 05       		.uleb128 0x5
 2540 03e6 03       		.byte	0x3
 2541 03e7 00000000 		.4byte	compare
 2542 03eb 00       		.byte	0
 2543              		.section	.debug_abbrev,"",%progbits
 2544              	.Ldebug_abbrev0:
 2545 0000 01       		.uleb128 0x1
 2546 0001 11       		.uleb128 0x11
 2547 0002 01       		.byte	0x1
 2548 0003 25       		.uleb128 0x25
 2549 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 62


 2550 0005 13       		.uleb128 0x13
 2551 0006 0B       		.uleb128 0xb
 2552 0007 03       		.uleb128 0x3
 2553 0008 0E       		.uleb128 0xe
 2554 0009 1B       		.uleb128 0x1b
 2555 000a 0E       		.uleb128 0xe
 2556 000b 55       		.uleb128 0x55
 2557 000c 17       		.uleb128 0x17
 2558 000d 11       		.uleb128 0x11
 2559 000e 01       		.uleb128 0x1
 2560 000f 10       		.uleb128 0x10
 2561 0010 17       		.uleb128 0x17
 2562 0011 00       		.byte	0
 2563 0012 00       		.byte	0
 2564 0013 02       		.uleb128 0x2
 2565 0014 24       		.uleb128 0x24
 2566 0015 00       		.byte	0
 2567 0016 0B       		.uleb128 0xb
 2568 0017 0B       		.uleb128 0xb
 2569 0018 3E       		.uleb128 0x3e
 2570 0019 0B       		.uleb128 0xb
 2571 001a 03       		.uleb128 0x3
 2572 001b 0E       		.uleb128 0xe
 2573 001c 00       		.byte	0
 2574 001d 00       		.byte	0
 2575 001e 03       		.uleb128 0x3
 2576 001f 24       		.uleb128 0x24
 2577 0020 00       		.byte	0
 2578 0021 0B       		.uleb128 0xb
 2579 0022 0B       		.uleb128 0xb
 2580 0023 3E       		.uleb128 0x3e
 2581 0024 0B       		.uleb128 0xb
 2582 0025 03       		.uleb128 0x3
 2583 0026 08       		.uleb128 0x8
 2584 0027 00       		.byte	0
 2585 0028 00       		.byte	0
 2586 0029 04       		.uleb128 0x4
 2587 002a 16       		.uleb128 0x16
 2588 002b 00       		.byte	0
 2589 002c 03       		.uleb128 0x3
 2590 002d 0E       		.uleb128 0xe
 2591 002e 3A       		.uleb128 0x3a
 2592 002f 0B       		.uleb128 0xb
 2593 0030 3B       		.uleb128 0x3b
 2594 0031 05       		.uleb128 0x5
 2595 0032 49       		.uleb128 0x49
 2596 0033 13       		.uleb128 0x13
 2597 0034 00       		.byte	0
 2598 0035 00       		.byte	0
 2599 0036 05       		.uleb128 0x5
 2600 0037 2E       		.uleb128 0x2e
 2601 0038 01       		.byte	0x1
 2602 0039 3F       		.uleb128 0x3f
 2603 003a 19       		.uleb128 0x19
 2604 003b 03       		.uleb128 0x3
 2605 003c 0E       		.uleb128 0xe
 2606 003d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 63


 2607 003e 0B       		.uleb128 0xb
 2608 003f 3B       		.uleb128 0x3b
 2609 0040 0B       		.uleb128 0xb
 2610 0041 49       		.uleb128 0x49
 2611 0042 13       		.uleb128 0x13
 2612 0043 11       		.uleb128 0x11
 2613 0044 01       		.uleb128 0x1
 2614 0045 12       		.uleb128 0x12
 2615 0046 06       		.uleb128 0x6
 2616 0047 40       		.uleb128 0x40
 2617 0048 18       		.uleb128 0x18
 2618 0049 9642     		.uleb128 0x2116
 2619 004b 19       		.uleb128 0x19
 2620 004c 01       		.uleb128 0x1
 2621 004d 13       		.uleb128 0x13
 2622 004e 00       		.byte	0
 2623 004f 00       		.byte	0
 2624 0050 06       		.uleb128 0x6
 2625 0051 34       		.uleb128 0x34
 2626 0052 00       		.byte	0
 2627 0053 03       		.uleb128 0x3
 2628 0054 08       		.uleb128 0x8
 2629 0055 3A       		.uleb128 0x3a
 2630 0056 0B       		.uleb128 0xb
 2631 0057 3B       		.uleb128 0x3b
 2632 0058 0B       		.uleb128 0xb
 2633 0059 49       		.uleb128 0x49
 2634 005a 13       		.uleb128 0x13
 2635 005b 02       		.uleb128 0x2
 2636 005c 18       		.uleb128 0x18
 2637 005d 00       		.byte	0
 2638 005e 00       		.byte	0
 2639 005f 07       		.uleb128 0x7
 2640 0060 0B       		.uleb128 0xb
 2641 0061 01       		.byte	0x1
 2642 0062 11       		.uleb128 0x11
 2643 0063 01       		.uleb128 0x1
 2644 0064 12       		.uleb128 0x12
 2645 0065 06       		.uleb128 0x6
 2646 0066 00       		.byte	0
 2647 0067 00       		.byte	0
 2648 0068 08       		.uleb128 0x8
 2649 0069 34       		.uleb128 0x34
 2650 006a 00       		.byte	0
 2651 006b 03       		.uleb128 0x3
 2652 006c 0E       		.uleb128 0xe
 2653 006d 3A       		.uleb128 0x3a
 2654 006e 0B       		.uleb128 0xb
 2655 006f 3B       		.uleb128 0x3b
 2656 0070 0B       		.uleb128 0xb
 2657 0071 49       		.uleb128 0x49
 2658 0072 13       		.uleb128 0x13
 2659 0073 02       		.uleb128 0x2
 2660 0074 18       		.uleb128 0x18
 2661 0075 00       		.byte	0
 2662 0076 00       		.byte	0
 2663 0077 09       		.uleb128 0x9
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 64


 2664 0078 2E       		.uleb128 0x2e
 2665 0079 00       		.byte	0
 2666 007a 3F       		.uleb128 0x3f
 2667 007b 19       		.uleb128 0x19
 2668 007c 03       		.uleb128 0x3
 2669 007d 0E       		.uleb128 0xe
 2670 007e 3A       		.uleb128 0x3a
 2671 007f 0B       		.uleb128 0xb
 2672 0080 3B       		.uleb128 0x3b
 2673 0081 05       		.uleb128 0x5
 2674 0082 27       		.uleb128 0x27
 2675 0083 19       		.uleb128 0x19
 2676 0084 11       		.uleb128 0x11
 2677 0085 01       		.uleb128 0x1
 2678 0086 12       		.uleb128 0x12
 2679 0087 06       		.uleb128 0x6
 2680 0088 40       		.uleb128 0x40
 2681 0089 18       		.uleb128 0x18
 2682 008a 9642     		.uleb128 0x2116
 2683 008c 19       		.uleb128 0x19
 2684 008d 00       		.byte	0
 2685 008e 00       		.byte	0
 2686 008f 0A       		.uleb128 0xa
 2687 0090 2E       		.uleb128 0x2e
 2688 0091 01       		.byte	0x1
 2689 0092 3F       		.uleb128 0x3f
 2690 0093 19       		.uleb128 0x19
 2691 0094 03       		.uleb128 0x3
 2692 0095 0E       		.uleb128 0xe
 2693 0096 3A       		.uleb128 0x3a
 2694 0097 0B       		.uleb128 0xb
 2695 0098 3B       		.uleb128 0x3b
 2696 0099 05       		.uleb128 0x5
 2697 009a 27       		.uleb128 0x27
 2698 009b 19       		.uleb128 0x19
 2699 009c 49       		.uleb128 0x49
 2700 009d 13       		.uleb128 0x13
 2701 009e 11       		.uleb128 0x11
 2702 009f 01       		.uleb128 0x1
 2703 00a0 12       		.uleb128 0x12
 2704 00a1 06       		.uleb128 0x6
 2705 00a2 40       		.uleb128 0x40
 2706 00a3 18       		.uleb128 0x18
 2707 00a4 9642     		.uleb128 0x2116
 2708 00a6 19       		.uleb128 0x19
 2709 00a7 01       		.uleb128 0x1
 2710 00a8 13       		.uleb128 0x13
 2711 00a9 00       		.byte	0
 2712 00aa 00       		.byte	0
 2713 00ab 0B       		.uleb128 0xb
 2714 00ac 05       		.uleb128 0x5
 2715 00ad 00       		.byte	0
 2716 00ae 03       		.uleb128 0x3
 2717 00af 08       		.uleb128 0x8
 2718 00b0 3A       		.uleb128 0x3a
 2719 00b1 0B       		.uleb128 0xb
 2720 00b2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 65


 2721 00b3 05       		.uleb128 0x5
 2722 00b4 49       		.uleb128 0x49
 2723 00b5 13       		.uleb128 0x13
 2724 00b6 02       		.uleb128 0x2
 2725 00b7 18       		.uleb128 0x18
 2726 00b8 00       		.byte	0
 2727 00b9 00       		.byte	0
 2728 00ba 0C       		.uleb128 0xc
 2729 00bb 05       		.uleb128 0x5
 2730 00bc 00       		.byte	0
 2731 00bd 03       		.uleb128 0x3
 2732 00be 0E       		.uleb128 0xe
 2733 00bf 3A       		.uleb128 0x3a
 2734 00c0 0B       		.uleb128 0xb
 2735 00c1 3B       		.uleb128 0x3b
 2736 00c2 05       		.uleb128 0x5
 2737 00c3 49       		.uleb128 0x49
 2738 00c4 13       		.uleb128 0x13
 2739 00c5 02       		.uleb128 0x2
 2740 00c6 18       		.uleb128 0x18
 2741 00c7 00       		.byte	0
 2742 00c8 00       		.byte	0
 2743 00c9 0D       		.uleb128 0xd
 2744 00ca 34       		.uleb128 0x34
 2745 00cb 00       		.byte	0
 2746 00cc 03       		.uleb128 0x3
 2747 00cd 0E       		.uleb128 0xe
 2748 00ce 3A       		.uleb128 0x3a
 2749 00cf 0B       		.uleb128 0xb
 2750 00d0 3B       		.uleb128 0x3b
 2751 00d1 05       		.uleb128 0x5
 2752 00d2 49       		.uleb128 0x49
 2753 00d3 13       		.uleb128 0x13
 2754 00d4 02       		.uleb128 0x2
 2755 00d5 18       		.uleb128 0x18
 2756 00d6 00       		.byte	0
 2757 00d7 00       		.byte	0
 2758 00d8 0E       		.uleb128 0xe
 2759 00d9 2E       		.uleb128 0x2e
 2760 00da 01       		.byte	0x1
 2761 00db 3F       		.uleb128 0x3f
 2762 00dc 19       		.uleb128 0x19
 2763 00dd 03       		.uleb128 0x3
 2764 00de 0E       		.uleb128 0xe
 2765 00df 3A       		.uleb128 0x3a
 2766 00e0 0B       		.uleb128 0xb
 2767 00e1 3B       		.uleb128 0x3b
 2768 00e2 05       		.uleb128 0x5
 2769 00e3 27       		.uleb128 0x27
 2770 00e4 19       		.uleb128 0x19
 2771 00e5 11       		.uleb128 0x11
 2772 00e6 01       		.uleb128 0x1
 2773 00e7 12       		.uleb128 0x12
 2774 00e8 06       		.uleb128 0x6
 2775 00e9 40       		.uleb128 0x40
 2776 00ea 18       		.uleb128 0x18
 2777 00eb 9642     		.uleb128 0x2116
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 66


 2778 00ed 19       		.uleb128 0x19
 2779 00ee 01       		.uleb128 0x1
 2780 00ef 13       		.uleb128 0x13
 2781 00f0 00       		.byte	0
 2782 00f1 00       		.byte	0
 2783 00f2 0F       		.uleb128 0xf
 2784 00f3 01       		.uleb128 0x1
 2785 00f4 01       		.byte	0x1
 2786 00f5 49       		.uleb128 0x49
 2787 00f6 13       		.uleb128 0x13
 2788 00f7 01       		.uleb128 0x1
 2789 00f8 13       		.uleb128 0x13
 2790 00f9 00       		.byte	0
 2791 00fa 00       		.byte	0
 2792 00fb 10       		.uleb128 0x10
 2793 00fc 21       		.uleb128 0x21
 2794 00fd 00       		.byte	0
 2795 00fe 49       		.uleb128 0x49
 2796 00ff 13       		.uleb128 0x13
 2797 0100 2F       		.uleb128 0x2f
 2798 0101 0B       		.uleb128 0xb
 2799 0102 00       		.byte	0
 2800 0103 00       		.byte	0
 2801 0104 11       		.uleb128 0x11
 2802 0105 34       		.uleb128 0x34
 2803 0106 00       		.byte	0
 2804 0107 03       		.uleb128 0x3
 2805 0108 0E       		.uleb128 0xe
 2806 0109 3A       		.uleb128 0x3a
 2807 010a 0B       		.uleb128 0xb
 2808 010b 3B       		.uleb128 0x3b
 2809 010c 0B       		.uleb128 0xb
 2810 010d 49       		.uleb128 0x49
 2811 010e 13       		.uleb128 0x13
 2812 010f 3F       		.uleb128 0x3f
 2813 0110 19       		.uleb128 0x19
 2814 0111 02       		.uleb128 0x2
 2815 0112 18       		.uleb128 0x18
 2816 0113 00       		.byte	0
 2817 0114 00       		.byte	0
 2818 0115 00       		.byte	0
 2819              		.section	.debug_aranges,"",%progbits
 2820 0000 4C000000 		.4byte	0x4c
 2821 0004 0200     		.2byte	0x2
 2822 0006 00000000 		.4byte	.Ldebug_info0
 2823 000a 04       		.byte	0x4
 2824 000b 00       		.byte	0
 2825 000c 0000     		.2byte	0
 2826 000e 0000     		.2byte	0
 2827 0010 00000000 		.4byte	.LFB36
 2828 0014 90020000 		.4byte	.LFE36-.LFB36
 2829 0018 00000000 		.4byte	.LFB37
 2830 001c EC040000 		.4byte	.LFE37-.LFB37
 2831 0020 00000000 		.4byte	.LFB38
 2832 0024 62000000 		.4byte	.LFE38-.LFB38
 2833 0028 00000000 		.4byte	.LFB39
 2834 002c 68020000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 67


 2835 0030 00000000 		.4byte	.LFB40
 2836 0034 24010000 		.4byte	.LFE40-.LFB40
 2837 0038 00000000 		.4byte	.LFB41
 2838 003c 10010000 		.4byte	.LFE41-.LFB41
 2839 0040 00000000 		.4byte	.LFB42
 2840 0044 20000000 		.4byte	.LFE42-.LFB42
 2841 0048 00000000 		.4byte	0
 2842 004c 00000000 		.4byte	0
 2843              		.section	.debug_ranges,"",%progbits
 2844              	.Ldebug_ranges0:
 2845 0000 00000000 		.4byte	.LFB36
 2846 0004 90020000 		.4byte	.LFE36
 2847 0008 00000000 		.4byte	.LFB37
 2848 000c EC040000 		.4byte	.LFE37
 2849 0010 00000000 		.4byte	.LFB38
 2850 0014 62000000 		.4byte	.LFE38
 2851 0018 00000000 		.4byte	.LFB39
 2852 001c 68020000 		.4byte	.LFE39
 2853 0020 00000000 		.4byte	.LFB40
 2854 0024 24010000 		.4byte	.LFE40
 2855 0028 00000000 		.4byte	.LFB41
 2856 002c 10010000 		.4byte	.LFE41
 2857 0030 00000000 		.4byte	.LFB42
 2858 0034 20000000 		.4byte	.LFE42
 2859 0038 00000000 		.4byte	0
 2860 003c 00000000 		.4byte	0
 2861              		.section	.debug_line,"",%progbits
 2862              	.Ldebug_line0:
 2863 0000 9B020000 		.section	.debug_str,"MS",%progbits,1
 2863      02004100 
 2863      00000201 
 2863      FB0E0D00 
 2863      01010101 
 2864              	.LASF25:
 2865 0000 55706461 		.ascii	"UpdateLedsFan2\000"
 2865      74654C65 
 2865      64734661 
 2865      6E3200
 2866              	.LASF28:
 2867 000f 63616368 		.ascii	"cache\000"
 2867      6500
 2868              	.LASF19:
 2869 0015 76616C75 		.ascii	"value\000"
 2869      6500
 2870              	.LASF31:
 2871 001b 6F6C6443 		.ascii	"oldCurPos1\000"
 2871      7572506F 
 2871      733100
 2872              	.LASF33:
 2873 0026 6F6C6443 		.ascii	"oldCurPos2\000"
 2873      7572506F 
 2873      733200
 2874              	.LASF30:
 2875 0031 63757250 		.ascii	"curPos1\000"
 2875      6F733100 
 2876              	.LASF32:
 2877 0039 63757250 		.ascii	"curPos2\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 68


 2877      6F733200 
 2878              	.LASF20:
 2879 0041 73746174 		.ascii	"status\000"
 2879      757300
 2880              	.LASF29:
 2881 0048 75706461 		.ascii	"update\000"
 2881      746500
 2882              	.LASF12:
 2883 004f 666C6F61 		.ascii	"float\000"
 2883      7400
 2884              	.LASF7:
 2885 0055 6C6F6E67 		.ascii	"long long unsigned int\000"
 2885      206C6F6E 
 2885      6720756E 
 2885      7369676E 
 2885      65642069 
 2886              	.LASF1:
 2887 006c 756E7369 		.ascii	"unsigned char\000"
 2887      676E6564 
 2887      20636861 
 2887      7200
 2888              	.LASF57:
 2889 007a 45786563 		.ascii	"ExecuteCommand\000"
 2889      75746543 
 2889      6F6D6D61 
 2889      6E6400
 2890              	.LASF51:
 2891 0089 69326352 		.ascii	"i2cReadBuffer\000"
 2891      65616442 
 2891      75666665 
 2891      7200
 2892              	.LASF14:
 2893 0097 63686172 		.ascii	"char8\000"
 2893      3800
 2894              	.LASF5:
 2895 009d 6C6F6E67 		.ascii	"long unsigned int\000"
 2895      20756E73 
 2895      69676E65 
 2895      6420696E 
 2895      7400
 2896              	.LASF17:
 2897 00af 74656D70 		.ascii	"temp\000"
 2897      00
 2898              	.LASF3:
 2899 00b4 73686F72 		.ascii	"short unsigned int\000"
 2899      7420756E 
 2899      7369676E 
 2899      65642069 
 2899      6E7400
 2900              	.LASF23:
 2901 00c7 63757250 		.ascii	"curPos\000"
 2901      6F7300
 2902              	.LASF35:
 2903 00ce 62757431 		.ascii	"but1\000"
 2903      00
 2904              	.LASF36:
 2905 00d3 62757432 		.ascii	"but2\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 69


 2905      00
 2906              	.LASF37:
 2907 00d8 62757433 		.ascii	"but3\000"
 2907      00
 2908              	.LASF38:
 2909 00dd 62757434 		.ascii	"but4\000"
 2909      00
 2910              	.LASF39:
 2911 00e2 62757435 		.ascii	"but5\000"
 2911      00
 2912              	.LASF13:
 2913 00e7 646F7562 		.ascii	"double\000"
 2913      6C6500
 2914              	.LASF26:
 2915 00ee 43617053 		.ascii	"CapSense_DisplayState\000"
 2915      656E7365 
 2915      5F446973 
 2915      706C6179 
 2915      53746174 
 2916              	.LASF22:
 2917 0104 55706461 		.ascii	"UpdateSwitchLeds\000"
 2917      74655377 
 2917      69746368 
 2917      4C656473 
 2917      00
 2918              	.LASF2:
 2919 0115 73686F72 		.ascii	"short int\000"
 2919      7420696E 
 2919      7400
 2920              	.LASF54:
 2921 011f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2921      4320342E 
 2921      392E3320 
 2921      32303135 
 2921      30333033 
 2922 0152 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2922      20726576 
 2922      6973696F 
 2922      6E203232 
 2922      31323230 
 2923 0185 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2923      66756E63 
 2923      74696F6E 
 2923      2D736563 
 2923      74696F6E 
 2924              	.LASF10:
 2925 01ad 75696E74 		.ascii	"uint16\000"
 2925      313600
 2926              	.LASF11:
 2927 01b4 75696E74 		.ascii	"uint32\000"
 2927      333200
 2928              	.LASF34:
 2929 01bb 736F636B 		.ascii	"sock1\000"
 2929      3100
 2930              	.LASF56:
 2931 01c1 433A5C55 		.ascii	"C:\\Users\\poornima\\Documents\\GitHub\\thingTouch\\"
 2931      73657273 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 70


 2931      5C706F6F 
 2931      726E696D 
 2931      615C446F 
 2932 01ef 32463553 		.ascii	"2F5S1SOC.cydsn\000"
 2932      31534F43 
 2932      2E637964 
 2932      736E00
 2933              	.LASF8:
 2934 01fe 756E7369 		.ascii	"unsigned int\000"
 2934      676E6564 
 2934      20696E74 
 2934      00
 2935              	.LASF41:
 2936 020b 6F6C6442 		.ascii	"oldBut1\000"
 2936      75743100 
 2937              	.LASF42:
 2938 0213 6F6C6442 		.ascii	"oldBut2\000"
 2938      75743200 
 2939              	.LASF43:
 2940 021b 6F6C6442 		.ascii	"oldBut3\000"
 2940      75743300 
 2941              	.LASF44:
 2942 0223 6F6C6442 		.ascii	"oldBut4\000"
 2942      75743400 
 2943              	.LASF45:
 2944 022b 6F6C6442 		.ascii	"oldBut5\000"
 2944      75743500 
 2945              	.LASF40:
 2946 0233 6F6C6453 		.ascii	"oldSock1\000"
 2946      6F636B31 
 2946      00
 2947              	.LASF52:
 2948 023c 69326357 		.ascii	"i2cWriteBuffer\000"
 2948      72697465 
 2948      42756666 
 2948      657200
 2949              	.LASF21:
 2950 024b 6D61696E 		.ascii	"main\000"
 2950      00
 2951              	.LASF27:
 2952 0250 57647449 		.ascii	"WdtIsrHandler\000"
 2952      73724861 
 2952      6E646C65 
 2952      7200
 2953              	.LASF18:
 2954 025e 74656D70 		.ascii	"temp2\000"
 2954      3200
 2955              	.LASF16:
 2956 0264 73697A65 		.ascii	"sizetype\000"
 2956      74797065 
 2956      00
 2957              	.LASF6:
 2958 026d 6C6F6E67 		.ascii	"long long int\000"
 2958      206C6F6E 
 2958      6720696E 
 2958      7400
 2959              	.LASF55:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccLIr98m.s 			page 71


 2960 027b 6D61696E 		.ascii	"main.c\000"
 2960      2E6300
 2961              	.LASF15:
 2962 0282 63686172 		.ascii	"char\000"
 2962      00
 2963              	.LASF46:
 2964 0287 74656D70 		.ascii	"temp1\000"
 2964      3100
 2965              	.LASF47:
 2966 028d 74656D70 		.ascii	"temp3\000"
 2966      3300
 2967              	.LASF48:
 2968 0293 74656D70 		.ascii	"temp4\000"
 2968      3400
 2969              	.LASF49:
 2970 0299 74656D70 		.ascii	"temp5\000"
 2970      3500
 2971              	.LASF50:
 2972 029f 74656D70 		.ascii	"temp6\000"
 2972      3600
 2973              	.LASF9:
 2974 02a5 75696E74 		.ascii	"uint8\000"
 2974      3800
 2975              	.LASF4:
 2976 02ab 6C6F6E67 		.ascii	"long int\000"
 2976      20696E74 
 2976      00
 2977              	.LASF0:
 2978 02b4 7369676E 		.ascii	"signed char\000"
 2978      65642063 
 2978      68617200 
 2979              	.LASF53:
 2980 02c0 636F6D70 		.ascii	"compare\000"
 2980      61726500 
 2981              	.LASF24:
 2982 02c8 55706461 		.ascii	"UpdateLedsFan1\000"
 2982      74654C65 
 2982      64734661 
 2982      6E3100
 2983              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
