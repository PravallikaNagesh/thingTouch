ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,18,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 18
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	18
  24      00000000 
  24      00000000 
  24      00000000 
  24      0000
  25              		.global	CapSense_sensorBaselineLow
  26 0012 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 9
  29              	CapSense_sensorBaselineLow:
  30 0014 00000000 		.space	9
  30      00000000 
  30      00
  31              		.global	CapSense_sensorSignal
  32 001d 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 9
  35              	CapSense_sensorSignal:
  36 0020 00000000 		.space	9
  36      00000000 
  36      00
  37              		.global	CapSense_sensorOnMask
  38 0029 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 2
  41              	CapSense_sensorOnMask:
  42 002c 0000     		.space	2
  43              		.comm	CapSense_lowBaselineResetCnt,9,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 9
  49              	CapSense_lowBaselineReset:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 2


  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58 0008 1E       		.byte	30
  59              		.global	CapSense_enableRawFilters
  60              		.type	CapSense_enableRawFilters, %object
  61              		.size	CapSense_enableRawFilters, 1
  62              	CapSense_enableRawFilters:
  63 0009 01       		.byte	1
  64              		.comm	CapSense_fingerThreshold,5,4
  65              		.comm	CapSense_noiseThreshold,5,4
  66              		.comm	CapSense_negativeNoiseThreshold,5,4
  67              		.comm	CapSense_hysteresis,5,4
  68              		.global	CapSense_debounce
  69 000a 0000     		.align	2
  70              		.type	CapSense_debounce, %object
  71              		.size	CapSense_debounce, 5
  72              	CapSense_debounce:
  73 000c 01       		.byte	1
  74 000d 05       		.byte	5
  75 000e 05       		.byte	5
  76 000f 05       		.byte	5
  77 0010 05       		.byte	5
  78              		.bss
  79 002e 0000     		.align	2
  80              	CapSense_debounceCounter:
  81 0030 00000000 		.space	5
  81      00
  82              		.global	CapSense_rawDataIndex
  83              		.section	.rodata
  84              		.align	2
  85              		.type	CapSense_rawDataIndex, %object
  86              		.size	CapSense_rawDataIndex, 5
  87              	CapSense_rawDataIndex:
  88 0000 04       		.byte	4
  89 0001 00       		.byte	0
  90 0002 01       		.byte	1
  91 0003 02       		.byte	2
  92 0004 03       		.byte	3
  93              		.global	CapSense_numberOfSensors
  94 0005 000000   		.align	2
  95              		.type	CapSense_numberOfSensors, %object
  96              		.size	CapSense_numberOfSensors, 5
  97              	CapSense_numberOfSensors:
  98 0008 05       		.byte	5
  99 0009 01       		.byte	1
 100 000a 01       		.byte	1
 101 000b 01       		.byte	1
 102 000c 01       		.byte	1
 103 000d 000000   		.align	2
 104              		.type	CapSense_centroidMult, %object
 105              		.size	CapSense_centroidMult, 2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 3


 106              	CapSense_centroidMult:
 107 0010 0014     		.short	5120
 108 0012 0000     		.data
 109 0011 000000   		.align	2
 110              		.type	CapSense_posFiltersMask, %object
 111              		.size	CapSense_posFiltersMask, 1
 112              	CapSense_posFiltersMask:
 113 0014 08       		.byte	8
 114 0015 000000   		.align	2
 115              		.type	CapSense_posFiltersData, %object
 116              		.size	CapSense_posFiltersData, 3
 117              	CapSense_posFiltersData:
 118 0018 01       		.byte	1
 119 0019 00       		.byte	0
 120 001a 00       		.byte	0
 121 001b 00       		.section	.text.CapSense_BaseInit,"ax",%progbits
 122              		.align	2
 123              		.global	CapSense_BaseInit
 124              		.code	16
 125              		.thumb_func
 126              		.type	CapSense_BaseInit, %function
 127              	CapSense_BaseInit:
 128              	.LFB35:
 129              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 4


  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* RadialSlider0__RS */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 5


  91:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  93:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* RadialSlider0__RS */
  99:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 100:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
 101:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
 106:Generated_Source\PSoC4/CapSense_CSHL.c ****     5120u, 
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
 110:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x8u, 
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 114:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 145:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 147:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 6


 148:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 149:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 151:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 153:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 154:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 130              		.loc 1 155 0
 131              		.cfi_startproc
 132 0000 80B5     		push	{r7, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 84B0     		sub	sp, sp, #16
 137              		.cfi_def_cfa_offset 24
 138 0004 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 140 0006 7860     		str	r0, [r7, #4]
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 141              		.loc 1 158 0
 142 0008 0F23     		mov	r3, #15
 143 000a FB18     		add	r3, r7, r3
 144 000c 1849     		ldr	r1, .L3
 145 000e 7A68     		ldr	r2, [r7, #4]
 146 0010 8A18     		add	r2, r1, r2
 147 0012 1278     		ldrb	r2, [r2]
 148 0014 1A70     		strb	r2, [r3]
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 149              		.loc 1 172 0
 150 0016 174B     		ldr	r3, .L3+4
 151 0018 7A68     		ldr	r2, [r7, #4]
 152 001a 5200     		lsl	r2, r2, #1
 153 001c D15A     		ldrh	r1, [r2, r3]
 154 001e 164B     		ldr	r3, .L3+8
 155 0020 7A68     		ldr	r2, [r7, #4]
 156 0022 5200     		lsl	r2, r2, #1
 157 0024 D152     		strh	r1, [r2, r3]
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 158              		.loc 1 173 0
 159 0026 154A     		ldr	r2, .L3+12
 160 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 7


 161 002a D318     		add	r3, r2, r3
 162 002c 0022     		mov	r2, #0
 163 002e 1A70     		strb	r2, [r3]
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 164              		.loc 1 174 0
 165 0030 134A     		ldr	r2, .L3+16
 166 0032 7B68     		ldr	r3, [r7, #4]
 167 0034 D318     		add	r3, r2, r3
 168 0036 0022     		mov	r2, #0
 169 0038 1A70     		strb	r2, [r3]
 175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 170              		.loc 1 176 0
 171 003a 0F23     		mov	r3, #15
 172 003c FB18     		add	r3, r7, r3
 173 003e 1B78     		ldrb	r3, [r3]
 174 0040 002B     		cmp	r3, #0
 175 0042 0AD0     		beq	.L2
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u)] =  CapSense_debou
 176              		.loc 1 178 0
 177 0044 0F23     		mov	r3, #15
 178 0046 FB18     		add	r3, r7, r3
 179 0048 1B78     		ldrb	r3, [r3]
 180 004a 013B     		sub	r3, r3, #1
 181 004c 0F22     		mov	r2, #15
 182 004e BA18     		add	r2, r7, r2
 183 0050 1278     		ldrb	r2, [r2]
 184 0052 0C49     		ldr	r1, .L3+20
 185 0054 895C     		ldrb	r1, [r1, r2]
 186 0056 0C4A     		ldr	r2, .L3+24
 187 0058 D154     		strb	r1, [r2, r3]
 188              	.L2:
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 190:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 191:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 192:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 194:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 189              		.loc 1 194 0
 190 005a 064B     		ldr	r3, .L3+4
 191 005c 7A68     		ldr	r2, [r7, #4]
 192 005e 5200     		lsl	r2, r2, #1
 193 0060 D15A     		ldrh	r1, [r2, r3]
 194 0062 0A4B     		ldr	r3, .L3+28
 195 0064 7A68     		ldr	r2, [r7, #4]
 196 0066 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 8


 197 0068 D152     		strh	r1, [r2, r3]
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 196:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 197:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 198:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 199:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 200:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 202:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 203:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 204:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 205:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 198              		.loc 1 206 0
 199 006a BD46     		mov	sp, r7
 200 006c 04B0     		add	sp, sp, #16
 201              		@ sp needed
 202 006e 80BD     		pop	{r7, pc}
 203              	.L4:
 204              		.align	2
 205              	.L3:
 206 0070 00000000 		.word	CapSense_widgetNumber
 207 0074 00000000 		.word	CapSense_sensorRaw
 208 0078 00000000 		.word	CapSense_sensorBaseline
 209 007c 00000000 		.word	CapSense_sensorBaselineLow
 210 0080 00000000 		.word	CapSense_sensorSignal
 211 0084 00000000 		.word	CapSense_debounce
 212 0088 30000000 		.word	CapSense_debounceCounter
 213 008c 00000000 		.word	CapSense_rawFilterData1
 214              		.cfi_endproc
 215              	.LFE35:
 216              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 217              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 218              		.align	2
 219              		.global	CapSense_InitializeSensorBaseline
 220              		.code	16
 221              		.thumb_func
 222              		.type	CapSense_InitializeSensorBaseline, %function
 223              	CapSense_InitializeSensorBaseline:
 224              	.LFB36:
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 219:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 9


 224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 225              		.loc 1 234 0
 226              		.cfi_startproc
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 235 0006 7860     		str	r0, [r7, #4]
 235:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 236:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 236              		.loc 1 236 0
 237 0008 7B68     		ldr	r3, [r7, #4]
 238 000a 181C     		mov	r0, r3
 239 000c FFF7FEFF 		bl	CapSense_ScanSensor
 237:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 240              		.loc 1 237 0
 241 0010 C046     		mov	r8, r8
 242              	.L6:
 243              		.loc 1 237 0 is_stmt 0 discriminator 1
 244 0012 FFF7FEFF 		bl	CapSense_IsBusy
 245 0016 031E     		sub	r3, r0, #0
 246 0018 FBD1     		bne	.L6
 238:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 239:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 240:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 242:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 243:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 247              		.loc 1 243 0 is_stmt 1
 248 001a 7B68     		ldr	r3, [r7, #4]
 249 001c 181C     		mov	r0, r3
 250 001e FFF7FEFF 		bl	CapSense_BaseInit
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 251              		.loc 1 244 0
 252 0022 BD46     		mov	sp, r7
 253 0024 02B0     		add	sp, sp, #8
 254              		@ sp needed
 255 0026 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE36:
 258              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 259              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 260              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 10


 261              		.global	CapSense_InitializeAllBaselines
 262              		.code	16
 263              		.thumb_func
 264              		.type	CapSense_InitializeAllBaselines, %function
 265              	CapSense_InitializeAllBaselines:
 266              	.LFB37:
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 267              		.loc 1 271 0
 268              		.cfi_startproc
 269 0000 80B5     		push	{r7, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 82B0     		sub	sp, sp, #8
 274              		.cfi_def_cfa_offset 16
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 272:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 274:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 277              		.loc 1 274 0
 278 0006 0023     		mov	r3, #0
 279 0008 7B60     		str	r3, [r7, #4]
 280 000a 06E0     		b	.L8
 281              	.L9:
 275:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 276:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 282              		.loc 1 276 0 discriminator 3
 283 000c 7B68     		ldr	r3, [r7, #4]
 284 000e 181C     		mov	r0, r3
 285 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 11


 274:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 286              		.loc 1 274 0 discriminator 3
 287 0014 7B68     		ldr	r3, [r7, #4]
 288 0016 0133     		add	r3, r3, #1
 289 0018 7B60     		str	r3, [r7, #4]
 290              	.L8:
 274:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 291              		.loc 1 274 0 is_stmt 0 discriminator 1
 292 001a 7B68     		ldr	r3, [r7, #4]
 293 001c 082B     		cmp	r3, #8
 294 001e F5D9     		bls	.L9
 277:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 295              		.loc 1 278 0 is_stmt 1
 296 0020 BD46     		mov	sp, r7
 297 0022 02B0     		add	sp, sp, #8
 298              		@ sp needed
 299 0024 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE37:
 302              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 303 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 304              		.align	2
 305              		.global	CapSense_InitializeEnabledBaselines
 306              		.code	16
 307              		.thumb_func
 308              		.type	CapSense_InitializeEnabledBaselines, %function
 309              	CapSense_InitializeEnabledBaselines:
 310              	.LFB38:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 295:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 297:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 300:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 301:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 12


 311              		.loc 1 306 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 82B0     		sub	sp, sp, #8
 318              		.cfi_def_cfa_offset 16
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 310:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 321              		.loc 1 310 0
 322 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 311:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 323              		.loc 1 311 0
 324 000a C046     		mov	r8, r8
 325              	.L11:
 326              		.loc 1 311 0 is_stmt 0 discriminator 1
 327 000c FFF7FEFF 		bl	CapSense_IsBusy
 328 0010 031E     		sub	r3, r0, #0
 329 0012 FBD1     		bne	.L11
 312:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 313:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 314:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 330              		.loc 1 316 0 is_stmt 1
 331 0014 0023     		mov	r3, #0
 332 0016 7B60     		str	r3, [r7, #4]
 333 0018 11E0     		b	.L12
 334              	.L14:
 317:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 318:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 335              		.loc 1 318 0
 336 001a 0C4A     		ldr	r2, .L15
 337 001c 7B68     		ldr	r3, [r7, #4]
 338 001e 101C     		mov	r0, r2
 339 0020 191C     		mov	r1, r3
 340 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 341 0026 031C     		mov	r3, r0
 342 0028 3B60     		str	r3, [r7]
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 320:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 321:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 343              		.loc 1 321 0
 344 002a 3B68     		ldr	r3, [r7]
 345 002c 002B     		cmp	r3, #0
 346 002e 03D0     		beq	.L13
 322:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 323:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 324:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 347              		.loc 1 324 0
 348 0030 7B68     		ldr	r3, [r7, #4]
 349 0032 181C     		mov	r0, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 13


 350 0034 FFF7FEFF 		bl	CapSense_BaseInit
 351              	.L13:
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 352              		.loc 1 316 0 discriminator 2
 353 0038 7B68     		ldr	r3, [r7, #4]
 354 003a 0133     		add	r3, r3, #1
 355 003c 7B60     		str	r3, [r7, #4]
 356              	.L12:
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 357              		.loc 1 316 0 is_stmt 0 discriminator 1
 358 003e 7B68     		ldr	r3, [r7, #4]
 359 0040 082B     		cmp	r3, #8
 360 0042 EAD9     		bls	.L14
 325:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 326:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 361              		.loc 1 327 0 is_stmt 1
 362 0044 BD46     		mov	sp, r7
 363 0046 02B0     		add	sp, sp, #8
 364              		@ sp needed
 365 0048 80BD     		pop	{r7, pc}
 366              	.L16:
 367 004a C046     		.align	2
 368              	.L15:
 369 004c 00000000 		.word	CapSense_sensorEnableMask
 370              		.cfi_endproc
 371              	.LFE38:
 372              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 373              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 374              		.align	2
 375              		.global	CapSense_UpdateBaselineNoThreshold
 376              		.code	16
 377              		.thumb_func
 378              		.type	CapSense_UpdateBaselineNoThreshold, %function
 379              	CapSense_UpdateBaselineNoThreshold:
 380              	.LFB39:
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 14


 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 356:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 358:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 359:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 360:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 364:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 365:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 367:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 369:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 370:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 381              		.loc 1 371 0
 382              		.cfi_startproc
 383 0000 90B5     		push	{r4, r7, lr}
 384              		.cfi_def_cfa_offset 12
 385              		.cfi_offset 4, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 87B0     		sub	sp, sp, #28
 389              		.cfi_def_cfa_offset 40
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 393              		.loc 1 376 0
 394 0008 0F23     		mov	r3, #15
 395 000a FB18     		add	r3, r7, r3
 396 000c 7E49     		ldr	r1, .L30
 397 000e 7A68     		ldr	r2, [r7, #4]
 398 0010 8A18     		add	r2, r1, r2
 399 0012 1278     		ldrb	r2, [r2]
 400 0014 1A70     		strb	r2, [r3]
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 378:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 15


 401              		.loc 1 385 0
 402 0016 0F23     		mov	r3, #15
 403 0018 FB18     		add	r3, r7, r3
 404 001a 1A78     		ldrb	r2, [r3]
 405 001c 0E23     		mov	r3, #14
 406 001e FB18     		add	r3, r7, r3
 407 0020 7A49     		ldr	r1, .L30+4
 408 0022 8A5C     		ldrb	r2, [r1, r2]
 409 0024 1A70     		strb	r2, [r3]
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 410              		.loc 1 386 0
 411 0026 1023     		mov	r3, #16
 412 0028 FB18     		add	r3, r7, r3
 413 002a 794A     		ldr	r2, .L30+8
 414 002c 7968     		ldr	r1, [r7, #4]
 415 002e 4900     		lsl	r1, r1, #1
 416 0030 8A5A     		ldrh	r2, [r1, r2]
 417 0032 1A80     		strh	r2, [r3]
 387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 418              		.loc 1 389 0
 419 0034 774B     		ldr	r3, .L30+12
 420 0036 1B78     		ldrb	r3, [r3]
 421 0038 002B     		cmp	r3, #0
 422 003a 15D0     		beq	.L18
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 423              		.loc 1 410 0
 424 003c 764B     		ldr	r3, .L30+16
 425 003e 7A68     		ldr	r2, [r7, #4]
 426 0040 5200     		lsl	r2, r2, #1
 427 0042 D25A     		ldrh	r2, [r2, r3]
 428 0044 1023     		mov	r3, #16
 429 0046 FC18     		add	r4, r7, r3
 430 0048 1023     		mov	r3, #16
 431 004a FB18     		add	r3, r7, r3
 432 004c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 16


 433 004e 181C     		mov	r0, r3
 434 0050 111C     		mov	r1, r2
 435 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 436 0056 031C     		mov	r3, r0
 437 0058 2380     		strh	r3, [r4]
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 438              		.loc 1 411 0
 439 005a 6F4B     		ldr	r3, .L30+16
 440 005c 7A68     		ldr	r2, [r7, #4]
 441 005e 5200     		lsl	r2, r2, #1
 442 0060 1021     		mov	r1, #16
 443 0062 7918     		add	r1, r7, r1
 444 0064 0988     		ldrh	r1, [r1]
 445 0066 D152     		strh	r1, [r2, r3]
 446              	.L18:
 412:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 416:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 447              		.loc 1 432 0
 448 0068 7B68     		ldr	r3, [r7, #4]
 449 006a DAB2     		uxtb	r2, r3
 450 006c 6B49     		ldr	r1, .L30+20
 451 006e 684B     		ldr	r3, .L30+8
 452 0070 081C     		mov	r0, r1
 453 0072 111C     		mov	r1, r2
 454 0074 1A1C     		mov	r2, r3
 455 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 456              		.loc 1 437 0
 457 007a 694B     		ldr	r3, .L30+24
 458 007c 7A68     		ldr	r2, [r7, #4]
 459 007e 5200     		lsl	r2, r2, #1
 460 0080 D35A     		ldrh	r3, [r2, r3]
 461 0082 1022     		mov	r2, #16
 462 0084 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 17


 463 0086 1288     		ldrh	r2, [r2]
 464 0088 9A42     		cmp	r2, r3
 465 008a 12D3     		bcc	.L19
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 466              		.loc 1 439 0
 467 008c 654A     		ldr	r2, .L30+28
 468 008e 7B68     		ldr	r3, [r7, #4]
 469 0090 D318     		add	r3, r2, r3
 470 0092 0022     		mov	r2, #0
 471 0094 1A70     		strb	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 472              		.loc 1 440 0
 473 0096 624B     		ldr	r3, .L30+24
 474 0098 7A68     		ldr	r2, [r7, #4]
 475 009a 5200     		lsl	r2, r2, #1
 476 009c D25A     		ldrh	r2, [r2, r3]
 477 009e 1223     		mov	r3, #18
 478 00a0 FB18     		add	r3, r7, r3
 479 00a2 1021     		mov	r1, #16
 480 00a4 7918     		add	r1, r7, r1
 481 00a6 0988     		ldrh	r1, [r1]
 482 00a8 8A1A     		sub	r2, r1, r2
 483 00aa 1A80     		strh	r2, [r3]
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 484              		.loc 1 441 0
 485 00ac 0123     		mov	r3, #1
 486 00ae 7B61     		str	r3, [r7, #20]
 487 00b0 0CE0     		b	.L20
 488              	.L19:
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 489              		.loc 1 445 0
 490 00b2 5B4B     		ldr	r3, .L30+24
 491 00b4 7A68     		ldr	r2, [r7, #4]
 492 00b6 5200     		lsl	r2, r2, #1
 493 00b8 D15A     		ldrh	r1, [r2, r3]
 494 00ba 1223     		mov	r3, #18
 495 00bc FB18     		add	r3, r7, r3
 496 00be 1022     		mov	r2, #16
 497 00c0 BA18     		add	r2, r7, r2
 498 00c2 1288     		ldrh	r2, [r2]
 499 00c4 8A1A     		sub	r2, r1, r2
 500 00c6 1A80     		strh	r2, [r3]
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 501              		.loc 1 446 0
 502 00c8 0023     		mov	r3, #0
 503 00ca 7B61     		str	r3, [r7, #20]
 504              	.L20:
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 448:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 505              		.loc 1 450 0
 506 00cc 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 18


 507 00ce 002B     		cmp	r3, #0
 508 00d0 2AD1     		bne	.L21
 509              		.loc 1 450 0 is_stmt 0 discriminator 1
 510 00d2 0F23     		mov	r3, #15
 511 00d4 FB18     		add	r3, r7, r3
 512 00d6 1B78     		ldrb	r3, [r3]
 513 00d8 534A     		ldr	r2, .L30+32
 514 00da D35C     		ldrb	r3, [r2, r3]
 515 00dc 9BB2     		uxth	r3, r3
 516 00de 1222     		mov	r2, #18
 517 00e0 BA18     		add	r2, r7, r2
 518 00e2 1288     		ldrh	r2, [r2]
 519 00e4 9A42     		cmp	r2, r3
 520 00e6 1FD9     		bls	.L21
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 521              		.loc 1 455 0 is_stmt 1
 522 00e8 4E4A     		ldr	r2, .L30+28
 523 00ea 7B68     		ldr	r3, [r7, #4]
 524 00ec D318     		add	r3, r2, r3
 525 00ee 1A78     		ldrb	r2, [r3]
 526 00f0 4E49     		ldr	r1, .L30+36
 527 00f2 7B68     		ldr	r3, [r7, #4]
 528 00f4 CB18     		add	r3, r1, r3
 529 00f6 1B78     		ldrb	r3, [r3]
 530 00f8 9A42     		cmp	r2, r3
 531 00fa 09D3     		bcc	.L22
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 532              		.loc 1 457 0
 533 00fc 7B68     		ldr	r3, [r7, #4]
 534 00fe 181C     		mov	r0, r3
 535 0100 FFF7FEFF 		bl	CapSense_BaseInit
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 536              		.loc 1 458 0
 537 0104 474A     		ldr	r2, .L30+28
 538 0106 7B68     		ldr	r3, [r7, #4]
 539 0108 D318     		add	r3, r2, r3
 540 010a 0022     		mov	r2, #0
 541 010c 1A70     		strb	r2, [r3]
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 542              		.loc 1 455 0
 543 010e 51E0     		b	.L24
 544              	.L22:
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 545              		.loc 1 462 0
 546 0110 444A     		ldr	r2, .L30+28
 547 0112 7B68     		ldr	r3, [r7, #4]
 548 0114 D318     		add	r3, r2, r3
 549 0116 1B78     		ldrb	r3, [r3]
 550 0118 0133     		add	r3, r3, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 19


 551 011a D9B2     		uxtb	r1, r3
 552 011c 414A     		ldr	r2, .L30+28
 553 011e 7B68     		ldr	r3, [r7, #4]
 554 0120 D318     		add	r3, r2, r3
 555 0122 0A1C     		add	r2, r1, #0
 556 0124 1A70     		strb	r2, [r3]
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 557              		.loc 1 455 0
 558 0126 45E0     		b	.L24
 559              	.L21:
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 560              		.loc 1 470 0
 561 0128 0E23     		mov	r3, #14
 562 012a FB18     		add	r3, r7, r3
 563 012c 1B78     		ldrb	r3, [r3]
 564 012e 9BB2     		uxth	r3, r3
 565 0130 1222     		mov	r2, #18
 566 0132 BA18     		add	r2, r7, r2
 567 0134 1288     		ldrh	r2, [r2]
 568 0136 9A42     		cmp	r2, r3
 569 0138 0DD9     		bls	.L25
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 570              		.loc 1 471 0 discriminator 1
 571 013a 0F23     		mov	r3, #15
 572 013c FB18     		add	r3, r7, r3
 573 013e 1B78     		ldrb	r3, [r3]
 574 0140 394A     		ldr	r2, .L30+32
 575 0142 D35C     		ldrb	r3, [r2, r3]
 576 0144 9BB2     		uxth	r3, r3
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 577              		.loc 1 470 0 discriminator 1
 578 0146 1222     		mov	r2, #18
 579 0148 BA18     		add	r2, r7, r2
 580 014a 1288     		ldrh	r2, [r2]
 581 014c 9A42     		cmp	r2, r3
 582 014e 31D2     		bcs	.L24
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 583              		.loc 1 472 0
 584 0150 7B69     		ldr	r3, [r7, #20]
 585 0152 002B     		cmp	r3, #0
 586 0154 2ED1     		bne	.L24
 587              	.L25:
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 20


 481:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 588              		.loc 1 483 0
 589 0156 324B     		ldr	r3, .L30+24
 590 0158 7A68     		ldr	r2, [r7, #4]
 591 015a 5200     		lsl	r2, r2, #1
 592 015c D35A     		ldrh	r3, [r2, r3]
 593 015e 1B02     		lsl	r3, r3, #8
 594 0160 BB60     		str	r3, [r7, #8]
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 595              		.loc 1 484 0
 596 0162 334A     		ldr	r2, .L30+40
 597 0164 7B68     		ldr	r3, [r7, #4]
 598 0166 D318     		add	r3, r2, r3
 599 0168 1B78     		ldrb	r3, [r3]
 600 016a 1A1C     		mov	r2, r3
 601 016c BB68     		ldr	r3, [r7, #8]
 602 016e 1343     		orr	r3, r2
 603 0170 BB60     		str	r3, [r7, #8]
 485:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 604              		.loc 1 487 0
 605 0172 1023     		mov	r3, #16
 606 0174 FB18     		add	r3, r7, r3
 607 0176 1B88     		ldrh	r3, [r3]
 608 0178 BA68     		ldr	r2, [r7, #8]
 609 017a D318     		add	r3, r2, r3
 610 017c BB60     		str	r3, [r7, #8]
 488:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 611              		.loc 1 490 0
 612 017e 284B     		ldr	r3, .L30+24
 613 0180 7A68     		ldr	r2, [r7, #4]
 614 0182 5200     		lsl	r2, r2, #1
 615 0184 D35A     		ldrh	r3, [r2, r3]
 616 0186 1A1C     		mov	r2, r3
 617 0188 BB68     		ldr	r3, [r7, #8]
 618 018a 9B1A     		sub	r3, r3, r2
 619 018c BB60     		str	r3, [r7, #8]
 491:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 620              		.loc 1 493 0
 621 018e BB68     		ldr	r3, [r7, #8]
 622 0190 1B0A     		lsr	r3, r3, #8
 623 0192 99B2     		uxth	r1, r3
 624 0194 224B     		ldr	r3, .L30+24
 625 0196 7A68     		ldr	r2, [r7, #4]
 626 0198 5200     		lsl	r2, r2, #1
 627 019a D152     		strh	r1, [r2, r3]
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 628              		.loc 1 494 0
 629 019c BB68     		ldr	r3, [r7, #8]
 630 019e D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 21


 631 01a0 234A     		ldr	r2, .L30+40
 632 01a2 7B68     		ldr	r3, [r7, #4]
 633 01a4 D318     		add	r3, r2, r3
 634 01a6 0A1C     		add	r2, r1, #0
 635 01a8 1A70     		strb	r2, [r3]
 495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 636              		.loc 1 496 0
 637 01aa 1E4A     		ldr	r2, .L30+28
 638 01ac 7B68     		ldr	r3, [r7, #4]
 639 01ae D318     		add	r3, r2, r3
 640 01b0 0022     		mov	r2, #0
 641 01b2 1A70     		strb	r2, [r3]
 642              	.L24:
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 501:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 643              		.loc 1 503 0
 644 01b4 0E23     		mov	r3, #14
 645 01b6 FB18     		add	r3, r7, r3
 646 01b8 1B78     		ldrb	r3, [r3]
 647 01ba 9BB2     		uxth	r3, r3
 648 01bc 1222     		mov	r2, #18
 649 01be BA18     		add	r2, r7, r2
 650 01c0 1288     		ldrh	r2, [r2]
 651 01c2 9A42     		cmp	r2, r3
 652 01c4 17D9     		bls	.L26
 653              		.loc 1 503 0 is_stmt 0 discriminator 1
 654 01c6 7B69     		ldr	r3, [r7, #20]
 655 01c8 002B     		cmp	r3, #0
 656 01ca 14D0     		beq	.L26
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 657              		.loc 1 507 0 is_stmt 1
 658 01cc 1223     		mov	r3, #18
 659 01ce FB18     		add	r3, r7, r3
 660 01d0 1B88     		ldrh	r3, [r3]
 661 01d2 FF2B     		cmp	r3, #255
 662 01d4 05D9     		bls	.L27
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 663              		.loc 1 509 0
 664 01d6 174A     		ldr	r2, .L30+44
 665 01d8 7B68     		ldr	r3, [r7, #4]
 666 01da D318     		add	r3, r2, r3
 667 01dc FF22     		mov	r2, #255
 668 01de 1A70     		strb	r2, [r3]
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 669              		.loc 1 507 0
 670 01e0 0EE0     		b	.L17
 671              	.L27:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 22


 510:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 672              		.loc 1 513 0
 673 01e2 1223     		mov	r3, #18
 674 01e4 FB18     		add	r3, r7, r3
 675 01e6 1B88     		ldrh	r3, [r3]
 676 01e8 D9B2     		uxtb	r1, r3
 677 01ea 124A     		ldr	r2, .L30+44
 678 01ec 7B68     		ldr	r3, [r7, #4]
 679 01ee D318     		add	r3, r2, r3
 680 01f0 0A1C     		add	r2, r1, #0
 681 01f2 1A70     		strb	r2, [r3]
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 682              		.loc 1 507 0
 683 01f4 04E0     		b	.L17
 684              	.L26:
 514:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 515:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 516:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 517:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 518:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 519:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 520:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 521:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 522:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 685              		.loc 1 522 0
 686 01f6 0F4A     		ldr	r2, .L30+44
 687 01f8 7B68     		ldr	r3, [r7, #4]
 688 01fa D318     		add	r3, r2, r3
 689 01fc 0022     		mov	r2, #0
 690 01fe 1A70     		strb	r2, [r3]
 691              	.L17:
 523:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 525:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 526:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 527:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 528:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 692              		.loc 1 529 0
 693 0200 BD46     		mov	sp, r7
 694 0202 07B0     		add	sp, sp, #28
 695              		@ sp needed
 696 0204 90BD     		pop	{r4, r7, pc}
 697              	.L31:
 698 0206 C046     		.align	2
 699              	.L30:
 700 0208 00000000 		.word	CapSense_widgetNumber
 701 020c 00000000 		.word	CapSense_noiseThreshold
 702 0210 00000000 		.word	CapSense_sensorRaw
 703 0214 00000000 		.word	CapSense_enableRawFilters
 704 0218 00000000 		.word	CapSense_rawFilterData1
 705 021c 00000000 		.word	CapSense_config
 706 0220 00000000 		.word	CapSense_sensorBaseline
 707 0224 00000000 		.word	CapSense_lowBaselineResetCnt
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 23


 708 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 709 022c 00000000 		.word	CapSense_lowBaselineReset
 710 0230 00000000 		.word	CapSense_sensorBaselineLow
 711 0234 00000000 		.word	CapSense_sensorSignal
 712              		.cfi_endproc
 713              	.LFE39:
 714              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 715              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 716              		.align	2
 717              		.global	CapSense_UpdateSensorBaseline
 718              		.code	16
 719              		.thumb_func
 720              		.type	CapSense_UpdateSensorBaseline, %function
 721              	CapSense_UpdateSensorBaseline:
 722              	.LFB40:
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 548:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 553:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 555:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 559:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 723              		.loc 1 563 0
 724              		.cfi_startproc
 725 0000 80B5     		push	{r7, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
 729 0002 82B0     		sub	sp, sp, #8
 730              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 24


 731 0004 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 733 0006 7860     		str	r0, [r7, #4]
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 570:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 571:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 572:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 574:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 575:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 734              		.loc 1 575 0
 735 0008 7B68     		ldr	r3, [r7, #4]
 736 000a 181C     		mov	r0, r3
 737 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 576:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 738              		.loc 1 578 0
 739 0010 7B68     		ldr	r3, [r7, #4]
 740 0012 181C     		mov	r0, r3
 741 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 580:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 581:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 582:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 583:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 742              		.loc 1 584 0
 743 0018 BD46     		mov	sp, r7
 744 001a 02B0     		add	sp, sp, #8
 745              		@ sp needed
 746 001c 80BD     		pop	{r7, pc}
 747              		.cfi_endproc
 748              	.LFE40:
 749              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 750 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 751              		.align	2
 752              		.global	CapSense_UpdateEnabledBaselines
 753              		.code	16
 754              		.thumb_func
 755              		.type	CapSense_UpdateEnabledBaselines, %function
 756              	CapSense_UpdateEnabledBaselines:
 757              	.LFB41:
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 25


 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 616:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 758              		.loc 1 617 0
 759              		.cfi_startproc
 760 0000 80B5     		push	{r7, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 618:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 619:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 621:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 768              		.loc 1 621 0
 769 0006 0023     		mov	r3, #0
 770 0008 7B60     		str	r3, [r7, #4]
 771 000a 11E0     		b	.L34
 772              	.L36:
 622:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 623:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 773              		.loc 1 623 0
 774 000c 0B4A     		ldr	r2, .L37
 775 000e 7B68     		ldr	r3, [r7, #4]
 776 0010 101C     		mov	r0, r2
 777 0012 191C     		mov	r1, r3
 778 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 779 0018 031C     		mov	r3, r0
 780 001a 3B60     		str	r3, [r7]
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 781              		.loc 1 625 0
 782 001c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 26


 783 001e 002B     		cmp	r3, #0
 784 0020 03D0     		beq	.L35
 626:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 627:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 785              		.loc 1 627 0
 786 0022 7B68     		ldr	r3, [r7, #4]
 787 0024 181C     		mov	r0, r3
 788 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 789              	.L35:
 621:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 790              		.loc 1 621 0 discriminator 2
 791 002a 7B68     		ldr	r3, [r7, #4]
 792 002c 0133     		add	r3, r3, #1
 793 002e 7B60     		str	r3, [r7, #4]
 794              	.L34:
 621:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 795              		.loc 1 621 0 is_stmt 0 discriminator 1
 796 0030 7B68     		ldr	r3, [r7, #4]
 797 0032 082B     		cmp	r3, #8
 798 0034 EAD9     		bls	.L36
 628:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 629:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 799              		.loc 1 630 0 is_stmt 1
 800 0036 BD46     		mov	sp, r7
 801 0038 02B0     		add	sp, sp, #8
 802              		@ sp needed
 803 003a 80BD     		pop	{r7, pc}
 804              	.L38:
 805              		.align	2
 806              	.L37:
 807 003c 00000000 		.word	CapSense_sensorEnableMask
 808              		.cfi_endproc
 809              	.LFE41:
 810              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 811              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 812              		.align	2
 813              		.global	CapSense_UpdateWidgetBaseline
 814              		.code	16
 815              		.thumb_func
 816              		.type	CapSense_UpdateWidgetBaseline, %function
 817              	CapSense_UpdateWidgetBaseline:
 818              	.LFB42:
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 27


 645:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 654:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 819              		.loc 1 662 0
 820              		.cfi_startproc
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 88B0     		sub	sp, sp, #32
 826              		.cfi_def_cfa_offset 40
 827 0004 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 830              		.loc 1 670 0
 831 0008 164A     		ldr	r2, .L43
 832 000a 7B68     		ldr	r3, [r7, #4]
 833 000c D318     		add	r3, r2, r3
 834 000e 1B78     		ldrb	r3, [r3]
 835 0010 BB61     		str	r3, [r7, #24]
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 672:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 673:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 836              		.loc 1 673 0
 837 0012 154A     		ldr	r2, .L43+4
 838 0014 7B68     		ldr	r3, [r7, #4]
 839 0016 D318     		add	r3, r2, r3
 840 0018 1B78     		ldrb	r3, [r3]
 841 001a 7B61     		str	r3, [r7, #20]
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 675:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 676:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 842              		.loc 1 676 0
 843 001c 124A     		ldr	r2, .L43+4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 28


 844 001e 7B68     		ldr	r3, [r7, #4]
 845 0020 D318     		add	r3, r2, r3
 846 0022 1B78     		ldrb	r3, [r3]
 847 0024 1A1C     		mov	r2, r3
 848 0026 BB69     		ldr	r3, [r7, #24]
 849 0028 D318     		add	r3, r2, r3
 850 002a 3B61     		str	r3, [r7, #16]
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 678:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 851              		.loc 1 678 0
 852 002c 7B69     		ldr	r3, [r7, #20]
 853 002e FB61     		str	r3, [r7, #28]
 854 0030 11E0     		b	.L40
 855              	.L42:
 679:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 680:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 856              		.loc 1 680 0
 857 0032 0E4A     		ldr	r2, .L43+8
 858 0034 FB69     		ldr	r3, [r7, #28]
 859 0036 101C     		mov	r0, r2
 860 0038 191C     		mov	r1, r3
 861 003a FFF7FEFF 		bl	CapSense_GetBitValue
 862 003e 031C     		mov	r3, r0
 863 0040 FB60     		str	r3, [r7, #12]
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 864              		.loc 1 682 0
 865 0042 FB68     		ldr	r3, [r7, #12]
 866 0044 002B     		cmp	r3, #0
 867 0046 03D0     		beq	.L41
 683:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 684:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 868              		.loc 1 684 0
 869 0048 FB69     		ldr	r3, [r7, #28]
 870 004a 181C     		mov	r0, r3
 871 004c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 872              	.L41:
 678:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 873              		.loc 1 678 0 discriminator 2
 874 0050 FB69     		ldr	r3, [r7, #28]
 875 0052 0133     		add	r3, r3, #1
 876 0054 FB61     		str	r3, [r7, #28]
 877              	.L40:
 678:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 878              		.loc 1 678 0 is_stmt 0 discriminator 1
 879 0056 FA69     		ldr	r2, [r7, #28]
 880 0058 3B69     		ldr	r3, [r7, #16]
 881 005a 9A42     		cmp	r2, r3
 882 005c E9D3     		bcc	.L42
 685:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 686:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 883              		.loc 1 687 0 is_stmt 1
 884 005e BD46     		mov	sp, r7
 885 0060 08B0     		add	sp, sp, #32
 886              		@ sp needed
 887 0062 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 29


 888              	.L44:
 889              		.align	2
 890              	.L43:
 891 0064 00000000 		.word	CapSense_numberOfSensors
 892 0068 00000000 		.word	CapSense_rawDataIndex
 893 006c 00000000 		.word	CapSense_sensorEnableMask
 894              		.cfi_endproc
 895              	.LFE42:
 896              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 897              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 898              		.align	2
 899              		.global	CapSense_GetBaselineData
 900              		.code	16
 901              		.thumb_func
 902              		.type	CapSense_GetBaselineData, %function
 903              	CapSense_GetBaselineData:
 904              	.LFB43:
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 905              		.loc 1 711 0
 906              		.cfi_startproc
 907 0000 80B5     		push	{r7, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0002 82B0     		sub	sp, sp, #8
 912              		.cfi_def_cfa_offset 16
 913 0004 00AF     		add	r7, sp, #0
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
 712:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 916              		.loc 1 712 0
 917 0008 034B     		ldr	r3, .L47
 918 000a 7A68     		ldr	r2, [r7, #4]
 919 000c 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 30


 920 000e D35A     		ldrh	r3, [r2, r3]
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 921              		.loc 1 713 0
 922 0010 181C     		mov	r0, r3
 923 0012 BD46     		mov	sp, r7
 924 0014 02B0     		add	sp, sp, #8
 925              		@ sp needed
 926 0016 80BD     		pop	{r7, pc}
 927              	.L48:
 928              		.align	2
 929              	.L47:
 930 0018 00000000 		.word	CapSense_sensorBaseline
 931              		.cfi_endproc
 932              	.LFE43:
 933              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 934              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 935              		.align	2
 936              		.global	CapSense_SetBaselineData
 937              		.code	16
 938              		.thumb_func
 939              		.type	CapSense_SetBaselineData, %function
 940              	CapSense_SetBaselineData:
 941              	.LFB44:
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 942              		.loc 1 738 0
 943              		.cfi_startproc
 944 0000 80B5     		push	{r7, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 7, -8
 947              		.cfi_offset 14, -4
 948 0002 82B0     		sub	sp, sp, #8
 949              		.cfi_def_cfa_offset 16
 950 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 31


 951              		.cfi_def_cfa_register 7
 952 0006 7860     		str	r0, [r7, #4]
 953 0008 0A1C     		mov	r2, r1
 954 000a BB1C     		add	r3, r7, #2
 955 000c 1A80     		strh	r2, [r3]
 739:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 956              		.loc 1 739 0
 957 000e 044B     		ldr	r3, .L50
 958 0010 7A68     		ldr	r2, [r7, #4]
 959 0012 5200     		lsl	r2, r2, #1
 960 0014 B91C     		add	r1, r7, #2
 961 0016 0988     		ldrh	r1, [r1]
 962 0018 D152     		strh	r1, [r2, r3]
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 963              		.loc 1 740 0
 964 001a BD46     		mov	sp, r7
 965 001c 02B0     		add	sp, sp, #8
 966              		@ sp needed
 967 001e 80BD     		pop	{r7, pc}
 968              	.L51:
 969              		.align	2
 970              	.L50:
 971 0020 00000000 		.word	CapSense_sensorBaseline
 972              		.cfi_endproc
 973              	.LFE44:
 974              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 975              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 976              		.align	2
 977              		.global	CapSense_GetDiffCountData
 978              		.code	16
 979              		.thumb_func
 980              		.type	CapSense_GetDiffCountData, %function
 981              	CapSense_GetDiffCountData:
 982              	.LFB45:
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 32


 764:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 983              		.loc 1 765 0
 984              		.cfi_startproc
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 82B0     		sub	sp, sp, #8
 990              		.cfi_def_cfa_offset 16
 991 0004 00AF     		add	r7, sp, #0
 992              		.cfi_def_cfa_register 7
 993 0006 7860     		str	r0, [r7, #4]
 766:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 994              		.loc 1 766 0
 995 0008 034A     		ldr	r2, .L54
 996 000a 7B68     		ldr	r3, [r7, #4]
 997 000c D318     		add	r3, r2, r3
 998 000e 1B78     		ldrb	r3, [r3]
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 999              		.loc 1 767 0
 1000 0010 181C     		mov	r0, r3
 1001 0012 BD46     		mov	sp, r7
 1002 0014 02B0     		add	sp, sp, #8
 1003              		@ sp needed
 1004 0016 80BD     		pop	{r7, pc}
 1005              	.L55:
 1006              		.align	2
 1007              	.L54:
 1008 0018 00000000 		.word	CapSense_sensorSignal
 1009              		.cfi_endproc
 1010              	.LFE45:
 1011              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 1012              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 1013              		.align	2
 1014              		.global	CapSense_SetDiffCountData
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	CapSense_SetDiffCountData, %function
 1018              	CapSense_SetDiffCountData:
 1019              	.LFB46:
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 33


 784:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1020              		.loc 1 792 0
 1021              		.cfi_startproc
 1022 0000 80B5     		push	{r7, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 82B0     		sub	sp, sp, #8
 1027              		.cfi_def_cfa_offset 16
 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 1030 0006 7860     		str	r0, [r7, #4]
 1031 0008 0A1C     		mov	r2, r1
 1032 000a FB1C     		add	r3, r7, #3
 1033 000c 1A70     		strb	r2, [r3]
 793:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1034              		.loc 1 793 0
 1035 000e 044A     		ldr	r2, .L57
 1036 0010 7B68     		ldr	r3, [r7, #4]
 1037 0012 D318     		add	r3, r2, r3
 1038 0014 FA1C     		add	r2, r7, #3
 1039 0016 1278     		ldrb	r2, [r2]
 1040 0018 1A70     		strb	r2, [r3]
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1041              		.loc 1 794 0
 1042 001a BD46     		mov	sp, r7
 1043 001c 02B0     		add	sp, sp, #8
 1044              		@ sp needed
 1045 001e 80BD     		pop	{r7, pc}
 1046              	.L58:
 1047              		.align	2
 1048              	.L57:
 1049 0020 00000000 		.word	CapSense_sensorSignal
 1050              		.cfi_endproc
 1051              	.LFE46:
 1052              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1053              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1054              		.align	2
 1055              		.global	CapSense_GetFingerThreshold
 1056              		.code	16
 1057              		.thumb_func
 1058              		.type	CapSense_GetFingerThreshold, %function
 1059              	CapSense_GetFingerThreshold:
 1060              	.LFB47:
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 34


 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1061              		.loc 1 819 0
 1062              		.cfi_startproc
 1063 0000 80B5     		push	{r7, lr}
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 82B0     		sub	sp, sp, #8
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              		.cfi_def_cfa_register 7
 1071 0006 7860     		str	r0, [r7, #4]
 820:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1072              		.loc 1 820 0
 1073 0008 034A     		ldr	r2, .L61
 1074 000a 7B68     		ldr	r3, [r7, #4]
 1075 000c D318     		add	r3, r2, r3
 1076 000e 1B78     		ldrb	r3, [r3]
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1077              		.loc 1 821 0
 1078 0010 181C     		mov	r0, r3
 1079 0012 BD46     		mov	sp, r7
 1080 0014 02B0     		add	sp, sp, #8
 1081              		@ sp needed
 1082 0016 80BD     		pop	{r7, pc}
 1083              	.L62:
 1084              		.align	2
 1085              	.L61:
 1086 0018 00000000 		.word	CapSense_fingerThreshold
 1087              		.cfi_endproc
 1088              	.LFE47:
 1089              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1090              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1091              		.align	2
 1092              		.global	CapSense_GetNoiseThreshold
 1093              		.code	16
 1094              		.thumb_func
 1095              		.type	CapSense_GetNoiseThreshold, %function
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 35


 1096              	CapSense_GetNoiseThreshold:
 1097              	.LFB48:
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1098              		.loc 1 846 0
 1099              		.cfi_startproc
 1100 0000 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 82B0     		sub	sp, sp, #8
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 7860     		str	r0, [r7, #4]
 847:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1109              		.loc 1 847 0
 1110 0008 034A     		ldr	r2, .L65
 1111 000a 7B68     		ldr	r3, [r7, #4]
 1112 000c D318     		add	r3, r2, r3
 1113 000e 1B78     		ldrb	r3, [r3]
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1114              		.loc 1 848 0
 1115 0010 181C     		mov	r0, r3
 1116 0012 BD46     		mov	sp, r7
 1117 0014 02B0     		add	sp, sp, #8
 1118              		@ sp needed
 1119 0016 80BD     		pop	{r7, pc}
 1120              	.L66:
 1121              		.align	2
 1122              	.L65:
 1123 0018 00000000 		.word	CapSense_noiseThreshold
 1124              		.cfi_endproc
 1125              	.LFE48:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 36


 1126              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1127              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1128              		.align	2
 1129              		.global	CapSense_GetFingerHysteresis
 1130              		.code	16
 1131              		.thumb_func
 1132              		.type	CapSense_GetFingerHysteresis, %function
 1133              	CapSense_GetFingerHysteresis:
 1134              	.LFB49:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1135              		.loc 1 874 0
 1136              		.cfi_startproc
 1137 0000 80B5     		push	{r7, lr}
 1138              		.cfi_def_cfa_offset 8
 1139              		.cfi_offset 7, -8
 1140              		.cfi_offset 14, -4
 1141 0002 82B0     		sub	sp, sp, #8
 1142              		.cfi_def_cfa_offset 16
 1143 0004 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
 875:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1146              		.loc 1 875 0
 1147 0008 034A     		ldr	r2, .L69
 1148 000a 7B68     		ldr	r3, [r7, #4]
 1149 000c D318     		add	r3, r2, r3
 1150 000e 1B78     		ldrb	r3, [r3]
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1151              		.loc 1 876 0
 1152 0010 181C     		mov	r0, r3
 1153 0012 BD46     		mov	sp, r7
 1154 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 37


 1155              		@ sp needed
 1156 0016 80BD     		pop	{r7, pc}
 1157              	.L70:
 1158              		.align	2
 1159              	.L69:
 1160 0018 00000000 		.word	CapSense_hysteresis
 1161              		.cfi_endproc
 1162              	.LFE49:
 1163              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1164              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1165              		.align	2
 1166              		.global	CapSense_GetNegativeNoiseThreshold
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1170              	CapSense_GetNegativeNoiseThreshold:
 1171              	.LFB50:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 896:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 897:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 898:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 899:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 900:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 902:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1172              		.loc 1 902 0
 1173              		.cfi_startproc
 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 82B0     		sub	sp, sp, #8
 1179              		.cfi_def_cfa_offset 16
 1180 0004 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 1182 0006 7860     		str	r0, [r7, #4]
 903:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1183              		.loc 1 904 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 38


 1184 0008 034A     		ldr	r2, .L73
 1185 000a 7B68     		ldr	r3, [r7, #4]
 1186 000c D318     		add	r3, r2, r3
 1187 000e 1B78     		ldrb	r3, [r3]
 905:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 907:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 908:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1188              		.loc 1 908 0
 1189 0010 181C     		mov	r0, r3
 1190 0012 BD46     		mov	sp, r7
 1191 0014 02B0     		add	sp, sp, #8
 1192              		@ sp needed
 1193 0016 80BD     		pop	{r7, pc}
 1194              	.L74:
 1195              		.align	2
 1196              	.L73:
 1197 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1198              		.cfi_endproc
 1199              	.LFE50:
 1200              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1201              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1202              		.align	2
 1203              		.global	CapSense_SetFingerThreshold
 1204              		.code	16
 1205              		.thumb_func
 1206              		.type	CapSense_SetFingerThreshold, %function
 1207              	CapSense_SetFingerThreshold:
 1208              	.LFB51:
 909:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 910:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 911:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1209              		.loc 1 935 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 39


 1210              		.cfi_startproc
 1211 0000 80B5     		push	{r7, lr}
 1212              		.cfi_def_cfa_offset 8
 1213              		.cfi_offset 7, -8
 1214              		.cfi_offset 14, -4
 1215 0002 82B0     		sub	sp, sp, #8
 1216              		.cfi_def_cfa_offset 16
 1217 0004 00AF     		add	r7, sp, #0
 1218              		.cfi_def_cfa_register 7
 1219 0006 7860     		str	r0, [r7, #4]
 1220 0008 0A1C     		mov	r2, r1
 1221 000a FB1C     		add	r3, r7, #3
 1222 000c 1A70     		strb	r2, [r3]
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1223              		.loc 1 936 0
 1224 000e 044A     		ldr	r2, .L76
 1225 0010 7B68     		ldr	r3, [r7, #4]
 1226 0012 D318     		add	r3, r2, r3
 1227 0014 FA1C     		add	r2, r7, #3
 1228 0016 1278     		ldrb	r2, [r2]
 1229 0018 1A70     		strb	r2, [r3]
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1230              		.loc 1 937 0
 1231 001a BD46     		mov	sp, r7
 1232 001c 02B0     		add	sp, sp, #8
 1233              		@ sp needed
 1234 001e 80BD     		pop	{r7, pc}
 1235              	.L77:
 1236              		.align	2
 1237              	.L76:
 1238 0020 00000000 		.word	CapSense_fingerThreshold
 1239              		.cfi_endproc
 1240              	.LFE51:
 1241              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1242              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1243              		.align	2
 1244              		.global	CapSense_SetNoiseThreshold
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	CapSense_SetNoiseThreshold, %function
 1248              	CapSense_SetNoiseThreshold:
 1249              	.LFB52:
 938:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 939:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 40


 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1250              		.loc 1 963 0
 1251              		.cfi_startproc
 1252 0000 80B5     		push	{r7, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 7, -8
 1255              		.cfi_offset 14, -4
 1256 0002 82B0     		sub	sp, sp, #8
 1257              		.cfi_def_cfa_offset 16
 1258 0004 00AF     		add	r7, sp, #0
 1259              		.cfi_def_cfa_register 7
 1260 0006 7860     		str	r0, [r7, #4]
 1261 0008 0A1C     		mov	r2, r1
 1262 000a FB1C     		add	r3, r7, #3
 1263 000c 1A70     		strb	r2, [r3]
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1264              		.loc 1 964 0
 1265 000e 044A     		ldr	r2, .L79
 1266 0010 7B68     		ldr	r3, [r7, #4]
 1267 0012 D318     		add	r3, r2, r3
 1268 0014 FA1C     		add	r2, r7, #3
 1269 0016 1278     		ldrb	r2, [r2]
 1270 0018 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1271              		.loc 1 965 0
 1272 001a BD46     		mov	sp, r7
 1273 001c 02B0     		add	sp, sp, #8
 1274              		@ sp needed
 1275 001e 80BD     		pop	{r7, pc}
 1276              	.L80:
 1277              		.align	2
 1278              	.L79:
 1279 0020 00000000 		.word	CapSense_noiseThreshold
 1280              		.cfi_endproc
 1281              	.LFE52:
 1282              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1283              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1284              		.align	2
 1285              		.global	CapSense_SetFingerHysteresis
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	CapSense_SetFingerHysteresis, %function
 1289              	CapSense_SetFingerHysteresis:
 1290              	.LFB53:
 966:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 967:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 41


 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1291              		.loc 1 991 0
 1292              		.cfi_startproc
 1293 0000 80B5     		push	{r7, lr}
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 82B0     		sub	sp, sp, #8
 1298              		.cfi_def_cfa_offset 16
 1299 0004 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
 1301 0006 7860     		str	r0, [r7, #4]
 1302 0008 0A1C     		mov	r2, r1
 1303 000a FB1C     		add	r3, r7, #3
 1304 000c 1A70     		strb	r2, [r3]
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1305              		.loc 1 992 0
 1306 000e 044A     		ldr	r2, .L82
 1307 0010 7B68     		ldr	r3, [r7, #4]
 1308 0012 D318     		add	r3, r2, r3
 1309 0014 FA1C     		add	r2, r7, #3
 1310 0016 1278     		ldrb	r2, [r2]
 1311 0018 1A70     		strb	r2, [r3]
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1312              		.loc 1 993 0
 1313 001a BD46     		mov	sp, r7
 1314 001c 02B0     		add	sp, sp, #8
 1315              		@ sp needed
 1316 001e 80BD     		pop	{r7, pc}
 1317              	.L83:
 1318              		.align	2
 1319              	.L82:
 1320 0020 00000000 		.word	CapSense_hysteresis
 1321              		.cfi_endproc
 1322              	.LFE53:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 42


 1323              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1324              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1325              		.align	2
 1326              		.global	CapSense_SetNegativeNoiseThreshold
 1327              		.code	16
 1328              		.thumb_func
 1329              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1330              	CapSense_SetNegativeNoiseThreshold:
 1331              	.LFB54:
 994:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 995:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1332              		.loc 1 1020 0
 1333              		.cfi_startproc
 1334 0000 80B5     		push	{r7, lr}
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 7, -8
 1337              		.cfi_offset 14, -4
 1338 0002 82B0     		sub	sp, sp, #8
 1339              		.cfi_def_cfa_offset 16
 1340 0004 00AF     		add	r7, sp, #0
 1341              		.cfi_def_cfa_register 7
 1342 0006 7860     		str	r0, [r7, #4]
 1343 0008 0A1C     		mov	r2, r1
 1344 000a FB1C     		add	r3, r7, #3
 1345 000c 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1346              		.loc 1 1021 0
 1347 000e 044A     		ldr	r2, .L85
 1348 0010 7B68     		ldr	r3, [r7, #4]
 1349 0012 D318     		add	r3, r2, r3
 1350 0014 FA1C     		add	r2, r7, #3
 1351 0016 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 43


 1352 0018 1A70     		strb	r2, [r3]
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1353              		.loc 1 1022 0
 1354 001a BD46     		mov	sp, r7
 1355 001c 02B0     		add	sp, sp, #8
 1356              		@ sp needed
 1357 001e 80BD     		pop	{r7, pc}
 1358              	.L86:
 1359              		.align	2
 1360              	.L85:
 1361 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1362              		.cfi_endproc
 1363              	.LFE54:
 1364              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1365              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1366              		.align	2
 1367              		.global	CapSense_SetDebounce
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	CapSense_SetDebounce, %function
 1371              	CapSense_SetDebounce:
 1372              	.LFB55:
1023:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1024:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1373              		.loc 1 1048 0
 1374              		.cfi_startproc
 1375 0000 80B5     		push	{r7, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 82B0     		sub	sp, sp, #8
 1380              		.cfi_def_cfa_offset 16
 1381 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 44


 1382              		.cfi_def_cfa_register 7
 1383 0006 7860     		str	r0, [r7, #4]
 1384 0008 0A1C     		mov	r2, r1
 1385 000a FB1C     		add	r3, r7, #3
 1386 000c 1A70     		strb	r2, [r3]
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1387              		.loc 1 1049 0
 1388 000e 044A     		ldr	r2, .L88
 1389 0010 7B68     		ldr	r3, [r7, #4]
 1390 0012 D318     		add	r3, r2, r3
 1391 0014 FA1C     		add	r2, r7, #3
 1392 0016 1278     		ldrb	r2, [r2]
 1393 0018 1A70     		strb	r2, [r3]
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1394              		.loc 1 1050 0
 1395 001a BD46     		mov	sp, r7
 1396 001c 02B0     		add	sp, sp, #8
 1397              		@ sp needed
 1398 001e 80BD     		pop	{r7, pc}
 1399              	.L89:
 1400              		.align	2
 1401              	.L88:
 1402 0020 00000000 		.word	CapSense_debounce
 1403              		.cfi_endproc
 1404              	.LFE55:
 1405              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1406              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1407              		.align	2
 1408              		.global	CapSense_SetLowBaselineReset
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	CapSense_SetLowBaselineReset, %function
 1412              	CapSense_SetLowBaselineReset:
 1413              	.LFB56:
1051:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1052:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1063:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1064:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1065:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1066:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1067:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1068:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1069:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1070:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1071:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1072:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1073:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 45


1074:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1076:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1414              		.loc 1 1076 0
 1415              		.cfi_startproc
 1416 0000 80B5     		push	{r7, lr}
 1417              		.cfi_def_cfa_offset 8
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 82B0     		sub	sp, sp, #8
 1421              		.cfi_def_cfa_offset 16
 1422 0004 00AF     		add	r7, sp, #0
 1423              		.cfi_def_cfa_register 7
 1424 0006 7860     		str	r0, [r7, #4]
 1425 0008 0A1C     		mov	r2, r1
 1426 000a FB1C     		add	r3, r7, #3
 1427 000c 1A70     		strb	r2, [r3]
1077:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1428              		.loc 1 1077 0
 1429 000e 044A     		ldr	r2, .L91
 1430 0010 7B68     		ldr	r3, [r7, #4]
 1431 0012 D318     		add	r3, r2, r3
 1432 0014 FA1C     		add	r2, r7, #3
 1433 0016 1278     		ldrb	r2, [r2]
 1434 0018 1A70     		strb	r2, [r3]
1078:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1435              		.loc 1 1078 0
 1436 001a BD46     		mov	sp, r7
 1437 001c 02B0     		add	sp, sp, #8
 1438              		@ sp needed
 1439 001e 80BD     		pop	{r7, pc}
 1440              	.L92:
 1441              		.align	2
 1442              	.L91:
 1443 0020 00000000 		.word	CapSense_lowBaselineReset
 1444              		.cfi_endproc
 1445              	.LFE56:
 1446              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1447              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1448              		.align	2
 1449              		.global	CapSense_CheckIsSensorActive
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	CapSense_CheckIsSensorActive, %function
 1453              	CapSense_CheckIsSensorActive:
 1454              	.LFB57:
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 46


1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1111:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1122:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1455              		.loc 1 1122 0
 1456              		.cfi_startproc
 1457 0000 80B5     		push	{r7, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 7, -8
 1460              		.cfi_offset 14, -4
 1461 0002 84B0     		sub	sp, sp, #16
 1462              		.cfi_def_cfa_offset 24
 1463 0004 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 1465 0006 7860     		str	r0, [r7, #4]
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1126:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1130:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1466              		.loc 1 1132 0
 1467 0008 0E23     		mov	r3, #14
 1468 000a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 47


 1469 000c 4B49     		ldr	r1, .L104
 1470 000e 7A68     		ldr	r2, [r7, #4]
 1471 0010 8A18     		add	r2, r1, r2
 1472 0012 1278     		ldrb	r2, [r2]
 1473 0014 1A70     		strb	r2, [r3]
1133:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1474              		.loc 1 1134 0
 1475 0016 0E23     		mov	r3, #14
 1476 0018 FB18     		add	r3, r7, r3
 1477 001a 1A78     		ldrb	r2, [r3]
 1478 001c 0D23     		mov	r3, #13
 1479 001e FB18     		add	r3, r7, r3
 1480 0020 4749     		ldr	r1, .L104+4
 1481 0022 8A5C     		ldrb	r2, [r1, r2]
 1482 0024 1A70     		strb	r2, [r3]
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1483              		.loc 1 1135 0
 1484 0026 0E23     		mov	r3, #14
 1485 0028 FB18     		add	r3, r7, r3
 1486 002a 1A78     		ldrb	r2, [r3]
 1487 002c 0C23     		mov	r3, #12
 1488 002e FB18     		add	r3, r7, r3
 1489 0030 4449     		ldr	r1, .L104+8
 1490 0032 8A5C     		ldrb	r2, [r1, r2]
 1491 0034 1A70     		strb	r2, [r3]
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1492              		.loc 1 1136 0
 1493 0036 0E23     		mov	r3, #14
 1494 0038 FB18     		add	r3, r7, r3
 1495 003a 1A78     		ldrb	r2, [r3]
 1496 003c 0B23     		mov	r3, #11
 1497 003e FB18     		add	r3, r7, r3
 1498 0040 4149     		ldr	r1, .L104+12
 1499 0042 8A5C     		ldrb	r2, [r1, r2]
 1500 0044 1A70     		strb	r2, [r3]
1137:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 1501              		.loc 1 1138 0
 1502 0046 0E23     		mov	r3, #14
 1503 0048 FB18     		add	r3, r7, r3
 1504 004a 1B78     		ldrb	r3, [r3]
 1505 004c 002B     		cmp	r3, #0
 1506 004e 0AD1     		bne	.L94
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1507              		.loc 1 1140 0
 1508 0050 0F23     		mov	r3, #15
 1509 0052 FB18     		add	r3, r7, r3
 1510 0054 0422     		mov	r2, #4
 1511 0056 1A70     		strb	r2, [r3]
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 1512              		.loc 1 1141 0
 1513 0058 0F23     		mov	r3, #15
 1514 005a FB18     		add	r3, r7, r3
 1515 005c 1B78     		ldrb	r3, [r3]
 1516 005e 3B4A     		ldr	r2, .L104+16
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 48


 1517 0060 0121     		mov	r1, #1
 1518 0062 D154     		strb	r1, [r2, r3]
 1519 0064 06E0     		b	.L95
 1520              	.L94:
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u);
 1521              		.loc 1 1145 0
 1522 0066 0F23     		mov	r3, #15
 1523 0068 FB18     		add	r3, r7, r3
 1524 006a 0E22     		mov	r2, #14
 1525 006c BA18     		add	r2, r7, r2
 1526 006e 1278     		ldrb	r2, [r2]
 1527 0070 013A     		sub	r2, r2, #1
 1528 0072 1A70     		strb	r2, [r3]
 1529              	.L95:
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1147:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1530              		.loc 1 1150 0
 1531 0074 364A     		ldr	r2, .L104+20
 1532 0076 7B68     		ldr	r3, [r7, #4]
 1533 0078 101C     		mov	r0, r2
 1534 007a 191C     		mov	r1, r3
 1535 007c FFF7FEFF 		bl	CapSense_GetBitValue
 1536 0080 031E     		sub	r3, r0, #0
 1537 0082 1DD0     		beq	.L96
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1538              		.loc 1 1153 0
 1539 0084 334A     		ldr	r2, .L104+24
 1540 0086 7B68     		ldr	r3, [r7, #4]
 1541 0088 D318     		add	r3, r2, r3
 1542 008a 1B78     		ldrb	r3, [r3]
 1543 008c 191C     		mov	r1, r3
 1544 008e 0D23     		mov	r3, #13
 1545 0090 FB18     		add	r3, r7, r3
 1546 0092 1A78     		ldrb	r2, [r3]
 1547 0094 0C23     		mov	r3, #12
 1548 0096 FB18     		add	r3, r7, r3
 1549 0098 1B78     		ldrb	r3, [r3]
 1550 009a D31A     		sub	r3, r2, r3
 1551 009c 9942     		cmp	r1, r3
 1552 009e 3DDA     		bge	.L98
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1553              		.loc 1 1155 0
 1554 00a0 2B4A     		ldr	r2, .L104+20
 1555 00a2 7B68     		ldr	r3, [r7, #4]
 1556 00a4 101C     		mov	r0, r2
 1557 00a6 191C     		mov	r1, r3
 1558 00a8 0022     		mov	r2, #0
 1559 00aa FFF7FEFF 		bl	CapSense_SetBitValue
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 49


1156:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1560              		.loc 1 1157 0
 1561 00ae 0F23     		mov	r3, #15
 1562 00b0 FB18     		add	r3, r7, r3
 1563 00b2 1B78     		ldrb	r3, [r3]
 1564 00b4 254A     		ldr	r2, .L104+16
 1565 00b6 0B21     		mov	r1, #11
 1566 00b8 7918     		add	r1, r7, r1
 1567 00ba 0978     		ldrb	r1, [r1]
 1568 00bc D154     		strb	r1, [r2, r3]
 1569 00be 2DE0     		b	.L98
 1570              	.L96:
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1159:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1161:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1162:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1163:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1571              		.loc 1 1163 0
 1572 00c0 244A     		ldr	r2, .L104+24
 1573 00c2 7B68     		ldr	r3, [r7, #4]
 1574 00c4 D318     		add	r3, r2, r3
 1575 00c6 1B78     		ldrb	r3, [r3]
 1576 00c8 191C     		mov	r1, r3
 1577 00ca 0D23     		mov	r3, #13
 1578 00cc FB18     		add	r3, r7, r3
 1579 00ce 1A78     		ldrb	r2, [r3]
 1580 00d0 0C23     		mov	r3, #12
 1581 00d2 FB18     		add	r3, r7, r3
 1582 00d4 1B78     		ldrb	r3, [r3]
 1583 00d6 D318     		add	r3, r2, r3
 1584 00d8 9942     		cmp	r1, r3
 1585 00da 17DB     		blt	.L99
1164:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1165:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1586              		.loc 1 1165 0
 1587 00dc 0F23     		mov	r3, #15
 1588 00de FB18     		add	r3, r7, r3
 1589 00e0 1B78     		ldrb	r3, [r3]
 1590 00e2 1A4A     		ldr	r2, .L104+16
 1591 00e4 D25C     		ldrb	r2, [r2, r3]
 1592 00e6 013A     		sub	r2, r2, #1
 1593 00e8 D1B2     		uxtb	r1, r2
 1594 00ea 184A     		ldr	r2, .L104+16
 1595 00ec D154     		strb	r1, [r2, r3]
1166:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1167:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1596              		.loc 1 1167 0
 1597 00ee 0F23     		mov	r3, #15
 1598 00f0 FB18     		add	r3, r7, r3
 1599 00f2 1B78     		ldrb	r3, [r3]
 1600 00f4 154A     		ldr	r2, .L104+16
 1601 00f6 D35C     		ldrb	r3, [r2, r3]
 1602 00f8 002B     		cmp	r3, #0
 1603 00fa 0FD1     		bne	.L98
1168:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 50


1169:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1604              		.loc 1 1169 0
 1605 00fc 144A     		ldr	r2, .L104+20
 1606 00fe 7B68     		ldr	r3, [r7, #4]
 1607 0100 101C     		mov	r0, r2
 1608 0102 191C     		mov	r1, r3
 1609 0104 0122     		mov	r2, #1
 1610 0106 FFF7FEFF 		bl	CapSense_SetBitValue
 1611 010a 07E0     		b	.L98
 1612              	.L99:
1170:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1171:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1172:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1173:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1174:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1175:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1613              		.loc 1 1175 0
 1614 010c 0F23     		mov	r3, #15
 1615 010e FB18     		add	r3, r7, r3
 1616 0110 1B78     		ldrb	r3, [r3]
 1617 0112 0E4A     		ldr	r2, .L104+16
 1618 0114 0B21     		mov	r1, #11
 1619 0116 7918     		add	r1, r7, r1
 1620 0118 0978     		ldrb	r1, [r1]
 1621 011a D154     		strb	r1, [r2, r3]
 1622              	.L98:
1176:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1177:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1179:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1623              		.loc 1 1179 0
 1624 011c 0C4A     		ldr	r2, .L104+20
 1625 011e 7B68     		ldr	r3, [r7, #4]
 1626 0120 101C     		mov	r0, r2
 1627 0122 191C     		mov	r1, r3
 1628 0124 FFF7FEFF 		bl	CapSense_GetBitValue
 1629 0128 031E     		sub	r3, r0, #0
 1630 012a 01D0     		beq	.L101
 1631              		.loc 1 1179 0 is_stmt 0 discriminator 1
 1632 012c 0123     		mov	r3, #1
 1633 012e 00E0     		b	.L102
 1634              	.L101:
 1635              		.loc 1 1179 0 discriminator 2
 1636 0130 0023     		mov	r3, #0
 1637              	.L102:
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1638              		.loc 1 1180 0 is_stmt 1 discriminator 4
 1639 0132 181C     		mov	r0, r3
 1640 0134 BD46     		mov	sp, r7
 1641 0136 04B0     		add	sp, sp, #16
 1642              		@ sp needed
 1643 0138 80BD     		pop	{r7, pc}
 1644              	.L105:
 1645 013a C046     		.align	2
 1646              	.L104:
 1647 013c 00000000 		.word	CapSense_widgetNumber
 1648 0140 00000000 		.word	CapSense_fingerThreshold
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 51


 1649 0144 00000000 		.word	CapSense_hysteresis
 1650 0148 00000000 		.word	CapSense_debounce
 1651 014c 30000000 		.word	CapSense_debounceCounter
 1652 0150 00000000 		.word	CapSense_sensorOnMask
 1653 0154 00000000 		.word	CapSense_sensorSignal
 1654              		.cfi_endproc
 1655              	.LFE57:
 1656              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1657              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1658              		.align	2
 1659              		.global	CapSense_CheckIsWidgetActive
 1660              		.code	16
 1661              		.thumb_func
 1662              		.type	CapSense_CheckIsWidgetActive, %function
 1663              	CapSense_CheckIsWidgetActive:
 1664              	.LFB58:
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1194:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1195:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1199:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1665              		.loc 1 1212 0
 1666              		.cfi_startproc
 1667 0000 80B5     		push	{r7, lr}
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 86B0     		sub	sp, sp, #24
 1672              		.cfi_def_cfa_offset 32
 1673 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 52


 1674              		.cfi_def_cfa_register 7
 1675 0006 7860     		str	r0, [r7, #4]
1213:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1676              		.loc 1 1213 0
 1677 0008 114A     		ldr	r2, .L110
 1678 000a 7B68     		ldr	r3, [r7, #4]
 1679 000c D318     		add	r3, r2, r3
 1680 000e 1B78     		ldrb	r3, [r3]
 1681 0010 7B61     		str	r3, [r7, #20]
1214:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1682              		.loc 1 1214 0
 1683 0012 104A     		ldr	r2, .L110+4
 1684 0014 7B68     		ldr	r3, [r7, #4]
 1685 0016 D318     		add	r3, r2, r3
 1686 0018 1B78     		ldrb	r3, [r3]
 1687 001a 1A1C     		mov	r2, r3
 1688 001c 7B69     		ldr	r3, [r7, #20]
 1689 001e D318     		add	r3, r2, r3
 1690 0020 FB60     		str	r3, [r7, #12]
1215:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1691              		.loc 1 1215 0
 1692 0022 0023     		mov	r3, #0
 1693 0024 3B61     		str	r3, [r7, #16]
 1694              	.L108:
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1217:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1218:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1219:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1220:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1695              		.loc 1 1220 0
 1696 0026 7B69     		ldr	r3, [r7, #20]
 1697 0028 181C     		mov	r0, r3
 1698 002a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1699 002e 031E     		sub	r3, r0, #0
 1700 0030 01D0     		beq	.L107
1221:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1222:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1701              		.loc 1 1222 0
 1702 0032 0123     		mov	r3, #1
 1703 0034 3B61     		str	r3, [r7, #16]
 1704              	.L107:
1223:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1224:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1705              		.loc 1 1224 0
 1706 0036 7B69     		ldr	r3, [r7, #20]
 1707 0038 0133     		add	r3, r3, #1
 1708 003a 7B61     		str	r3, [r7, #20]
1225:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1226:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1709              		.loc 1 1226 0
 1710 003c 7A69     		ldr	r2, [r7, #20]
 1711 003e FB68     		ldr	r3, [r7, #12]
 1712 0040 9A42     		cmp	r2, r3
 1713 0042 F0D3     		bcc	.L108
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 53


1230:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1714              		.loc 1 1230 0
 1715 0044 3B69     		ldr	r3, [r7, #16]
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1716              		.loc 1 1231 0
 1717 0046 181C     		mov	r0, r3
 1718 0048 BD46     		mov	sp, r7
 1719 004a 06B0     		add	sp, sp, #24
 1720              		@ sp needed
 1721 004c 80BD     		pop	{r7, pc}
 1722              	.L111:
 1723 004e C046     		.align	2
 1724              	.L110:
 1725 0050 00000000 		.word	CapSense_rawDataIndex
 1726 0054 00000000 		.word	CapSense_numberOfSensors
 1727              		.cfi_endproc
 1728              	.LFE58:
 1729              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1730              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1731              		.align	2
 1732              		.global	CapSense_CheckIsAnyWidgetActive
 1733              		.code	16
 1734              		.thumb_func
 1735              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1736              	CapSense_CheckIsAnyWidgetActive:
 1737              	.LFB59:
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1738              		.loc 1 1258 0
 1739              		.cfi_startproc
 1740 0000 80B5     		push	{r7, lr}
 1741              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 54


 1742              		.cfi_offset 7, -8
 1743              		.cfi_offset 14, -4
 1744 0002 82B0     		sub	sp, sp, #8
 1745              		.cfi_def_cfa_offset 16
 1746 0004 00AF     		add	r7, sp, #0
 1747              		.cfi_def_cfa_register 7
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1260:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1261:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1748              		.loc 1 1261 0
 1749 0006 0023     		mov	r3, #0
 1750 0008 3B60     		str	r3, [r7]
1262:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1263:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1751              		.loc 1 1263 0
 1752 000a 0023     		mov	r3, #0
 1753 000c 7B60     		str	r3, [r7, #4]
 1754 000e 0AE0     		b	.L113
 1755              	.L115:
1264:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1265:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1756              		.loc 1 1265 0
 1757 0010 7B68     		ldr	r3, [r7, #4]
 1758 0012 181C     		mov	r0, r3
 1759 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1760 0018 031E     		sub	r3, r0, #0
 1761 001a 01D0     		beq	.L114
1266:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1267:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1762              		.loc 1 1267 0
 1763 001c 0123     		mov	r3, #1
 1764 001e 3B60     		str	r3, [r7]
 1765              	.L114:
1263:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1766              		.loc 1 1263 0 discriminator 2
 1767 0020 7B68     		ldr	r3, [r7, #4]
 1768 0022 0133     		add	r3, r3, #1
 1769 0024 7B60     		str	r3, [r7, #4]
 1770              	.L113:
1263:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1771              		.loc 1 1263 0 is_stmt 0 discriminator 1
 1772 0026 7B68     		ldr	r3, [r7, #4]
 1773 0028 042B     		cmp	r3, #4
 1774 002a F1D9     		bls	.L115
1268:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1269:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1270:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1273:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1775              		.loc 1 1273 0 is_stmt 1
 1776 002c 3B68     		ldr	r3, [r7]
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1777              		.loc 1 1274 0
 1778 002e 181C     		mov	r0, r3
 1779 0030 BD46     		mov	sp, r7
 1780 0032 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 55


 1781              		@ sp needed
 1782 0034 80BD     		pop	{r7, pc}
 1783              		.cfi_endproc
 1784              	.LFE59:
 1785              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1786 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1787              		.align	2
 1788              		.global	CapSense_EnableWidget
 1789              		.code	16
 1790              		.thumb_func
 1791              		.type	CapSense_EnableWidget, %function
 1792              	CapSense_EnableWidget:
 1793              	.LFB60:
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1794              		.loc 1 1305 0
 1795              		.cfi_startproc
 1796 0000 80B5     		push	{r7, lr}
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 84B0     		sub	sp, sp, #16
 1801              		.cfi_def_cfa_offset 24
 1802 0004 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 1804 0006 7860     		str	r0, [r7, #4]
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1307:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 56


 1805              		.loc 1 1307 0
 1806 0008 0F23     		mov	r3, #15
 1807 000a FB18     		add	r3, r7, r3
 1808 000c 1549     		ldr	r1, .L119
 1809 000e 7A68     		ldr	r2, [r7, #4]
 1810 0010 8A18     		add	r2, r1, r2
 1811 0012 1278     		ldrb	r2, [r2]
 1812 0014 1A70     		strb	r2, [r3]
1308:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1813              		.loc 1 1308 0
 1814 0016 144A     		ldr	r2, .L119+4
 1815 0018 7B68     		ldr	r3, [r7, #4]
 1816 001a D318     		add	r3, r2, r3
 1817 001c 1978     		ldrb	r1, [r3]
 1818 001e 0E23     		mov	r3, #14
 1819 0020 FB18     		add	r3, r7, r3
 1820 0022 0F22     		mov	r2, #15
 1821 0024 BA18     		add	r2, r7, r2
 1822 0026 1278     		ldrb	r2, [r2]
 1823 0028 8A18     		add	r2, r1, r2
 1824 002a 1A70     		strb	r2, [r3]
 1825              	.L118:
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1310:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1311:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1312:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1313:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1826              		.loc 1 1313 0 discriminator 1
 1827 002c 0F23     		mov	r3, #15
 1828 002e FB18     		add	r3, r7, r3
 1829 0030 1B78     		ldrb	r3, [r3]
 1830 0032 0E4A     		ldr	r2, .L119+8
 1831 0034 101C     		mov	r0, r2
 1832 0036 191C     		mov	r1, r3
 1833 0038 0122     		mov	r2, #1
 1834 003a FFF7FEFF 		bl	CapSense_SetBitValue
1314:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1835              		.loc 1 1314 0 discriminator 1
 1836 003e 0F23     		mov	r3, #15
 1837 0040 FB18     		add	r3, r7, r3
 1838 0042 1A78     		ldrb	r2, [r3]
 1839 0044 0F23     		mov	r3, #15
 1840 0046 FB18     		add	r3, r7, r3
 1841 0048 0132     		add	r2, r2, #1
 1842 004a 1A70     		strb	r2, [r3]
1315:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1316:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1843              		.loc 1 1316 0 discriminator 1
 1844 004c 0F23     		mov	r3, #15
 1845 004e FA18     		add	r2, r7, r3
 1846 0050 0E23     		mov	r3, #14
 1847 0052 FB18     		add	r3, r7, r3
 1848 0054 1278     		ldrb	r2, [r2]
 1849 0056 1B78     		ldrb	r3, [r3]
 1850 0058 9A42     		cmp	r2, r3
 1851 005a E7D3     		bcc	.L118
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 57


 1852              		.loc 1 1317 0
 1853 005c BD46     		mov	sp, r7
 1854 005e 04B0     		add	sp, sp, #16
 1855              		@ sp needed
 1856 0060 80BD     		pop	{r7, pc}
 1857              	.L120:
 1858 0062 C046     		.align	2
 1859              	.L119:
 1860 0064 00000000 		.word	CapSense_rawDataIndex
 1861 0068 00000000 		.word	CapSense_numberOfSensors
 1862 006c 00000000 		.word	CapSense_sensorEnableMask
 1863              		.cfi_endproc
 1864              	.LFE60:
 1865              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1866              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1867              		.align	2
 1868              		.global	CapSense_DisableWidget
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	CapSense_DisableWidget, %function
 1872              	CapSense_DisableWidget:
 1873              	.LFB61:
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1345:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1346:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1347:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1348:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1874              		.loc 1 1348 0
 1875              		.cfi_startproc
 1876 0000 80B5     		push	{r7, lr}
 1877              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 58


 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 84B0     		sub	sp, sp, #16
 1881              		.cfi_def_cfa_offset 24
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 1884 0006 7860     		str	r0, [r7, #4]
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1885              		.loc 1 1349 0
 1886 0008 0F23     		mov	r3, #15
 1887 000a FB18     		add	r3, r7, r3
 1888 000c 1549     		ldr	r1, .L123
 1889 000e 7A68     		ldr	r2, [r7, #4]
 1890 0010 8A18     		add	r2, r1, r2
 1891 0012 1278     		ldrb	r2, [r2]
 1892 0014 1A70     		strb	r2, [r3]
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1893              		.loc 1 1350 0
 1894 0016 144A     		ldr	r2, .L123+4
 1895 0018 7B68     		ldr	r3, [r7, #4]
 1896 001a D318     		add	r3, r2, r3
 1897 001c 1978     		ldrb	r1, [r3]
 1898 001e 0E23     		mov	r3, #14
 1899 0020 FB18     		add	r3, r7, r3
 1900 0022 0F22     		mov	r2, #15
 1901 0024 BA18     		add	r2, r7, r2
 1902 0026 1278     		ldrb	r2, [r2]
 1903 0028 8A18     		add	r2, r1, r2
 1904 002a 1A70     		strb	r2, [r3]
 1905              	.L122:
1351:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1906              		.loc 1 1356 0 discriminator 1
 1907 002c 0F23     		mov	r3, #15
 1908 002e FB18     		add	r3, r7, r3
 1909 0030 1B78     		ldrb	r3, [r3]
 1910 0032 0E4A     		ldr	r2, .L123+8
 1911 0034 101C     		mov	r0, r2
 1912 0036 191C     		mov	r1, r3
 1913 0038 0022     		mov	r2, #0
 1914 003a FFF7FEFF 		bl	CapSense_SetBitValue
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1915              		.loc 1 1357 0 discriminator 1
 1916 003e 0F23     		mov	r3, #15
 1917 0040 FB18     		add	r3, r7, r3
 1918 0042 1A78     		ldrb	r2, [r3]
 1919 0044 0F23     		mov	r3, #15
 1920 0046 FB18     		add	r3, r7, r3
 1921 0048 0132     		add	r2, r2, #1
 1922 004a 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1923              		.loc 1 1359 0 discriminator 1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 59


 1924 004c 0F23     		mov	r3, #15
 1925 004e FA18     		add	r2, r7, r3
 1926 0050 0E23     		mov	r3, #14
 1927 0052 FB18     		add	r3, r7, r3
 1928 0054 1278     		ldrb	r2, [r2]
 1929 0056 1B78     		ldrb	r3, [r3]
 1930 0058 9A42     		cmp	r2, r3
 1931 005a E7D3     		bcc	.L122
1360:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1932              		.loc 1 1360 0
 1933 005c BD46     		mov	sp, r7
 1934 005e 04B0     		add	sp, sp, #16
 1935              		@ sp needed
 1936 0060 80BD     		pop	{r7, pc}
 1937              	.L124:
 1938 0062 C046     		.align	2
 1939              	.L123:
 1940 0064 00000000 		.word	CapSense_rawDataIndex
 1941 0068 00000000 		.word	CapSense_numberOfSensors
 1942 006c 00000000 		.word	CapSense_sensorEnableMask
 1943              		.cfi_endproc
 1944              	.LFE61:
 1945              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1946              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1947              		.align	2
 1948              		.global	CapSense_FindMaximum
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CapSense_FindMaximum, %function
 1952              	CapSense_FindMaximum:
 1953              	.LFB62:
1361:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1362:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1363:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 60


1387:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1954              		.loc 1 1399 0
 1955              		.cfi_startproc
 1956 0000 90B5     		push	{r4, r7, lr}
 1957              		.cfi_def_cfa_offset 12
 1958              		.cfi_offset 4, -12
 1959              		.cfi_offset 7, -8
 1960              		.cfi_offset 14, -4
 1961 0002 85B0     		sub	sp, sp, #20
 1962              		.cfi_def_cfa_offset 32
 1963 0004 00AF     		add	r7, sp, #0
 1964              		.cfi_def_cfa_register 7
 1965 0006 041C     		mov	r4, r0
 1966 0008 081C     		mov	r0, r1
 1967 000a 111C     		mov	r1, r2
 1968 000c FB1D     		add	r3, r7, #7
 1969 000e 221C     		add	r2, r4, #0
 1970 0010 1A70     		strb	r2, [r3]
 1971 0012 BB1D     		add	r3, r7, #6
 1972 0014 021C     		add	r2, r0, #0
 1973 0016 1A70     		strb	r2, [r3]
 1974 0018 7B1D     		add	r3, r7, #5
 1975 001a 0A1C     		add	r2, r1, #0
 1976 001c 1A70     		strb	r2, [r3]
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1977              		.loc 1 1410 0
 1978 001e 0E23     		mov	r3, #14
 1979 0020 FB18     		add	r3, r7, r3
 1980 0022 FF22     		mov	r2, #255
 1981 0024 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1982              		.loc 1 1412 0
 1983 0026 0D23     		mov	r3, #13
 1984 0028 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 61


 1985 002a 0022     		mov	r2, #0
 1986 002c 1A70     		strb	r2, [r3]
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1987              		.loc 1 1413 0
 1988 002e FB1D     		add	r3, r7, #7
 1989 0030 1A78     		ldrb	r2, [r3]
 1990 0032 204B     		ldr	r3, .L130
 1991 0034 D318     		add	r3, r2, r3
 1992 0036 BB60     		str	r3, [r7, #8]
1414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1448:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1453:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 62


1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1993              		.loc 1 1510 0
 1994 0038 0F23     		mov	r3, #15
 1995 003a FB18     		add	r3, r7, r3
 1996 003c 0022     		mov	r2, #0
 1997 003e 1A70     		strb	r2, [r3]
 1998 0040 2AE0     		b	.L126
 1999              	.L128:
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 63


1512:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 2000              		.loc 1 1513 0
 2001 0042 0F23     		mov	r3, #15
 2002 0044 FB18     		add	r3, r7, r3
 2003 0046 1B78     		ldrb	r3, [r3]
 2004 0048 BA68     		ldr	r2, [r7, #8]
 2005 004a D318     		add	r3, r2, r3
 2006 004c 1B78     		ldrb	r3, [r3]
 2007 004e 7A1D     		add	r2, r7, #5
 2008 0050 1278     		ldrb	r2, [r2]
 2009 0052 9A42     		cmp	r2, r3
 2010 0054 19D2     		bcs	.L127
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 2011              		.loc 1 1515 0
 2012 0056 0F23     		mov	r3, #15
 2013 0058 FB18     		add	r3, r7, r3
 2014 005a 1B78     		ldrb	r3, [r3]
 2015 005c BA68     		ldr	r2, [r7, #8]
 2016 005e D318     		add	r3, r2, r3
 2017 0060 1B78     		ldrb	r3, [r3]
 2018 0062 0D22     		mov	r2, #13
 2019 0064 BA18     		add	r2, r7, r2
 2020 0066 1278     		ldrb	r2, [r2]
 2021 0068 9A42     		cmp	r2, r3
 2022 006a 0ED2     		bcs	.L127
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 2023              		.loc 1 1517 0
 2024 006c 0E23     		mov	r3, #14
 2025 006e FB18     		add	r3, r7, r3
 2026 0070 0F22     		mov	r2, #15
 2027 0072 BA18     		add	r2, r7, r2
 2028 0074 1278     		ldrb	r2, [r2]
 2029 0076 1A70     		strb	r2, [r3]
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 2030              		.loc 1 1518 0
 2031 0078 0F23     		mov	r3, #15
 2032 007a FB18     		add	r3, r7, r3
 2033 007c 1B78     		ldrb	r3, [r3]
 2034 007e BA68     		ldr	r2, [r7, #8]
 2035 0080 D218     		add	r2, r2, r3
 2036 0082 0D23     		mov	r3, #13
 2037 0084 FB18     		add	r3, r7, r3
 2038 0086 1278     		ldrb	r2, [r2]
 2039 0088 1A70     		strb	r2, [r3]
 2040              	.L127:
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2041              		.loc 1 1510 0 discriminator 2
 2042 008a 0F23     		mov	r3, #15
 2043 008c FB18     		add	r3, r7, r3
 2044 008e 1A78     		ldrb	r2, [r3]
 2045 0090 0F23     		mov	r3, #15
 2046 0092 FB18     		add	r3, r7, r3
 2047 0094 0132     		add	r2, r2, #1
 2048 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 64


 2049              	.L126:
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 2050              		.loc 1 1510 0 is_stmt 0 discriminator 1
 2051 0098 0F23     		mov	r3, #15
 2052 009a FA18     		add	r2, r7, r3
 2053 009c BB1D     		add	r3, r7, #6
 2054 009e 1278     		ldrb	r2, [r2]
 2055 00a0 1B78     		ldrb	r3, [r3]
 2056 00a2 9A42     		cmp	r2, r3
 2057 00a4 CDD3     		bcc	.L128
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 2058              		.loc 1 1523 0 is_stmt 1
 2059 00a6 0E23     		mov	r3, #14
 2060 00a8 FB18     		add	r3, r7, r3
 2061 00aa 1B78     		ldrb	r3, [r3]
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2062              		.loc 1 1524 0
 2063 00ac 181C     		mov	r0, r3
 2064 00ae BD46     		mov	sp, r7
 2065 00b0 05B0     		add	sp, sp, #20
 2066              		@ sp needed
 2067 00b2 90BD     		pop	{r4, r7, pc}
 2068              	.L131:
 2069              		.align	2
 2070              	.L130:
 2071 00b4 00000000 		.word	CapSense_sensorSignal
 2072              		.cfi_endproc
 2073              	.LFE62:
 2074              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2075              		.global	__aeabi_idiv
 2076              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2077              		.align	2
 2078              		.global	CapSense_CalcCentroid
 2079              		.code	16
 2080              		.thumb_func
 2081              		.type	CapSense_CalcCentroid, %function
 2082              	CapSense_CalcCentroid:
 2083              	.LFB63:
1525:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1526:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 65


1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1555:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2084              		.loc 1 1559 0
 2085              		.cfi_startproc
 2086 0000 B0B5     		push	{r4, r5, r7, lr}
 2087              		.cfi_def_cfa_offset 16
 2088              		.cfi_offset 4, -16
 2089              		.cfi_offset 5, -12
 2090              		.cfi_offset 7, -8
 2091              		.cfi_offset 14, -4
 2092 0002 86B0     		sub	sp, sp, #24
 2093              		.cfi_def_cfa_offset 40
 2094 0004 00AF     		add	r7, sp, #0
 2095              		.cfi_def_cfa_register 7
 2096 0006 051C     		mov	r5, r0
 2097 0008 0C1C     		mov	r4, r1
 2098 000a 101C     		mov	r0, r2
 2099 000c 191C     		mov	r1, r3
 2100 000e FB1D     		add	r3, r7, #7
 2101 0010 2A1C     		add	r2, r5, #0
 2102 0012 1A70     		strb	r2, [r3]
 2103 0014 BB1D     		add	r3, r7, #6
 2104 0016 221C     		add	r2, r4, #0
 2105 0018 1A70     		strb	r2, [r3]
 2106 001a 7B1D     		add	r3, r7, #5
 2107 001c 021C     		add	r2, r0, #0
 2108 001e 1A70     		strb	r2, [r3]
 2109 0020 BB1C     		add	r3, r7, #2
 2110 0022 0A1C     		add	r2, r1, #0
 2111 0024 1A80     		strh	r2, [r3]
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 66


1569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2112              		.loc 1 1578 0
 2113 0026 BB1D     		add	r3, r7, #6
 2114 0028 1A78     		ldrb	r2, [r3]
 2115 002a 584B     		ldr	r3, .L142
 2116 002c D318     		add	r3, r2, r3
 2117 002e 3B61     		str	r3, [r7, #16]
1579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2118              		.loc 1 1591 0
 2119 0030 FB1D     		add	r3, r7, #7
 2120 0032 1B78     		ldrb	r3, [r3]
 2121 0034 3A69     		ldr	r2, [r7, #16]
 2122 0036 D318     		add	r3, r2, r3
 2123 0038 1A78     		ldrb	r2, [r3]
 2124 003a 554B     		ldr	r3, .L142+4
 2125 003c 5A70     		strb	r2, [r3, #1]
1592:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2126              		.loc 1 1594 0
 2127 003e FB1D     		add	r3, r7, #7
 2128 0040 1B78     		ldrb	r3, [r3]
 2129 0042 002B     		cmp	r3, #0
 2130 0044 0CD1     		bne	.L133
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
 2131              		.loc 1 1596 0
 2132 0046 7B1D     		add	r3, r7, #5
 2133 0048 1B78     		ldrb	r3, [r3]
 2134 004a 013B     		sub	r3, r3, #1
 2135 004c 3A69     		ldr	r2, [r7, #16]
 2136 004e D318     		add	r3, r2, r3
 2137 0050 1A78     		ldrb	r2, [r3]
 2138 0052 4F4B     		ldr	r3, .L142+4
 2139 0054 1A70     		strb	r2, [r3]
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 67


 2140              		.loc 1 1597 0
 2141 0056 3B69     		ldr	r3, [r7, #16]
 2142 0058 5A78     		ldrb	r2, [r3, #1]
 2143 005a 4D4B     		ldr	r3, .L142+4
 2144 005c 9A70     		strb	r2, [r3, #2]
 2145 005e 23E0     		b	.L134
 2146              	.L133:
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
 2147              		.loc 1 1599 0
 2148 0060 FB1D     		add	r3, r7, #7
 2149 0062 1A78     		ldrb	r2, [r3]
 2150 0064 7B1D     		add	r3, r7, #5
 2151 0066 1B78     		ldrb	r3, [r3]
 2152 0068 013B     		sub	r3, r3, #1
 2153 006a 9A42     		cmp	r2, r3
 2154 006c 0CD1     		bne	.L135
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 2155              		.loc 1 1601 0
 2156 006e FB1D     		add	r3, r7, #7
 2157 0070 1B78     		ldrb	r3, [r3]
 2158 0072 013B     		sub	r3, r3, #1
 2159 0074 3A69     		ldr	r2, [r7, #16]
 2160 0076 D318     		add	r3, r2, r3
 2161 0078 1A78     		ldrb	r2, [r3]
 2162 007a 454B     		ldr	r3, .L142+4
 2163 007c 1A70     		strb	r2, [r3]
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
 2164              		.loc 1 1602 0
 2165 007e 3B69     		ldr	r3, [r7, #16]
 2166 0080 1A78     		ldrb	r2, [r3]
 2167 0082 434B     		ldr	r3, .L142+4
 2168 0084 9A70     		strb	r2, [r3, #2]
 2169 0086 0FE0     		b	.L134
 2170              	.L135:
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 2171              		.loc 1 1606 0
 2172 0088 FB1D     		add	r3, r7, #7
 2173 008a 1B78     		ldrb	r3, [r3]
 2174 008c 013B     		sub	r3, r3, #1
 2175 008e 3A69     		ldr	r2, [r7, #16]
 2176 0090 D318     		add	r3, r2, r3
 2177 0092 1A78     		ldrb	r2, [r3]
 2178 0094 3E4B     		ldr	r3, .L142+4
 2179 0096 1A70     		strb	r2, [r3]
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
 2180              		.loc 1 1607 0
 2181 0098 FB1D     		add	r3, r7, #7
 2182 009a 1B78     		ldrb	r3, [r3]
 2183 009c 0133     		add	r3, r3, #1
 2184 009e 3A69     		ldr	r2, [r7, #16]
 2185 00a0 D318     		add	r3, r2, r3
 2186 00a2 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 68


 2187 00a4 3A4B     		ldr	r3, .L142+4
 2188 00a6 9A70     		strb	r2, [r3, #2]
 2189              	.L134:
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1610:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1654:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 69


1662:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1676:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 2190              		.loc 1 1678 0
 2191 00a8 394B     		ldr	r3, .L142+4
 2192 00aa 1B78     		ldrb	r3, [r3]
 2193 00ac 2822     		mov	r2, #40
 2194 00ae BA18     		add	r2, r7, r2
 2195 00b0 1278     		ldrb	r2, [r2]
 2196 00b2 9A42     		cmp	r2, r3
 2197 00b4 09D2     		bcs	.L136
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2198              		.loc 1 1680 0
 2199 00b6 364B     		ldr	r3, .L142+4
 2200 00b8 1A78     		ldrb	r2, [r3]
 2201 00ba 2823     		mov	r3, #40
 2202 00bc FB18     		add	r3, r7, r3
 2203 00be 1B78     		ldrb	r3, [r3]
 2204 00c0 D31A     		sub	r3, r2, r3
 2205 00c2 DAB2     		uxtb	r2, r3
 2206 00c4 324B     		ldr	r3, .L142+4
 2207 00c6 1A70     		strb	r2, [r3]
 2208 00c8 02E0     		b	.L137
 2209              	.L136:
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2210              		.loc 1 1684 0
 2211 00ca 314B     		ldr	r3, .L142+4
 2212 00cc 0022     		mov	r2, #0
 2213 00ce 1A70     		strb	r2, [r3]
 2214              	.L137:
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1686:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2215              		.loc 1 1688 0
 2216 00d0 2F4B     		ldr	r3, .L142+4
 2217 00d2 5A78     		ldrb	r2, [r3, #1]
 2218 00d4 2823     		mov	r3, #40
 2219 00d6 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 70


 2220 00d8 1B78     		ldrb	r3, [r3]
 2221 00da D31A     		sub	r3, r2, r3
 2222 00dc DAB2     		uxtb	r2, r3
 2223 00de 2C4B     		ldr	r3, .L142+4
 2224 00e0 5A70     		strb	r2, [r3, #1]
1689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2225              		.loc 1 1691 0
 2226 00e2 2B4B     		ldr	r3, .L142+4
 2227 00e4 9B78     		ldrb	r3, [r3, #2]
 2228 00e6 2822     		mov	r2, #40
 2229 00e8 BA18     		add	r2, r7, r2
 2230 00ea 1278     		ldrb	r2, [r2]
 2231 00ec 9A42     		cmp	r2, r3
 2232 00ee 09D2     		bcs	.L138
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2233              		.loc 1 1693 0
 2234 00f0 274B     		ldr	r3, .L142+4
 2235 00f2 9A78     		ldrb	r2, [r3, #2]
 2236 00f4 2823     		mov	r3, #40
 2237 00f6 FB18     		add	r3, r7, r3
 2238 00f8 1B78     		ldrb	r3, [r3]
 2239 00fa D31A     		sub	r3, r2, r3
 2240 00fc DAB2     		uxtb	r2, r3
 2241 00fe 244B     		ldr	r3, .L142+4
 2242 0100 9A70     		strb	r2, [r3, #2]
 2243 0102 02E0     		b	.L139
 2244              	.L138:
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2245              		.loc 1 1697 0
 2246 0104 224B     		ldr	r3, .L142+4
 2247 0106 0022     		mov	r2, #0
 2248 0108 9A70     		strb	r2, [r3, #2]
 2249              	.L139:
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2250              		.loc 1 1702 0
 2251 010a 214B     		ldr	r3, .L142+4
 2252 010c 9B78     		ldrb	r3, [r3, #2]
 2253 010e 1A1C     		mov	r2, r3
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2254              		.loc 1 1703 0
 2255 0110 1F4B     		ldr	r3, .L142+4
 2256 0112 1B78     		ldrb	r3, [r3]
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2257              		.loc 1 1702 0
 2258 0114 D31A     		sub	r3, r2, r3
 2259 0116 FB60     		str	r3, [r7, #12]
1704:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 71


1705:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2260              		.loc 1 1706 0
 2261 0118 1D4B     		ldr	r3, .L142+4
 2262 011a 1B78     		ldrb	r3, [r3]
 2263 011c 1A1C     		mov	r2, r3
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2264              		.loc 1 1707 0
 2265 011e 1C4B     		ldr	r3, .L142+4
 2266 0120 5B78     		ldrb	r3, [r3, #1]
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2267              		.loc 1 1706 0
 2268 0122 D318     		add	r3, r2, r3
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2269              		.loc 1 1708 0
 2270 0124 1A4A     		ldr	r2, .L142+4
 2271 0126 9278     		ldrb	r2, [r2, #2]
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2272              		.loc 1 1706 0
 2273 0128 9B18     		add	r3, r3, r2
 2274 012a 7B61     		str	r3, [r7, #20]
1709:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2275              		.loc 1 1711 0
 2276 012c FB68     		ldr	r3, [r7, #12]
 2277 012e 1B02     		lsl	r3, r3, #8
 2278 0130 181C     		mov	r0, r3
 2279 0132 7969     		ldr	r1, [r7, #20]
 2280 0134 FFF7FEFF 		bl	__aeabi_idiv
 2281 0138 031C     		mov	r3, r0
 2282 013a 1A1C     		mov	r2, r3
 2283 013c FB1D     		add	r3, r7, #7
 2284 013e 1B78     		ldrb	r3, [r3]
 2285 0140 1B02     		lsl	r3, r3, #8
 2286 0142 D318     		add	r3, r2, r3
 2287 0144 7B61     		str	r3, [r7, #20]
1712:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
 2288              		.loc 1 1715 0
 2289 0146 7B69     		ldr	r3, [r7, #20]
 2290 0148 002B     		cmp	r3, #0
 2291 014a 08DA     		bge	.L140
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
 2292              		.loc 1 1717 0
 2293 014c 7B1D     		add	r3, r7, #5
 2294 014e 1B78     		ldrb	r3, [r3]
 2295 0150 9BB2     		uxth	r3, r3
 2296 0152 1B02     		lsl	r3, r3, #8
 2297 0154 9BB2     		uxth	r3, r3
 2298 0156 1A1C     		mov	r2, r3
 2299 0158 7B69     		ldr	r3, [r7, #20]
 2300 015a 9B18     		add	r3, r3, r2
 2301 015c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 72


 2302              	.L140:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1720:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2303              		.loc 1 1721 0
 2304 015e BB1C     		add	r3, r7, #2
 2305 0160 1B88     		ldrh	r3, [r3]
 2306 0162 1AB2     		sxth	r2, r3
 2307 0164 7B69     		ldr	r3, [r7, #20]
 2308 0166 5343     		mul	r3, r2
 2309 0168 7B61     		str	r3, [r7, #20]
1722:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2310              		.loc 1 1724 0
 2311 016a 7B69     		ldr	r3, [r7, #20]
 2312 016c FE22     		mov	r2, #254
 2313 016e D201     		lsl	r2, r2, #7
 2314 0170 9446     		mov	ip, r2
 2315 0172 6344     		add	r3, r3, ip
 2316 0174 1A0C     		lsr	r2, r3, #16
 2317 0176 0B23     		mov	r3, #11
 2318 0178 FB18     		add	r3, r7, r3
 2319 017a 1A70     		strb	r2, [r3]
1725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2320              		.loc 1 1726 0
 2321 017c 0B23     		mov	r3, #11
 2322 017e FB18     		add	r3, r7, r3
 2323 0180 1B78     		ldrb	r3, [r3]
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2324              		.loc 1 1727 0
 2325 0182 181C     		mov	r0, r3
 2326 0184 BD46     		mov	sp, r7
 2327 0186 06B0     		add	sp, sp, #24
 2328              		@ sp needed
 2329 0188 B0BD     		pop	{r4, r5, r7, pc}
 2330              	.L143:
 2331 018a C046     		.align	2
 2332              	.L142:
 2333 018c 00000000 		.word	CapSense_sensorSignal
 2334 0190 38000000 		.word	CapSense_centroid.5444
 2335              		.cfi_endproc
 2336              	.LFE63:
 2337              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2338              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2339              		.align	2
 2340              		.global	CapSense_GetCentroidPos
 2341              		.code	16
 2342              		.thumb_func
 2343              		.type	CapSense_GetCentroidPos, %function
 2344              	CapSense_GetCentroidPos:
 2345              	.LFB64:
1728:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1729:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1730:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 73


1731:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2346              		.loc 1 1768 0
 2347              		.cfi_startproc
 2348 0000 90B5     		push	{r4, r7, lr}
 2349              		.cfi_def_cfa_offset 12
 2350              		.cfi_offset 4, -12
 2351              		.cfi_offset 7, -8
 2352              		.cfi_offset 14, -4
 2353 0002 87B0     		sub	sp, sp, #28
 2354              		.cfi_def_cfa_offset 40
 2355 0004 02AF     		add	r7, sp, #8
 2356              		.cfi_def_cfa 7, 32
 2357 0006 7860     		str	r0, [r7, #4]
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1772:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 74


1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1778:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1785:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2358              		.loc 1 1788 0
 2359 0008 0D23     		mov	r3, #13
 2360 000a FB18     		add	r3, r7, r3
 2361 000c 2349     		ldr	r1, .L148
 2362 000e 7A68     		ldr	r2, [r7, #4]
 2363 0010 8A18     		add	r2, r1, r2
 2364 0012 1278     		ldrb	r2, [r2]
 2365 0014 1A70     		strb	r2, [r3]
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2366              		.loc 1 1789 0
 2367 0016 0C23     		mov	r3, #12
 2368 0018 FB18     		add	r3, r7, r3
 2369 001a 2149     		ldr	r1, .L148+4
 2370 001c 7A68     		ldr	r2, [r7, #4]
 2371 001e 8A18     		add	r2, r1, r2
 2372 0020 1278     		ldrb	r2, [r2]
 2373 0022 1A70     		strb	r2, [r3]
1790:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2374              		.loc 1 1807 0
 2375 0024 1F4A     		ldr	r2, .L148+8
 2376 0026 7B68     		ldr	r3, [r7, #4]
 2377 0028 D318     		add	r3, r2, r3
 2378 002a 1A78     		ldrb	r2, [r3]
 2379 002c 0B23     		mov	r3, #11
 2380 002e FC18     		add	r4, r7, r3
 2381 0030 0D23     		mov	r3, #13
 2382 0032 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 75


 2383 0034 1978     		ldrb	r1, [r3]
 2384 0036 0C23     		mov	r3, #12
 2385 0038 FB18     		add	r3, r7, r3
 2386 003a 1B78     		ldrb	r3, [r3]
 2387 003c 081C     		mov	r0, r1
 2388 003e 191C     		mov	r1, r3
 2389 0040 FFF7FEFF 		bl	CapSense_FindMaximum
 2390 0044 031C     		mov	r3, r0
 2391 0046 2370     		strb	r3, [r4]
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1809:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2392              		.loc 1 1810 0
 2393 0048 0B23     		mov	r3, #11
 2394 004a FB18     		add	r3, r7, r3
 2395 004c 1B78     		ldrb	r3, [r3]
 2396 004e FF2B     		cmp	r3, #255
 2397 0050 18D0     		beq	.L145
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2398              		.loc 1 1813 0
 2399 0052 A023     		mov	r3, #160
 2400 0054 5C01     		lsl	r4, r3, #5
 2401 0056 144A     		ldr	r2, .L148+12
 2402 0058 7B68     		ldr	r3, [r7, #4]
 2403 005a D318     		add	r3, r2, r3
 2404 005c 1B78     		ldrb	r3, [r3]
 2405 005e 0B22     		mov	r2, #11
 2406 0060 BA18     		add	r2, r7, r2
 2407 0062 1078     		ldrb	r0, [r2]
 2408 0064 0D22     		mov	r2, #13
 2409 0066 BA18     		add	r2, r7, r2
 2410 0068 1178     		ldrb	r1, [r2]
 2411 006a 0C22     		mov	r2, #12
 2412 006c BA18     		add	r2, r7, r2
 2413 006e 1278     		ldrb	r2, [r2]
 2414 0070 0093     		str	r3, [sp]
 2415 0072 231C     		mov	r3, r4
 2416 0074 FFF7FEFF 		bl	CapSense_CalcCentroid
 2417 0078 031C     		mov	r3, r0
 2418 007a 1A1C     		mov	r2, r3
 2419 007c 0E23     		mov	r3, #14
 2420 007e FB18     		add	r3, r7, r3
 2421 0080 1A80     		strh	r2, [r3]
 2422 0082 04E0     		b	.L146
 2423              	.L145:
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1822:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 76


1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1831:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1842:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1862:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1876:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 77


1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1887:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1898:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1912:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2424              		.loc 1 1917 0
 2425 0084 0E23     		mov	r3, #14
 2426 0086 FB18     		add	r3, r7, r3
 2427 0088 0122     		mov	r2, #1
 2428 008a 5242     		neg	r2, r2
 2429 008c 1A80     		strh	r2, [r3]
 2430              	.L146:
1918:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1927:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1928:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2431              		.loc 1 1929 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 78


 2432 008e 0E23     		mov	r3, #14
 2433 0090 FB18     		add	r3, r7, r3
 2434 0092 1B88     		ldrh	r3, [r3]
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2435              		.loc 1 1930 0
 2436 0094 181C     		mov	r0, r3
 2437 0096 BD46     		mov	sp, r7
 2438 0098 05B0     		add	sp, sp, #20
 2439              		@ sp needed
 2440 009a 90BD     		pop	{r4, r7, pc}
 2441              	.L149:
 2442              		.align	2
 2443              	.L148:
 2444 009c 00000000 		.word	CapSense_rawDataIndex
 2445 00a0 00000000 		.word	CapSense_numberOfSensors
 2446 00a4 00000000 		.word	CapSense_fingerThreshold
 2447 00a8 00000000 		.word	CapSense_noiseThreshold
 2448              		.cfi_endproc
 2449              	.LFE64:
 2450              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2451              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2452              		.align	2
 2453              		.global	CapSense_GetRadialCentroidPos
 2454              		.code	16
 2455              		.thumb_func
 2456              		.type	CapSense_GetRadialCentroidPos, %function
 2457              	CapSense_GetRadialCentroidPos:
 2458              	.LFB65:
1931:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1932:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1933:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1934:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 79


1960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2459              		.loc 1 1971 0
 2460              		.cfi_startproc
 2461 0000 90B5     		push	{r4, r7, lr}
 2462              		.cfi_def_cfa_offset 12
 2463              		.cfi_offset 4, -12
 2464              		.cfi_offset 7, -8
 2465              		.cfi_offset 14, -4
 2466 0002 87B0     		sub	sp, sp, #28
 2467              		.cfi_def_cfa_offset 40
 2468 0004 02AF     		add	r7, sp, #8
 2469              		.cfi_def_cfa 7, 32
 2470 0006 7860     		str	r0, [r7, #4]
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2471              		.loc 1 1974 0
 2472 0008 0D23     		mov	r3, #13
 2473 000a FB18     		add	r3, r7, r3
 2474 000c 5249     		ldr	r1, .L156
 2475 000e 7A68     		ldr	r2, [r7, #4]
 2476 0010 8A18     		add	r2, r1, r2
 2477 0012 1278     		ldrb	r2, [r2]
 2478 0014 1A70     		strb	r2, [r3]
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2479              		.loc 1 1975 0
 2480 0016 0C23     		mov	r3, #12
 2481 0018 FB18     		add	r3, r7, r3
 2482 001a 5049     		ldr	r1, .L156+4
 2483 001c 7A68     		ldr	r2, [r7, #4]
 2484 001e 8A18     		add	r2, r1, r2
 2485 0020 1278     		ldrb	r2, [r2]
 2486 0022 1A70     		strb	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1984:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2487              		.loc 1 1987 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 80


 2488 0024 0B23     		mov	r3, #11
 2489 0026 FB18     		add	r3, r7, r3
 2490 0028 4D49     		ldr	r1, .L156+8
 2491 002a 7A68     		ldr	r2, [r7, #4]
 2492 002c 8A18     		add	r2, r1, r2
 2493 002e 1278     		ldrb	r2, [r2]
 2494 0030 1A70     		strb	r2, [r3]
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2495              		.loc 1 1988 0
 2496 0032 0A23     		mov	r3, #10
 2497 0034 FB18     		add	r3, r7, r3
 2498 0036 4B49     		ldr	r1, .L156+12
 2499 0038 7A68     		ldr	r2, [r7, #4]
 2500 003a 8A18     		add	r2, r1, r2
 2501 003c 1278     		ldrb	r2, [r2]
 2502 003e 1A70     		strb	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2503              		.loc 1 1994 0
 2504 0040 494A     		ldr	r2, .L156+16
 2505 0042 7B68     		ldr	r3, [r7, #4]
 2506 0044 D318     		add	r3, r2, r3
 2507 0046 1A78     		ldrb	r2, [r3]
 2508 0048 0923     		mov	r3, #9
 2509 004a FC18     		add	r4, r7, r3
 2510 004c 0B23     		mov	r3, #11
 2511 004e FB18     		add	r3, r7, r3
 2512 0050 1978     		ldrb	r1, [r3]
 2513 0052 0A23     		mov	r3, #10
 2514 0054 FB18     		add	r3, r7, r3
 2515 0056 1B78     		ldrb	r3, [r3]
 2516 0058 081C     		mov	r0, r1
 2517 005a 191C     		mov	r1, r3
 2518 005c FFF7FEFF 		bl	CapSense_FindMaximum
 2519 0060 031C     		mov	r3, r0
 2520 0062 2370     		strb	r3, [r4]
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1996:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2521              		.loc 1 1997 0
 2522 0064 0923     		mov	r3, #9
 2523 0066 FB18     		add	r3, r7, r3
 2524 0068 1B78     		ldrb	r3, [r3]
 2525 006a FF2B     		cmp	r3, #255
 2526 006c 5CD0     		beq	.L151
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2527              		.loc 1 2000 0
 2528 006e A023     		mov	r3, #160
 2529 0070 5C01     		lsl	r4, r3, #5
 2530 0072 3E4A     		ldr	r2, .L156+20
 2531 0074 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 81


 2532 0076 D318     		add	r3, r2, r3
 2533 0078 1B78     		ldrb	r3, [r3]
 2534 007a 0922     		mov	r2, #9
 2535 007c BA18     		add	r2, r7, r2
 2536 007e 1078     		ldrb	r0, [r2]
 2537 0080 0B22     		mov	r2, #11
 2538 0082 BA18     		add	r2, r7, r2
 2539 0084 1178     		ldrb	r1, [r2]
 2540 0086 0A22     		mov	r2, #10
 2541 0088 BA18     		add	r2, r7, r2
 2542 008a 1278     		ldrb	r2, [r2]
 2543 008c 0093     		str	r3, [sp]
 2544 008e 231C     		mov	r3, r4
 2545 0090 FFF7FEFF 		bl	CapSense_CalcCentroid
 2546 0094 031C     		mov	r3, r0
 2547 0096 1A1C     		mov	r2, r3
 2548 0098 0E23     		mov	r3, #14
 2549 009a FB18     		add	r3, r7, r3
 2550 009c 1A80     		strh	r2, [r3]
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
2002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2551              		.loc 1 2005 0
 2552 009e 0C23     		mov	r3, #12
 2553 00a0 FB18     		add	r3, r7, r3
 2554 00a2 1B78     		ldrb	r3, [r3]
 2555 00a4 1F22     		mov	r2, #31
 2556 00a6 1340     		and	r3, r2
 2557 00a8 4FD0     		beq	.L154
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2558              		.loc 1 2008 0
 2559 00aa 0823     		mov	r3, #8
 2560 00ac FB18     		add	r3, r7, r3
 2561 00ae 0D22     		mov	r2, #13
 2562 00b0 BA18     		add	r2, r7, r2
 2563 00b2 1278     		ldrb	r2, [r2]
 2564 00b4 0132     		add	r2, r2, #1
 2565 00b6 1A70     		strb	r2, [r3]
2009:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2566              		.loc 1 2010 0
 2567 00b8 0D23     		mov	r3, #13
 2568 00ba FB18     		add	r3, r7, r3
 2569 00bc 1B78     		ldrb	r3, [r3]
 2570 00be 264A     		ldr	r2, .L156
 2571 00c0 D35C     		ldrb	r3, [r2, r3]
 2572 00c2 002B     		cmp	r3, #0
 2573 00c4 0FD1     		bne	.L153
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2574              		.loc 1 2013 0
 2575 00c6 0823     		mov	r3, #8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 82


 2576 00c8 FB18     		add	r3, r7, r3
 2577 00ca 1B78     		ldrb	r3, [r3]
 2578 00cc 0E22     		mov	r2, #14
 2579 00ce BA18     		add	r2, r7, r2
 2580 00d0 1288     		ldrh	r2, [r2]
 2581 00d2 D1B2     		uxtb	r1, r2
 2582 00d4 204A     		ldr	r2, .L156
 2583 00d6 D154     		strb	r1, [r2, r3]
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2018:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2029:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2584              		.loc 1 2030 0
 2585 00d8 0D23     		mov	r3, #13
 2586 00da FB18     		add	r3, r7, r3
 2587 00dc 1B78     		ldrb	r3, [r3]
 2588 00de 1E4A     		ldr	r2, .L156
 2589 00e0 0121     		mov	r1, #1
 2590 00e2 D154     		strb	r1, [r2, r3]
 2591 00e4 31E0     		b	.L154
 2592              	.L153:
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2049:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 83


2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2064:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2075:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
 2593              		.loc 1 2077 0
 2594 00e6 0C23     		mov	r3, #12
 2595 00e8 FB18     		add	r3, r7, r3
 2596 00ea 1B78     		ldrb	r3, [r3]
 2597 00ec 0822     		mov	r2, #8
 2598 00ee 1340     		and	r3, r2
 2599 00f0 2BD0     		beq	.L154
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2600              		.loc 1 2080 0
 2601 00f2 0823     		mov	r3, #8
 2602 00f4 FB18     		add	r3, r7, r3
 2603 00f6 1B78     		ldrb	r3, [r3]
 2604 00f8 174A     		ldr	r2, .L156
 2605 00fa D35C     		ldrb	r3, [r2, r3]
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
 2606              		.loc 1 2079 0
 2607 00fc 9AB2     		uxth	r2, r3
 2608 00fe 0E23     		mov	r3, #14
 2609 0100 FC18     		add	r4, r7, r3
 2610 0102 0E23     		mov	r3, #14
 2611 0104 FB18     		add	r3, r7, r3
 2612 0106 1B88     		ldrh	r3, [r3]
 2613 0108 181C     		mov	r0, r3
 2614 010a 111C     		mov	r1, r2
 2615 010c FFF7FEFF 		bl	CapSense_IIR4Filter
 2616 0110 031C     		mov	r3, r0
 2617 0112 2380     		strh	r3, [r4]
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
 2618              		.loc 1 2081 0
 2619 0114 0823     		mov	r3, #8
 2620 0116 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 84


 2621 0118 1B78     		ldrb	r3, [r3]
 2622 011a 0E22     		mov	r2, #14
 2623 011c BA18     		add	r2, r7, r2
 2624 011e 1288     		ldrh	r2, [r2]
 2625 0120 D1B2     		uxtb	r1, r2
 2626 0122 0D4A     		ldr	r2, .L156
 2627 0124 D154     		strb	r1, [r2, r3]
 2628 0126 10E0     		b	.L154
 2629              	.L151:
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2086:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2630              		.loc 1 2105 0
 2631 0128 0E23     		mov	r3, #14
 2632 012a FB18     		add	r3, r7, r3
 2633 012c 0122     		mov	r2, #1
 2634 012e 5242     		neg	r2, r2
 2635 0130 1A80     		strh	r2, [r3]
2106:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
 2636              		.loc 1 2109 0
 2637 0132 0C23     		mov	r3, #12
 2638 0134 FB18     		add	r3, r7, r3
 2639 0136 1B78     		ldrb	r3, [r3]
 2640 0138 1F22     		mov	r2, #31
 2641 013a 1340     		and	r3, r2
 2642 013c 05D0     		beq	.L154
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2643              		.loc 1 2111 0
 2644 013e 0D23     		mov	r3, #13
 2645 0140 FB18     		add	r3, r7, r3
 2646 0142 1B78     		ldrb	r3, [r3]
 2647 0144 044A     		ldr	r2, .L156
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 85


 2648 0146 0021     		mov	r1, #0
 2649 0148 D154     		strb	r1, [r2, r3]
 2650              	.L154:
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2115:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2651              		.loc 1 2116 0
 2652 014a 0E23     		mov	r3, #14
 2653 014c FB18     		add	r3, r7, r3
 2654 014e 1B88     		ldrh	r3, [r3]
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2655              		.loc 1 2117 0
 2656 0150 181C     		mov	r0, r3
 2657 0152 BD46     		mov	sp, r7
 2658 0154 05B0     		add	sp, sp, #20
 2659              		@ sp needed
 2660 0156 90BD     		pop	{r4, r7, pc}
 2661              	.L157:
 2662              		.align	2
 2663              	.L156:
 2664 0158 18000000 		.word	CapSense_posFiltersData
 2665 015c 14000000 		.word	CapSense_posFiltersMask
 2666 0160 00000000 		.word	CapSense_rawDataIndex
 2667 0164 00000000 		.word	CapSense_numberOfSensors
 2668 0168 00000000 		.word	CapSense_fingerThreshold
 2669 016c 00000000 		.word	CapSense_noiseThreshold
 2670              		.cfi_endproc
 2671              	.LFE65:
 2672              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2673              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2674              		.align	2
 2675              		.global	CapSense_MedianFilter
 2676              		.code	16
 2677              		.thumb_func
 2678              		.type	CapSense_MedianFilter, %function
 2679              	CapSense_MedianFilter:
 2680              	.LFB66:
2118:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2119:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2121:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 86


2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 87


2193:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2223:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2234:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 88


2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2262:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2271:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2295:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 89


2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2311:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2315:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2327:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2331:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2338:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2349:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 90


2364:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2366:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2369:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2370:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2372:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2681              		.loc 1 2400 0
 2682              		.cfi_startproc
 2683 0000 90B5     		push	{r4, r7, lr}
 2684              		.cfi_def_cfa_offset 12
 2685              		.cfi_offset 4, -12
 2686              		.cfi_offset 7, -8
 2687              		.cfi_offset 14, -4
 2688 0002 85B0     		sub	sp, sp, #20
 2689              		.cfi_def_cfa_offset 32
 2690 0004 00AF     		add	r7, sp, #0
 2691              		.cfi_def_cfa_register 7
 2692 0006 041C     		mov	r4, r0
 2693 0008 081C     		mov	r0, r1
 2694 000a 111C     		mov	r1, r2
 2695 000c BB1D     		add	r3, r7, #6
 2696 000e 221C     		add	r2, r4, #0
 2697 0010 1A80     		strh	r2, [r3]
 2698 0012 3B1D     		add	r3, r7, #4
 2699 0014 021C     		add	r2, r0, #0
 2700 0016 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 91


 2701 0018 BB1C     		add	r3, r7, #2
 2702 001a 0A1C     		add	r2, r1, #0
 2703 001c 1A80     		strh	r2, [r3]
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2402:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2704              		.loc 1 2403 0
 2705 001e BA1D     		add	r2, r7, #6
 2706 0020 3B1D     		add	r3, r7, #4
 2707 0022 1288     		ldrh	r2, [r2]
 2708 0024 1B88     		ldrh	r3, [r3]
 2709 0026 9A42     		cmp	r2, r3
 2710 0028 0DD9     		bls	.L159
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2711              		.loc 1 2405 0
 2712 002a 0E23     		mov	r3, #14
 2713 002c FB18     		add	r3, r7, r3
 2714 002e 3A1D     		add	r2, r7, #4
 2715 0030 1288     		ldrh	r2, [r2]
 2716 0032 1A80     		strh	r2, [r3]
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2717              		.loc 1 2406 0
 2718 0034 3B1D     		add	r3, r7, #4
 2719 0036 BA1D     		add	r2, r7, #6
 2720 0038 1288     		ldrh	r2, [r2]
 2721 003a 1A80     		strh	r2, [r3]
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2722              		.loc 1 2407 0
 2723 003c BB1D     		add	r3, r7, #6
 2724 003e 0E22     		mov	r2, #14
 2725 0040 BA18     		add	r2, r7, r2
 2726 0042 1288     		ldrh	r2, [r2]
 2727 0044 1A80     		strh	r2, [r3]
 2728              	.L159:
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2409:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2729              		.loc 1 2410 0
 2730 0046 3A1D     		add	r2, r7, #4
 2731 0048 BB1C     		add	r3, r7, #2
 2732 004a 1288     		ldrh	r2, [r2]
 2733 004c 1B88     		ldrh	r3, [r3]
 2734 004e 9A42     		cmp	r2, r3
 2735 0050 03D9     		bls	.L160
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2736              		.loc 1 2412 0
 2737 0052 3B1D     		add	r3, r7, #4
 2738 0054 BA1C     		add	r2, r7, #2
 2739 0056 1288     		ldrh	r2, [r2]
 2740 0058 1A80     		strh	r2, [r3]
 2741              	.L160:
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2742              		.loc 1 2415 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 92


 2743 005a 3B1D     		add	r3, r7, #4
 2744 005c BA1D     		add	r2, r7, #6
 2745 005e 1088     		ldrh	r0, [r2]
 2746 0060 1B88     		ldrh	r3, [r3]
 2747 0062 99B2     		uxth	r1, r3
 2748 0064 82B2     		uxth	r2, r0
 2749 0066 9142     		cmp	r1, r2
 2750 0068 00D2     		bcs	.L161
 2751 006a 031C     		add	r3, r0, #0
 2752              	.L161:
 2753 006c 9BB2     		uxth	r3, r3
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2754              		.loc 1 2416 0
 2755 006e 181C     		mov	r0, r3
 2756 0070 BD46     		mov	sp, r7
 2757 0072 05B0     		add	sp, sp, #20
 2758              		@ sp needed
 2759 0074 90BD     		pop	{r4, r7, pc}
 2760              		.cfi_endproc
 2761              	.LFE66:
 2762              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2763 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2764              		.align	2
 2765              		.global	CapSense_IIR4Filter
 2766              		.code	16
 2767              		.thumb_func
 2768              		.type	CapSense_IIR4Filter, %function
 2769              	CapSense_IIR4Filter:
 2770              	.LFB67:
2417:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2421:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2422:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 93


2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2451:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2454:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2456:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2484:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2488:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2491:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2496:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 94


2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2771              		.loc 1 2520 0
 2772              		.cfi_startproc
 2773 0000 80B5     		push	{r7, lr}
 2774              		.cfi_def_cfa_offset 8
 2775              		.cfi_offset 7, -8
 2776              		.cfi_offset 14, -4
 2777 0002 84B0     		sub	sp, sp, #16
 2778              		.cfi_def_cfa_offset 24
 2779 0004 00AF     		add	r7, sp, #0
 2780              		.cfi_def_cfa_register 7
 2781 0006 021C     		mov	r2, r0
 2782 0008 BB1D     		add	r3, r7, #6
 2783 000a 1A80     		strh	r2, [r3]
 2784 000c 3B1D     		add	r3, r7, #4
 2785 000e 0A1C     		add	r2, r1, #0
 2786 0010 1A80     		strh	r2, [r3]
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2522:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2787              		.loc 1 2524 0
 2788 0012 BB1D     		add	r3, r7, #6
 2789 0014 1A88     		ldrh	r2, [r3]
 2790 0016 3B1D     		add	r3, r7, #4
 2791 0018 1B88     		ldrh	r3, [r3]
 2792 001a D318     		add	r3, r2, r3
 2793 001c FB60     		str	r3, [r7, #12]
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2794              		.loc 1 2525 0
 2795 001e 3B1D     		add	r3, r7, #4
 2796 0020 1B88     		ldrh	r3, [r3]
 2797 0022 5B00     		lsl	r3, r3, #1
 2798 0024 FA68     		ldr	r2, [r7, #12]
 2799 0026 D318     		add	r3, r2, r3
 2800 0028 FB60     		str	r3, [r7, #12]
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2801              		.loc 1 2526 0
 2802 002a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 95


 2803 002c 9B08     		lsr	r3, r3, #2
 2804 002e FB60     		str	r3, [r7, #12]
2527:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2805              		.loc 1 2528 0
 2806 0030 FB68     		ldr	r3, [r7, #12]
 2807 0032 9BB2     		uxth	r3, r3
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2808              		.loc 1 2529 0
 2809 0034 181C     		mov	r0, r3
 2810 0036 BD46     		mov	sp, r7
 2811 0038 04B0     		add	sp, sp, #16
 2812              		@ sp needed
 2813 003a 80BD     		pop	{r7, pc}
 2814              		.cfi_endproc
 2815              	.LFE67:
 2816              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2817              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2818              		.align	2
 2819              		.global	CapSense_GetWidgetNumber
 2820              		.code	16
 2821              		.thumb_func
 2822              		.type	CapSense_GetWidgetNumber, %function
 2823              	CapSense_GetWidgetNumber:
 2824              	.LFB68:
2530:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2533:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2534:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2535:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 96


2562:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2572:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2575:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2579:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2580:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2581:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2607:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2612:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2615:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2617:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2618:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 97


2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2644:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2649:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2652:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2654:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2655:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2656:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 98


2676:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2709:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2710:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2711:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2712:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2713:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2714:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2715:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2716:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2718:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2719:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2720:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2721:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2722:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2723:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2724:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2725:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2726:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2727:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 99


2733:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2825              		.loc 1 2753 0
 2826              		.cfi_startproc
 2827 0000 80B5     		push	{r7, lr}
 2828              		.cfi_def_cfa_offset 8
 2829              		.cfi_offset 7, -8
 2830              		.cfi_offset 14, -4
 2831 0002 82B0     		sub	sp, sp, #8
 2832              		.cfi_def_cfa_offset 16
 2833 0004 00AF     		add	r7, sp, #0
 2834              		.cfi_def_cfa_register 7
 2835 0006 7860     		str	r0, [r7, #4]
2754:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2836              		.loc 1 2754 0
 2837 0008 034A     		ldr	r2, .L167
 2838 000a 7B68     		ldr	r3, [r7, #4]
 2839 000c D318     		add	r3, r2, r3
 2840 000e 1B78     		ldrb	r3, [r3]
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2841              		.loc 1 2755 0
 2842 0010 181C     		mov	r0, r3
 2843 0012 BD46     		mov	sp, r7
 2844 0014 02B0     		add	sp, sp, #8
 2845              		@ sp needed
 2846 0016 80BD     		pop	{r7, pc}
 2847              	.L168:
 2848              		.align	2
 2849              	.L167:
 2850 0018 00000000 		.word	CapSense_widgetNumber
 2851              		.cfi_endproc
 2852              	.LFE68:
 2853              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2854              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2855              		.align	2
 2856              		.global	CapSense_GetLowBaselineReset
 2857              		.code	16
 2858              		.thumb_func
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 100


 2859              		.type	CapSense_GetLowBaselineReset, %function
 2860              	CapSense_GetLowBaselineReset:
 2861              	.LFB69:
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2862              		.loc 1 2779 0
 2863              		.cfi_startproc
 2864 0000 80B5     		push	{r7, lr}
 2865              		.cfi_def_cfa_offset 8
 2866              		.cfi_offset 7, -8
 2867              		.cfi_offset 14, -4
 2868 0002 82B0     		sub	sp, sp, #8
 2869              		.cfi_def_cfa_offset 16
 2870 0004 00AF     		add	r7, sp, #0
 2871              		.cfi_def_cfa_register 7
 2872 0006 7860     		str	r0, [r7, #4]
2780:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2873              		.loc 1 2780 0
 2874 0008 034A     		ldr	r2, .L171
 2875 000a 7B68     		ldr	r3, [r7, #4]
 2876 000c D318     		add	r3, r2, r3
 2877 000e 1B78     		ldrb	r3, [r3]
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2878              		.loc 1 2781 0
 2879 0010 181C     		mov	r0, r3
 2880 0012 BD46     		mov	sp, r7
 2881 0014 02B0     		add	sp, sp, #8
 2882              		@ sp needed
 2883 0016 80BD     		pop	{r7, pc}
 2884              	.L172:
 2885              		.align	2
 2886              	.L171:
 2887 0018 00000000 		.word	CapSense_lowBaselineReset
 2888              		.cfi_endproc
 2889              	.LFE69:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 101


 2890              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2891              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2892              		.align	2
 2893              		.global	CapSense_GetDebounce
 2894              		.code	16
 2895              		.thumb_func
 2896              		.type	CapSense_GetDebounce, %function
 2897              	CapSense_GetDebounce:
 2898              	.LFB70:
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2787:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2794:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2796:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2797:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2798:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2799:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2800:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2801:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2802:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2803:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2804:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2805:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2899              		.loc 1 2805 0
 2900              		.cfi_startproc
 2901 0000 80B5     		push	{r7, lr}
 2902              		.cfi_def_cfa_offset 8
 2903              		.cfi_offset 7, -8
 2904              		.cfi_offset 14, -4
 2905 0002 82B0     		sub	sp, sp, #8
 2906              		.cfi_def_cfa_offset 16
 2907 0004 00AF     		add	r7, sp, #0
 2908              		.cfi_def_cfa_register 7
 2909 0006 7860     		str	r0, [r7, #4]
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2910              		.loc 1 2806 0
 2911 0008 034A     		ldr	r2, .L175
 2912 000a 7B68     		ldr	r3, [r7, #4]
 2913 000c D318     		add	r3, r2, r3
 2914 000e 1B78     		ldrb	r3, [r3]
2807:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2915              		.loc 1 2807 0
 2916 0010 181C     		mov	r0, r3
 2917 0012 BD46     		mov	sp, r7
 2918 0014 02B0     		add	sp, sp, #8
 2919              		@ sp needed
 2920 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 102


 2921              	.L176:
 2922              		.align	2
 2923              	.L175:
 2924 0018 00000000 		.word	CapSense_debounce
 2925              		.cfi_endproc
 2926              	.LFE70:
 2927              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2928              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2929              		.align	2
 2930              		.global	CapSense_EnableRawDataFilters
 2931              		.code	16
 2932              		.thumb_func
 2933              		.type	CapSense_EnableRawDataFilters, %function
 2934              	CapSense_EnableRawDataFilters:
 2935              	.LFB71:
2808:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2809:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2936              		.loc 1 2831 0
 2937              		.cfi_startproc
 2938 0000 80B5     		push	{r7, lr}
 2939              		.cfi_def_cfa_offset 8
 2940              		.cfi_offset 7, -8
 2941              		.cfi_offset 14, -4
 2942 0002 00AF     		add	r7, sp, #0
 2943              		.cfi_def_cfa_register 7
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2944              		.loc 1 2832 0
 2945 0004 024B     		ldr	r3, .L178
 2946 0006 0122     		mov	r2, #1
 2947 0008 1A70     		strb	r2, [r3]
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2948              		.loc 1 2833 0
 2949 000a BD46     		mov	sp, r7
 2950              		@ sp needed
 2951 000c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 103


 2952              	.L179:
 2953 000e C046     		.align	2
 2954              	.L178:
 2955 0010 00000000 		.word	CapSense_enableRawFilters
 2956              		.cfi_endproc
 2957              	.LFE71:
 2958              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2959              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2960              		.align	2
 2961              		.global	CapSense_DisableRawDataFilters
 2962              		.code	16
 2963              		.thumb_func
 2964              		.type	CapSense_DisableRawDataFilters, %function
 2965              	CapSense_DisableRawDataFilters:
 2966              	.LFB72:
2834:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2840:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2841:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2842:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2843:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2844:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2845:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2846:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2847:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2848:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2849:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2850:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2851:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2852:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2853:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2854:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2855:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2856:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2967              		.loc 1 2856 0
 2968              		.cfi_startproc
 2969 0000 80B5     		push	{r7, lr}
 2970              		.cfi_def_cfa_offset 8
 2971              		.cfi_offset 7, -8
 2972              		.cfi_offset 14, -4
 2973 0002 00AF     		add	r7, sp, #0
 2974              		.cfi_def_cfa_register 7
2857:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2975              		.loc 1 2857 0
 2976 0004 024B     		ldr	r3, .L181
 2977 0006 0022     		mov	r2, #0
 2978 0008 1A70     		strb	r2, [r3]
2858:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2979              		.loc 1 2858 0
 2980 000a BD46     		mov	sp, r7
 2981              		@ sp needed
 2982 000c 80BD     		pop	{r7, pc}
 2983              	.L182:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 104


 2984 000e C046     		.align	2
 2985              	.L181:
 2986 0010 00000000 		.word	CapSense_enableRawFilters
 2987              		.cfi_endproc
 2988              	.LFE72:
 2989              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2990              		.bss
 2991 0035 000000   		.align	2
 2992              	CapSense_centroid.5444:
 2993 0038 000000   		.space	3
 2994 003b 00       		.text
 2995              	.Letext0:
 2996              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2997              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2998              		.section	.debug_info,"",%progbits
 2999              	.Ldebug_info0:
 3000 0000 490E0000 		.4byte	0xe49
 3001 0004 0400     		.2byte	0x4
 3002 0006 00000000 		.4byte	.Ldebug_abbrev0
 3003 000a 04       		.byte	0x4
 3004 000b 01       		.uleb128 0x1
 3005 000c FE050000 		.4byte	.LASF143
 3006 0010 01       		.byte	0x1
 3007 0011 D6090000 		.4byte	.LASF144
 3008 0015 55070000 		.4byte	.LASF145
 3009 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3010 001d 00000000 		.4byte	0
 3011 0021 00000000 		.4byte	.Ldebug_line0
 3012 0025 02       		.uleb128 0x2
 3013 0026 01       		.byte	0x1
 3014 0027 06       		.byte	0x6
 3015 0028 270A0000 		.4byte	.LASF0
 3016 002c 02       		.uleb128 0x2
 3017 002d 01       		.byte	0x1
 3018 002e 08       		.byte	0x8
 3019 002f 27090000 		.4byte	.LASF1
 3020 0033 02       		.uleb128 0x2
 3021 0034 02       		.byte	0x2
 3022 0035 05       		.byte	0x5
 3023 0036 F8070000 		.4byte	.LASF2
 3024 003a 02       		.uleb128 0x2
 3025 003b 02       		.byte	0x2
 3026 003c 07       		.byte	0x7
 3027 003d 330A0000 		.4byte	.LASF3
 3028 0041 02       		.uleb128 0x2
 3029 0042 04       		.byte	0x4
 3030 0043 05       		.byte	0x5
 3031 0044 02080000 		.4byte	.LASF4
 3032 0048 02       		.uleb128 0x2
 3033 0049 04       		.byte	0x4
 3034 004a 07       		.byte	0x7
 3035 004b B9080000 		.4byte	.LASF5
 3036 004f 02       		.uleb128 0x2
 3037 0050 08       		.byte	0x8
 3038 0051 05       		.byte	0x5
 3039 0052 7E050000 		.4byte	.LASF6
 3040 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 105


 3041 0057 08       		.byte	0x8
 3042 0058 07       		.byte	0x7
 3043 0059 18030000 		.4byte	.LASF7
 3044 005d 03       		.uleb128 0x3
 3045 005e 04       		.byte	0x4
 3046 005f 05       		.byte	0x5
 3047 0060 696E7400 		.ascii	"int\000"
 3048 0064 02       		.uleb128 0x2
 3049 0065 04       		.byte	0x4
 3050 0066 07       		.byte	0x7
 3051 0067 21010000 		.4byte	.LASF8
 3052 006b 04       		.uleb128 0x4
 3053 006c C30A0000 		.4byte	.LASF9
 3054 0070 02       		.byte	0x2
 3055 0071 3801     		.2byte	0x138
 3056 0073 2C000000 		.4byte	0x2c
 3057 0077 04       		.uleb128 0x4
 3058 0078 3D050000 		.4byte	.LASF10
 3059 007c 02       		.byte	0x2
 3060 007d 3901     		.2byte	0x139
 3061 007f 3A000000 		.4byte	0x3a
 3062 0083 04       		.uleb128 0x4
 3063 0084 14070000 		.4byte	.LASF11
 3064 0088 02       		.byte	0x2
 3065 0089 3A01     		.2byte	0x13a
 3066 008b 48000000 		.4byte	0x48
 3067 008f 04       		.uleb128 0x4
 3068 0090 3E010000 		.4byte	.LASF12
 3069 0094 02       		.byte	0x2
 3070 0095 3C01     		.2byte	0x13c
 3071 0097 33000000 		.4byte	0x33
 3072 009b 04       		.uleb128 0x4
 3073 009c BE020000 		.4byte	.LASF13
 3074 00a0 02       		.byte	0x2
 3075 00a1 3D01     		.2byte	0x13d
 3076 00a3 41000000 		.4byte	0x41
 3077 00a7 02       		.uleb128 0x2
 3078 00a8 04       		.byte	0x4
 3079 00a9 04       		.byte	0x4
 3080 00aa B8020000 		.4byte	.LASF14
 3081 00ae 02       		.uleb128 0x2
 3082 00af 08       		.byte	0x8
 3083 00b0 04       		.byte	0x4
 3084 00b1 C90A0000 		.4byte	.LASF15
 3085 00b5 02       		.uleb128 0x2
 3086 00b6 01       		.byte	0x1
 3087 00b7 08       		.byte	0x8
 3088 00b8 06050000 		.4byte	.LASF16
 3089 00bc 02       		.uleb128 0x2
 3090 00bd 04       		.byte	0x4
 3091 00be 07       		.byte	0x7
 3092 00bf B0080000 		.4byte	.LASF17
 3093 00c3 05       		.uleb128 0x5
 3094 00c4 5C       		.byte	0x5c
 3095 00c5 03       		.byte	0x3
 3096 00c6 2F       		.byte	0x2f
 3097 00c7 E0010000 		.4byte	0x1e0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 106


 3098 00cb 06       		.uleb128 0x6
 3099 00cc 49050000 		.4byte	.LASF18
 3100 00d0 03       		.byte	0x3
 3101 00d1 31       		.byte	0x31
 3102 00d2 E0010000 		.4byte	0x1e0
 3103 00d6 00       		.byte	0
 3104 00d7 06       		.uleb128 0x6
 3105 00d8 E9070000 		.4byte	.LASF19
 3106 00dc 03       		.byte	0x3
 3107 00dd 32       		.byte	0x32
 3108 00de E0010000 		.4byte	0x1e0
 3109 00e2 04       		.byte	0x4
 3110 00e3 06       		.uleb128 0x6
 3111 00e4 B1090000 		.4byte	.LASF20
 3112 00e8 03       		.byte	0x3
 3113 00e9 33       		.byte	0x33
 3114 00ea E0010000 		.4byte	0x1e0
 3115 00ee 08       		.byte	0x8
 3116 00ef 06       		.uleb128 0x6
 3117 00f0 1A090000 		.4byte	.LASF21
 3118 00f4 03       		.byte	0x3
 3119 00f5 34       		.byte	0x34
 3120 00f6 E0010000 		.4byte	0x1e0
 3121 00fa 0C       		.byte	0xc
 3122 00fb 06       		.uleb128 0x6
 3123 00fc 1D0A0000 		.4byte	.LASF22
 3124 0100 03       		.byte	0x3
 3125 0101 35       		.byte	0x35
 3126 0102 E0010000 		.4byte	0x1e0
 3127 0106 10       		.byte	0x10
 3128 0107 06       		.uleb128 0x6
 3129 0108 31080000 		.4byte	.LASF23
 3130 010c 03       		.byte	0x3
 3131 010d 36       		.byte	0x36
 3132 010e E6010000 		.4byte	0x1e6
 3133 0112 14       		.byte	0x14
 3134 0113 06       		.uleb128 0x6
 3135 0114 CA020000 		.4byte	.LASF24
 3136 0118 03       		.byte	0x3
 3137 0119 37       		.byte	0x37
 3138 011a F1010000 		.4byte	0x1f1
 3139 011e 18       		.byte	0x18
 3140 011f 06       		.uleb128 0x6
 3141 0120 1B040000 		.4byte	.LASF25
 3142 0124 03       		.byte	0x3
 3143 0125 38       		.byte	0x38
 3144 0126 E0010000 		.4byte	0x1e0
 3145 012a 1C       		.byte	0x1c
 3146 012b 06       		.uleb128 0x6
 3147 012c 03030000 		.4byte	.LASF26
 3148 0130 03       		.byte	0x3
 3149 0131 39       		.byte	0x39
 3150 0132 E0010000 		.4byte	0x1e0
 3151 0136 20       		.byte	0x20
 3152 0137 06       		.uleb128 0x6
 3153 0138 8D010000 		.4byte	.LASF27
 3154 013c 03       		.byte	0x3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 107


 3155 013d 3A       		.byte	0x3a
 3156 013e E0010000 		.4byte	0x1e0
 3157 0142 24       		.byte	0x24
 3158 0143 06       		.uleb128 0x6
 3159 0144 B4060000 		.4byte	.LASF28
 3160 0148 03       		.byte	0x3
 3161 0149 3B       		.byte	0x3b
 3162 014a F7010000 		.4byte	0x1f7
 3163 014e 28       		.byte	0x28
 3164 014f 06       		.uleb128 0x6
 3165 0150 44010000 		.4byte	.LASF29
 3166 0154 03       		.byte	0x3
 3167 0155 3C       		.byte	0x3c
 3168 0156 F7010000 		.4byte	0x1f7
 3169 015a 2C       		.byte	0x2c
 3170 015b 06       		.uleb128 0x6
 3171 015c E3080000 		.4byte	.LASF30
 3172 0160 03       		.byte	0x3
 3173 0161 3D       		.byte	0x3d
 3174 0162 F7010000 		.4byte	0x1f7
 3175 0166 30       		.byte	0x30
 3176 0167 06       		.uleb128 0x6
 3177 0168 86080000 		.4byte	.LASF31
 3178 016c 03       		.byte	0x3
 3179 016d 3E       		.byte	0x3e
 3180 016e E0010000 		.4byte	0x1e0
 3181 0172 34       		.byte	0x34
 3182 0173 06       		.uleb128 0x6
 3183 0174 48000000 		.4byte	.LASF32
 3184 0178 03       		.byte	0x3
 3185 0179 3F       		.byte	0x3f
 3186 017a E0010000 		.4byte	0x1e0
 3187 017e 38       		.byte	0x38
 3188 017f 06       		.uleb128 0x6
 3189 0180 2E050000 		.4byte	.LASF33
 3190 0184 03       		.byte	0x3
 3191 0185 40       		.byte	0x40
 3192 0186 E6010000 		.4byte	0x1e6
 3193 018a 3C       		.byte	0x3c
 3194 018b 06       		.uleb128 0x6
 3195 018c 08020000 		.4byte	.LASF34
 3196 0190 03       		.byte	0x3
 3197 0191 41       		.byte	0x41
 3198 0192 E6010000 		.4byte	0x1e6
 3199 0196 40       		.byte	0x40
 3200 0197 06       		.uleb128 0x6
 3201 0198 95000000 		.4byte	.LASF35
 3202 019c 03       		.byte	0x3
 3203 019d 42       		.byte	0x42
 3204 019e E6010000 		.4byte	0x1e6
 3205 01a2 44       		.byte	0x44
 3206 01a3 06       		.uleb128 0x6
 3207 01a4 D6050000 		.4byte	.LASF36
 3208 01a8 03       		.byte	0x3
 3209 01a9 43       		.byte	0x43
 3210 01aa 0C020000 		.4byte	0x20c
 3211 01ae 48       		.byte	0x48
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 108


 3212 01af 06       		.uleb128 0x6
 3213 01b0 AE050000 		.4byte	.LASF37
 3214 01b4 03       		.byte	0x3
 3215 01b5 44       		.byte	0x44
 3216 01b6 1D020000 		.4byte	0x21d
 3217 01ba 4C       		.byte	0x4c
 3218 01bb 06       		.uleb128 0x6
 3219 01bc 31040000 		.4byte	.LASF38
 3220 01c0 03       		.byte	0x3
 3221 01c1 45       		.byte	0x45
 3222 01c2 0C020000 		.4byte	0x20c
 3223 01c6 50       		.byte	0x50
 3224 01c7 06       		.uleb128 0x6
 3225 01c8 A5000000 		.4byte	.LASF39
 3226 01cc 03       		.byte	0x3
 3227 01cd 46       		.byte	0x46
 3228 01ce 37020000 		.4byte	0x237
 3229 01d2 54       		.byte	0x54
 3230 01d3 06       		.uleb128 0x6
 3231 01d4 640A0000 		.4byte	.LASF40
 3232 01d8 03       		.byte	0x3
 3233 01d9 47       		.byte	0x47
 3234 01da 52020000 		.4byte	0x252
 3235 01de 58       		.byte	0x58
 3236 01df 00       		.byte	0
 3237 01e0 07       		.uleb128 0x7
 3238 01e1 04       		.byte	0x4
 3239 01e2 6B000000 		.4byte	0x6b
 3240 01e6 07       		.uleb128 0x7
 3241 01e7 04       		.byte	0x4
 3242 01e8 EC010000 		.4byte	0x1ec
 3243 01ec 08       		.uleb128 0x8
 3244 01ed 6B000000 		.4byte	0x6b
 3245 01f1 07       		.uleb128 0x7
 3246 01f2 04       		.byte	0x4
 3247 01f3 83000000 		.4byte	0x83
 3248 01f7 07       		.uleb128 0x7
 3249 01f8 04       		.byte	0x4
 3250 01f9 77000000 		.4byte	0x77
 3251 01fd 09       		.uleb128 0x9
 3252 01fe 77000000 		.4byte	0x77
 3253 0202 0C020000 		.4byte	0x20c
 3254 0206 0A       		.uleb128 0xa
 3255 0207 83000000 		.4byte	0x83
 3256 020b 00       		.byte	0
 3257 020c 07       		.uleb128 0x7
 3258 020d 04       		.byte	0x4
 3259 020e FD010000 		.4byte	0x1fd
 3260 0212 0B       		.uleb128 0xb
 3261 0213 1D020000 		.4byte	0x21d
 3262 0217 0A       		.uleb128 0xa
 3263 0218 83000000 		.4byte	0x83
 3264 021c 00       		.byte	0
 3265 021d 07       		.uleb128 0x7
 3266 021e 04       		.byte	0x4
 3267 021f 12020000 		.4byte	0x212
 3268 0223 09       		.uleb128 0x9
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 109


 3269 0224 83000000 		.4byte	0x83
 3270 0228 37020000 		.4byte	0x237
 3271 022c 0A       		.uleb128 0xa
 3272 022d E6010000 		.4byte	0x1e6
 3273 0231 0A       		.uleb128 0xa
 3274 0232 83000000 		.4byte	0x83
 3275 0236 00       		.byte	0
 3276 0237 07       		.uleb128 0x7
 3277 0238 04       		.byte	0x4
 3278 0239 23020000 		.4byte	0x223
 3279 023d 0B       		.uleb128 0xb
 3280 023e 52020000 		.4byte	0x252
 3281 0242 0A       		.uleb128 0xa
 3282 0243 E0010000 		.4byte	0x1e0
 3283 0247 0A       		.uleb128 0xa
 3284 0248 83000000 		.4byte	0x83
 3285 024c 0A       		.uleb128 0xa
 3286 024d 83000000 		.4byte	0x83
 3287 0251 00       		.byte	0
 3288 0252 07       		.uleb128 0x7
 3289 0253 04       		.byte	0x4
 3290 0254 3D020000 		.4byte	0x23d
 3291 0258 0C       		.uleb128 0xc
 3292 0259 D00A0000 		.4byte	.LASF41
 3293 025d 03       		.byte	0x3
 3294 025e 48       		.byte	0x48
 3295 025f C3000000 		.4byte	0xc3
 3296 0263 05       		.uleb128 0x5
 3297 0264 0C       		.byte	0xc
 3298 0265 03       		.byte	0x3
 3299 0266 4A       		.byte	0x4a
 3300 0267 B4020000 		.4byte	0x2b4
 3301 026b 06       		.uleb128 0x6
 3302 026c C7040000 		.4byte	.LASF42
 3303 0270 03       		.byte	0x3
 3304 0271 4C       		.byte	0x4c
 3305 0272 6B000000 		.4byte	0x6b
 3306 0276 00       		.byte	0
 3307 0277 06       		.uleb128 0x6
 3308 0278 15020000 		.4byte	.LASF43
 3309 027c 03       		.byte	0x3
 3310 027d 4D       		.byte	0x4d
 3311 027e 6B000000 		.4byte	0x6b
 3312 0282 01       		.byte	0x1
 3313 0283 06       		.uleb128 0x6
 3314 0284 2E010000 		.4byte	.LASF44
 3315 0288 03       		.byte	0x3
 3316 0289 4E       		.byte	0x4e
 3317 028a 6B000000 		.4byte	0x6b
 3318 028e 02       		.byte	0x2
 3319 028f 06       		.uleb128 0x6
 3320 0290 E0040000 		.4byte	.LASF45
 3321 0294 03       		.byte	0x3
 3322 0295 4F       		.byte	0x4f
 3323 0296 77000000 		.4byte	0x77
 3324 029a 04       		.byte	0x4
 3325 029b 06       		.uleb128 0x6
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 110


 3326 029c C3070000 		.4byte	.LASF46
 3327 02a0 03       		.byte	0x3
 3328 02a1 50       		.byte	0x50
 3329 02a2 77000000 		.4byte	0x77
 3330 02a6 06       		.byte	0x6
 3331 02a7 06       		.uleb128 0x6
 3332 02a8 CB080000 		.4byte	.LASF47
 3333 02ac 03       		.byte	0x3
 3334 02ad 51       		.byte	0x51
 3335 02ae B4020000 		.4byte	0x2b4
 3336 02b2 08       		.byte	0x8
 3337 02b3 00       		.byte	0
 3338 02b4 07       		.uleb128 0x7
 3339 02b5 04       		.byte	0x4
 3340 02b6 BA020000 		.4byte	0x2ba
 3341 02ba 08       		.uleb128 0x8
 3342 02bb 58020000 		.4byte	0x258
 3343 02bf 0C       		.uleb128 0xc
 3344 02c0 D1010000 		.4byte	.LASF48
 3345 02c4 03       		.byte	0x3
 3346 02c5 52       		.byte	0x52
 3347 02c6 63020000 		.4byte	0x263
 3348 02ca 0D       		.uleb128 0xd
 3349 02cb 8C060000 		.4byte	.LASF49
 3350 02cf 01       		.byte	0x1
 3351 02d0 9A       		.byte	0x9a
 3352 02d1 00000000 		.4byte	.LFB35
 3353 02d5 90000000 		.4byte	.LFE35-.LFB35
 3354 02d9 01       		.uleb128 0x1
 3355 02da 9C       		.byte	0x9c
 3356 02db FC020000 		.4byte	0x2fc
 3357 02df 0E       		.uleb128 0xe
 3358 02e0 D9040000 		.4byte	.LASF51
 3359 02e4 01       		.byte	0x1
 3360 02e5 9A       		.byte	0x9a
 3361 02e6 83000000 		.4byte	0x83
 3362 02ea 02       		.uleb128 0x2
 3363 02eb 91       		.byte	0x91
 3364 02ec 6C       		.sleb128 -20
 3365 02ed 0F       		.uleb128 0xf
 3366 02ee 49030000 		.4byte	.LASF53
 3367 02f2 01       		.byte	0x1
 3368 02f3 9E       		.byte	0x9e
 3369 02f4 6B000000 		.4byte	0x6b
 3370 02f8 02       		.uleb128 0x2
 3371 02f9 91       		.byte	0x91
 3372 02fa 77       		.sleb128 -9
 3373 02fb 00       		.byte	0
 3374 02fc 10       		.uleb128 0x10
 3375 02fd AF010000 		.4byte	.LASF50
 3376 0301 01       		.byte	0x1
 3377 0302 E9       		.byte	0xe9
 3378 0303 00000000 		.4byte	.LFB36
 3379 0307 28000000 		.4byte	.LFE36-.LFB36
 3380 030b 01       		.uleb128 0x1
 3381 030c 9C       		.byte	0x9c
 3382 030d 20030000 		.4byte	0x320
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 111


 3383 0311 0E       		.uleb128 0xe
 3384 0312 D9040000 		.4byte	.LASF51
 3385 0316 01       		.byte	0x1
 3386 0317 E9       		.byte	0xe9
 3387 0318 83000000 		.4byte	0x83
 3388 031c 02       		.uleb128 0x2
 3389 031d 91       		.byte	0x91
 3390 031e 74       		.sleb128 -12
 3391 031f 00       		.byte	0
 3392 0320 11       		.uleb128 0x11
 3393 0321 5B090000 		.4byte	.LASF52
 3394 0325 01       		.byte	0x1
 3395 0326 0E01     		.2byte	0x10e
 3396 0328 00000000 		.4byte	.LFB37
 3397 032c 26000000 		.4byte	.LFE37-.LFB37
 3398 0330 01       		.uleb128 0x1
 3399 0331 9C       		.byte	0x9c
 3400 0332 44030000 		.4byte	0x344
 3401 0336 12       		.uleb128 0x12
 3402 0337 6900     		.ascii	"i\000"
 3403 0339 01       		.byte	0x1
 3404 033a 1001     		.2byte	0x110
 3405 033c 83000000 		.4byte	0x83
 3406 0340 02       		.uleb128 0x2
 3407 0341 91       		.byte	0x91
 3408 0342 74       		.sleb128 -12
 3409 0343 00       		.byte	0
 3410 0344 11       		.uleb128 0x11
 3411 0345 51010000 		.4byte	.LASF54
 3412 0349 01       		.byte	0x1
 3413 034a 3101     		.2byte	0x131
 3414 034c 00000000 		.4byte	.LFB38
 3415 0350 50000000 		.4byte	.LFE38-.LFB38
 3416 0354 01       		.uleb128 0x1
 3417 0355 9C       		.byte	0x9c
 3418 0356 77030000 		.4byte	0x377
 3419 035a 12       		.uleb128 0x12
 3420 035b 6900     		.ascii	"i\000"
 3421 035d 01       		.byte	0x1
 3422 035e 3301     		.2byte	0x133
 3423 0360 83000000 		.4byte	0x83
 3424 0364 02       		.uleb128 0x2
 3425 0365 91       		.byte	0x91
 3426 0366 74       		.sleb128 -12
 3427 0367 13       		.uleb128 0x13
 3428 0368 04010000 		.4byte	.LASF55
 3429 036c 01       		.byte	0x1
 3430 036d 3401     		.2byte	0x134
 3431 036f 83000000 		.4byte	0x83
 3432 0373 02       		.uleb128 0x2
 3433 0374 91       		.byte	0x91
 3434 0375 70       		.sleb128 -16
 3435 0376 00       		.byte	0
 3436 0377 11       		.uleb128 0x11
 3437 0378 72000000 		.4byte	.LASF56
 3438 037c 01       		.byte	0x1
 3439 037d 7201     		.2byte	0x172
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 112


 3440 037f 00000000 		.4byte	.LFB39
 3441 0383 38020000 		.4byte	.LFE39-.LFB39
 3442 0387 01       		.uleb128 0x1
 3443 0388 9C       		.byte	0x9c
 3444 0389 F7030000 		.4byte	0x3f7
 3445 038d 14       		.uleb128 0x14
 3446 038e D9040000 		.4byte	.LASF51
 3447 0392 01       		.byte	0x1
 3448 0393 7201     		.2byte	0x172
 3449 0395 83000000 		.4byte	0x83
 3450 0399 02       		.uleb128 0x2
 3451 039a 91       		.byte	0x91
 3452 039b 5C       		.sleb128 -36
 3453 039c 13       		.uleb128 0x13
 3454 039d 2C040000 		.4byte	.LASF57
 3455 03a1 01       		.byte	0x1
 3456 03a2 7401     		.2byte	0x174
 3457 03a4 83000000 		.4byte	0x83
 3458 03a8 02       		.uleb128 0x2
 3459 03a9 91       		.byte	0x91
 3460 03aa 60       		.sleb128 -32
 3461 03ab 13       		.uleb128 0x13
 3462 03ac 0F040000 		.4byte	.LASF58
 3463 03b0 01       		.byte	0x1
 3464 03b1 7501     		.2byte	0x175
 3465 03b3 83000000 		.4byte	0x83
 3466 03b7 02       		.uleb128 0x2
 3467 03b8 91       		.byte	0x91
 3468 03b9 6C       		.sleb128 -20
 3469 03ba 13       		.uleb128 0x13
 3470 03bb 890A0000 		.4byte	.LASF59
 3471 03bf 01       		.byte	0x1
 3472 03c0 7601     		.2byte	0x176
 3473 03c2 77000000 		.4byte	0x77
 3474 03c6 02       		.uleb128 0x2
 3475 03c7 91       		.byte	0x91
 3476 03c8 6A       		.sleb128 -22
 3477 03c9 13       		.uleb128 0x13
 3478 03ca 4D040000 		.4byte	.LASF60
 3479 03ce 01       		.byte	0x1
 3480 03cf 7701     		.2byte	0x177
 3481 03d1 77000000 		.4byte	0x77
 3482 03d5 02       		.uleb128 0x2
 3483 03d6 91       		.byte	0x91
 3484 03d7 68       		.sleb128 -24
 3485 03d8 13       		.uleb128 0x13
 3486 03d9 49030000 		.4byte	.LASF53
 3487 03dd 01       		.byte	0x1
 3488 03de 7801     		.2byte	0x178
 3489 03e0 6B000000 		.4byte	0x6b
 3490 03e4 02       		.uleb128 0x2
 3491 03e5 91       		.byte	0x91
 3492 03e6 67       		.sleb128 -25
 3493 03e7 13       		.uleb128 0x13
 3494 03e8 D4080000 		.4byte	.LASF61
 3495 03ec 01       		.byte	0x1
 3496 03ed 7901     		.2byte	0x179
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 113


 3497 03ef 6B000000 		.4byte	0x6b
 3498 03f3 02       		.uleb128 0x2
 3499 03f4 91       		.byte	0x91
 3500 03f5 66       		.sleb128 -26
 3501 03f6 00       		.byte	0
 3502 03f7 11       		.uleb128 0x11
 3503 03f8 E0050000 		.4byte	.LASF62
 3504 03fc 01       		.byte	0x1
 3505 03fd 3202     		.2byte	0x232
 3506 03ff 00000000 		.4byte	.LFB40
 3507 0403 1E000000 		.4byte	.LFE40-.LFB40
 3508 0407 01       		.uleb128 0x1
 3509 0408 9C       		.byte	0x9c
 3510 0409 1D040000 		.4byte	0x41d
 3511 040d 14       		.uleb128 0x14
 3512 040e D9040000 		.4byte	.LASF51
 3513 0412 01       		.byte	0x1
 3514 0413 3202     		.2byte	0x232
 3515 0415 83000000 		.4byte	0x83
 3516 0419 02       		.uleb128 0x2
 3517 041a 91       		.byte	0x91
 3518 041b 74       		.sleb128 -12
 3519 041c 00       		.byte	0
 3520 041d 11       		.uleb128 0x11
 3521 041e CB000000 		.4byte	.LASF63
 3522 0422 01       		.byte	0x1
 3523 0423 6802     		.2byte	0x268
 3524 0425 00000000 		.4byte	.LFB41
 3525 0429 40000000 		.4byte	.LFE41-.LFB41
 3526 042d 01       		.uleb128 0x1
 3527 042e 9C       		.byte	0x9c
 3528 042f 50040000 		.4byte	0x450
 3529 0433 12       		.uleb128 0x12
 3530 0434 6900     		.ascii	"i\000"
 3531 0436 01       		.byte	0x1
 3532 0437 6A02     		.2byte	0x26a
 3533 0439 83000000 		.4byte	0x83
 3534 043d 02       		.uleb128 0x2
 3535 043e 91       		.byte	0x91
 3536 043f 74       		.sleb128 -12
 3537 0440 13       		.uleb128 0x13
 3538 0441 04010000 		.4byte	.LASF55
 3539 0445 01       		.byte	0x1
 3540 0446 6B02     		.2byte	0x26b
 3541 0448 83000000 		.4byte	0x83
 3542 044c 02       		.uleb128 0x2
 3543 044d 91       		.byte	0x91
 3544 044e 70       		.sleb128 -16
 3545 044f 00       		.byte	0
 3546 0450 11       		.uleb128 0x11
 3547 0451 86020000 		.4byte	.LASF64
 3548 0455 01       		.byte	0x1
 3549 0456 9502     		.2byte	0x295
 3550 0458 00000000 		.4byte	.LFB42
 3551 045c 70000000 		.4byte	.LFE42-.LFB42
 3552 0460 01       		.uleb128 0x1
 3553 0461 9C       		.byte	0x9c
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 114


 3554 0462 BF040000 		.4byte	0x4bf
 3555 0466 14       		.uleb128 0x14
 3556 0467 49030000 		.4byte	.LASF53
 3557 046b 01       		.byte	0x1
 3558 046c 9502     		.2byte	0x295
 3559 046e 83000000 		.4byte	0x83
 3560 0472 02       		.uleb128 0x2
 3561 0473 91       		.byte	0x91
 3562 0474 5C       		.sleb128 -36
 3563 0475 13       		.uleb128 0x13
 3564 0476 5D040000 		.4byte	.LASF65
 3565 047a 01       		.byte	0x1
 3566 047b 9702     		.2byte	0x297
 3567 047d 83000000 		.4byte	0x83
 3568 0481 02       		.uleb128 0x2
 3569 0482 91       		.byte	0x91
 3570 0483 70       		.sleb128 -16
 3571 0484 13       		.uleb128 0x13
 3572 0485 0B080000 		.4byte	.LASF66
 3573 0489 01       		.byte	0x1
 3574 048a 9802     		.2byte	0x298
 3575 048c 83000000 		.4byte	0x83
 3576 0490 02       		.uleb128 0x2
 3577 0491 91       		.byte	0x91
 3578 0492 6C       		.sleb128 -20
 3579 0493 13       		.uleb128 0x13
 3580 0494 B8070000 		.4byte	.LASF67
 3581 0498 01       		.byte	0x1
 3582 0499 9902     		.2byte	0x299
 3583 049b 83000000 		.4byte	0x83
 3584 049f 02       		.uleb128 0x2
 3585 04a0 91       		.byte	0x91
 3586 04a1 68       		.sleb128 -24
 3587 04a2 12       		.uleb128 0x12
 3588 04a3 6900     		.ascii	"i\000"
 3589 04a5 01       		.byte	0x1
 3590 04a6 9A02     		.2byte	0x29a
 3591 04a8 83000000 		.4byte	0x83
 3592 04ac 02       		.uleb128 0x2
 3593 04ad 91       		.byte	0x91
 3594 04ae 74       		.sleb128 -12
 3595 04af 13       		.uleb128 0x13
 3596 04b0 04010000 		.4byte	.LASF55
 3597 04b4 01       		.byte	0x1
 3598 04b5 9B02     		.2byte	0x29b
 3599 04b7 83000000 		.4byte	0x83
 3600 04bb 02       		.uleb128 0x2
 3601 04bc 91       		.byte	0x91
 3602 04bd 64       		.sleb128 -28
 3603 04be 00       		.byte	0
 3604 04bf 15       		.uleb128 0x15
 3605 04c0 7B090000 		.4byte	.LASF70
 3606 04c4 01       		.byte	0x1
 3607 04c5 C602     		.2byte	0x2c6
 3608 04c7 77000000 		.4byte	0x77
 3609 04cb 00000000 		.4byte	.LFB43
 3610 04cf 1C000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 115


 3611 04d3 01       		.uleb128 0x1
 3612 04d4 9C       		.byte	0x9c
 3613 04d5 E9040000 		.4byte	0x4e9
 3614 04d9 14       		.uleb128 0x14
 3615 04da D9040000 		.4byte	.LASF51
 3616 04de 01       		.byte	0x1
 3617 04df C602     		.2byte	0x2c6
 3618 04e1 83000000 		.4byte	0x83
 3619 04e5 02       		.uleb128 0x2
 3620 04e6 91       		.byte	0x91
 3621 04e7 74       		.sleb128 -12
 3622 04e8 00       		.byte	0
 3623 04e9 16       		.uleb128 0x16
 3624 04ea EF010000 		.4byte	.LASF68
 3625 04ee 01       		.byte	0x1
 3626 04ef E102     		.2byte	0x2e1
 3627 04f1 00000000 		.4byte	.LFB44
 3628 04f5 24000000 		.4byte	.LFE44-.LFB44
 3629 04f9 01       		.uleb128 0x1
 3630 04fa 9C       		.byte	0x9c
 3631 04fb 1E050000 		.4byte	0x51e
 3632 04ff 14       		.uleb128 0x14
 3633 0500 D9040000 		.4byte	.LASF51
 3634 0504 01       		.byte	0x1
 3635 0505 E102     		.2byte	0x2e1
 3636 0507 83000000 		.4byte	0x83
 3637 050b 02       		.uleb128 0x2
 3638 050c 91       		.byte	0x91
 3639 050d 74       		.sleb128 -12
 3640 050e 14       		.uleb128 0x14
 3641 050f 44050000 		.4byte	.LASF69
 3642 0513 01       		.byte	0x1
 3643 0514 E102     		.2byte	0x2e1
 3644 0516 77000000 		.4byte	0x77
 3645 051a 02       		.uleb128 0x2
 3646 051b 91       		.byte	0x91
 3647 051c 72       		.sleb128 -14
 3648 051d 00       		.byte	0
 3649 051e 15       		.uleb128 0x15
 3650 051f F5030000 		.4byte	.LASF71
 3651 0523 01       		.byte	0x1
 3652 0524 FC02     		.2byte	0x2fc
 3653 0526 6B000000 		.4byte	0x6b
 3654 052a 00000000 		.4byte	.LFB45
 3655 052e 1C000000 		.4byte	.LFE45-.LFB45
 3656 0532 01       		.uleb128 0x1
 3657 0533 9C       		.byte	0x9c
 3658 0534 48050000 		.4byte	0x548
 3659 0538 14       		.uleb128 0x14
 3660 0539 D9040000 		.4byte	.LASF51
 3661 053d 01       		.byte	0x1
 3662 053e FC02     		.2byte	0x2fc
 3663 0540 83000000 		.4byte	0x83
 3664 0544 02       		.uleb128 0x2
 3665 0545 91       		.byte	0x91
 3666 0546 74       		.sleb128 -12
 3667 0547 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 116


 3668 0548 16       		.uleb128 0x16
 3669 0549 25020000 		.4byte	.LASF72
 3670 054d 01       		.byte	0x1
 3671 054e 1703     		.2byte	0x317
 3672 0550 00000000 		.4byte	.LFB46
 3673 0554 24000000 		.4byte	.LFE46-.LFB46
 3674 0558 01       		.uleb128 0x1
 3675 0559 9C       		.byte	0x9c
 3676 055a 7D050000 		.4byte	0x57d
 3677 055e 14       		.uleb128 0x14
 3678 055f D9040000 		.4byte	.LASF51
 3679 0563 01       		.byte	0x1
 3680 0564 1703     		.2byte	0x317
 3681 0566 83000000 		.4byte	0x83
 3682 056a 02       		.uleb128 0x2
 3683 056b 91       		.byte	0x91
 3684 056c 74       		.sleb128 -12
 3685 056d 14       		.uleb128 0x14
 3686 056e D2030000 		.4byte	.LASF73
 3687 0572 01       		.byte	0x1
 3688 0573 1703     		.2byte	0x317
 3689 0575 6B000000 		.4byte	0x6b
 3690 0579 02       		.uleb128 0x2
 3691 057a 91       		.byte	0x91
 3692 057b 73       		.sleb128 -13
 3693 057c 00       		.byte	0
 3694 057d 15       		.uleb128 0x15
 3695 057e 92070000 		.4byte	.LASF74
 3696 0582 01       		.byte	0x1
 3697 0583 3203     		.2byte	0x332
 3698 0585 6B000000 		.4byte	0x6b
 3699 0589 00000000 		.4byte	.LFB47
 3700 058d 1C000000 		.4byte	.LFE47-.LFB47
 3701 0591 01       		.uleb128 0x1
 3702 0592 9C       		.byte	0x9c
 3703 0593 A7050000 		.4byte	0x5a7
 3704 0597 14       		.uleb128 0x14
 3705 0598 49030000 		.4byte	.LASF53
 3706 059c 01       		.byte	0x1
 3707 059d 3203     		.2byte	0x332
 3708 059f 83000000 		.4byte	0x83
 3709 05a3 02       		.uleb128 0x2
 3710 05a4 91       		.byte	0x91
 3711 05a5 74       		.sleb128 -12
 3712 05a6 00       		.byte	0
 3713 05a7 15       		.uleb128 0x15
 3714 05a8 E8020000 		.4byte	.LASF75
 3715 05ac 01       		.byte	0x1
 3716 05ad 4D03     		.2byte	0x34d
 3717 05af 6B000000 		.4byte	0x6b
 3718 05b3 00000000 		.4byte	.LFB48
 3719 05b7 1C000000 		.4byte	.LFE48-.LFB48
 3720 05bb 01       		.uleb128 0x1
 3721 05bc 9C       		.byte	0x9c
 3722 05bd D1050000 		.4byte	0x5d1
 3723 05c1 14       		.uleb128 0x14
 3724 05c2 49030000 		.4byte	.LASF53
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 117


 3725 05c6 01       		.byte	0x1
 3726 05c7 4D03     		.2byte	0x34d
 3727 05c9 83000000 		.4byte	0x83
 3728 05cd 02       		.uleb128 0x2
 3729 05ce 91       		.byte	0x91
 3730 05cf 74       		.sleb128 -12
 3731 05d0 00       		.byte	0
 3732 05d1 15       		.uleb128 0x15
 3733 05d2 D8030000 		.4byte	.LASF76
 3734 05d6 01       		.byte	0x1
 3735 05d7 6903     		.2byte	0x369
 3736 05d9 6B000000 		.4byte	0x6b
 3737 05dd 00000000 		.4byte	.LFB49
 3738 05e1 1C000000 		.4byte	.LFE49-.LFB49
 3739 05e5 01       		.uleb128 0x1
 3740 05e6 9C       		.byte	0x9c
 3741 05e7 FB050000 		.4byte	0x5fb
 3742 05eb 14       		.uleb128 0x14
 3743 05ec 49030000 		.4byte	.LASF53
 3744 05f0 01       		.byte	0x1
 3745 05f1 6903     		.2byte	0x369
 3746 05f3 83000000 		.4byte	0x83
 3747 05f7 02       		.uleb128 0x2
 3748 05f8 91       		.byte	0x91
 3749 05f9 74       		.sleb128 -12
 3750 05fa 00       		.byte	0
 3751 05fb 15       		.uleb128 0x15
 3752 05fc 0B050000 		.4byte	.LASF77
 3753 0600 01       		.byte	0x1
 3754 0601 8503     		.2byte	0x385
 3755 0603 6B000000 		.4byte	0x6b
 3756 0607 00000000 		.4byte	.LFB50
 3757 060b 1C000000 		.4byte	.LFE50-.LFB50
 3758 060f 01       		.uleb128 0x1
 3759 0610 9C       		.byte	0x9c
 3760 0611 25060000 		.4byte	0x625
 3761 0615 14       		.uleb128 0x14
 3762 0616 49030000 		.4byte	.LASF53
 3763 061a 01       		.byte	0x1
 3764 061b 8503     		.2byte	0x385
 3765 061d 83000000 		.4byte	0x83
 3766 0621 02       		.uleb128 0x2
 3767 0622 91       		.byte	0x91
 3768 0623 74       		.sleb128 -12
 3769 0624 00       		.byte	0
 3770 0625 16       		.uleb128 0x16
 3771 0626 97030000 		.4byte	.LASF78
 3772 062a 01       		.byte	0x1
 3773 062b A603     		.2byte	0x3a6
 3774 062d 00000000 		.4byte	.LFB51
 3775 0631 24000000 		.4byte	.LFE51-.LFB51
 3776 0635 01       		.uleb128 0x1
 3777 0636 9C       		.byte	0x9c
 3778 0637 5A060000 		.4byte	0x65a
 3779 063b 14       		.uleb128 0x14
 3780 063c 49030000 		.4byte	.LASF53
 3781 0640 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 118


 3782 0641 A603     		.2byte	0x3a6
 3783 0643 83000000 		.4byte	0x83
 3784 0647 02       		.uleb128 0x2
 3785 0648 91       		.byte	0x91
 3786 0649 74       		.sleb128 -12
 3787 064a 14       		.uleb128 0x14
 3788 064b D2030000 		.4byte	.LASF73
 3789 064f 01       		.byte	0x1
 3790 0650 A603     		.2byte	0x3a6
 3791 0652 6B000000 		.4byte	0x6b
 3792 0656 02       		.uleb128 0x2
 3793 0657 91       		.byte	0x91
 3794 0658 73       		.sleb128 -13
 3795 0659 00       		.byte	0
 3796 065a 16       		.uleb128 0x16
 3797 065b 6B020000 		.4byte	.LASF79
 3798 065f 01       		.byte	0x1
 3799 0660 C203     		.2byte	0x3c2
 3800 0662 00000000 		.4byte	.LFB52
 3801 0666 24000000 		.4byte	.LFE52-.LFB52
 3802 066a 01       		.uleb128 0x1
 3803 066b 9C       		.byte	0x9c
 3804 066c 8F060000 		.4byte	0x68f
 3805 0670 14       		.uleb128 0x14
 3806 0671 49030000 		.4byte	.LASF53
 3807 0675 01       		.byte	0x1
 3808 0676 C203     		.2byte	0x3c2
 3809 0678 83000000 		.4byte	0x83
 3810 067c 02       		.uleb128 0x2
 3811 067d 91       		.byte	0x91
 3812 067e 74       		.sleb128 -12
 3813 067f 14       		.uleb128 0x14
 3814 0680 D2030000 		.4byte	.LASF73
 3815 0684 01       		.byte	0x1
 3816 0685 C203     		.2byte	0x3c2
 3817 0687 6B000000 		.4byte	0x6b
 3818 068b 02       		.uleb128 0x2
 3819 068c 91       		.byte	0x91
 3820 068d 73       		.sleb128 -13
 3821 068e 00       		.byte	0
 3822 068f 16       		.uleb128 0x16
 3823 0690 38070000 		.4byte	.LASF80
 3824 0694 01       		.byte	0x1
 3825 0695 DE03     		.2byte	0x3de
 3826 0697 00000000 		.4byte	.LFB53
 3827 069b 24000000 		.4byte	.LFE53-.LFB53
 3828 069f 01       		.uleb128 0x1
 3829 06a0 9C       		.byte	0x9c
 3830 06a1 C4060000 		.4byte	0x6c4
 3831 06a5 14       		.uleb128 0x14
 3832 06a6 49030000 		.4byte	.LASF53
 3833 06aa 01       		.byte	0x1
 3834 06ab DE03     		.2byte	0x3de
 3835 06ad 83000000 		.4byte	0x83
 3836 06b1 02       		.uleb128 0x2
 3837 06b2 91       		.byte	0x91
 3838 06b3 74       		.sleb128 -12
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 119


 3839 06b4 14       		.uleb128 0x14
 3840 06b5 D2030000 		.4byte	.LASF73
 3841 06b9 01       		.byte	0x1
 3842 06ba DE03     		.2byte	0x3de
 3843 06bc 6B000000 		.4byte	0x6b
 3844 06c0 02       		.uleb128 0x2
 3845 06c1 91       		.byte	0x91
 3846 06c2 73       		.sleb128 -13
 3847 06c3 00       		.byte	0
 3848 06c4 16       		.uleb128 0x16
 3849 06c5 F1060000 		.4byte	.LASF81
 3850 06c9 01       		.byte	0x1
 3851 06ca FB03     		.2byte	0x3fb
 3852 06cc 00000000 		.4byte	.LFB54
 3853 06d0 24000000 		.4byte	.LFE54-.LFB54
 3854 06d4 01       		.uleb128 0x1
 3855 06d5 9C       		.byte	0x9c
 3856 06d6 F9060000 		.4byte	0x6f9
 3857 06da 14       		.uleb128 0x14
 3858 06db 49030000 		.4byte	.LASF53
 3859 06df 01       		.byte	0x1
 3860 06e0 FB03     		.2byte	0x3fb
 3861 06e2 83000000 		.4byte	0x83
 3862 06e6 02       		.uleb128 0x2
 3863 06e7 91       		.byte	0x91
 3864 06e8 74       		.sleb128 -12
 3865 06e9 14       		.uleb128 0x14
 3866 06ea D2030000 		.4byte	.LASF73
 3867 06ee 01       		.byte	0x1
 3868 06ef FB03     		.2byte	0x3fb
 3869 06f1 6B000000 		.4byte	0x6b
 3870 06f5 02       		.uleb128 0x2
 3871 06f6 91       		.byte	0x91
 3872 06f7 73       		.sleb128 -13
 3873 06f8 00       		.byte	0
 3874 06f9 16       		.uleb128 0x16
 3875 06fa F5080000 		.4byte	.LASF82
 3876 06fe 01       		.byte	0x1
 3877 06ff 1704     		.2byte	0x417
 3878 0701 00000000 		.4byte	.LFB55
 3879 0705 24000000 		.4byte	.LFE55-.LFB55
 3880 0709 01       		.uleb128 0x1
 3881 070a 9C       		.byte	0x9c
 3882 070b 2E070000 		.4byte	0x72e
 3883 070f 14       		.uleb128 0x14
 3884 0710 49030000 		.4byte	.LASF53
 3885 0714 01       		.byte	0x1
 3886 0715 1704     		.2byte	0x417
 3887 0717 83000000 		.4byte	0x83
 3888 071b 02       		.uleb128 0x2
 3889 071c 91       		.byte	0x91
 3890 071d 74       		.sleb128 -12
 3891 071e 14       		.uleb128 0x14
 3892 071f D2030000 		.4byte	.LASF73
 3893 0723 01       		.byte	0x1
 3894 0724 1704     		.2byte	0x417
 3895 0726 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 120


 3896 072a 02       		.uleb128 0x2
 3897 072b 91       		.byte	0x91
 3898 072c 73       		.sleb128 -13
 3899 072d 00       		.byte	0
 3900 072e 16       		.uleb128 0x16
 3901 072f 94090000 		.4byte	.LASF83
 3902 0733 01       		.byte	0x1
 3903 0734 3304     		.2byte	0x433
 3904 0736 00000000 		.4byte	.LFB56
 3905 073a 24000000 		.4byte	.LFE56-.LFB56
 3906 073e 01       		.uleb128 0x1
 3907 073f 9C       		.byte	0x9c
 3908 0740 63070000 		.4byte	0x763
 3909 0744 14       		.uleb128 0x14
 3910 0745 D9040000 		.4byte	.LASF51
 3911 0749 01       		.byte	0x1
 3912 074a 3304     		.2byte	0x433
 3913 074c 83000000 		.4byte	0x83
 3914 0750 02       		.uleb128 0x2
 3915 0751 91       		.byte	0x91
 3916 0752 74       		.sleb128 -12
 3917 0753 14       		.uleb128 0x14
 3918 0754 D2030000 		.4byte	.LASF73
 3919 0758 01       		.byte	0x1
 3920 0759 3304     		.2byte	0x433
 3921 075b 6B000000 		.4byte	0x6b
 3922 075f 02       		.uleb128 0x2
 3923 0760 91       		.byte	0x91
 3924 0761 73       		.sleb128 -13
 3925 0762 00       		.byte	0
 3926 0763 17       		.uleb128 0x17
 3927 0764 B9050000 		.4byte	.LASF84
 3928 0768 01       		.byte	0x1
 3929 0769 6104     		.2byte	0x461
 3930 076b 83000000 		.4byte	0x83
 3931 076f 00000000 		.4byte	.LFB57
 3932 0773 58010000 		.4byte	.LFE57-.LFB57
 3933 0777 01       		.uleb128 0x1
 3934 0778 9C       		.byte	0x9c
 3935 0779 D8070000 		.4byte	0x7d8
 3936 077d 14       		.uleb128 0x14
 3937 077e D9040000 		.4byte	.LASF51
 3938 0782 01       		.byte	0x1
 3939 0783 6104     		.2byte	0x461
 3940 0785 83000000 		.4byte	0x83
 3941 0789 02       		.uleb128 0x2
 3942 078a 91       		.byte	0x91
 3943 078b 6C       		.sleb128 -20
 3944 078c 13       		.uleb128 0x13
 3945 078d 49030000 		.4byte	.LASF53
 3946 0791 01       		.byte	0x1
 3947 0792 6304     		.2byte	0x463
 3948 0794 6B000000 		.4byte	0x6b
 3949 0798 02       		.uleb128 0x2
 3950 0799 91       		.byte	0x91
 3951 079a 76       		.sleb128 -10
 3952 079b 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 121


 3953 079c A5050000 		.4byte	.LASF85
 3954 07a0 01       		.byte	0x1
 3955 07a1 6404     		.2byte	0x464
 3956 07a3 6B000000 		.4byte	0x6b
 3957 07a7 02       		.uleb128 0x2
 3958 07a8 91       		.byte	0x91
 3959 07a9 73       		.sleb128 -13
 3960 07aa 13       		.uleb128 0x13
 3961 07ab 4D090000 		.4byte	.LASF86
 3962 07af 01       		.byte	0x1
 3963 07b0 6504     		.2byte	0x465
 3964 07b2 6B000000 		.4byte	0x6b
 3965 07b6 02       		.uleb128 0x2
 3966 07b7 91       		.byte	0x91
 3967 07b8 77       		.sleb128 -9
 3968 07b9 13       		.uleb128 0x13
 3969 07ba 0A090000 		.4byte	.LASF87
 3970 07be 01       		.byte	0x1
 3971 07bf 6704     		.2byte	0x467
 3972 07c1 6B000000 		.4byte	0x6b
 3973 07c5 02       		.uleb128 0x2
 3974 07c6 91       		.byte	0x91
 3975 07c7 75       		.sleb128 -11
 3976 07c8 13       		.uleb128 0x13
 3977 07c9 42040000 		.4byte	.LASF88
 3978 07cd 01       		.byte	0x1
 3979 07ce 6804     		.2byte	0x468
 3980 07d0 6B000000 		.4byte	0x6b
 3981 07d4 02       		.uleb128 0x2
 3982 07d5 91       		.byte	0x91
 3983 07d6 74       		.sleb128 -12
 3984 07d7 00       		.byte	0
 3985 07d8 17       		.uleb128 0x17
 3986 07d9 A60A0000 		.4byte	.LASF89
 3987 07dd 01       		.byte	0x1
 3988 07de BB04     		.2byte	0x4bb
 3989 07e0 83000000 		.4byte	0x83
 3990 07e4 00000000 		.4byte	.LFB58
 3991 07e8 58000000 		.4byte	.LFE58-.LFB58
 3992 07ec 01       		.uleb128 0x1
 3993 07ed 9C       		.byte	0x9c
 3994 07ee 2F080000 		.4byte	0x82f
 3995 07f2 14       		.uleb128 0x14
 3996 07f3 49030000 		.4byte	.LASF53
 3997 07f7 01       		.byte	0x1
 3998 07f8 BB04     		.2byte	0x4bb
 3999 07fa 83000000 		.4byte	0x83
 4000 07fe 02       		.uleb128 0x2
 4001 07ff 91       		.byte	0x91
 4002 0800 64       		.sleb128 -28
 4003 0801 13       		.uleb128 0x13
 4004 0802 63050000 		.4byte	.LASF90
 4005 0806 01       		.byte	0x1
 4006 0807 BD04     		.2byte	0x4bd
 4007 0809 83000000 		.4byte	0x83
 4008 080d 02       		.uleb128 0x2
 4009 080e 91       		.byte	0x91
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 122


 4010 080f 74       		.sleb128 -12
 4011 0810 13       		.uleb128 0x13
 4012 0811 14010000 		.4byte	.LASF91
 4013 0815 01       		.byte	0x1
 4014 0816 BE04     		.2byte	0x4be
 4015 0818 83000000 		.4byte	0x83
 4016 081c 02       		.uleb128 0x2
 4017 081d 91       		.byte	0x91
 4018 081e 6C       		.sleb128 -20
 4019 081f 13       		.uleb128 0x13
 4020 0820 FD090000 		.4byte	.LASF92
 4021 0824 01       		.byte	0x1
 4022 0825 BF04     		.2byte	0x4bf
 4023 0827 83000000 		.4byte	0x83
 4024 082b 02       		.uleb128 0x2
 4025 082c 91       		.byte	0x91
 4026 082d 70       		.sleb128 -16
 4027 082e 00       		.byte	0
 4028 082f 17       		.uleb128 0x17
 4029 0830 6E040000 		.4byte	.LASF93
 4030 0834 01       		.byte	0x1
 4031 0835 E904     		.2byte	0x4e9
 4032 0837 83000000 		.4byte	0x83
 4033 083b 00000000 		.4byte	.LFB59
 4034 083f 36000000 		.4byte	.LFE59-.LFB59
 4035 0843 01       		.uleb128 0x1
 4036 0844 9C       		.byte	0x9c
 4037 0845 66080000 		.4byte	0x866
 4038 0849 12       		.uleb128 0x12
 4039 084a 6900     		.ascii	"i\000"
 4040 084c 01       		.byte	0x1
 4041 084d EC04     		.2byte	0x4ec
 4042 084f 83000000 		.4byte	0x83
 4043 0853 02       		.uleb128 0x2
 4044 0854 91       		.byte	0x91
 4045 0855 74       		.sleb128 -12
 4046 0856 13       		.uleb128 0x13
 4047 0857 FD090000 		.4byte	.LASF92
 4048 085b 01       		.byte	0x1
 4049 085c ED04     		.2byte	0x4ed
 4050 085e 83000000 		.4byte	0x83
 4051 0862 02       		.uleb128 0x2
 4052 0863 91       		.byte	0x91
 4053 0864 70       		.sleb128 -16
 4054 0865 00       		.byte	0
 4055 0866 11       		.uleb128 0x11
 4056 0867 F0040000 		.4byte	.LASF94
 4057 086b 01       		.byte	0x1
 4058 086c 1805     		.2byte	0x518
 4059 086e 00000000 		.4byte	.LFB60
 4060 0872 70000000 		.4byte	.LFE60-.LFB60
 4061 0876 01       		.uleb128 0x1
 4062 0877 9C       		.byte	0x9c
 4063 0878 AA080000 		.4byte	0x8aa
 4064 087c 14       		.uleb128 0x14
 4065 087d 49030000 		.4byte	.LASF53
 4066 0881 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 123


 4067 0882 1805     		.2byte	0x518
 4068 0884 83000000 		.4byte	0x83
 4069 0888 02       		.uleb128 0x2
 4070 0889 91       		.byte	0x91
 4071 088a 6C       		.sleb128 -20
 4072 088b 13       		.uleb128 0x13
 4073 088c 63050000 		.4byte	.LASF90
 4074 0890 01       		.byte	0x1
 4075 0891 1B05     		.2byte	0x51b
 4076 0893 6B000000 		.4byte	0x6b
 4077 0897 02       		.uleb128 0x2
 4078 0898 91       		.byte	0x91
 4079 0899 77       		.sleb128 -9
 4080 089a 13       		.uleb128 0x13
 4081 089b 14010000 		.4byte	.LASF91
 4082 089f 01       		.byte	0x1
 4083 08a0 1C05     		.2byte	0x51c
 4084 08a2 6B000000 		.4byte	0x6b
 4085 08a6 02       		.uleb128 0x2
 4086 08a7 91       		.byte	0x91
 4087 08a8 76       		.sleb128 -10
 4088 08a9 00       		.byte	0
 4089 08aa 11       		.uleb128 0x11
 4090 08ab B4000000 		.4byte	.LASF95
 4091 08af 01       		.byte	0x1
 4092 08b0 4305     		.2byte	0x543
 4093 08b2 00000000 		.4byte	.LFB61
 4094 08b6 70000000 		.4byte	.LFE61-.LFB61
 4095 08ba 01       		.uleb128 0x1
 4096 08bb 9C       		.byte	0x9c
 4097 08bc EE080000 		.4byte	0x8ee
 4098 08c0 14       		.uleb128 0x14
 4099 08c1 49030000 		.4byte	.LASF53
 4100 08c5 01       		.byte	0x1
 4101 08c6 4305     		.2byte	0x543
 4102 08c8 83000000 		.4byte	0x83
 4103 08cc 02       		.uleb128 0x2
 4104 08cd 91       		.byte	0x91
 4105 08ce 6C       		.sleb128 -20
 4106 08cf 13       		.uleb128 0x13
 4107 08d0 63050000 		.4byte	.LASF90
 4108 08d4 01       		.byte	0x1
 4109 08d5 4505     		.2byte	0x545
 4110 08d7 6B000000 		.4byte	0x6b
 4111 08db 02       		.uleb128 0x2
 4112 08dc 91       		.byte	0x91
 4113 08dd 77       		.sleb128 -9
 4114 08de 13       		.uleb128 0x13
 4115 08df 14010000 		.4byte	.LASF91
 4116 08e3 01       		.byte	0x1
 4117 08e4 4605     		.2byte	0x546
 4118 08e6 6B000000 		.4byte	0x6b
 4119 08ea 02       		.uleb128 0x2
 4120 08eb 91       		.byte	0x91
 4121 08ec 76       		.sleb128 -10
 4122 08ed 00       		.byte	0
 4123 08ee 15       		.uleb128 0x15
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 124


 4124 08ef 1C080000 		.4byte	.LASF96
 4125 08f3 01       		.byte	0x1
 4126 08f4 7505     		.2byte	0x575
 4127 08f6 6B000000 		.4byte	0x6b
 4128 08fa 00000000 		.4byte	.LFB62
 4129 08fe B8000000 		.4byte	.LFE62-.LFB62
 4130 0902 01       		.uleb128 0x1
 4131 0903 9C       		.byte	0x9c
 4132 0904 70090000 		.4byte	0x970
 4133 0908 14       		.uleb128 0x14
 4134 0909 14040000 		.4byte	.LASF97
 4135 090d 01       		.byte	0x1
 4136 090e 7505     		.2byte	0x575
 4137 0910 6B000000 		.4byte	0x6b
 4138 0914 02       		.uleb128 0x2
 4139 0915 91       		.byte	0x91
 4140 0916 67       		.sleb128 -25
 4141 0917 14       		.uleb128 0x14
 4142 0918 C4020000 		.4byte	.LASF98
 4143 091c 01       		.byte	0x1
 4144 091d 7505     		.2byte	0x575
 4145 091f 6B000000 		.4byte	0x6b
 4146 0923 02       		.uleb128 0x2
 4147 0924 91       		.byte	0x91
 4148 0925 66       		.sleb128 -26
 4149 0926 14       		.uleb128 0x14
 4150 0927 0A090000 		.4byte	.LASF87
 4151 092b 01       		.byte	0x1
 4152 092c 7505     		.2byte	0x575
 4153 092e 6B000000 		.4byte	0x6b
 4154 0932 02       		.uleb128 0x2
 4155 0933 91       		.byte	0x91
 4156 0934 65       		.sleb128 -27
 4157 0935 12       		.uleb128 0x12
 4158 0936 6900     		.ascii	"i\000"
 4159 0938 01       		.byte	0x1
 4160 0939 7805     		.2byte	0x578
 4161 093b 6B000000 		.4byte	0x6b
 4162 093f 02       		.uleb128 0x2
 4163 0940 91       		.byte	0x91
 4164 0941 6F       		.sleb128 -17
 4165 0942 13       		.uleb128 0x13
 4166 0943 A8080000 		.4byte	.LASF99
 4167 0947 01       		.byte	0x1
 4168 0948 8205     		.2byte	0x582
 4169 094a 6B000000 		.4byte	0x6b
 4170 094e 02       		.uleb128 0x2
 4171 094f 91       		.byte	0x91
 4172 0950 6E       		.sleb128 -18
 4173 0951 13       		.uleb128 0x13
 4174 0952 17080000 		.4byte	.LASF100
 4175 0956 01       		.byte	0x1
 4176 0957 8405     		.2byte	0x584
 4177 0959 6B000000 		.4byte	0x6b
 4178 095d 02       		.uleb128 0x2
 4179 095e 91       		.byte	0x91
 4180 095f 6D       		.sleb128 -19
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 125


 4181 0960 13       		.uleb128 0x13
 4182 0961 2A070000 		.4byte	.LASF101
 4183 0965 01       		.byte	0x1
 4184 0966 8505     		.2byte	0x585
 4185 0968 E0010000 		.4byte	0x1e0
 4186 096c 02       		.uleb128 0x2
 4187 096d 91       		.byte	0x91
 4188 096e 68       		.sleb128 -24
 4189 096f 00       		.byte	0
 4190 0970 17       		.uleb128 0x17
 4191 0971 9E060000 		.4byte	.LASF102
 4192 0975 01       		.byte	0x1
 4193 0976 1406     		.2byte	0x614
 4194 0978 6B000000 		.4byte	0x6b
 4195 097c 00000000 		.4byte	.LFB63
 4196 0980 94010000 		.4byte	.LFE63-.LFB63
 4197 0984 01       		.uleb128 0x1
 4198 0985 9C       		.byte	0x9c
 4199 0986 240A0000 		.4byte	0xa24
 4200 098a 14       		.uleb128 0x14
 4201 098b A8080000 		.4byte	.LASF99
 4202 098f 01       		.byte	0x1
 4203 0990 1406     		.2byte	0x614
 4204 0992 6B000000 		.4byte	0x6b
 4205 0996 02       		.uleb128 0x2
 4206 0997 91       		.byte	0x91
 4207 0998 5F       		.sleb128 -33
 4208 0999 14       		.uleb128 0x14
 4209 099a 14040000 		.4byte	.LASF97
 4210 099e 01       		.byte	0x1
 4211 099f 1406     		.2byte	0x614
 4212 09a1 6B000000 		.4byte	0x6b
 4213 09a5 02       		.uleb128 0x2
 4214 09a6 91       		.byte	0x91
 4215 09a7 5E       		.sleb128 -34
 4216 09a8 14       		.uleb128 0x14
 4217 09a9 C4020000 		.4byte	.LASF98
 4218 09ad 01       		.byte	0x1
 4219 09ae 1506     		.2byte	0x615
 4220 09b0 6B000000 		.4byte	0x6b
 4221 09b4 02       		.uleb128 0x2
 4222 09b5 91       		.byte	0x91
 4223 09b6 5D       		.sleb128 -35
 4224 09b7 14       		.uleb128 0x14
 4225 09b8 58050000 		.4byte	.LASF103
 4226 09bc 01       		.byte	0x1
 4227 09bd 1506     		.2byte	0x615
 4228 09bf 77000000 		.4byte	0x77
 4229 09c3 02       		.uleb128 0x2
 4230 09c4 91       		.byte	0x91
 4231 09c5 5A       		.sleb128 -38
 4232 09c6 14       		.uleb128 0x14
 4233 09c7 D4080000 		.4byte	.LASF61
 4234 09cb 01       		.byte	0x1
 4235 09cc 1506     		.2byte	0x615
 4236 09ce 6B000000 		.4byte	0x6b
 4237 09d2 02       		.uleb128 0x2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 126


 4238 09d3 91       		.byte	0x91
 4239 09d4 00       		.sleb128 0
 4240 09d5 13       		.uleb128 0x13
 4241 09d6 6C050000 		.4byte	.LASF104
 4242 09da 01       		.byte	0x1
 4243 09db 1F06     		.2byte	0x61f
 4244 09dd 240A0000 		.4byte	0xa24
 4245 09e1 05       		.uleb128 0x5
 4246 09e2 03       		.byte	0x3
 4247 09e3 38000000 		.4byte	CapSense_centroid.5444
 4248 09e7 13       		.uleb128 0x13
 4249 09e8 0F0B0000 		.4byte	.LASF105
 4250 09ec 01       		.byte	0x1
 4251 09ed 2606     		.2byte	0x626
 4252 09ef 6B000000 		.4byte	0x6b
 4253 09f3 02       		.uleb128 0x2
 4254 09f4 91       		.byte	0x91
 4255 09f5 63       		.sleb128 -29
 4256 09f6 13       		.uleb128 0x13
 4257 09f7 AE070000 		.4byte	.LASF106
 4258 09fb 01       		.byte	0x1
 4259 09fc 2706     		.2byte	0x627
 4260 09fe 83000000 		.4byte	0x83
 4261 0a02 02       		.uleb128 0x2
 4262 0a03 91       		.byte	0x91
 4263 0a04 64       		.sleb128 -28
 4264 0a05 13       		.uleb128 0x13
 4265 0a06 7A080000 		.4byte	.LASF107
 4266 0a0a 01       		.byte	0x1
 4267 0a0b 2806     		.2byte	0x628
 4268 0a0d 9B000000 		.4byte	0x9b
 4269 0a11 02       		.uleb128 0x2
 4270 0a12 91       		.byte	0x91
 4271 0a13 6C       		.sleb128 -20
 4272 0a14 13       		.uleb128 0x13
 4273 0a15 2A070000 		.4byte	.LASF101
 4274 0a19 01       		.byte	0x1
 4275 0a1a 2A06     		.2byte	0x62a
 4276 0a1c E0010000 		.4byte	0x1e0
 4277 0a20 02       		.uleb128 0x2
 4278 0a21 91       		.byte	0x91
 4279 0a22 68       		.sleb128 -24
 4280 0a23 00       		.byte	0
 4281 0a24 18       		.uleb128 0x18
 4282 0a25 6B000000 		.4byte	0x6b
 4283 0a29 340A0000 		.4byte	0xa34
 4284 0a2d 19       		.uleb128 0x19
 4285 0a2e BC000000 		.4byte	0xbc
 4286 0a32 02       		.byte	0x2
 4287 0a33 00       		.byte	0
 4288 0a34 17       		.uleb128 0x17
 4289 0a35 D1070000 		.4byte	.LASF108
 4290 0a39 01       		.byte	0x1
 4291 0a3a E706     		.2byte	0x6e7
 4292 0a3c 77000000 		.4byte	0x77
 4293 0a40 00000000 		.4byte	.LFB64
 4294 0a44 AC000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 127


 4295 0a48 01       		.uleb128 0x1
 4296 0a49 9C       		.byte	0x9c
 4297 0a4a 9A0A0000 		.4byte	0xa9a
 4298 0a4e 14       		.uleb128 0x14
 4299 0a4f 49030000 		.4byte	.LASF53
 4300 0a53 01       		.byte	0x1
 4301 0a54 E706     		.2byte	0x6e7
 4302 0a56 83000000 		.4byte	0x83
 4303 0a5a 02       		.uleb128 0x2
 4304 0a5b 91       		.byte	0x91
 4305 0a5c 64       		.sleb128 -28
 4306 0a5d 13       		.uleb128 0x13
 4307 0a5e A8080000 		.4byte	.LASF99
 4308 0a62 01       		.byte	0x1
 4309 0a63 FA06     		.2byte	0x6fa
 4310 0a65 6B000000 		.4byte	0x6b
 4311 0a69 02       		.uleb128 0x2
 4312 0a6a 91       		.byte	0x91
 4313 0a6b 6B       		.sleb128 -21
 4314 0a6c 13       		.uleb128 0x13
 4315 0a6d 0F0B0000 		.4byte	.LASF105
 4316 0a71 01       		.byte	0x1
 4317 0a72 FB06     		.2byte	0x6fb
 4318 0a74 77000000 		.4byte	0x77
 4319 0a78 02       		.uleb128 0x2
 4320 0a79 91       		.byte	0x91
 4321 0a7a 6E       		.sleb128 -18
 4322 0a7b 13       		.uleb128 0x13
 4323 0a7c 14040000 		.4byte	.LASF97
 4324 0a80 01       		.byte	0x1
 4325 0a81 FC06     		.2byte	0x6fc
 4326 0a83 6B000000 		.4byte	0x6b
 4327 0a87 02       		.uleb128 0x2
 4328 0a88 91       		.byte	0x91
 4329 0a89 6D       		.sleb128 -19
 4330 0a8a 13       		.uleb128 0x13
 4331 0a8b C4020000 		.4byte	.LASF98
 4332 0a8f 01       		.byte	0x1
 4333 0a90 FD06     		.2byte	0x6fd
 4334 0a92 6B000000 		.4byte	0x6b
 4335 0a96 02       		.uleb128 0x2
 4336 0a97 91       		.byte	0x91
 4337 0a98 6C       		.sleb128 -20
 4338 0a99 00       		.byte	0
 4339 0a9a 17       		.uleb128 0x17
 4340 0a9b 460A0000 		.4byte	.LASF109
 4341 0a9f 01       		.byte	0x1
 4342 0aa0 B207     		.2byte	0x7b2
 4343 0aa2 77000000 		.4byte	0x77
 4344 0aa6 00000000 		.4byte	.LFB65
 4345 0aaa 70010000 		.4byte	.LFE65-.LFB65
 4346 0aae 01       		.uleb128 0x1
 4347 0aaf 9C       		.byte	0x9c
 4348 0ab0 2D0B0000 		.4byte	0xb2d
 4349 0ab4 14       		.uleb128 0x14
 4350 0ab5 49030000 		.4byte	.LASF53
 4351 0ab9 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 128


 4352 0aba B207     		.2byte	0x7b2
 4353 0abc 83000000 		.4byte	0x83
 4354 0ac0 02       		.uleb128 0x2
 4355 0ac1 91       		.byte	0x91
 4356 0ac2 64       		.sleb128 -28
 4357 0ac3 13       		.uleb128 0x13
 4358 0ac4 EB000000 		.4byte	.LASF110
 4359 0ac8 01       		.byte	0x1
 4360 0ac9 B507     		.2byte	0x7b5
 4361 0acb 6B000000 		.4byte	0x6b
 4362 0acf 02       		.uleb128 0x2
 4363 0ad0 91       		.byte	0x91
 4364 0ad1 68       		.sleb128 -24
 4365 0ad2 13       		.uleb128 0x13
 4366 0ad3 1B070000 		.4byte	.LASF111
 4367 0ad7 01       		.byte	0x1
 4368 0ad8 B607     		.2byte	0x7b6
 4369 0ada 6B000000 		.4byte	0x6b
 4370 0ade 02       		.uleb128 0x2
 4371 0adf 91       		.byte	0x91
 4372 0ae0 6D       		.sleb128 -19
 4373 0ae1 13       		.uleb128 0x13
 4374 0ae2 D9020000 		.4byte	.LASF112
 4375 0ae6 01       		.byte	0x1
 4376 0ae7 B707     		.2byte	0x7b7
 4377 0ae9 6B000000 		.4byte	0x6b
 4378 0aed 02       		.uleb128 0x2
 4379 0aee 91       		.byte	0x91
 4380 0aef 6C       		.sleb128 -20
 4381 0af0 13       		.uleb128 0x13
 4382 0af1 A8080000 		.4byte	.LASF99
 4383 0af5 01       		.byte	0x1
 4384 0af6 C107     		.2byte	0x7c1
 4385 0af8 6B000000 		.4byte	0x6b
 4386 0afc 02       		.uleb128 0x2
 4387 0afd 91       		.byte	0x91
 4388 0afe 69       		.sleb128 -23
 4389 0aff 13       		.uleb128 0x13
 4390 0b00 0F0B0000 		.4byte	.LASF105
 4391 0b04 01       		.byte	0x1
 4392 0b05 C207     		.2byte	0x7c2
 4393 0b07 77000000 		.4byte	0x77
 4394 0b0b 02       		.uleb128 0x2
 4395 0b0c 91       		.byte	0x91
 4396 0b0d 6E       		.sleb128 -18
 4397 0b0e 13       		.uleb128 0x13
 4398 0b0f 14040000 		.4byte	.LASF97
 4399 0b13 01       		.byte	0x1
 4400 0b14 C307     		.2byte	0x7c3
 4401 0b16 6B000000 		.4byte	0x6b
 4402 0b1a 02       		.uleb128 0x2
 4403 0b1b 91       		.byte	0x91
 4404 0b1c 6B       		.sleb128 -21
 4405 0b1d 13       		.uleb128 0x13
 4406 0b1e C4020000 		.4byte	.LASF98
 4407 0b22 01       		.byte	0x1
 4408 0b23 C407     		.2byte	0x7c4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 129


 4409 0b25 6B000000 		.4byte	0x6b
 4410 0b29 02       		.uleb128 0x2
 4411 0b2a 91       		.byte	0x91
 4412 0b2b 6A       		.sleb128 -22
 4413 0b2c 00       		.byte	0
 4414 0b2d 15       		.uleb128 0x15
 4415 0b2e 730A0000 		.4byte	.LASF113
 4416 0b32 01       		.byte	0x1
 4417 0b33 5F09     		.2byte	0x95f
 4418 0b35 77000000 		.4byte	0x77
 4419 0b39 00000000 		.4byte	.LFB66
 4420 0b3d 76000000 		.4byte	.LFE66-.LFB66
 4421 0b41 01       		.uleb128 0x1
 4422 0b42 9C       		.byte	0x9c
 4423 0b43 810B0000 		.4byte	0xb81
 4424 0b47 1A       		.uleb128 0x1a
 4425 0b48 783100   		.ascii	"x1\000"
 4426 0b4b 01       		.byte	0x1
 4427 0b4c 5F09     		.2byte	0x95f
 4428 0b4e 77000000 		.4byte	0x77
 4429 0b52 02       		.uleb128 0x2
 4430 0b53 91       		.byte	0x91
 4431 0b54 66       		.sleb128 -26
 4432 0b55 1A       		.uleb128 0x1a
 4433 0b56 783200   		.ascii	"x2\000"
 4434 0b59 01       		.byte	0x1
 4435 0b5a 5F09     		.2byte	0x95f
 4436 0b5c 77000000 		.4byte	0x77
 4437 0b60 02       		.uleb128 0x2
 4438 0b61 91       		.byte	0x91
 4439 0b62 64       		.sleb128 -28
 4440 0b63 1A       		.uleb128 0x1a
 4441 0b64 783300   		.ascii	"x3\000"
 4442 0b67 01       		.byte	0x1
 4443 0b68 5F09     		.2byte	0x95f
 4444 0b6a 77000000 		.4byte	0x77
 4445 0b6e 02       		.uleb128 0x2
 4446 0b6f 91       		.byte	0x91
 4447 0b70 62       		.sleb128 -30
 4448 0b71 12       		.uleb128 0x12
 4449 0b72 746D7000 		.ascii	"tmp\000"
 4450 0b76 01       		.byte	0x1
 4451 0b77 6109     		.2byte	0x961
 4452 0b79 77000000 		.4byte	0x77
 4453 0b7d 02       		.uleb128 0x2
 4454 0b7e 91       		.byte	0x91
 4455 0b7f 6E       		.sleb128 -18
 4456 0b80 00       		.byte	0
 4457 0b81 15       		.uleb128 0x15
 4458 0b82 1B000000 		.4byte	.LASF114
 4459 0b86 01       		.byte	0x1
 4460 0b87 D709     		.2byte	0x9d7
 4461 0b89 77000000 		.4byte	0x77
 4462 0b8d 00000000 		.4byte	.LFB67
 4463 0b91 3C000000 		.4byte	.LFE67-.LFB67
 4464 0b95 01       		.uleb128 0x1
 4465 0b96 9C       		.byte	0x9c
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 130


 4466 0b97 C70B0000 		.4byte	0xbc7
 4467 0b9b 1A       		.uleb128 0x1a
 4468 0b9c 783100   		.ascii	"x1\000"
 4469 0b9f 01       		.byte	0x1
 4470 0ba0 D709     		.2byte	0x9d7
 4471 0ba2 77000000 		.4byte	0x77
 4472 0ba6 02       		.uleb128 0x2
 4473 0ba7 91       		.byte	0x91
 4474 0ba8 6E       		.sleb128 -18
 4475 0ba9 1A       		.uleb128 0x1a
 4476 0baa 783200   		.ascii	"x2\000"
 4477 0bad 01       		.byte	0x1
 4478 0bae D709     		.2byte	0x9d7
 4479 0bb0 77000000 		.4byte	0x77
 4480 0bb4 02       		.uleb128 0x2
 4481 0bb5 91       		.byte	0x91
 4482 0bb6 6C       		.sleb128 -20
 4483 0bb7 12       		.uleb128 0x12
 4484 0bb8 746D7000 		.ascii	"tmp\000"
 4485 0bbc 01       		.byte	0x1
 4486 0bbd D909     		.2byte	0x9d9
 4487 0bbf 83000000 		.4byte	0x83
 4488 0bc3 02       		.uleb128 0x2
 4489 0bc4 91       		.byte	0x91
 4490 0bc5 74       		.sleb128 -12
 4491 0bc6 00       		.byte	0
 4492 0bc7 15       		.uleb128 0x15
 4493 0bc8 8C050000 		.4byte	.LASF115
 4494 0bcc 01       		.byte	0x1
 4495 0bcd C00A     		.2byte	0xac0
 4496 0bcf 83000000 		.4byte	0x83
 4497 0bd3 00000000 		.4byte	.LFB68
 4498 0bd7 1C000000 		.4byte	.LFE68-.LFB68
 4499 0bdb 01       		.uleb128 0x1
 4500 0bdc 9C       		.byte	0x9c
 4501 0bdd F10B0000 		.4byte	0xbf1
 4502 0be1 14       		.uleb128 0x14
 4503 0be2 D9040000 		.4byte	.LASF51
 4504 0be6 01       		.byte	0x1
 4505 0be7 C00A     		.2byte	0xac0
 4506 0be9 83000000 		.4byte	0x83
 4507 0bed 02       		.uleb128 0x2
 4508 0bee 91       		.byte	0x91
 4509 0bef 74       		.sleb128 -12
 4510 0bf0 00       		.byte	0
 4511 0bf1 15       		.uleb128 0x15
 4512 0bf2 D4060000 		.4byte	.LASF116
 4513 0bf6 01       		.byte	0x1
 4514 0bf7 DA0A     		.2byte	0xada
 4515 0bf9 6B000000 		.4byte	0x6b
 4516 0bfd 00000000 		.4byte	.LFB69
 4517 0c01 1C000000 		.4byte	.LFE69-.LFB69
 4518 0c05 01       		.uleb128 0x1
 4519 0c06 9C       		.byte	0x9c
 4520 0c07 1B0C0000 		.4byte	0xc1b
 4521 0c0b 14       		.uleb128 0x14
 4522 0c0c D9040000 		.4byte	.LASF51
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 131


 4523 0c10 01       		.byte	0x1
 4524 0c11 DA0A     		.2byte	0xada
 4525 0c13 83000000 		.4byte	0x83
 4526 0c17 02       		.uleb128 0x2
 4527 0c18 91       		.byte	0x91
 4528 0c19 74       		.sleb128 -12
 4529 0c1a 00       		.byte	0
 4530 0c1b 15       		.uleb128 0x15
 4531 0c1c 910A0000 		.4byte	.LASF117
 4532 0c20 01       		.byte	0x1
 4533 0c21 F40A     		.2byte	0xaf4
 4534 0c23 6B000000 		.4byte	0x6b
 4535 0c27 00000000 		.4byte	.LFB70
 4536 0c2b 1C000000 		.4byte	.LFE70-.LFB70
 4537 0c2f 01       		.uleb128 0x1
 4538 0c30 9C       		.byte	0x9c
 4539 0c31 450C0000 		.4byte	0xc45
 4540 0c35 14       		.uleb128 0x14
 4541 0c36 49030000 		.4byte	.LASF53
 4542 0c3a 01       		.byte	0x1
 4543 0c3b F40A     		.2byte	0xaf4
 4544 0c3d 83000000 		.4byte	0x83
 4545 0c41 02       		.uleb128 0x2
 4546 0c42 91       		.byte	0x91
 4547 0c43 74       		.sleb128 -12
 4548 0c44 00       		.byte	0
 4549 0c45 1B       		.uleb128 0x1b
 4550 0c46 42080000 		.4byte	.LASF118
 4551 0c4a 01       		.byte	0x1
 4552 0c4b 0E0B     		.2byte	0xb0e
 4553 0c4d 00000000 		.4byte	.LFB71
 4554 0c51 14000000 		.4byte	.LFE71-.LFB71
 4555 0c55 01       		.uleb128 0x1
 4556 0c56 9C       		.byte	0x9c
 4557 0c57 1B       		.uleb128 0x1b
 4558 0c58 B3030000 		.4byte	.LASF119
 4559 0c5c 01       		.byte	0x1
 4560 0c5d 270B     		.2byte	0xb27
 4561 0c5f 00000000 		.4byte	.LFB72
 4562 0c63 14000000 		.4byte	.LFE72-.LFB72
 4563 0c67 01       		.uleb128 0x1
 4564 0c68 9C       		.byte	0x9c
 4565 0c69 18       		.uleb128 0x18
 4566 0c6a 6B000000 		.4byte	0x6b
 4567 0c6e 790C0000 		.4byte	0xc79
 4568 0c72 19       		.uleb128 0x19
 4569 0c73 BC000000 		.4byte	0xbc
 4570 0c77 04       		.byte	0x4
 4571 0c78 00       		.byte	0
 4572 0c79 0F       		.uleb128 0xf
 4573 0c7a 2F000000 		.4byte	.LASF120
 4574 0c7e 01       		.byte	0x1
 4575 0c7f 55       		.byte	0x55
 4576 0c80 690C0000 		.4byte	0xc69
 4577 0c84 05       		.uleb128 0x5
 4578 0c85 03       		.byte	0x3
 4579 0c86 30000000 		.4byte	CapSense_debounceCounter
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 132


 4580 0c8a 18       		.uleb128 0x18
 4581 0c8b 77000000 		.4byte	0x77
 4582 0c8f 9A0C0000 		.4byte	0xc9a
 4583 0c93 19       		.uleb128 0x19
 4584 0c94 BC000000 		.4byte	0xbc
 4585 0c98 00       		.byte	0
 4586 0c99 00       		.byte	0
 4587 0c9a 0F       		.uleb128 0xf
 4588 0c9b C0090000 		.4byte	.LASF121
 4589 0c9f 01       		.byte	0x1
 4590 0ca0 69       		.byte	0x69
 4591 0ca1 AB0C0000 		.4byte	0xcab
 4592 0ca5 05       		.uleb128 0x5
 4593 0ca6 03       		.byte	0x3
 4594 0ca7 10000000 		.4byte	CapSense_centroidMult
 4595 0cab 08       		.uleb128 0x8
 4596 0cac 8A0C0000 		.4byte	0xc8a
 4597 0cb0 18       		.uleb128 0x18
 4598 0cb1 6B000000 		.4byte	0x6b
 4599 0cb5 C00C0000 		.4byte	0xcc0
 4600 0cb9 19       		.uleb128 0x19
 4601 0cba BC000000 		.4byte	0xbc
 4602 0cbe 00       		.byte	0
 4603 0cbf 00       		.byte	0
 4604 0cc0 0F       		.uleb128 0xf
 4605 0cc1 50030000 		.4byte	.LASF122
 4606 0cc5 01       		.byte	0x1
 4607 0cc6 6D       		.byte	0x6d
 4608 0cc7 B00C0000 		.4byte	0xcb0
 4609 0ccb 05       		.uleb128 0x5
 4610 0ccc 03       		.byte	0x3
 4611 0ccd 14000000 		.4byte	CapSense_posFiltersMask
 4612 0cd1 0F       		.uleb128 0xf
 4613 0cd2 75010000 		.4byte	.LASF123
 4614 0cd6 01       		.byte	0x1
 4615 0cd7 71       		.byte	0x71
 4616 0cd8 240A0000 		.4byte	0xa24
 4617 0cdc 05       		.uleb128 0x5
 4618 0cdd 03       		.byte	0x3
 4619 0cde 18000000 		.4byte	CapSense_posFiltersData
 4620 0ce2 18       		.uleb128 0x18
 4621 0ce3 77000000 		.4byte	0x77
 4622 0ce7 F20C0000 		.4byte	0xcf2
 4623 0ceb 19       		.uleb128 0x19
 4624 0cec BC000000 		.4byte	0xbc
 4625 0cf0 08       		.byte	0x8
 4626 0cf1 00       		.byte	0
 4627 0cf2 1C       		.uleb128 0x1c
 4628 0cf3 C1060000 		.4byte	.LASF124
 4629 0cf7 01       		.byte	0x1
 4630 0cf8 2C       		.byte	0x2c
 4631 0cf9 E20C0000 		.4byte	0xce2
 4632 0cfd 18       		.uleb128 0x18
 4633 0cfe 6B000000 		.4byte	0x6b
 4634 0d02 0D0D0000 		.4byte	0xd0d
 4635 0d06 19       		.uleb128 0x19
 4636 0d07 BC000000 		.4byte	0xbc
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 133


 4637 0d0b 01       		.byte	0x1
 4638 0d0c 00       		.byte	0
 4639 0d0d 1C       		.uleb128 0x1c
 4640 0d0e 2F030000 		.4byte	.LASF125
 4641 0d12 01       		.byte	0x1
 4642 0d13 2D       		.byte	0x2d
 4643 0d14 FD0C0000 		.4byte	0xcfd
 4644 0d18 18       		.uleb128 0x18
 4645 0d19 6B000000 		.4byte	0x6b
 4646 0d1d 280D0000 		.4byte	0xd28
 4647 0d21 19       		.uleb128 0x19
 4648 0d22 BC000000 		.4byte	0xbc
 4649 0d26 08       		.byte	0x8
 4650 0d27 00       		.byte	0
 4651 0d28 1C       		.uleb128 0x1c
 4652 0d29 81030000 		.4byte	.LASF126
 4653 0d2d 01       		.byte	0x1
 4654 0d2e 2E       		.byte	0x2e
 4655 0d2f 330D0000 		.4byte	0xd33
 4656 0d33 08       		.uleb128 0x8
 4657 0d34 180D0000 		.4byte	0xd18
 4658 0d38 1D       		.uleb128 0x1d
 4659 0d39 90080000 		.4byte	.LASF127
 4660 0d3d 01       		.byte	0x1
 4661 0d3e 34       		.byte	0x34
 4662 0d3f E20C0000 		.4byte	0xce2
 4663 0d43 05       		.uleb128 0x5
 4664 0d44 03       		.byte	0x3
 4665 0d45 00000000 		.4byte	CapSense_sensorBaseline
 4666 0d49 1D       		.uleb128 0x1d
 4667 0d4a 00000000 		.4byte	.LASF128
 4668 0d4e 01       		.byte	0x1
 4669 0d4f 35       		.byte	0x35
 4670 0d50 180D0000 		.4byte	0xd18
 4671 0d54 05       		.uleb128 0x5
 4672 0d55 03       		.byte	0x3
 4673 0d56 00000000 		.4byte	CapSense_sensorBaselineLow
 4674 0d5a 1D       		.uleb128 0x1d
 4675 0d5b 3F020000 		.4byte	.LASF129
 4676 0d5f 01       		.byte	0x1
 4677 0d60 36       		.byte	0x36
 4678 0d61 180D0000 		.4byte	0xd18
 4679 0d65 05       		.uleb128 0x5
 4680 0d66 03       		.byte	0x3
 4681 0d67 00000000 		.4byte	CapSense_sensorSignal
 4682 0d6b 1D       		.uleb128 0x1d
 4683 0d6c 180B0000 		.4byte	.LASF130
 4684 0d70 01       		.byte	0x1
 4685 0d71 37       		.byte	0x37
 4686 0d72 FD0C0000 		.4byte	0xcfd
 4687 0d76 05       		.uleb128 0x5
 4688 0d77 03       		.byte	0x3
 4689 0d78 00000000 		.4byte	CapSense_sensorOnMask
 4690 0d7c 1D       		.uleb128 0x1d
 4691 0d7d 55000000 		.4byte	.LASF131
 4692 0d81 01       		.byte	0x1
 4693 0d82 39       		.byte	0x39
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 134


 4694 0d83 180D0000 		.4byte	0xd18
 4695 0d87 05       		.uleb128 0x5
 4696 0d88 03       		.byte	0x3
 4697 0d89 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4698 0d8d 1D       		.uleb128 0x1d
 4699 0d8e 60080000 		.4byte	.LASF132
 4700 0d92 01       		.byte	0x1
 4701 0d93 3A       		.byte	0x3a
 4702 0d94 180D0000 		.4byte	0xd18
 4703 0d98 05       		.uleb128 0x5
 4704 0d99 03       		.byte	0x3
 4705 0d9a 00000000 		.4byte	CapSense_lowBaselineReset
 4706 0d9e 1D       		.uleb128 0x1d
 4707 0d9f 68030000 		.4byte	.LASF133
 4708 0da3 01       		.byte	0x1
 4709 0da4 49       		.byte	0x49
 4710 0da5 690C0000 		.4byte	0xc69
 4711 0da9 05       		.uleb128 0x5
 4712 0daa 03       		.byte	0x3
 4713 0dab 00000000 		.4byte	CapSense_fingerThreshold
 4714 0daf 1D       		.uleb128 0x1d
 4715 0db0 35090000 		.4byte	.LASF134
 4716 0db4 01       		.byte	0x1
 4717 0db5 4B       		.byte	0x4b
 4718 0db6 690C0000 		.4byte	0xc69
 4719 0dba 05       		.uleb128 0x5
 4720 0dbb 03       		.byte	0x3
 4721 0dbc 00000000 		.4byte	CapSense_noiseThreshold
 4722 0dc0 1D       		.uleb128 0x1d
 4723 0dc1 A7040000 		.4byte	.LASF135
 4724 0dc5 01       		.byte	0x1
 4725 0dc6 4D       		.byte	0x4d
 4726 0dc7 690C0000 		.4byte	0xc69
 4727 0dcb 05       		.uleb128 0x5
 4728 0dcc 03       		.byte	0x3
 4729 0dcd 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4730 0dd1 1D       		.uleb128 0x1d
 4731 0dd2 A4020000 		.4byte	.LASF136
 4732 0dd6 01       		.byte	0x1
 4733 0dd7 4F       		.byte	0x4f
 4734 0dd8 690C0000 		.4byte	0xc69
 4735 0ddc 05       		.uleb128 0x5
 4736 0ddd 03       		.byte	0x3
 4737 0dde 00000000 		.4byte	CapSense_hysteresis
 4738 0de2 1D       		.uleb128 0x1d
 4739 0de3 9D010000 		.4byte	.LASF137
 4740 0de7 01       		.byte	0x1
 4741 0de8 51       		.byte	0x51
 4742 0de9 690C0000 		.4byte	0xc69
 4743 0ded 05       		.uleb128 0x5
 4744 0dee 03       		.byte	0x3
 4745 0def 00000000 		.4byte	CapSense_debounce
 4746 0df3 1D       		.uleb128 0x1d
 4747 0df4 55020000 		.4byte	.LASF138
 4748 0df8 01       		.byte	0x1
 4749 0df9 59       		.byte	0x59
 4750 0dfa 040E0000 		.4byte	0xe04
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 135


 4751 0dfe 05       		.uleb128 0x5
 4752 0dff 03       		.byte	0x3
 4753 0e00 00000000 		.4byte	CapSense_rawDataIndex
 4754 0e04 08       		.uleb128 0x8
 4755 0e05 690C0000 		.4byte	0xc69
 4756 0e09 1D       		.uleb128 0x1d
 4757 0e0a 8E040000 		.4byte	.LASF139
 4758 0e0e 01       		.byte	0x1
 4759 0e0f 61       		.byte	0x61
 4760 0e10 1A0E0000 		.4byte	0xe1a
 4761 0e14 05       		.uleb128 0x5
 4762 0e15 03       		.byte	0x3
 4763 0e16 00000000 		.4byte	CapSense_numberOfSensors
 4764 0e1a 08       		.uleb128 0x8
 4765 0e1b 690C0000 		.4byte	0xc69
 4766 0e1f 1D       		.uleb128 0x1d
 4767 0e20 F70A0000 		.4byte	.LASF140
 4768 0e24 01       		.byte	0x1
 4769 0e25 27       		.byte	0x27
 4770 0e26 E20C0000 		.4byte	0xce2
 4771 0e2a 05       		.uleb128 0x5
 4772 0e2b 03       		.byte	0x3
 4773 0e2c 00000000 		.4byte	CapSense_rawFilterData1
 4774 0e30 1C       		.uleb128 0x1c
 4775 0e31 F4000000 		.4byte	.LASF141
 4776 0e35 01       		.byte	0x1
 4777 0e36 41       		.byte	0x41
 4778 0e37 BF020000 		.4byte	0x2bf
 4779 0e3b 1D       		.uleb128 0x1d
 4780 0e3c 030A0000 		.4byte	.LASF142
 4781 0e40 01       		.byte	0x1
 4782 0e41 45       		.byte	0x45
 4783 0e42 6B000000 		.4byte	0x6b
 4784 0e46 05       		.uleb128 0x5
 4785 0e47 03       		.byte	0x3
 4786 0e48 00000000 		.4byte	CapSense_enableRawFilters
 4787 0e4c 00       		.byte	0
 4788              		.section	.debug_abbrev,"",%progbits
 4789              	.Ldebug_abbrev0:
 4790 0000 01       		.uleb128 0x1
 4791 0001 11       		.uleb128 0x11
 4792 0002 01       		.byte	0x1
 4793 0003 25       		.uleb128 0x25
 4794 0004 0E       		.uleb128 0xe
 4795 0005 13       		.uleb128 0x13
 4796 0006 0B       		.uleb128 0xb
 4797 0007 03       		.uleb128 0x3
 4798 0008 0E       		.uleb128 0xe
 4799 0009 1B       		.uleb128 0x1b
 4800 000a 0E       		.uleb128 0xe
 4801 000b 55       		.uleb128 0x55
 4802 000c 17       		.uleb128 0x17
 4803 000d 11       		.uleb128 0x11
 4804 000e 01       		.uleb128 0x1
 4805 000f 10       		.uleb128 0x10
 4806 0010 17       		.uleb128 0x17
 4807 0011 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 136


 4808 0012 00       		.byte	0
 4809 0013 02       		.uleb128 0x2
 4810 0014 24       		.uleb128 0x24
 4811 0015 00       		.byte	0
 4812 0016 0B       		.uleb128 0xb
 4813 0017 0B       		.uleb128 0xb
 4814 0018 3E       		.uleb128 0x3e
 4815 0019 0B       		.uleb128 0xb
 4816 001a 03       		.uleb128 0x3
 4817 001b 0E       		.uleb128 0xe
 4818 001c 00       		.byte	0
 4819 001d 00       		.byte	0
 4820 001e 03       		.uleb128 0x3
 4821 001f 24       		.uleb128 0x24
 4822 0020 00       		.byte	0
 4823 0021 0B       		.uleb128 0xb
 4824 0022 0B       		.uleb128 0xb
 4825 0023 3E       		.uleb128 0x3e
 4826 0024 0B       		.uleb128 0xb
 4827 0025 03       		.uleb128 0x3
 4828 0026 08       		.uleb128 0x8
 4829 0027 00       		.byte	0
 4830 0028 00       		.byte	0
 4831 0029 04       		.uleb128 0x4
 4832 002a 16       		.uleb128 0x16
 4833 002b 00       		.byte	0
 4834 002c 03       		.uleb128 0x3
 4835 002d 0E       		.uleb128 0xe
 4836 002e 3A       		.uleb128 0x3a
 4837 002f 0B       		.uleb128 0xb
 4838 0030 3B       		.uleb128 0x3b
 4839 0031 05       		.uleb128 0x5
 4840 0032 49       		.uleb128 0x49
 4841 0033 13       		.uleb128 0x13
 4842 0034 00       		.byte	0
 4843 0035 00       		.byte	0
 4844 0036 05       		.uleb128 0x5
 4845 0037 13       		.uleb128 0x13
 4846 0038 01       		.byte	0x1
 4847 0039 0B       		.uleb128 0xb
 4848 003a 0B       		.uleb128 0xb
 4849 003b 3A       		.uleb128 0x3a
 4850 003c 0B       		.uleb128 0xb
 4851 003d 3B       		.uleb128 0x3b
 4852 003e 0B       		.uleb128 0xb
 4853 003f 01       		.uleb128 0x1
 4854 0040 13       		.uleb128 0x13
 4855 0041 00       		.byte	0
 4856 0042 00       		.byte	0
 4857 0043 06       		.uleb128 0x6
 4858 0044 0D       		.uleb128 0xd
 4859 0045 00       		.byte	0
 4860 0046 03       		.uleb128 0x3
 4861 0047 0E       		.uleb128 0xe
 4862 0048 3A       		.uleb128 0x3a
 4863 0049 0B       		.uleb128 0xb
 4864 004a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 137


 4865 004b 0B       		.uleb128 0xb
 4866 004c 49       		.uleb128 0x49
 4867 004d 13       		.uleb128 0x13
 4868 004e 38       		.uleb128 0x38
 4869 004f 0B       		.uleb128 0xb
 4870 0050 00       		.byte	0
 4871 0051 00       		.byte	0
 4872 0052 07       		.uleb128 0x7
 4873 0053 0F       		.uleb128 0xf
 4874 0054 00       		.byte	0
 4875 0055 0B       		.uleb128 0xb
 4876 0056 0B       		.uleb128 0xb
 4877 0057 49       		.uleb128 0x49
 4878 0058 13       		.uleb128 0x13
 4879 0059 00       		.byte	0
 4880 005a 00       		.byte	0
 4881 005b 08       		.uleb128 0x8
 4882 005c 26       		.uleb128 0x26
 4883 005d 00       		.byte	0
 4884 005e 49       		.uleb128 0x49
 4885 005f 13       		.uleb128 0x13
 4886 0060 00       		.byte	0
 4887 0061 00       		.byte	0
 4888 0062 09       		.uleb128 0x9
 4889 0063 15       		.uleb128 0x15
 4890 0064 01       		.byte	0x1
 4891 0065 27       		.uleb128 0x27
 4892 0066 19       		.uleb128 0x19
 4893 0067 49       		.uleb128 0x49
 4894 0068 13       		.uleb128 0x13
 4895 0069 01       		.uleb128 0x1
 4896 006a 13       		.uleb128 0x13
 4897 006b 00       		.byte	0
 4898 006c 00       		.byte	0
 4899 006d 0A       		.uleb128 0xa
 4900 006e 05       		.uleb128 0x5
 4901 006f 00       		.byte	0
 4902 0070 49       		.uleb128 0x49
 4903 0071 13       		.uleb128 0x13
 4904 0072 00       		.byte	0
 4905 0073 00       		.byte	0
 4906 0074 0B       		.uleb128 0xb
 4907 0075 15       		.uleb128 0x15
 4908 0076 01       		.byte	0x1
 4909 0077 27       		.uleb128 0x27
 4910 0078 19       		.uleb128 0x19
 4911 0079 01       		.uleb128 0x1
 4912 007a 13       		.uleb128 0x13
 4913 007b 00       		.byte	0
 4914 007c 00       		.byte	0
 4915 007d 0C       		.uleb128 0xc
 4916 007e 16       		.uleb128 0x16
 4917 007f 00       		.byte	0
 4918 0080 03       		.uleb128 0x3
 4919 0081 0E       		.uleb128 0xe
 4920 0082 3A       		.uleb128 0x3a
 4921 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 138


 4922 0084 3B       		.uleb128 0x3b
 4923 0085 0B       		.uleb128 0xb
 4924 0086 49       		.uleb128 0x49
 4925 0087 13       		.uleb128 0x13
 4926 0088 00       		.byte	0
 4927 0089 00       		.byte	0
 4928 008a 0D       		.uleb128 0xd
 4929 008b 2E       		.uleb128 0x2e
 4930 008c 01       		.byte	0x1
 4931 008d 3F       		.uleb128 0x3f
 4932 008e 19       		.uleb128 0x19
 4933 008f 03       		.uleb128 0x3
 4934 0090 0E       		.uleb128 0xe
 4935 0091 3A       		.uleb128 0x3a
 4936 0092 0B       		.uleb128 0xb
 4937 0093 3B       		.uleb128 0x3b
 4938 0094 0B       		.uleb128 0xb
 4939 0095 27       		.uleb128 0x27
 4940 0096 19       		.uleb128 0x19
 4941 0097 11       		.uleb128 0x11
 4942 0098 01       		.uleb128 0x1
 4943 0099 12       		.uleb128 0x12
 4944 009a 06       		.uleb128 0x6
 4945 009b 40       		.uleb128 0x40
 4946 009c 18       		.uleb128 0x18
 4947 009d 9742     		.uleb128 0x2117
 4948 009f 19       		.uleb128 0x19
 4949 00a0 01       		.uleb128 0x1
 4950 00a1 13       		.uleb128 0x13
 4951 00a2 00       		.byte	0
 4952 00a3 00       		.byte	0
 4953 00a4 0E       		.uleb128 0xe
 4954 00a5 05       		.uleb128 0x5
 4955 00a6 00       		.byte	0
 4956 00a7 03       		.uleb128 0x3
 4957 00a8 0E       		.uleb128 0xe
 4958 00a9 3A       		.uleb128 0x3a
 4959 00aa 0B       		.uleb128 0xb
 4960 00ab 3B       		.uleb128 0x3b
 4961 00ac 0B       		.uleb128 0xb
 4962 00ad 49       		.uleb128 0x49
 4963 00ae 13       		.uleb128 0x13
 4964 00af 02       		.uleb128 0x2
 4965 00b0 18       		.uleb128 0x18
 4966 00b1 00       		.byte	0
 4967 00b2 00       		.byte	0
 4968 00b3 0F       		.uleb128 0xf
 4969 00b4 34       		.uleb128 0x34
 4970 00b5 00       		.byte	0
 4971 00b6 03       		.uleb128 0x3
 4972 00b7 0E       		.uleb128 0xe
 4973 00b8 3A       		.uleb128 0x3a
 4974 00b9 0B       		.uleb128 0xb
 4975 00ba 3B       		.uleb128 0x3b
 4976 00bb 0B       		.uleb128 0xb
 4977 00bc 49       		.uleb128 0x49
 4978 00bd 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 139


 4979 00be 02       		.uleb128 0x2
 4980 00bf 18       		.uleb128 0x18
 4981 00c0 00       		.byte	0
 4982 00c1 00       		.byte	0
 4983 00c2 10       		.uleb128 0x10
 4984 00c3 2E       		.uleb128 0x2e
 4985 00c4 01       		.byte	0x1
 4986 00c5 3F       		.uleb128 0x3f
 4987 00c6 19       		.uleb128 0x19
 4988 00c7 03       		.uleb128 0x3
 4989 00c8 0E       		.uleb128 0xe
 4990 00c9 3A       		.uleb128 0x3a
 4991 00ca 0B       		.uleb128 0xb
 4992 00cb 3B       		.uleb128 0x3b
 4993 00cc 0B       		.uleb128 0xb
 4994 00cd 27       		.uleb128 0x27
 4995 00ce 19       		.uleb128 0x19
 4996 00cf 11       		.uleb128 0x11
 4997 00d0 01       		.uleb128 0x1
 4998 00d1 12       		.uleb128 0x12
 4999 00d2 06       		.uleb128 0x6
 5000 00d3 40       		.uleb128 0x40
 5001 00d4 18       		.uleb128 0x18
 5002 00d5 9642     		.uleb128 0x2116
 5003 00d7 19       		.uleb128 0x19
 5004 00d8 01       		.uleb128 0x1
 5005 00d9 13       		.uleb128 0x13
 5006 00da 00       		.byte	0
 5007 00db 00       		.byte	0
 5008 00dc 11       		.uleb128 0x11
 5009 00dd 2E       		.uleb128 0x2e
 5010 00de 01       		.byte	0x1
 5011 00df 3F       		.uleb128 0x3f
 5012 00e0 19       		.uleb128 0x19
 5013 00e1 03       		.uleb128 0x3
 5014 00e2 0E       		.uleb128 0xe
 5015 00e3 3A       		.uleb128 0x3a
 5016 00e4 0B       		.uleb128 0xb
 5017 00e5 3B       		.uleb128 0x3b
 5018 00e6 05       		.uleb128 0x5
 5019 00e7 27       		.uleb128 0x27
 5020 00e8 19       		.uleb128 0x19
 5021 00e9 11       		.uleb128 0x11
 5022 00ea 01       		.uleb128 0x1
 5023 00eb 12       		.uleb128 0x12
 5024 00ec 06       		.uleb128 0x6
 5025 00ed 40       		.uleb128 0x40
 5026 00ee 18       		.uleb128 0x18
 5027 00ef 9642     		.uleb128 0x2116
 5028 00f1 19       		.uleb128 0x19
 5029 00f2 01       		.uleb128 0x1
 5030 00f3 13       		.uleb128 0x13
 5031 00f4 00       		.byte	0
 5032 00f5 00       		.byte	0
 5033 00f6 12       		.uleb128 0x12
 5034 00f7 34       		.uleb128 0x34
 5035 00f8 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 140


 5036 00f9 03       		.uleb128 0x3
 5037 00fa 08       		.uleb128 0x8
 5038 00fb 3A       		.uleb128 0x3a
 5039 00fc 0B       		.uleb128 0xb
 5040 00fd 3B       		.uleb128 0x3b
 5041 00fe 05       		.uleb128 0x5
 5042 00ff 49       		.uleb128 0x49
 5043 0100 13       		.uleb128 0x13
 5044 0101 02       		.uleb128 0x2
 5045 0102 18       		.uleb128 0x18
 5046 0103 00       		.byte	0
 5047 0104 00       		.byte	0
 5048 0105 13       		.uleb128 0x13
 5049 0106 34       		.uleb128 0x34
 5050 0107 00       		.byte	0
 5051 0108 03       		.uleb128 0x3
 5052 0109 0E       		.uleb128 0xe
 5053 010a 3A       		.uleb128 0x3a
 5054 010b 0B       		.uleb128 0xb
 5055 010c 3B       		.uleb128 0x3b
 5056 010d 05       		.uleb128 0x5
 5057 010e 49       		.uleb128 0x49
 5058 010f 13       		.uleb128 0x13
 5059 0110 02       		.uleb128 0x2
 5060 0111 18       		.uleb128 0x18
 5061 0112 00       		.byte	0
 5062 0113 00       		.byte	0
 5063 0114 14       		.uleb128 0x14
 5064 0115 05       		.uleb128 0x5
 5065 0116 00       		.byte	0
 5066 0117 03       		.uleb128 0x3
 5067 0118 0E       		.uleb128 0xe
 5068 0119 3A       		.uleb128 0x3a
 5069 011a 0B       		.uleb128 0xb
 5070 011b 3B       		.uleb128 0x3b
 5071 011c 05       		.uleb128 0x5
 5072 011d 49       		.uleb128 0x49
 5073 011e 13       		.uleb128 0x13
 5074 011f 02       		.uleb128 0x2
 5075 0120 18       		.uleb128 0x18
 5076 0121 00       		.byte	0
 5077 0122 00       		.byte	0
 5078 0123 15       		.uleb128 0x15
 5079 0124 2E       		.uleb128 0x2e
 5080 0125 01       		.byte	0x1
 5081 0126 3F       		.uleb128 0x3f
 5082 0127 19       		.uleb128 0x19
 5083 0128 03       		.uleb128 0x3
 5084 0129 0E       		.uleb128 0xe
 5085 012a 3A       		.uleb128 0x3a
 5086 012b 0B       		.uleb128 0xb
 5087 012c 3B       		.uleb128 0x3b
 5088 012d 05       		.uleb128 0x5
 5089 012e 27       		.uleb128 0x27
 5090 012f 19       		.uleb128 0x19
 5091 0130 49       		.uleb128 0x49
 5092 0131 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 141


 5093 0132 11       		.uleb128 0x11
 5094 0133 01       		.uleb128 0x1
 5095 0134 12       		.uleb128 0x12
 5096 0135 06       		.uleb128 0x6
 5097 0136 40       		.uleb128 0x40
 5098 0137 18       		.uleb128 0x18
 5099 0138 9742     		.uleb128 0x2117
 5100 013a 19       		.uleb128 0x19
 5101 013b 01       		.uleb128 0x1
 5102 013c 13       		.uleb128 0x13
 5103 013d 00       		.byte	0
 5104 013e 00       		.byte	0
 5105 013f 16       		.uleb128 0x16
 5106 0140 2E       		.uleb128 0x2e
 5107 0141 01       		.byte	0x1
 5108 0142 3F       		.uleb128 0x3f
 5109 0143 19       		.uleb128 0x19
 5110 0144 03       		.uleb128 0x3
 5111 0145 0E       		.uleb128 0xe
 5112 0146 3A       		.uleb128 0x3a
 5113 0147 0B       		.uleb128 0xb
 5114 0148 3B       		.uleb128 0x3b
 5115 0149 05       		.uleb128 0x5
 5116 014a 27       		.uleb128 0x27
 5117 014b 19       		.uleb128 0x19
 5118 014c 11       		.uleb128 0x11
 5119 014d 01       		.uleb128 0x1
 5120 014e 12       		.uleb128 0x12
 5121 014f 06       		.uleb128 0x6
 5122 0150 40       		.uleb128 0x40
 5123 0151 18       		.uleb128 0x18
 5124 0152 9742     		.uleb128 0x2117
 5125 0154 19       		.uleb128 0x19
 5126 0155 01       		.uleb128 0x1
 5127 0156 13       		.uleb128 0x13
 5128 0157 00       		.byte	0
 5129 0158 00       		.byte	0
 5130 0159 17       		.uleb128 0x17
 5131 015a 2E       		.uleb128 0x2e
 5132 015b 01       		.byte	0x1
 5133 015c 3F       		.uleb128 0x3f
 5134 015d 19       		.uleb128 0x19
 5135 015e 03       		.uleb128 0x3
 5136 015f 0E       		.uleb128 0xe
 5137 0160 3A       		.uleb128 0x3a
 5138 0161 0B       		.uleb128 0xb
 5139 0162 3B       		.uleb128 0x3b
 5140 0163 05       		.uleb128 0x5
 5141 0164 27       		.uleb128 0x27
 5142 0165 19       		.uleb128 0x19
 5143 0166 49       		.uleb128 0x49
 5144 0167 13       		.uleb128 0x13
 5145 0168 11       		.uleb128 0x11
 5146 0169 01       		.uleb128 0x1
 5147 016a 12       		.uleb128 0x12
 5148 016b 06       		.uleb128 0x6
 5149 016c 40       		.uleb128 0x40
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 142


 5150 016d 18       		.uleb128 0x18
 5151 016e 9642     		.uleb128 0x2116
 5152 0170 19       		.uleb128 0x19
 5153 0171 01       		.uleb128 0x1
 5154 0172 13       		.uleb128 0x13
 5155 0173 00       		.byte	0
 5156 0174 00       		.byte	0
 5157 0175 18       		.uleb128 0x18
 5158 0176 01       		.uleb128 0x1
 5159 0177 01       		.byte	0x1
 5160 0178 49       		.uleb128 0x49
 5161 0179 13       		.uleb128 0x13
 5162 017a 01       		.uleb128 0x1
 5163 017b 13       		.uleb128 0x13
 5164 017c 00       		.byte	0
 5165 017d 00       		.byte	0
 5166 017e 19       		.uleb128 0x19
 5167 017f 21       		.uleb128 0x21
 5168 0180 00       		.byte	0
 5169 0181 49       		.uleb128 0x49
 5170 0182 13       		.uleb128 0x13
 5171 0183 2F       		.uleb128 0x2f
 5172 0184 0B       		.uleb128 0xb
 5173 0185 00       		.byte	0
 5174 0186 00       		.byte	0
 5175 0187 1A       		.uleb128 0x1a
 5176 0188 05       		.uleb128 0x5
 5177 0189 00       		.byte	0
 5178 018a 03       		.uleb128 0x3
 5179 018b 08       		.uleb128 0x8
 5180 018c 3A       		.uleb128 0x3a
 5181 018d 0B       		.uleb128 0xb
 5182 018e 3B       		.uleb128 0x3b
 5183 018f 05       		.uleb128 0x5
 5184 0190 49       		.uleb128 0x49
 5185 0191 13       		.uleb128 0x13
 5186 0192 02       		.uleb128 0x2
 5187 0193 18       		.uleb128 0x18
 5188 0194 00       		.byte	0
 5189 0195 00       		.byte	0
 5190 0196 1B       		.uleb128 0x1b
 5191 0197 2E       		.uleb128 0x2e
 5192 0198 00       		.byte	0
 5193 0199 3F       		.uleb128 0x3f
 5194 019a 19       		.uleb128 0x19
 5195 019b 03       		.uleb128 0x3
 5196 019c 0E       		.uleb128 0xe
 5197 019d 3A       		.uleb128 0x3a
 5198 019e 0B       		.uleb128 0xb
 5199 019f 3B       		.uleb128 0x3b
 5200 01a0 05       		.uleb128 0x5
 5201 01a1 27       		.uleb128 0x27
 5202 01a2 19       		.uleb128 0x19
 5203 01a3 11       		.uleb128 0x11
 5204 01a4 01       		.uleb128 0x1
 5205 01a5 12       		.uleb128 0x12
 5206 01a6 06       		.uleb128 0x6
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 143


 5207 01a7 40       		.uleb128 0x40
 5208 01a8 18       		.uleb128 0x18
 5209 01a9 9742     		.uleb128 0x2117
 5210 01ab 19       		.uleb128 0x19
 5211 01ac 00       		.byte	0
 5212 01ad 00       		.byte	0
 5213 01ae 1C       		.uleb128 0x1c
 5214 01af 34       		.uleb128 0x34
 5215 01b0 00       		.byte	0
 5216 01b1 03       		.uleb128 0x3
 5217 01b2 0E       		.uleb128 0xe
 5218 01b3 3A       		.uleb128 0x3a
 5219 01b4 0B       		.uleb128 0xb
 5220 01b5 3B       		.uleb128 0x3b
 5221 01b6 0B       		.uleb128 0xb
 5222 01b7 49       		.uleb128 0x49
 5223 01b8 13       		.uleb128 0x13
 5224 01b9 3F       		.uleb128 0x3f
 5225 01ba 19       		.uleb128 0x19
 5226 01bb 3C       		.uleb128 0x3c
 5227 01bc 19       		.uleb128 0x19
 5228 01bd 00       		.byte	0
 5229 01be 00       		.byte	0
 5230 01bf 1D       		.uleb128 0x1d
 5231 01c0 34       		.uleb128 0x34
 5232 01c1 00       		.byte	0
 5233 01c2 03       		.uleb128 0x3
 5234 01c3 0E       		.uleb128 0xe
 5235 01c4 3A       		.uleb128 0x3a
 5236 01c5 0B       		.uleb128 0xb
 5237 01c6 3B       		.uleb128 0x3b
 5238 01c7 0B       		.uleb128 0xb
 5239 01c8 49       		.uleb128 0x49
 5240 01c9 13       		.uleb128 0x13
 5241 01ca 3F       		.uleb128 0x3f
 5242 01cb 19       		.uleb128 0x19
 5243 01cc 02       		.uleb128 0x2
 5244 01cd 18       		.uleb128 0x18
 5245 01ce 00       		.byte	0
 5246 01cf 00       		.byte	0
 5247 01d0 00       		.byte	0
 5248              		.section	.debug_aranges,"",%progbits
 5249 0000 44010000 		.4byte	0x144
 5250 0004 0200     		.2byte	0x2
 5251 0006 00000000 		.4byte	.Ldebug_info0
 5252 000a 04       		.byte	0x4
 5253 000b 00       		.byte	0
 5254 000c 0000     		.2byte	0
 5255 000e 0000     		.2byte	0
 5256 0010 00000000 		.4byte	.LFB35
 5257 0014 90000000 		.4byte	.LFE35-.LFB35
 5258 0018 00000000 		.4byte	.LFB36
 5259 001c 28000000 		.4byte	.LFE36-.LFB36
 5260 0020 00000000 		.4byte	.LFB37
 5261 0024 26000000 		.4byte	.LFE37-.LFB37
 5262 0028 00000000 		.4byte	.LFB38
 5263 002c 50000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 144


 5264 0030 00000000 		.4byte	.LFB39
 5265 0034 38020000 		.4byte	.LFE39-.LFB39
 5266 0038 00000000 		.4byte	.LFB40
 5267 003c 1E000000 		.4byte	.LFE40-.LFB40
 5268 0040 00000000 		.4byte	.LFB41
 5269 0044 40000000 		.4byte	.LFE41-.LFB41
 5270 0048 00000000 		.4byte	.LFB42
 5271 004c 70000000 		.4byte	.LFE42-.LFB42
 5272 0050 00000000 		.4byte	.LFB43
 5273 0054 1C000000 		.4byte	.LFE43-.LFB43
 5274 0058 00000000 		.4byte	.LFB44
 5275 005c 24000000 		.4byte	.LFE44-.LFB44
 5276 0060 00000000 		.4byte	.LFB45
 5277 0064 1C000000 		.4byte	.LFE45-.LFB45
 5278 0068 00000000 		.4byte	.LFB46
 5279 006c 24000000 		.4byte	.LFE46-.LFB46
 5280 0070 00000000 		.4byte	.LFB47
 5281 0074 1C000000 		.4byte	.LFE47-.LFB47
 5282 0078 00000000 		.4byte	.LFB48
 5283 007c 1C000000 		.4byte	.LFE48-.LFB48
 5284 0080 00000000 		.4byte	.LFB49
 5285 0084 1C000000 		.4byte	.LFE49-.LFB49
 5286 0088 00000000 		.4byte	.LFB50
 5287 008c 1C000000 		.4byte	.LFE50-.LFB50
 5288 0090 00000000 		.4byte	.LFB51
 5289 0094 24000000 		.4byte	.LFE51-.LFB51
 5290 0098 00000000 		.4byte	.LFB52
 5291 009c 24000000 		.4byte	.LFE52-.LFB52
 5292 00a0 00000000 		.4byte	.LFB53
 5293 00a4 24000000 		.4byte	.LFE53-.LFB53
 5294 00a8 00000000 		.4byte	.LFB54
 5295 00ac 24000000 		.4byte	.LFE54-.LFB54
 5296 00b0 00000000 		.4byte	.LFB55
 5297 00b4 24000000 		.4byte	.LFE55-.LFB55
 5298 00b8 00000000 		.4byte	.LFB56
 5299 00bc 24000000 		.4byte	.LFE56-.LFB56
 5300 00c0 00000000 		.4byte	.LFB57
 5301 00c4 58010000 		.4byte	.LFE57-.LFB57
 5302 00c8 00000000 		.4byte	.LFB58
 5303 00cc 58000000 		.4byte	.LFE58-.LFB58
 5304 00d0 00000000 		.4byte	.LFB59
 5305 00d4 36000000 		.4byte	.LFE59-.LFB59
 5306 00d8 00000000 		.4byte	.LFB60
 5307 00dc 70000000 		.4byte	.LFE60-.LFB60
 5308 00e0 00000000 		.4byte	.LFB61
 5309 00e4 70000000 		.4byte	.LFE61-.LFB61
 5310 00e8 00000000 		.4byte	.LFB62
 5311 00ec B8000000 		.4byte	.LFE62-.LFB62
 5312 00f0 00000000 		.4byte	.LFB63
 5313 00f4 94010000 		.4byte	.LFE63-.LFB63
 5314 00f8 00000000 		.4byte	.LFB64
 5315 00fc AC000000 		.4byte	.LFE64-.LFB64
 5316 0100 00000000 		.4byte	.LFB65
 5317 0104 70010000 		.4byte	.LFE65-.LFB65
 5318 0108 00000000 		.4byte	.LFB66
 5319 010c 76000000 		.4byte	.LFE66-.LFB66
 5320 0110 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 145


 5321 0114 3C000000 		.4byte	.LFE67-.LFB67
 5322 0118 00000000 		.4byte	.LFB68
 5323 011c 1C000000 		.4byte	.LFE68-.LFB68
 5324 0120 00000000 		.4byte	.LFB69
 5325 0124 1C000000 		.4byte	.LFE69-.LFB69
 5326 0128 00000000 		.4byte	.LFB70
 5327 012c 1C000000 		.4byte	.LFE70-.LFB70
 5328 0130 00000000 		.4byte	.LFB71
 5329 0134 14000000 		.4byte	.LFE71-.LFB71
 5330 0138 00000000 		.4byte	.LFB72
 5331 013c 14000000 		.4byte	.LFE72-.LFB72
 5332 0140 00000000 		.4byte	0
 5333 0144 00000000 		.4byte	0
 5334              		.section	.debug_ranges,"",%progbits
 5335              	.Ldebug_ranges0:
 5336 0000 00000000 		.4byte	.LFB35
 5337 0004 90000000 		.4byte	.LFE35
 5338 0008 00000000 		.4byte	.LFB36
 5339 000c 28000000 		.4byte	.LFE36
 5340 0010 00000000 		.4byte	.LFB37
 5341 0014 26000000 		.4byte	.LFE37
 5342 0018 00000000 		.4byte	.LFB38
 5343 001c 50000000 		.4byte	.LFE38
 5344 0020 00000000 		.4byte	.LFB39
 5345 0024 38020000 		.4byte	.LFE39
 5346 0028 00000000 		.4byte	.LFB40
 5347 002c 1E000000 		.4byte	.LFE40
 5348 0030 00000000 		.4byte	.LFB41
 5349 0034 40000000 		.4byte	.LFE41
 5350 0038 00000000 		.4byte	.LFB42
 5351 003c 70000000 		.4byte	.LFE42
 5352 0040 00000000 		.4byte	.LFB43
 5353 0044 1C000000 		.4byte	.LFE43
 5354 0048 00000000 		.4byte	.LFB44
 5355 004c 24000000 		.4byte	.LFE44
 5356 0050 00000000 		.4byte	.LFB45
 5357 0054 1C000000 		.4byte	.LFE45
 5358 0058 00000000 		.4byte	.LFB46
 5359 005c 24000000 		.4byte	.LFE46
 5360 0060 00000000 		.4byte	.LFB47
 5361 0064 1C000000 		.4byte	.LFE47
 5362 0068 00000000 		.4byte	.LFB48
 5363 006c 1C000000 		.4byte	.LFE48
 5364 0070 00000000 		.4byte	.LFB49
 5365 0074 1C000000 		.4byte	.LFE49
 5366 0078 00000000 		.4byte	.LFB50
 5367 007c 1C000000 		.4byte	.LFE50
 5368 0080 00000000 		.4byte	.LFB51
 5369 0084 24000000 		.4byte	.LFE51
 5370 0088 00000000 		.4byte	.LFB52
 5371 008c 24000000 		.4byte	.LFE52
 5372 0090 00000000 		.4byte	.LFB53
 5373 0094 24000000 		.4byte	.LFE53
 5374 0098 00000000 		.4byte	.LFB54
 5375 009c 24000000 		.4byte	.LFE54
 5376 00a0 00000000 		.4byte	.LFB55
 5377 00a4 24000000 		.4byte	.LFE55
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 146


 5378 00a8 00000000 		.4byte	.LFB56
 5379 00ac 24000000 		.4byte	.LFE56
 5380 00b0 00000000 		.4byte	.LFB57
 5381 00b4 58010000 		.4byte	.LFE57
 5382 00b8 00000000 		.4byte	.LFB58
 5383 00bc 58000000 		.4byte	.LFE58
 5384 00c0 00000000 		.4byte	.LFB59
 5385 00c4 36000000 		.4byte	.LFE59
 5386 00c8 00000000 		.4byte	.LFB60
 5387 00cc 70000000 		.4byte	.LFE60
 5388 00d0 00000000 		.4byte	.LFB61
 5389 00d4 70000000 		.4byte	.LFE61
 5390 00d8 00000000 		.4byte	.LFB62
 5391 00dc B8000000 		.4byte	.LFE62
 5392 00e0 00000000 		.4byte	.LFB63
 5393 00e4 94010000 		.4byte	.LFE63
 5394 00e8 00000000 		.4byte	.LFB64
 5395 00ec AC000000 		.4byte	.LFE64
 5396 00f0 00000000 		.4byte	.LFB65
 5397 00f4 70010000 		.4byte	.LFE65
 5398 00f8 00000000 		.4byte	.LFB66
 5399 00fc 76000000 		.4byte	.LFE66
 5400 0100 00000000 		.4byte	.LFB67
 5401 0104 3C000000 		.4byte	.LFE67
 5402 0108 00000000 		.4byte	.LFB68
 5403 010c 1C000000 		.4byte	.LFE68
 5404 0110 00000000 		.4byte	.LFB69
 5405 0114 1C000000 		.4byte	.LFE69
 5406 0118 00000000 		.4byte	.LFB70
 5407 011c 1C000000 		.4byte	.LFE70
 5408 0120 00000000 		.4byte	.LFB71
 5409 0124 14000000 		.4byte	.LFE71
 5410 0128 00000000 		.4byte	.LFB72
 5411 012c 14000000 		.4byte	.LFE72
 5412 0130 00000000 		.4byte	0
 5413 0134 00000000 		.4byte	0
 5414              		.section	.debug_line,"",%progbits
 5415              	.Ldebug_line0:
 5416 0000 9D040000 		.section	.debug_str,"MS",%progbits,1
 5416      02005C00 
 5416      00000201 
 5416      FB0E0D00 
 5416      01010101 
 5417              	.LASF128:
 5418 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5418      656E7365 
 5418      5F73656E 
 5418      736F7242 
 5418      6173656C 
 5419              	.LASF114:
 5420 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 5420      656E7365 
 5420      5F494952 
 5420      3446696C 
 5420      74657200 
 5421              	.LASF120:
 5422 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 147


 5422      656E7365 
 5422      5F646562 
 5422      6F756E63 
 5422      65436F75 
 5423              	.LASF32:
 5424 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 5424      53706565 
 5424      6454626C 
 5424      00
 5425              	.LASF131:
 5426 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5426      656E7365 
 5426      5F6C6F77 
 5426      42617365 
 5426      6C696E65 
 5427              	.LASF56:
 5428 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5428      656E7365 
 5428      5F557064 
 5428      61746542 
 5428      6173656C 
 5429              	.LASF35:
 5430 0095 6E756D62 		.ascii	"numberOfSensors\000"
 5430      65724F66 
 5430      53656E73 
 5430      6F727300 
 5431              	.LASF39:
 5432 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 5432      65744269 
 5432      7456616C 
 5432      756500
 5433              	.LASF95:
 5434 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 5434      656E7365 
 5434      5F446973 
 5434      61626C65 
 5434      57696467 
 5435              	.LASF63:
 5436 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5436      656E7365 
 5436      5F557064 
 5436      61746545 
 5436      6E61626C 
 5437              	.LASF110:
 5438 00eb 706F7349 		.ascii	"posIndex\000"
 5438      6E646578 
 5438      00
 5439              	.LASF141:
 5440 00f4 43617053 		.ascii	"CapSense_config\000"
 5440      656E7365 
 5440      5F636F6E 
 5440      66696700 
 5441              	.LASF55:
 5442 0104 69735365 		.ascii	"isSensorEnabled\000"
 5442      6E736F72 
 5442      456E6162 
 5442      6C656400 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 148


 5443              	.LASF91:
 5444 0114 6E756D4F 		.ascii	"numOfSensors\000"
 5444      6653656E 
 5444      736F7273 
 5444      00
 5445              	.LASF8:
 5446 0121 756E7369 		.ascii	"unsigned int\000"
 5446      676E6564 
 5446      20696E74 
 5446      00
 5447              	.LASF44:
 5448 012e 746F7461 		.ascii	"totalSensorsNum\000"
 5448      6C53656E 
 5448      736F7273 
 5448      4E756D00 
 5449              	.LASF12:
 5450 013e 696E7431 		.ascii	"int16\000"
 5450      3600
 5451              	.LASF29:
 5452 0144 73616D70 		.ascii	"sampleMaxTbl\000"
 5452      6C654D61 
 5452      7854626C 
 5452      00
 5453              	.LASF54:
 5454 0151 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5454      656E7365 
 5454      5F496E69 
 5454      7469616C 
 5454      697A6545 
 5455              	.LASF123:
 5456 0175 43617053 		.ascii	"CapSense_posFiltersData\000"
 5456      656E7365 
 5456      5F706F73 
 5456      46696C74 
 5456      65727344 
 5457              	.LASF27:
 5458 018d 7369676E 		.ascii	"signRegisterTbl\000"
 5458      52656769 
 5458      73746572 
 5458      54626C00 
 5459              	.LASF137:
 5460 019d 43617053 		.ascii	"CapSense_debounce\000"
 5460      656E7365 
 5460      5F646562 
 5460      6F756E63 
 5460      6500
 5461              	.LASF50:
 5462 01af 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5462      656E7365 
 5462      5F496E69 
 5462      7469616C 
 5462      697A6553 
 5463              	.LASF48:
 5464 01d1 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5464      656E7365 
 5464      5F434F4E 
 5464      4649475F 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 149


 5464      54595045 
 5465              	.LASF68:
 5466 01ef 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5466      656E7365 
 5466      5F536574 
 5466      42617365 
 5466      6C696E65 
 5467              	.LASF34:
 5468 0208 72617744 		.ascii	"rawDataIndex\000"
 5468      61746149 
 5468      6E646578 
 5468      00
 5469              	.LASF43:
 5470 0215 746F7461 		.ascii	"totalWidgetsNum\000"
 5470      6C576964 
 5470      67657473 
 5470      4E756D00 
 5471              	.LASF72:
 5472 0225 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5472      656E7365 
 5472      5F536574 
 5472      44696666 
 5472      436F756E 
 5473              	.LASF129:
 5474 023f 43617053 		.ascii	"CapSense_sensorSignal\000"
 5474      656E7365 
 5474      5F73656E 
 5474      736F7253 
 5474      69676E61 
 5475              	.LASF138:
 5476 0255 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5476      656E7365 
 5476      5F726177 
 5476      44617461 
 5476      496E6465 
 5477              	.LASF79:
 5478 026b 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5478      656E7365 
 5478      5F536574 
 5478      4E6F6973 
 5478      65546872 
 5479              	.LASF64:
 5480 0286 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5480      656E7365 
 5480      5F557064 
 5480      61746557 
 5480      69646765 
 5481              	.LASF136:
 5482 02a4 43617053 		.ascii	"CapSense_hysteresis\000"
 5482      656E7365 
 5482      5F687973 
 5482      74657265 
 5482      73697300 
 5483              	.LASF14:
 5484 02b8 666C6F61 		.ascii	"float\000"
 5484      7400
 5485              	.LASF13:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 150


 5486 02be 696E7433 		.ascii	"int32\000"
 5486      3200
 5487              	.LASF98:
 5488 02c4 636F756E 		.ascii	"count\000"
 5488      7400
 5489              	.LASF24:
 5490 02ca 7265736F 		.ascii	"resolutionsTbl\000"
 5490      6C757469 
 5490      6F6E7354 
 5490      626C00
 5491              	.LASF112:
 5492 02d9 706F7346 		.ascii	"posFiltersMask\000"
 5492      696C7465 
 5492      72734D61 
 5492      736B00
 5493              	.LASF75:
 5494 02e8 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5494      656E7365 
 5494      5F476574 
 5494      4E6F6973 
 5494      65546872 
 5495              	.LASF26:
 5496 0303 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5496      696E6744 
 5496      69666665 
 5496      72656E63 
 5496      6554626C 
 5497              	.LASF7:
 5498 0318 6C6F6E67 		.ascii	"long long unsigned int\000"
 5498      206C6F6E 
 5498      6720756E 
 5498      7369676E 
 5498      65642069 
 5499              	.LASF125:
 5500 032f 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5500      656E7365 
 5500      5F73656E 
 5500      736F7245 
 5500      6E61626C 
 5501              	.LASF53:
 5502 0349 77696467 		.ascii	"widget\000"
 5502      657400
 5503              	.LASF122:
 5504 0350 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5504      656E7365 
 5504      5F706F73 
 5504      46696C74 
 5504      6572734D 
 5505              	.LASF133:
 5506 0368 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5506      656E7365 
 5506      5F66696E 
 5506      67657254 
 5506      68726573 
 5507              	.LASF126:
 5508 0381 43617053 		.ascii	"CapSense_widgetNumber\000"
 5508      656E7365 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 151


 5508      5F776964 
 5508      6765744E 
 5508      756D6265 
 5509              	.LASF78:
 5510 0397 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5510      656E7365 
 5510      5F536574 
 5510      46696E67 
 5510      65725468 
 5511              	.LASF119:
 5512 03b3 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5512      656E7365 
 5512      5F446973 
 5512      61626C65 
 5512      52617744 
 5513              	.LASF73:
 5514 03d2 76616C75 		.ascii	"value\000"
 5514      6500
 5515              	.LASF76:
 5516 03d8 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5516      656E7365 
 5516      5F476574 
 5516      46696E67 
 5516      65724879 
 5517              	.LASF71:
 5518 03f5 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5518      656E7365 
 5518      5F476574 
 5518      44696666 
 5518      436F756E 
 5519              	.LASF58:
 5520 040f 7369676E 		.ascii	"sign\000"
 5520      00
 5521              	.LASF97:
 5522 0414 6F666673 		.ascii	"offset\000"
 5522      657400
 5523              	.LASF25:
 5524 041b 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5524      65456E76 
 5524      656C6F70 
 5524      6554626C 
 5524      00
 5525              	.LASF57:
 5526 042c 63616C63 		.ascii	"calc\000"
 5526      00
 5527              	.LASF38:
 5528 0431 70747252 		.ascii	"ptrReadSensorRaw\000"
 5528      65616453 
 5528      656E736F 
 5528      72526177 
 5528      00
 5529              	.LASF88:
 5530 0442 68797374 		.ascii	"hysteresis\000"
 5530      65726573 
 5530      697300
 5531              	.LASF60:
 5532 044d 66696C74 		.ascii	"filteredRawData\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 152


 5532      65726564 
 5532      52617744 
 5532      61746100 
 5533              	.LASF65:
 5534 045d 73656E73 		.ascii	"sensorsPerWidget\000"
 5534      6F727350 
 5534      65725769 
 5534      64676574 
 5534      00
 5535              	.LASF93:
 5536 046e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5536      656E7365 
 5536      5F436865 
 5536      636B4973 
 5536      416E7957 
 5537              	.LASF139:
 5538 048e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5538      656E7365 
 5538      5F6E756D 
 5538      6265724F 
 5538      6653656E 
 5539              	.LASF135:
 5540 04a7 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5540      656E7365 
 5540      5F6E6567 
 5540      61746976 
 5540      654E6F69 
 5541              	.LASF42:
 5542 04c7 746F7461 		.ascii	"totalScanslotsNum\000"
 5542      6C536361 
 5542      6E736C6F 
 5542      74734E75 
 5542      6D00
 5543              	.LASF51:
 5544 04d9 73656E73 		.ascii	"sensor\000"
 5544      6F7200
 5545              	.LASF45:
 5546 04e0 73656E73 		.ascii	"sensetivitySeed\000"
 5546      65746976 
 5546      69747953 
 5546      65656400 
 5547              	.LASF94:
 5548 04f0 43617053 		.ascii	"CapSense_EnableWidget\000"
 5548      656E7365 
 5548      5F456E61 
 5548      626C6557 
 5548      69646765 
 5549              	.LASF16:
 5550 0506 63686172 		.ascii	"char\000"
 5550      00
 5551              	.LASF77:
 5552 050b 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5552      656E7365 
 5552      5F476574 
 5552      4E656761 
 5552      74697665 
 5553              	.LASF33:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 153


 5554 052e 70726573 		.ascii	"prescalerTable\000"
 5554      63616C65 
 5554      72546162 
 5554      6C6500
 5555              	.LASF10:
 5556 053d 75696E74 		.ascii	"uint16\000"
 5556      313600
 5557              	.LASF69:
 5558 0544 64617461 		.ascii	"data\000"
 5558      00
 5559              	.LASF18:
 5560 0549 69646163 		.ascii	"idac1LevelsTbl\000"
 5560      314C6576 
 5560      656C7354 
 5560      626C00
 5561              	.LASF103:
 5562 0558 7265736F 		.ascii	"resolution\000"
 5562      6C757469 
 5562      6F6E00
 5563              	.LASF90:
 5564 0563 72617749 		.ascii	"rawIndex\000"
 5564      6E646578 
 5564      00
 5565              	.LASF104:
 5566 056c 43617053 		.ascii	"CapSense_centroid\000"
 5566      656E7365 
 5566      5F63656E 
 5566      74726F69 
 5566      6400
 5567              	.LASF6:
 5568 057e 6C6F6E67 		.ascii	"long long int\000"
 5568      206C6F6E 
 5568      6720696E 
 5568      7400
 5569              	.LASF115:
 5570 058c 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5570      656E7365 
 5570      5F476574 
 5570      57696467 
 5570      65744E75 
 5571              	.LASF85:
 5572 05a5 6465626F 		.ascii	"debounce\000"
 5572      756E6365 
 5572      00
 5573              	.LASF37:
 5574 05ae 70747250 		.ascii	"ptrPreScan\000"
 5574      72655363 
 5574      616E00
 5575              	.LASF84:
 5576 05b9 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5576      656E7365 
 5576      5F436865 
 5576      636B4973 
 5576      53656E73 
 5577              	.LASF36:
 5578 05d6 70747247 		.ascii	"ptrGetRaw\000"
 5578      65745261 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 154


 5578      7700
 5579              	.LASF62:
 5580 05e0 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5580      656E7365 
 5580      5F557064 
 5580      61746553 
 5580      656E736F 
 5581              	.LASF143:
 5582 05fe 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5582      4320342E 
 5582      392E3320 
 5582      32303135 
 5582      30333033 
 5583 0631 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5583      20726576 
 5583      6973696F 
 5583      6E203232 
 5583      31323230 
 5584 0664 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5584      66756E63 
 5584      74696F6E 
 5584      2D736563 
 5584      74696F6E 
 5585              	.LASF49:
 5586 068c 43617053 		.ascii	"CapSense_BaseInit\000"
 5586      656E7365 
 5586      5F426173 
 5586      65496E69 
 5586      7400
 5587              	.LASF102:
 5588 069e 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5588      656E7365 
 5588      5F43616C 
 5588      6343656E 
 5588      74726F69 
 5589              	.LASF28:
 5590 06b4 73616D70 		.ascii	"sampleMinTbl\000"
 5590      6C654D69 
 5590      6E54626C 
 5590      00
 5591              	.LASF124:
 5592 06c1 43617053 		.ascii	"CapSense_sensorRaw\000"
 5592      656E7365 
 5592      5F73656E 
 5592      736F7252 
 5592      617700
 5593              	.LASF116:
 5594 06d4 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5594      656E7365 
 5594      5F476574 
 5594      4C6F7742 
 5594      6173656C 
 5595              	.LASF81:
 5596 06f1 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5596      656E7365 
 5596      5F536574 
 5596      4E656761 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 155


 5596      74697665 
 5597              	.LASF11:
 5598 0714 75696E74 		.ascii	"uint32\000"
 5598      333200
 5599              	.LASF111:
 5600 071b 66697273 		.ascii	"firstTimeIndex\000"
 5600      7454696D 
 5600      65496E64 
 5600      657800
 5601              	.LASF101:
 5602 072a 73746172 		.ascii	"startOfSlider\000"
 5602      744F6653 
 5602      6C696465 
 5602      7200
 5603              	.LASF80:
 5604 0738 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5604      656E7365 
 5604      5F536574 
 5604      46696E67 
 5604      65724879 
 5605              	.LASF145:
 5606 0755 433A5C55 		.ascii	"C:\\Users\\poornima\\Documents\\GitHub\\thingTouch\\"
 5606      73657273 
 5606      5C706F6F 
 5606      726E696D 
 5606      615C446F 
 5607 0783 31463353 		.ascii	"1F3S1SOC.cydsn\000"
 5607      31534F43 
 5607      2E637964 
 5607      736E00
 5608              	.LASF74:
 5609 0792 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5609      656E7365 
 5609      5F476574 
 5609      46696E67 
 5609      65725468 
 5610              	.LASF106:
 5611 07ae 6E756D65 		.ascii	"numerator\000"
 5611      7261746F 
 5611      7200
 5612              	.LASF67:
 5613 07b8 6C617374 		.ascii	"lastSensor\000"
 5613      53656E73 
 5613      6F7200
 5614              	.LASF46:
 5615 07c3 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5615      6B467265 
 5615      715F4D48 
 5615      7A00
 5616              	.LASF108:
 5617 07d1 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5617      656E7365 
 5617      5F476574 
 5617      43656E74 
 5617      726F6964 
 5618              	.LASF19:
 5619 07e9 69646163 		.ascii	"idac2LevelsTbl\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 156


 5619      324C6576 
 5619      656C7354 
 5619      626C00
 5620              	.LASF2:
 5621 07f8 73686F72 		.ascii	"short int\000"
 5621      7420696E 
 5621      7400
 5622              	.LASF4:
 5623 0802 6C6F6E67 		.ascii	"long int\000"
 5623      20696E74 
 5623      00
 5624              	.LASF66:
 5625 080b 66697273 		.ascii	"firstSensor\000"
 5625      7453656E 
 5625      736F7200 
 5626              	.LASF100:
 5627 0817 74656D70 		.ascii	"temp\000"
 5627      00
 5628              	.LASF96:
 5629 081c 43617053 		.ascii	"CapSense_FindMaximum\000"
 5629      656E7365 
 5629      5F46696E 
 5629      644D6178 
 5629      696D756D 
 5630              	.LASF23:
 5631 0831 77696467 		.ascii	"widgetNubmersTbl\000"
 5631      65744E75 
 5631      626D6572 
 5631      7354626C 
 5631      00
 5632              	.LASF118:
 5633 0842 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5633      656E7365 
 5633      5F456E61 
 5633      626C6552 
 5633      61774461 
 5634              	.LASF132:
 5635 0860 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5635      656E7365 
 5635      5F6C6F77 
 5635      42617365 
 5635      6C696E65 
 5636              	.LASF107:
 5637 087a 64656E6F 		.ascii	"denominator\000"
 5637      6D696E61 
 5637      746F7200 
 5638              	.LASF31:
 5639 0886 6B56616C 		.ascii	"kValueTbl\000"
 5639      75655462 
 5639      6C00
 5640              	.LASF127:
 5641 0890 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5641      656E7365 
 5641      5F73656E 
 5641      736F7242 
 5641      6173656C 
 5642              	.LASF99:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 157


 5643 08a8 6D617869 		.ascii	"maximum\000"
 5643      6D756D00 
 5644              	.LASF17:
 5645 08b0 73697A65 		.ascii	"sizetype\000"
 5645      74797065 
 5645      00
 5646              	.LASF5:
 5647 08b9 6C6F6E67 		.ascii	"long unsigned int\000"
 5647      20756E73 
 5647      69676E65 
 5647      6420696E 
 5647      7400
 5648              	.LASF47:
 5649 08cb 706F696E 		.ascii	"pointers\000"
 5649      74657273 
 5649      00
 5650              	.LASF61:
 5651 08d4 6E6F6973 		.ascii	"noiseThreshold\000"
 5651      65546872 
 5651      6573686F 
 5651      6C6400
 5652              	.LASF30:
 5653 08e3 70726576 		.ascii	"previousSampleTbl\000"
 5653      696F7573 
 5653      53616D70 
 5653      6C655462 
 5653      6C00
 5654              	.LASF82:
 5655 08f5 43617053 		.ascii	"CapSense_SetDebounce\000"
 5655      656E7365 
 5655      5F536574 
 5655      4465626F 
 5655      756E6365 
 5656              	.LASF87:
 5657 090a 66696E67 		.ascii	"fingerThreshold\000"
 5657      65725468 
 5657      72657368 
 5657      6F6C6400 
 5658              	.LASF21:
 5659 091a 63686172 		.ascii	"chargeDivTbl\000"
 5659      67654469 
 5659      7654626C 
 5659      00
 5660              	.LASF1:
 5661 0927 756E7369 		.ascii	"unsigned char\000"
 5661      676E6564 
 5661      20636861 
 5661      7200
 5662              	.LASF134:
 5663 0935 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5663      656E7365 
 5663      5F6E6F69 
 5663      73655468 
 5663      72657368 
 5664              	.LASF86:
 5665 094d 6465626F 		.ascii	"debounceIndex\000"
 5665      756E6365 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 158


 5665      496E6465 
 5665      7800
 5666              	.LASF52:
 5667 095b 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5667      656E7365 
 5667      5F496E69 
 5667      7469616C 
 5667      697A6541 
 5668              	.LASF70:
 5669 097b 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5669      656E7365 
 5669      5F476574 
 5669      42617365 
 5669      6C696E65 
 5670              	.LASF83:
 5671 0994 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5671      656E7365 
 5671      5F536574 
 5671      4C6F7742 
 5671      6173656C 
 5672              	.LASF20:
 5673 09b1 73656E73 		.ascii	"sensetivityTbl\000"
 5673      65746976 
 5673      69747954 
 5673      626C00
 5674              	.LASF121:
 5675 09c0 43617053 		.ascii	"CapSense_centroidMult\000"
 5675      656E7365 
 5675      5F63656E 
 5675      74726F69 
 5675      644D756C 
 5676              	.LASF144:
 5677 09d6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5677      72617465 
 5677      645F536F 
 5677      75726365 
 5677      5C50536F 
 5678              	.LASF92:
 5679 09fd 73746174 		.ascii	"state\000"
 5679      6500
 5680              	.LASF142:
 5681 0a03 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5681      656E7365 
 5681      5F656E61 
 5681      626C6552 
 5681      61774669 
 5682              	.LASF22:
 5683 0a1d 6D6F6444 		.ascii	"modDivTbl\000"
 5683      69765462 
 5683      6C00
 5684              	.LASF0:
 5685 0a27 7369676E 		.ascii	"signed char\000"
 5685      65642063 
 5685      68617200 
 5686              	.LASF3:
 5687 0a33 73686F72 		.ascii	"short unsigned int\000"
 5687      7420756E 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 159


 5687      7369676E 
 5687      65642069 
 5687      6E7400
 5688              	.LASF109:
 5689 0a46 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5689      656E7365 
 5689      5F476574 
 5689      52616469 
 5689      616C4365 
 5690              	.LASF40:
 5691 0a64 70747253 		.ascii	"ptrSetBitValue\000"
 5691      65744269 
 5691      7456616C 
 5691      756500
 5692              	.LASF113:
 5693 0a73 43617053 		.ascii	"CapSense_MedianFilter\000"
 5693      656E7365 
 5693      5F4D6564 
 5693      69616E46 
 5693      696C7465 
 5694              	.LASF59:
 5695 0a89 74656D70 		.ascii	"tempRaw\000"
 5695      52617700 
 5696              	.LASF117:
 5697 0a91 43617053 		.ascii	"CapSense_GetDebounce\000"
 5697      656E7365 
 5697      5F476574 
 5697      4465626F 
 5697      756E6365 
 5698              	.LASF89:
 5699 0aa6 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5699      656E7365 
 5699      5F436865 
 5699      636B4973 
 5699      57696467 
 5700              	.LASF9:
 5701 0ac3 75696E74 		.ascii	"uint8\000"
 5701      3800
 5702              	.LASF15:
 5703 0ac9 646F7562 		.ascii	"double\000"
 5703      6C6500
 5704              	.LASF41:
 5705 0ad0 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5705      656E7365 
 5705      5F434F4E 
 5705      4649475F 
 5705      54595045 
 5706              	.LASF140:
 5707 0af7 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5707      656E7365 
 5707      5F726177 
 5707      46696C74 
 5707      65724461 
 5708              	.LASF105:
 5709 0b0f 706F7369 		.ascii	"position\000"
 5709      74696F6E 
 5709      00
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccCVn41A.s 			page 160


 5710              	.LASF130:
 5711 0b18 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5711      656E7365 
 5711      5F73656E 
 5711      736F724F 
 5711      6E4D6173 
 5712              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
