ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,16,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 16
  23              	CapSense_sensorBaseline:
  24 0000 00000000 		.space	16
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_sensorBaselineLow
  26              		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 8
  29              	CapSense_sensorBaselineLow:
  30 0010 00000000 		.space	8
  30      00000000 
  31              		.global	CapSense_sensorSignal
  32              		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 8
  35              	CapSense_sensorSignal:
  36 0018 00000000 		.space	8
  36      00000000 
  37              		.global	CapSense_sensorOnMask
  38              		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 0020 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,8,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 8
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 2


  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58              		.global	CapSense_enableRawFilters
  59              		.type	CapSense_enableRawFilters, %object
  60              		.size	CapSense_enableRawFilters, 1
  61              	CapSense_enableRawFilters:
  62 0008 01       		.byte	1
  63              		.comm	CapSense_fingerThreshold,8,4
  64              		.comm	CapSense_noiseThreshold,8,4
  65              		.comm	CapSense_negativeNoiseThreshold,8,4
  66              		.comm	CapSense_hysteresis,8,4
  67              		.global	CapSense_debounce
  68 0009 000000   		.align	2
  69              		.type	CapSense_debounce, %object
  70              		.size	CapSense_debounce, 8
  71              	CapSense_debounce:
  72 000c 05       		.byte	5
  73 000d 05       		.byte	5
  74 000e 05       		.byte	5
  75 000f 05       		.byte	5
  76 0010 05       		.byte	5
  77 0011 05       		.byte	5
  78 0012 05       		.byte	5
  79 0013 05       		.byte	5
  80              		.bss
  81 0021 000000   		.align	2
  82              	CapSense_debounceCounter:
  83 0024 00000000 		.space	9
  83      00000000 
  83      00
  84              		.global	CapSense_rawDataIndex
  85 002d 000000   		.section	.rodata
  86              		.align	2
  87              		.type	CapSense_rawDataIndex, %object
  88              		.size	CapSense_rawDataIndex, 8
  89              	CapSense_rawDataIndex:
  90 0000 00       		.byte	0
  91 0001 01       		.byte	1
  92 0002 02       		.byte	2
  93 0003 03       		.byte	3
  94 0004 04       		.byte	4
  95 0005 05       		.byte	5
  96 0006 06       		.byte	6
  97 0007 07       		.byte	7
  98              		.global	CapSense_numberOfSensors
  99              		.align	2
 100              		.type	CapSense_numberOfSensors, %object
 101              		.size	CapSense_numberOfSensors, 8
 102              	CapSense_numberOfSensors:
 103 0008 01       		.byte	1
 104 0009 01       		.byte	1
 105 000a 01       		.byte	1
 106 000b 01       		.byte	1
 107 000c 01       		.byte	1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 3


 108 000d 01       		.byte	1
 109 000e 01       		.byte	1
 110 000f 01       		.byte	1
 111              		.section	.text.CapSense_BaseInit,"ax",%progbits
 112              		.align	2
 113              		.global	CapSense_BaseInit
 114              		.code	16
 115              		.thumb_func
 116              		.type	CapSense_BaseInit, %function
 117              	CapSense_BaseInit:
 118              	.LFB35:
 119              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 4


  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 5u, 5u, 5u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  91:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  93:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* Button5__BTN */
  96:Generated_Source\PSoC4/CapSense_CSHL.c ****     6u, /* Button6__BTN */
  97:Generated_Source\PSoC4/CapSense_CSHL.c ****     7u, /* Button7__BTN */
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 101:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button0__BTN */
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button1__BTN */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 5


 103:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button2__BTN */
 104:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button3__BTN */
 105:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button4__BTN */
 106:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button5__BTN */
 107:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button6__BTN */
 108:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Button7__BTN */
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 145:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 147:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 149:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 120              		.loc 1 149 0
 121              		.cfi_startproc
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 84B0     		sub	sp, sp, #16
 127              		.cfi_def_cfa_offset 24
 128 0004 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 6


 130 0006 7860     		str	r0, [r7, #4]
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 131              		.loc 1 152 0
 132 0008 0F23     		mov	r3, #15
 133 000a FB18     		add	r3, r7, r3
 134 000c 1549     		ldr	r1, .L2
 135 000e 7A68     		ldr	r2, [r7, #4]
 136 0010 8A18     		add	r2, r1, r2
 137 0012 1278     		ldrb	r2, [r2]
 138 0014 1A70     		strb	r2, [r3]
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 154:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 139              		.loc 1 166 0
 140 0016 144B     		ldr	r3, .L2+4
 141 0018 7A68     		ldr	r2, [r7, #4]
 142 001a 5200     		lsl	r2, r2, #1
 143 001c D15A     		ldrh	r1, [r2, r3]
 144 001e 134B     		ldr	r3, .L2+8
 145 0020 7A68     		ldr	r2, [r7, #4]
 146 0022 5200     		lsl	r2, r2, #1
 147 0024 D152     		strh	r1, [r2, r3]
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 148              		.loc 1 167 0
 149 0026 124A     		ldr	r2, .L2+12
 150 0028 7B68     		ldr	r3, [r7, #4]
 151 002a D318     		add	r3, r2, r3
 152 002c 0022     		mov	r2, #0
 153 002e 1A70     		strb	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 154              		.loc 1 168 0
 155 0030 104A     		ldr	r2, .L2+16
 156 0032 7B68     		ldr	r3, [r7, #4]
 157 0034 D318     		add	r3, r2, r3
 158 0036 0022     		mov	r2, #0
 159 0038 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 160              		.loc 1 170 0
 161 003a 0F23     		mov	r3, #15
 162 003c FB18     		add	r3, r7, r3
 163 003e 1B78     		ldrb	r3, [r3]
 164 0040 0F22     		mov	r2, #15
 165 0042 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 7


 166 0044 1278     		ldrb	r2, [r2]
 167 0046 0C49     		ldr	r1, .L2+20
 168 0048 895C     		ldrb	r1, [r1, r2]
 169 004a 0C4A     		ldr	r2, .L2+24
 170 004c D154     		strb	r1, [r2, r3]
 171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 178:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 171              		.loc 1 185 0
 172 004e 064B     		ldr	r3, .L2+4
 173 0050 7A68     		ldr	r2, [r7, #4]
 174 0052 5200     		lsl	r2, r2, #1
 175 0054 D15A     		ldrh	r1, [r2, r3]
 176 0056 0A4B     		ldr	r3, .L2+28
 177 0058 7A68     		ldr	r2, [r7, #4]
 178 005a 5200     		lsl	r2, r2, #1
 179 005c D152     		strh	r1, [r2, r3]
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 190:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 191:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 194:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 195:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 196:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 180              		.loc 1 197 0
 181 005e BD46     		mov	sp, r7
 182 0060 04B0     		add	sp, sp, #16
 183              		@ sp needed
 184 0062 80BD     		pop	{r7, pc}
 185              	.L3:
 186              		.align	2
 187              	.L2:
 188 0064 00000000 		.word	CapSense_widgetNumber
 189 0068 00000000 		.word	CapSense_sensorRaw
 190 006c 00000000 		.word	CapSense_sensorBaseline
 191 0070 00000000 		.word	CapSense_sensorBaselineLow
 192 0074 00000000 		.word	CapSense_sensorSignal
 193 0078 00000000 		.word	CapSense_debounce
 194 007c 24000000 		.word	CapSense_debounceCounter
 195 0080 00000000 		.word	CapSense_rawFilterData1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 8


 196              		.cfi_endproc
 197              	.LFE35:
 198              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 199              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 200              		.align	2
 201              		.global	CapSense_InitializeSensorBaseline
 202              		.code	16
 203              		.thumb_func
 204              		.type	CapSense_InitializeSensorBaseline, %function
 205              	CapSense_InitializeSensorBaseline:
 206              	.LFB36:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 219:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 207              		.loc 1 225 0
 208              		.cfi_startproc
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 227:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 218              		.loc 1 227 0
 219 0008 7B68     		ldr	r3, [r7, #4]
 220 000a 181C     		mov	r0, r3
 221 000c FFF7FEFF 		bl	CapSense_ScanSensor
 228:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 9


 222              		.loc 1 228 0
 223 0010 C046     		mov	r8, r8
 224              	.L5:
 225              		.loc 1 228 0 is_stmt 0 discriminator 1
 226 0012 FFF7FEFF 		bl	CapSense_IsBusy
 227 0016 031E     		sub	r3, r0, #0
 228 0018 FBD1     		bne	.L5
 229:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 230:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 231:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 233:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 234:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 229              		.loc 1 234 0 is_stmt 1
 230 001a 7B68     		ldr	r3, [r7, #4]
 231 001c 181C     		mov	r0, r3
 232 001e FFF7FEFF 		bl	CapSense_BaseInit
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 233              		.loc 1 235 0
 234 0022 BD46     		mov	sp, r7
 235 0024 02B0     		add	sp, sp, #8
 236              		@ sp needed
 237 0026 80BD     		pop	{r7, pc}
 238              		.cfi_endproc
 239              	.LFE36:
 240              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 241              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 242              		.align	2
 243              		.global	CapSense_InitializeAllBaselines
 244              		.code	16
 245              		.thumb_func
 246              		.type	CapSense_InitializeAllBaselines, %function
 247              	CapSense_InitializeAllBaselines:
 248              	.LFB37:
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 10


 259:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 249              		.loc 1 262 0
 250              		.cfi_startproc
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 263:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 259              		.loc 1 265 0
 260 0006 0023     		mov	r3, #0
 261 0008 7B60     		str	r3, [r7, #4]
 262 000a 06E0     		b	.L7
 263              	.L8:
 266:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 267:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 264              		.loc 1 267 0 discriminator 3
 265 000c 7B68     		ldr	r3, [r7, #4]
 266 000e 181C     		mov	r0, r3
 267 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 265:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 268              		.loc 1 265 0 discriminator 3
 269 0014 7B68     		ldr	r3, [r7, #4]
 270 0016 0133     		add	r3, r3, #1
 271 0018 7B60     		str	r3, [r7, #4]
 272              	.L7:
 265:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 273              		.loc 1 265 0 is_stmt 0 discriminator 1
 274 001a 7B68     		ldr	r3, [r7, #4]
 275 001c 072B     		cmp	r3, #7
 276 001e F5D9     		bls	.L8
 268:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 277              		.loc 1 269 0 is_stmt 1
 278 0020 BD46     		mov	sp, r7
 279 0022 02B0     		add	sp, sp, #8
 280              		@ sp needed
 281 0024 80BD     		pop	{r7, pc}
 282              		.cfi_endproc
 283              	.LFE37:
 284              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 285 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 286              		.align	2
 287              		.global	CapSense_InitializeEnabledBaselines
 288              		.code	16
 289              		.thumb_func
 290              		.type	CapSense_InitializeEnabledBaselines, %function
 291              	CapSense_InitializeEnabledBaselines:
 292              	.LFB38:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 11


 270:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 295:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 297:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 293              		.loc 1 297 0
 294              		.cfi_startproc
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 303              		.loc 1 301 0
 304 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 305              		.loc 1 302 0
 306 000a C046     		mov	r8, r8
 307              	.L10:
 308              		.loc 1 302 0 is_stmt 0 discriminator 1
 309 000c FFF7FEFF 		bl	CapSense_IsBusy
 310 0010 031E     		sub	r3, r0, #0
 311 0012 FBD1     		bne	.L10
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 12


 312              		.loc 1 307 0 is_stmt 1
 313 0014 0023     		mov	r3, #0
 314 0016 7B60     		str	r3, [r7, #4]
 315 0018 11E0     		b	.L11
 316              	.L13:
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 317              		.loc 1 309 0
 318 001a 0C4A     		ldr	r2, .L14
 319 001c 7B68     		ldr	r3, [r7, #4]
 320 001e 101C     		mov	r0, r2
 321 0020 191C     		mov	r1, r3
 322 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 323 0026 031C     		mov	r3, r0
 324 0028 3B60     		str	r3, [r7]
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 311:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 312:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 325              		.loc 1 312 0
 326 002a 3B68     		ldr	r3, [r7]
 327 002c 002B     		cmp	r3, #0
 328 002e 03D0     		beq	.L12
 313:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 314:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 315:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 329              		.loc 1 315 0
 330 0030 7B68     		ldr	r3, [r7, #4]
 331 0032 181C     		mov	r0, r3
 332 0034 FFF7FEFF 		bl	CapSense_BaseInit
 333              	.L12:
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 334              		.loc 1 307 0 discriminator 2
 335 0038 7B68     		ldr	r3, [r7, #4]
 336 003a 0133     		add	r3, r3, #1
 337 003c 7B60     		str	r3, [r7, #4]
 338              	.L11:
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 339              		.loc 1 307 0 is_stmt 0 discriminator 1
 340 003e 7B68     		ldr	r3, [r7, #4]
 341 0040 072B     		cmp	r3, #7
 342 0042 EAD9     		bls	.L13
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 317:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 343              		.loc 1 318 0 is_stmt 1
 344 0044 BD46     		mov	sp, r7
 345 0046 02B0     		add	sp, sp, #8
 346              		@ sp needed
 347 0048 80BD     		pop	{r7, pc}
 348              	.L15:
 349 004a C046     		.align	2
 350              	.L14:
 351 004c 00000000 		.word	CapSense_sensorEnableMask
 352              		.cfi_endproc
 353              	.LFE38:
 354              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 355              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 13


 356              		.align	2
 357              		.global	CapSense_UpdateBaselineNoThreshold
 358              		.code	16
 359              		.thumb_func
 360              		.type	CapSense_UpdateBaselineNoThreshold, %function
 361              	CapSense_UpdateBaselineNoThreshold:
 362              	.LFB39:
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 356:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 358:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 359:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 360:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 363              		.loc 1 362 0
 364              		.cfi_startproc
 365 0000 90B5     		push	{r4, r7, lr}
 366              		.cfi_def_cfa_offset 12
 367              		.cfi_offset 4, -12
 368              		.cfi_offset 7, -8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 14


 369              		.cfi_offset 14, -4
 370 0002 87B0     		sub	sp, sp, #28
 371              		.cfi_def_cfa_offset 40
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 7860     		str	r0, [r7, #4]
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 375              		.loc 1 367 0
 376 0008 0F23     		mov	r3, #15
 377 000a FB18     		add	r3, r7, r3
 378 000c 7E49     		ldr	r1, .L29
 379 000e 7A68     		ldr	r2, [r7, #4]
 380 0010 8A18     		add	r2, r1, r2
 381 0012 1278     		ldrb	r2, [r2]
 382 0014 1A70     		strb	r2, [r3]
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 369:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 375:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 383              		.loc 1 376 0
 384 0016 0F23     		mov	r3, #15
 385 0018 FB18     		add	r3, r7, r3
 386 001a 1A78     		ldrb	r2, [r3]
 387 001c 0E23     		mov	r3, #14
 388 001e FB18     		add	r3, r7, r3
 389 0020 7A49     		ldr	r1, .L29+4
 390 0022 8A5C     		ldrb	r2, [r1, r2]
 391 0024 1A70     		strb	r2, [r3]
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 392              		.loc 1 377 0
 393 0026 1023     		mov	r3, #16
 394 0028 FB18     		add	r3, r7, r3
 395 002a 794A     		ldr	r2, .L29+8
 396 002c 7968     		ldr	r1, [r7, #4]
 397 002e 4900     		lsl	r1, r1, #1
 398 0030 8A5A     		ldrh	r2, [r1, r2]
 399 0032 1A80     		strh	r2, [r3]
 378:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 400              		.loc 1 380 0
 401 0034 774B     		ldr	r3, .L29+12
 402 0036 1B78     		ldrb	r3, [r3]
 403 0038 002B     		cmp	r3, #0
 404 003a 15D0     		beq	.L17
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 15


 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 405              		.loc 1 401 0
 406 003c 764B     		ldr	r3, .L29+16
 407 003e 7A68     		ldr	r2, [r7, #4]
 408 0040 5200     		lsl	r2, r2, #1
 409 0042 D25A     		ldrh	r2, [r2, r3]
 410 0044 1023     		mov	r3, #16
 411 0046 FC18     		add	r4, r7, r3
 412 0048 1023     		mov	r3, #16
 413 004a FB18     		add	r3, r7, r3
 414 004c 1B88     		ldrh	r3, [r3]
 415 004e 181C     		mov	r0, r3
 416 0050 111C     		mov	r1, r2
 417 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 418 0056 031C     		mov	r3, r0
 419 0058 2380     		strh	r3, [r4]
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 420              		.loc 1 402 0
 421 005a 6F4B     		ldr	r3, .L29+16
 422 005c 7A68     		ldr	r2, [r7, #4]
 423 005e 5200     		lsl	r2, r2, #1
 424 0060 1021     		mov	r1, #16
 425 0062 7918     		add	r1, r7, r1
 426 0064 0988     		ldrh	r1, [r1]
 427 0066 D152     		strh	r1, [r2, r3]
 428              	.L17:
 403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 407:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 411:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 415:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 16


 417:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 421:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 429              		.loc 1 423 0
 430 0068 7B68     		ldr	r3, [r7, #4]
 431 006a DAB2     		uxtb	r2, r3
 432 006c 6B49     		ldr	r1, .L29+20
 433 006e 684B     		ldr	r3, .L29+8
 434 0070 081C     		mov	r0, r1
 435 0072 111C     		mov	r1, r2
 436 0074 1A1C     		mov	r2, r3
 437 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 438              		.loc 1 428 0
 439 007a 694B     		ldr	r3, .L29+24
 440 007c 7A68     		ldr	r2, [r7, #4]
 441 007e 5200     		lsl	r2, r2, #1
 442 0080 D35A     		ldrh	r3, [r2, r3]
 443 0082 1022     		mov	r2, #16
 444 0084 BA18     		add	r2, r7, r2
 445 0086 1288     		ldrh	r2, [r2]
 446 0088 9A42     		cmp	r2, r3
 447 008a 12D3     		bcc	.L18
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 448              		.loc 1 430 0
 449 008c 654A     		ldr	r2, .L29+28
 450 008e 7B68     		ldr	r3, [r7, #4]
 451 0090 D318     		add	r3, r2, r3
 452 0092 0022     		mov	r2, #0
 453 0094 1A70     		strb	r2, [r3]
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 454              		.loc 1 431 0
 455 0096 624B     		ldr	r3, .L29+24
 456 0098 7A68     		ldr	r2, [r7, #4]
 457 009a 5200     		lsl	r2, r2, #1
 458 009c D25A     		ldrh	r2, [r2, r3]
 459 009e 1223     		mov	r3, #18
 460 00a0 FB18     		add	r3, r7, r3
 461 00a2 1021     		mov	r1, #16
 462 00a4 7918     		add	r1, r7, r1
 463 00a6 0988     		ldrh	r1, [r1]
 464 00a8 8A1A     		sub	r2, r1, r2
 465 00aa 1A80     		strh	r2, [r3]
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 466              		.loc 1 432 0
 467 00ac 0123     		mov	r3, #1
 468 00ae 7B61     		str	r3, [r7, #20]
 469 00b0 0CE0     		b	.L19
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 17


 470              	.L18:
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 471              		.loc 1 436 0
 472 00b2 5B4B     		ldr	r3, .L29+24
 473 00b4 7A68     		ldr	r2, [r7, #4]
 474 00b6 5200     		lsl	r2, r2, #1
 475 00b8 D15A     		ldrh	r1, [r2, r3]
 476 00ba 1223     		mov	r3, #18
 477 00bc FB18     		add	r3, r7, r3
 478 00be 1022     		mov	r2, #16
 479 00c0 BA18     		add	r2, r7, r2
 480 00c2 1288     		ldrh	r2, [r2]
 481 00c4 8A1A     		sub	r2, r1, r2
 482 00c6 1A80     		strh	r2, [r3]
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 483              		.loc 1 437 0
 484 00c8 0023     		mov	r3, #0
 485 00ca 7B61     		str	r3, [r7, #20]
 486              	.L19:
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 439:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 487              		.loc 1 441 0
 488 00cc 7B69     		ldr	r3, [r7, #20]
 489 00ce 002B     		cmp	r3, #0
 490 00d0 2AD1     		bne	.L20
 491              		.loc 1 441 0 is_stmt 0 discriminator 1
 492 00d2 0F23     		mov	r3, #15
 493 00d4 FB18     		add	r3, r7, r3
 494 00d6 1B78     		ldrb	r3, [r3]
 495 00d8 534A     		ldr	r2, .L29+32
 496 00da D35C     		ldrb	r3, [r2, r3]
 497 00dc 9BB2     		uxth	r3, r3
 498 00de 1222     		mov	r2, #18
 499 00e0 BA18     		add	r2, r7, r2
 500 00e2 1288     		ldrh	r2, [r2]
 501 00e4 9A42     		cmp	r2, r3
 502 00e6 1FD9     		bls	.L20
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 503              		.loc 1 446 0 is_stmt 1
 504 00e8 4E4A     		ldr	r2, .L29+28
 505 00ea 7B68     		ldr	r3, [r7, #4]
 506 00ec D318     		add	r3, r2, r3
 507 00ee 1A78     		ldrb	r2, [r3]
 508 00f0 4E49     		ldr	r1, .L29+36
 509 00f2 7B68     		ldr	r3, [r7, #4]
 510 00f4 CB18     		add	r3, r1, r3
 511 00f6 1B78     		ldrb	r3, [r3]
 512 00f8 9A42     		cmp	r2, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 18


 513 00fa 09D3     		bcc	.L21
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 514              		.loc 1 448 0
 515 00fc 7B68     		ldr	r3, [r7, #4]
 516 00fe 181C     		mov	r0, r3
 517 0100 FFF7FEFF 		bl	CapSense_BaseInit
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 518              		.loc 1 449 0
 519 0104 474A     		ldr	r2, .L29+28
 520 0106 7B68     		ldr	r3, [r7, #4]
 521 0108 D318     		add	r3, r2, r3
 522 010a 0022     		mov	r2, #0
 523 010c 1A70     		strb	r2, [r3]
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 524              		.loc 1 446 0
 525 010e 51E0     		b	.L23
 526              	.L21:
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 527              		.loc 1 453 0
 528 0110 444A     		ldr	r2, .L29+28
 529 0112 7B68     		ldr	r3, [r7, #4]
 530 0114 D318     		add	r3, r2, r3
 531 0116 1B78     		ldrb	r3, [r3]
 532 0118 0133     		add	r3, r3, #1
 533 011a D9B2     		uxtb	r1, r3
 534 011c 414A     		ldr	r2, .L29+28
 535 011e 7B68     		ldr	r3, [r7, #4]
 536 0120 D318     		add	r3, r2, r3
 537 0122 0A1C     		add	r2, r1, #0
 538 0124 1A70     		strb	r2, [r3]
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 539              		.loc 1 446 0
 540 0126 45E0     		b	.L23
 541              	.L20:
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 542              		.loc 1 461 0
 543 0128 0E23     		mov	r3, #14
 544 012a FB18     		add	r3, r7, r3
 545 012c 1B78     		ldrb	r3, [r3]
 546 012e 9BB2     		uxth	r3, r3
 547 0130 1222     		mov	r2, #18
 548 0132 BA18     		add	r2, r7, r2
 549 0134 1288     		ldrh	r2, [r2]
 550 0136 9A42     		cmp	r2, r3
 551 0138 0DD9     		bls	.L24
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 19


 552              		.loc 1 462 0 discriminator 1
 553 013a 0F23     		mov	r3, #15
 554 013c FB18     		add	r3, r7, r3
 555 013e 1B78     		ldrb	r3, [r3]
 556 0140 394A     		ldr	r2, .L29+32
 557 0142 D35C     		ldrb	r3, [r2, r3]
 558 0144 9BB2     		uxth	r3, r3
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 559              		.loc 1 461 0 discriminator 1
 560 0146 1222     		mov	r2, #18
 561 0148 BA18     		add	r2, r7, r2
 562 014a 1288     		ldrh	r2, [r2]
 563 014c 9A42     		cmp	r2, r3
 564 014e 31D2     		bcs	.L23
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 565              		.loc 1 463 0
 566 0150 7B69     		ldr	r3, [r7, #20]
 567 0152 002B     		cmp	r3, #0
 568 0154 2ED1     		bne	.L23
 569              	.L24:
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 570              		.loc 1 474 0
 571 0156 324B     		ldr	r3, .L29+24
 572 0158 7A68     		ldr	r2, [r7, #4]
 573 015a 5200     		lsl	r2, r2, #1
 574 015c D35A     		ldrh	r3, [r2, r3]
 575 015e 1B02     		lsl	r3, r3, #8
 576 0160 BB60     		str	r3, [r7, #8]
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 577              		.loc 1 475 0
 578 0162 334A     		ldr	r2, .L29+40
 579 0164 7B68     		ldr	r3, [r7, #4]
 580 0166 D318     		add	r3, r2, r3
 581 0168 1B78     		ldrb	r3, [r3]
 582 016a 1A1C     		mov	r2, r3
 583 016c BB68     		ldr	r3, [r7, #8]
 584 016e 1343     		orr	r3, r2
 585 0170 BB60     		str	r3, [r7, #8]
 476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 586              		.loc 1 478 0
 587 0172 1023     		mov	r3, #16
 588 0174 FB18     		add	r3, r7, r3
 589 0176 1B88     		ldrh	r3, [r3]
 590 0178 BA68     		ldr	r2, [r7, #8]
 591 017a D318     		add	r3, r2, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 20


 592 017c BB60     		str	r3, [r7, #8]
 479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 593              		.loc 1 481 0
 594 017e 284B     		ldr	r3, .L29+24
 595 0180 7A68     		ldr	r2, [r7, #4]
 596 0182 5200     		lsl	r2, r2, #1
 597 0184 D35A     		ldrh	r3, [r2, r3]
 598 0186 1A1C     		mov	r2, r3
 599 0188 BB68     		ldr	r3, [r7, #8]
 600 018a 9B1A     		sub	r3, r3, r2
 601 018c BB60     		str	r3, [r7, #8]
 482:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 602              		.loc 1 484 0
 603 018e BB68     		ldr	r3, [r7, #8]
 604 0190 1B0A     		lsr	r3, r3, #8
 605 0192 99B2     		uxth	r1, r3
 606 0194 224B     		ldr	r3, .L29+24
 607 0196 7A68     		ldr	r2, [r7, #4]
 608 0198 5200     		lsl	r2, r2, #1
 609 019a D152     		strh	r1, [r2, r3]
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 610              		.loc 1 485 0
 611 019c BB68     		ldr	r3, [r7, #8]
 612 019e D9B2     		uxtb	r1, r3
 613 01a0 234A     		ldr	r2, .L29+40
 614 01a2 7B68     		ldr	r3, [r7, #4]
 615 01a4 D318     		add	r3, r2, r3
 616 01a6 0A1C     		add	r2, r1, #0
 617 01a8 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 618              		.loc 1 487 0
 619 01aa 1E4A     		ldr	r2, .L29+28
 620 01ac 7B68     		ldr	r3, [r7, #4]
 621 01ae D318     		add	r3, r2, r3
 622 01b0 0022     		mov	r2, #0
 623 01b2 1A70     		strb	r2, [r3]
 624              	.L23:
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 492:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 625              		.loc 1 494 0
 626 01b4 0E23     		mov	r3, #14
 627 01b6 FB18     		add	r3, r7, r3
 628 01b8 1B78     		ldrb	r3, [r3]
 629 01ba 9BB2     		uxth	r3, r3
 630 01bc 1222     		mov	r2, #18
 631 01be BA18     		add	r2, r7, r2
 632 01c0 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 21


 633 01c2 9A42     		cmp	r2, r3
 634 01c4 17D9     		bls	.L25
 635              		.loc 1 494 0 is_stmt 0 discriminator 1
 636 01c6 7B69     		ldr	r3, [r7, #20]
 637 01c8 002B     		cmp	r3, #0
 638 01ca 14D0     		beq	.L25
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 639              		.loc 1 498 0 is_stmt 1
 640 01cc 1223     		mov	r3, #18
 641 01ce FB18     		add	r3, r7, r3
 642 01d0 1B88     		ldrh	r3, [r3]
 643 01d2 FF2B     		cmp	r3, #255
 644 01d4 05D9     		bls	.L26
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 645              		.loc 1 500 0
 646 01d6 174A     		ldr	r2, .L29+44
 647 01d8 7B68     		ldr	r3, [r7, #4]
 648 01da D318     		add	r3, r2, r3
 649 01dc FF22     		mov	r2, #255
 650 01de 1A70     		strb	r2, [r3]
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 651              		.loc 1 498 0
 652 01e0 0EE0     		b	.L16
 653              	.L26:
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 654              		.loc 1 504 0
 655 01e2 1223     		mov	r3, #18
 656 01e4 FB18     		add	r3, r7, r3
 657 01e6 1B88     		ldrh	r3, [r3]
 658 01e8 D9B2     		uxtb	r1, r3
 659 01ea 124A     		ldr	r2, .L29+44
 660 01ec 7B68     		ldr	r3, [r7, #4]
 661 01ee D318     		add	r3, r2, r3
 662 01f0 0A1C     		add	r2, r1, #0
 663 01f2 1A70     		strb	r2, [r3]
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 664              		.loc 1 498 0
 665 01f4 04E0     		b	.L16
 666              	.L25:
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 667              		.loc 1 513 0
 668 01f6 0F4A     		ldr	r2, .L29+44
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 22


 669 01f8 7B68     		ldr	r3, [r7, #4]
 670 01fa D318     		add	r3, r2, r3
 671 01fc 0022     		mov	r2, #0
 672 01fe 1A70     		strb	r2, [r3]
 673              	.L16:
 514:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 517:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 518:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 519:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 674              		.loc 1 520 0
 675 0200 BD46     		mov	sp, r7
 676 0202 07B0     		add	sp, sp, #28
 677              		@ sp needed
 678 0204 90BD     		pop	{r4, r7, pc}
 679              	.L30:
 680 0206 C046     		.align	2
 681              	.L29:
 682 0208 00000000 		.word	CapSense_widgetNumber
 683 020c 00000000 		.word	CapSense_noiseThreshold
 684 0210 00000000 		.word	CapSense_sensorRaw
 685 0214 00000000 		.word	CapSense_enableRawFilters
 686 0218 00000000 		.word	CapSense_rawFilterData1
 687 021c 00000000 		.word	CapSense_config
 688 0220 00000000 		.word	CapSense_sensorBaseline
 689 0224 00000000 		.word	CapSense_lowBaselineResetCnt
 690 0228 00000000 		.word	CapSense_negativeNoiseThreshold
 691 022c 00000000 		.word	CapSense_lowBaselineReset
 692 0230 00000000 		.word	CapSense_sensorBaselineLow
 693 0234 00000000 		.word	CapSense_sensorSignal
 694              		.cfi_endproc
 695              	.LFE39:
 696              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 697              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 698              		.align	2
 699              		.global	CapSense_UpdateSensorBaseline
 700              		.code	16
 701              		.thumb_func
 702              		.type	CapSense_UpdateSensorBaseline, %function
 703              	CapSense_UpdateSensorBaseline:
 704              	.LFB40:
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 23


 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 548:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 705              		.loc 1 554 0
 706              		.cfi_startproc
 707 0000 80B5     		push	{r7, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 82B0     		sub	sp, sp, #8
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 559:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 563:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 716              		.loc 1 566 0
 717 0008 7B68     		ldr	r3, [r7, #4]
 718 000a 181C     		mov	r0, r3
 719 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 569:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 720              		.loc 1 569 0
 721 0010 7B68     		ldr	r3, [r7, #4]
 722 0012 181C     		mov	r0, r3
 723 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 572:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 24


 573:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 574:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 724              		.loc 1 575 0
 725 0018 BD46     		mov	sp, r7
 726 001a 02B0     		add	sp, sp, #8
 727              		@ sp needed
 728 001c 80BD     		pop	{r7, pc}
 729              		.cfi_endproc
 730              	.LFE40:
 731              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 732 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 733              		.align	2
 734              		.global	CapSense_UpdateEnabledBaselines
 735              		.code	16
 736              		.thumb_func
 737              		.type	CapSense_UpdateEnabledBaselines, %function
 738              	CapSense_UpdateEnabledBaselines:
 739              	.LFB41:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 740              		.loc 1 608 0
 741              		.cfi_startproc
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 25


 745              		.cfi_offset 14, -4
 746 0002 82B0     		sub	sp, sp, #8
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 750              		.loc 1 612 0
 751 0006 0023     		mov	r3, #0
 752 0008 7B60     		str	r3, [r7, #4]
 753 000a 11E0     		b	.L33
 754              	.L35:
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 614:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 755              		.loc 1 614 0
 756 000c 0B4A     		ldr	r2, .L36
 757 000e 7B68     		ldr	r3, [r7, #4]
 758 0010 101C     		mov	r0, r2
 759 0012 191C     		mov	r1, r3
 760 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 761 0018 031C     		mov	r3, r0
 762 001a 3B60     		str	r3, [r7]
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 763              		.loc 1 616 0
 764 001c 3B68     		ldr	r3, [r7]
 765 001e 002B     		cmp	r3, #0
 766 0020 03D0     		beq	.L34
 617:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 618:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 767              		.loc 1 618 0
 768 0022 7B68     		ldr	r3, [r7, #4]
 769 0024 181C     		mov	r0, r3
 770 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 771              	.L34:
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 772              		.loc 1 612 0 discriminator 2
 773 002a 7B68     		ldr	r3, [r7, #4]
 774 002c 0133     		add	r3, r3, #1
 775 002e 7B60     		str	r3, [r7, #4]
 776              	.L33:
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 777              		.loc 1 612 0 is_stmt 0 discriminator 1
 778 0030 7B68     		ldr	r3, [r7, #4]
 779 0032 072B     		cmp	r3, #7
 780 0034 EAD9     		bls	.L35
 619:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 620:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 781              		.loc 1 621 0 is_stmt 1
 782 0036 BD46     		mov	sp, r7
 783 0038 02B0     		add	sp, sp, #8
 784              		@ sp needed
 785 003a 80BD     		pop	{r7, pc}
 786              	.L37:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 26


 787              		.align	2
 788              	.L36:
 789 003c 00000000 		.word	CapSense_sensorEnableMask
 790              		.cfi_endproc
 791              	.LFE41:
 792              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 793              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 794              		.align	2
 795              		.global	CapSense_UpdateWidgetBaseline
 796              		.code	16
 797              		.thumb_func
 798              		.type	CapSense_UpdateWidgetBaseline, %function
 799              	CapSense_UpdateWidgetBaseline:
 800              	.LFB42:
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 801              		.loc 1 653 0
 802              		.cfi_startproc
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 88B0     		sub	sp, sp, #32
 808              		.cfi_def_cfa_offset 40
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 27


 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 812              		.loc 1 661 0
 813 0008 164A     		ldr	r2, .L42
 814 000a 7B68     		ldr	r3, [r7, #4]
 815 000c D318     		add	r3, r2, r3
 816 000e 1B78     		ldrb	r3, [r3]
 817 0010 BB61     		str	r3, [r7, #24]
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 818              		.loc 1 664 0
 819 0012 154A     		ldr	r2, .L42+4
 820 0014 7B68     		ldr	r3, [r7, #4]
 821 0016 D318     		add	r3, r2, r3
 822 0018 1B78     		ldrb	r3, [r3]
 823 001a 7B61     		str	r3, [r7, #20]
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 824              		.loc 1 667 0
 825 001c 124A     		ldr	r2, .L42+4
 826 001e 7B68     		ldr	r3, [r7, #4]
 827 0020 D318     		add	r3, r2, r3
 828 0022 1B78     		ldrb	r3, [r3]
 829 0024 1A1C     		mov	r2, r3
 830 0026 BB69     		ldr	r3, [r7, #24]
 831 0028 D318     		add	r3, r2, r3
 832 002a 3B61     		str	r3, [r7, #16]
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 833              		.loc 1 669 0
 834 002c 7B69     		ldr	r3, [r7, #20]
 835 002e FB61     		str	r3, [r7, #28]
 836 0030 11E0     		b	.L39
 837              	.L41:
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 671:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 838              		.loc 1 671 0
 839 0032 0E4A     		ldr	r2, .L42+8
 840 0034 FB69     		ldr	r3, [r7, #28]
 841 0036 101C     		mov	r0, r2
 842 0038 191C     		mov	r1, r3
 843 003a FFF7FEFF 		bl	CapSense_GetBitValue
 844 003e 031C     		mov	r3, r0
 845 0040 FB60     		str	r3, [r7, #12]
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 846              		.loc 1 673 0
 847 0042 FB68     		ldr	r3, [r7, #12]
 848 0044 002B     		cmp	r3, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 28


 849 0046 03D0     		beq	.L40
 674:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 675:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 850              		.loc 1 675 0
 851 0048 FB69     		ldr	r3, [r7, #28]
 852 004a 181C     		mov	r0, r3
 853 004c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 854              	.L40:
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 855              		.loc 1 669 0 discriminator 2
 856 0050 FB69     		ldr	r3, [r7, #28]
 857 0052 0133     		add	r3, r3, #1
 858 0054 FB61     		str	r3, [r7, #28]
 859              	.L39:
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 860              		.loc 1 669 0 is_stmt 0 discriminator 1
 861 0056 FA69     		ldr	r2, [r7, #28]
 862 0058 3B69     		ldr	r3, [r7, #16]
 863 005a 9A42     		cmp	r2, r3
 864 005c E9D3     		bcc	.L41
 676:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 677:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 865              		.loc 1 678 0 is_stmt 1
 866 005e BD46     		mov	sp, r7
 867 0060 08B0     		add	sp, sp, #32
 868              		@ sp needed
 869 0062 80BD     		pop	{r7, pc}
 870              	.L43:
 871              		.align	2
 872              	.L42:
 873 0064 00000000 		.word	CapSense_numberOfSensors
 874 0068 00000000 		.word	CapSense_rawDataIndex
 875 006c 00000000 		.word	CapSense_sensorEnableMask
 876              		.cfi_endproc
 877              	.LFE42:
 878              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 879              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 880              		.align	2
 881              		.global	CapSense_GetBaselineData
 882              		.code	16
 883              		.thumb_func
 884              		.type	CapSense_GetBaselineData, %function
 885              	CapSense_GetBaselineData:
 886              	.LFB43:
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 29


 691:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 887              		.loc 1 702 0
 888              		.cfi_startproc
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 897 0006 7860     		str	r0, [r7, #4]
 703:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 898              		.loc 1 703 0
 899 0008 034B     		ldr	r3, .L46
 900 000a 7A68     		ldr	r2, [r7, #4]
 901 000c 5200     		lsl	r2, r2, #1
 902 000e D35A     		ldrh	r3, [r2, r3]
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 903              		.loc 1 704 0
 904 0010 181C     		mov	r0, r3
 905 0012 BD46     		mov	sp, r7
 906 0014 02B0     		add	sp, sp, #8
 907              		@ sp needed
 908 0016 80BD     		pop	{r7, pc}
 909              	.L47:
 910              		.align	2
 911              	.L46:
 912 0018 00000000 		.word	CapSense_sensorBaseline
 913              		.cfi_endproc
 914              	.LFE43:
 915              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 916              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 917              		.align	2
 918              		.global	CapSense_SetBaselineData
 919              		.code	16
 920              		.thumb_func
 921              		.type	CapSense_SetBaselineData, %function
 922              	CapSense_SetBaselineData:
 923              	.LFB44:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 30


 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 924              		.loc 1 729 0
 925              		.cfi_startproc
 926 0000 80B5     		push	{r7, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 82B0     		sub	sp, sp, #8
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
 935 0008 0A1C     		mov	r2, r1
 936 000a BB1C     		add	r3, r7, #2
 937 000c 1A80     		strh	r2, [r3]
 730:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 938              		.loc 1 730 0
 939 000e 044B     		ldr	r3, .L49
 940 0010 7A68     		ldr	r2, [r7, #4]
 941 0012 5200     		lsl	r2, r2, #1
 942 0014 B91C     		add	r1, r7, #2
 943 0016 0988     		ldrh	r1, [r1]
 944 0018 D152     		strh	r1, [r2, r3]
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 945              		.loc 1 731 0
 946 001a BD46     		mov	sp, r7
 947 001c 02B0     		add	sp, sp, #8
 948              		@ sp needed
 949 001e 80BD     		pop	{r7, pc}
 950              	.L50:
 951              		.align	2
 952              	.L49:
 953 0020 00000000 		.word	CapSense_sensorBaseline
 954              		.cfi_endproc
 955              	.LFE44:
 956              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 957              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 958              		.align	2
 959              		.global	CapSense_GetDiffCountData
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 31


 960              		.code	16
 961              		.thumb_func
 962              		.type	CapSense_GetDiffCountData, %function
 963              	CapSense_GetDiffCountData:
 964              	.LFB45:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 965              		.loc 1 756 0
 966              		.cfi_startproc
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 82B0     		sub	sp, sp, #8
 972              		.cfi_def_cfa_offset 16
 973 0004 00AF     		add	r7, sp, #0
 974              		.cfi_def_cfa_register 7
 975 0006 7860     		str	r0, [r7, #4]
 757:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 976              		.loc 1 757 0
 977 0008 034A     		ldr	r2, .L53
 978 000a 7B68     		ldr	r3, [r7, #4]
 979 000c D318     		add	r3, r2, r3
 980 000e 1B78     		ldrb	r3, [r3]
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 981              		.loc 1 758 0
 982 0010 181C     		mov	r0, r3
 983 0012 BD46     		mov	sp, r7
 984 0014 02B0     		add	sp, sp, #8
 985              		@ sp needed
 986 0016 80BD     		pop	{r7, pc}
 987              	.L54:
 988              		.align	2
 989              	.L53:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 32


 990 0018 00000000 		.word	CapSense_sensorSignal
 991              		.cfi_endproc
 992              	.LFE45:
 993              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 994              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 995              		.align	2
 996              		.global	CapSense_SetDiffCountData
 997              		.code	16
 998              		.thumb_func
 999              		.type	CapSense_SetDiffCountData, %function
 1000              	CapSense_SetDiffCountData:
 1001              	.LFB46:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1002              		.loc 1 783 0
 1003              		.cfi_startproc
 1004 0000 80B5     		push	{r7, lr}
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 82B0     		sub	sp, sp, #8
 1009              		.cfi_def_cfa_offset 16
 1010 0004 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
 1012 0006 7860     		str	r0, [r7, #4]
 1013 0008 0A1C     		mov	r2, r1
 1014 000a FB1C     		add	r3, r7, #3
 1015 000c 1A70     		strb	r2, [r3]
 784:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1016              		.loc 1 784 0
 1017 000e 044A     		ldr	r2, .L56
 1018 0010 7B68     		ldr	r3, [r7, #4]
 1019 0012 D318     		add	r3, r2, r3
 1020 0014 FA1C     		add	r2, r7, #3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 33


 1021 0016 1278     		ldrb	r2, [r2]
 1022 0018 1A70     		strb	r2, [r3]
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1023              		.loc 1 785 0
 1024 001a BD46     		mov	sp, r7
 1025 001c 02B0     		add	sp, sp, #8
 1026              		@ sp needed
 1027 001e 80BD     		pop	{r7, pc}
 1028              	.L57:
 1029              		.align	2
 1030              	.L56:
 1031 0020 00000000 		.word	CapSense_sensorSignal
 1032              		.cfi_endproc
 1033              	.LFE46:
 1034              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1035              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1036              		.align	2
 1037              		.global	CapSense_GetFingerThreshold
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	CapSense_GetFingerThreshold, %function
 1041              	CapSense_GetFingerThreshold:
 1042              	.LFB47:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1043              		.loc 1 810 0
 1044              		.cfi_startproc
 1045 0000 80B5     		push	{r7, lr}
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 82B0     		sub	sp, sp, #8
 1050              		.cfi_def_cfa_offset 16
 1051 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 34


 1052              		.cfi_def_cfa_register 7
 1053 0006 7860     		str	r0, [r7, #4]
 811:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1054              		.loc 1 811 0
 1055 0008 034A     		ldr	r2, .L60
 1056 000a 7B68     		ldr	r3, [r7, #4]
 1057 000c D318     		add	r3, r2, r3
 1058 000e 1B78     		ldrb	r3, [r3]
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1059              		.loc 1 812 0
 1060 0010 181C     		mov	r0, r3
 1061 0012 BD46     		mov	sp, r7
 1062 0014 02B0     		add	sp, sp, #8
 1063              		@ sp needed
 1064 0016 80BD     		pop	{r7, pc}
 1065              	.L61:
 1066              		.align	2
 1067              	.L60:
 1068 0018 00000000 		.word	CapSense_fingerThreshold
 1069              		.cfi_endproc
 1070              	.LFE47:
 1071              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1072              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1073              		.align	2
 1074              		.global	CapSense_GetNoiseThreshold
 1075              		.code	16
 1076              		.thumb_func
 1077              		.type	CapSense_GetNoiseThreshold, %function
 1078              	CapSense_GetNoiseThreshold:
 1079              	.LFB48:
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1080              		.loc 1 837 0
 1081              		.cfi_startproc
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 35


 1082 0000 80B5     		push	{r7, lr}
 1083              		.cfi_def_cfa_offset 8
 1084              		.cfi_offset 7, -8
 1085              		.cfi_offset 14, -4
 1086 0002 82B0     		sub	sp, sp, #8
 1087              		.cfi_def_cfa_offset 16
 1088 0004 00AF     		add	r7, sp, #0
 1089              		.cfi_def_cfa_register 7
 1090 0006 7860     		str	r0, [r7, #4]
 838:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1091              		.loc 1 838 0
 1092 0008 034A     		ldr	r2, .L64
 1093 000a 7B68     		ldr	r3, [r7, #4]
 1094 000c D318     		add	r3, r2, r3
 1095 000e 1B78     		ldrb	r3, [r3]
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1096              		.loc 1 839 0
 1097 0010 181C     		mov	r0, r3
 1098 0012 BD46     		mov	sp, r7
 1099 0014 02B0     		add	sp, sp, #8
 1100              		@ sp needed
 1101 0016 80BD     		pop	{r7, pc}
 1102              	.L65:
 1103              		.align	2
 1104              	.L64:
 1105 0018 00000000 		.word	CapSense_noiseThreshold
 1106              		.cfi_endproc
 1107              	.LFE48:
 1108              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1109              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1110              		.align	2
 1111              		.global	CapSense_GetFingerHysteresis
 1112              		.code	16
 1113              		.thumb_func
 1114              		.type	CapSense_GetFingerHysteresis, %function
 1115              	CapSense_GetFingerHysteresis:
 1116              	.LFB49:
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 36


 860:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1117              		.loc 1 865 0
 1118              		.cfi_startproc
 1119 0000 80B5     		push	{r7, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 7, -8
 1122              		.cfi_offset 14, -4
 1123 0002 82B0     		sub	sp, sp, #8
 1124              		.cfi_def_cfa_offset 16
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 866:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1128              		.loc 1 866 0
 1129 0008 034A     		ldr	r2, .L68
 1130 000a 7B68     		ldr	r3, [r7, #4]
 1131 000c D318     		add	r3, r2, r3
 1132 000e 1B78     		ldrb	r3, [r3]
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1133              		.loc 1 867 0
 1134 0010 181C     		mov	r0, r3
 1135 0012 BD46     		mov	sp, r7
 1136 0014 02B0     		add	sp, sp, #8
 1137              		@ sp needed
 1138 0016 80BD     		pop	{r7, pc}
 1139              	.L69:
 1140              		.align	2
 1141              	.L68:
 1142 0018 00000000 		.word	CapSense_hysteresis
 1143              		.cfi_endproc
 1144              	.LFE49:
 1145              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1146              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1147              		.align	2
 1148              		.global	CapSense_GetNegativeNoiseThreshold
 1149              		.code	16
 1150              		.thumb_func
 1151              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1152              	CapSense_GetNegativeNoiseThreshold:
 1153              	.LFB50:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 37


 880:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1154              		.loc 1 893 0
 1155              		.cfi_startproc
 1156 0000 80B5     		push	{r7, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 82B0     		sub	sp, sp, #8
 1161              		.cfi_def_cfa_offset 16
 1162 0004 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 1164 0006 7860     		str	r0, [r7, #4]
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1165              		.loc 1 895 0
 1166 0008 034A     		ldr	r2, .L72
 1167 000a 7B68     		ldr	r3, [r7, #4]
 1168 000c D318     		add	r3, r2, r3
 1169 000e 1B78     		ldrb	r3, [r3]
 896:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 898:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 899:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1170              		.loc 1 899 0
 1171 0010 181C     		mov	r0, r3
 1172 0012 BD46     		mov	sp, r7
 1173 0014 02B0     		add	sp, sp, #8
 1174              		@ sp needed
 1175 0016 80BD     		pop	{r7, pc}
 1176              	.L73:
 1177              		.align	2
 1178              	.L72:
 1179 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1180              		.cfi_endproc
 1181              	.LFE50:
 1182              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1183              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1184              		.align	2
 1185              		.global	CapSense_SetFingerThreshold
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	CapSense_SetFingerThreshold, %function
 1189              	CapSense_SetFingerThreshold:
 1190              	.LFB51:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 38


 900:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 902:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1191              		.loc 1 926 0
 1192              		.cfi_startproc
 1193 0000 80B5     		push	{r7, lr}
 1194              		.cfi_def_cfa_offset 8
 1195              		.cfi_offset 7, -8
 1196              		.cfi_offset 14, -4
 1197 0002 82B0     		sub	sp, sp, #8
 1198              		.cfi_def_cfa_offset 16
 1199 0004 00AF     		add	r7, sp, #0
 1200              		.cfi_def_cfa_register 7
 1201 0006 7860     		str	r0, [r7, #4]
 1202 0008 0A1C     		mov	r2, r1
 1203 000a FB1C     		add	r3, r7, #3
 1204 000c 1A70     		strb	r2, [r3]
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1205              		.loc 1 927 0
 1206 000e 044A     		ldr	r2, .L75
 1207 0010 7B68     		ldr	r3, [r7, #4]
 1208 0012 D318     		add	r3, r2, r3
 1209 0014 FA1C     		add	r2, r7, #3
 1210 0016 1278     		ldrb	r2, [r2]
 1211 0018 1A70     		strb	r2, [r3]
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1212              		.loc 1 928 0
 1213 001a BD46     		mov	sp, r7
 1214 001c 02B0     		add	sp, sp, #8
 1215              		@ sp needed
 1216 001e 80BD     		pop	{r7, pc}
 1217              	.L76:
 1218              		.align	2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 39


 1219              	.L75:
 1220 0020 00000000 		.word	CapSense_fingerThreshold
 1221              		.cfi_endproc
 1222              	.LFE51:
 1223              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1224              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1225              		.align	2
 1226              		.global	CapSense_SetNoiseThreshold
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	CapSense_SetNoiseThreshold, %function
 1230              	CapSense_SetNoiseThreshold:
 1231              	.LFB52:
 929:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 930:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1232              		.loc 1 954 0
 1233              		.cfi_startproc
 1234 0000 80B5     		push	{r7, lr}
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238 0002 82B0     		sub	sp, sp, #8
 1239              		.cfi_def_cfa_offset 16
 1240 0004 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
 1242 0006 7860     		str	r0, [r7, #4]
 1243 0008 0A1C     		mov	r2, r1
 1244 000a FB1C     		add	r3, r7, #3
 1245 000c 1A70     		strb	r2, [r3]
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1246              		.loc 1 955 0
 1247 000e 044A     		ldr	r2, .L78
 1248 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 40


 1249 0012 D318     		add	r3, r2, r3
 1250 0014 FA1C     		add	r2, r7, #3
 1251 0016 1278     		ldrb	r2, [r2]
 1252 0018 1A70     		strb	r2, [r3]
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1253              		.loc 1 956 0
 1254 001a BD46     		mov	sp, r7
 1255 001c 02B0     		add	sp, sp, #8
 1256              		@ sp needed
 1257 001e 80BD     		pop	{r7, pc}
 1258              	.L79:
 1259              		.align	2
 1260              	.L78:
 1261 0020 00000000 		.word	CapSense_noiseThreshold
 1262              		.cfi_endproc
 1263              	.LFE52:
 1264              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1265              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1266              		.align	2
 1267              		.global	CapSense_SetFingerHysteresis
 1268              		.code	16
 1269              		.thumb_func
 1270              		.type	CapSense_SetFingerHysteresis, %function
 1271              	CapSense_SetFingerHysteresis:
 1272              	.LFB53:
 957:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1273              		.loc 1 982 0
 1274              		.cfi_startproc
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 41


 1279 0002 82B0     		sub	sp, sp, #8
 1280              		.cfi_def_cfa_offset 16
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 1284 0008 0A1C     		mov	r2, r1
 1285 000a FB1C     		add	r3, r7, #3
 1286 000c 1A70     		strb	r2, [r3]
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1287              		.loc 1 983 0
 1288 000e 044A     		ldr	r2, .L81
 1289 0010 7B68     		ldr	r3, [r7, #4]
 1290 0012 D318     		add	r3, r2, r3
 1291 0014 FA1C     		add	r2, r7, #3
 1292 0016 1278     		ldrb	r2, [r2]
 1293 0018 1A70     		strb	r2, [r3]
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1294              		.loc 1 984 0
 1295 001a BD46     		mov	sp, r7
 1296 001c 02B0     		add	sp, sp, #8
 1297              		@ sp needed
 1298 001e 80BD     		pop	{r7, pc}
 1299              	.L82:
 1300              		.align	2
 1301              	.L81:
 1302 0020 00000000 		.word	CapSense_hysteresis
 1303              		.cfi_endproc
 1304              	.LFE53:
 1305              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1306              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1307              		.align	2
 1308              		.global	CapSense_SetNegativeNoiseThreshold
 1309              		.code	16
 1310              		.thumb_func
 1311              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1312              	CapSense_SetNegativeNoiseThreshold:
 1313              	.LFB54:
 985:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 986:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 42


1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1314              		.loc 1 1011 0
 1315              		.cfi_startproc
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 82B0     		sub	sp, sp, #8
 1321              		.cfi_def_cfa_offset 16
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 1325 0008 0A1C     		mov	r2, r1
 1326 000a FB1C     		add	r3, r7, #3
 1327 000c 1A70     		strb	r2, [r3]
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1328              		.loc 1 1012 0
 1329 000e 044A     		ldr	r2, .L84
 1330 0010 7B68     		ldr	r3, [r7, #4]
 1331 0012 D318     		add	r3, r2, r3
 1332 0014 FA1C     		add	r2, r7, #3
 1333 0016 1278     		ldrb	r2, [r2]
 1334 0018 1A70     		strb	r2, [r3]
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1335              		.loc 1 1013 0
 1336 001a BD46     		mov	sp, r7
 1337 001c 02B0     		add	sp, sp, #8
 1338              		@ sp needed
 1339 001e 80BD     		pop	{r7, pc}
 1340              	.L85:
 1341              		.align	2
 1342              	.L84:
 1343 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1344              		.cfi_endproc
 1345              	.LFE54:
 1346              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1347              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1348              		.align	2
 1349              		.global	CapSense_SetDebounce
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	CapSense_SetDebounce, %function
 1353              	CapSense_SetDebounce:
 1354              	.LFB55:
1014:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1015:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 43


1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1355              		.loc 1 1039 0
 1356              		.cfi_startproc
 1357 0000 80B5     		push	{r7, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 82B0     		sub	sp, sp, #8
 1362              		.cfi_def_cfa_offset 16
 1363 0004 00AF     		add	r7, sp, #0
 1364              		.cfi_def_cfa_register 7
 1365 0006 7860     		str	r0, [r7, #4]
 1366 0008 0A1C     		mov	r2, r1
 1367 000a FB1C     		add	r3, r7, #3
 1368 000c 1A70     		strb	r2, [r3]
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1369              		.loc 1 1040 0
 1370 000e 044A     		ldr	r2, .L87
 1371 0010 7B68     		ldr	r3, [r7, #4]
 1372 0012 D318     		add	r3, r2, r3
 1373 0014 FA1C     		add	r2, r7, #3
 1374 0016 1278     		ldrb	r2, [r2]
 1375 0018 1A70     		strb	r2, [r3]
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1376              		.loc 1 1041 0
 1377 001a BD46     		mov	sp, r7
 1378 001c 02B0     		add	sp, sp, #8
 1379              		@ sp needed
 1380 001e 80BD     		pop	{r7, pc}
 1381              	.L88:
 1382              		.align	2
 1383              	.L87:
 1384 0020 00000000 		.word	CapSense_debounce
 1385              		.cfi_endproc
 1386              	.LFE55:
 1387              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1388              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1389              		.align	2
 1390              		.global	CapSense_SetLowBaselineReset
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 44


 1391              		.code	16
 1392              		.thumb_func
 1393              		.type	CapSense_SetLowBaselineReset, %function
 1394              	CapSense_SetLowBaselineReset:
 1395              	.LFB56:
1042:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1043:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1063:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1064:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1065:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1066:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1067:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1396              		.loc 1 1067 0
 1397              		.cfi_startproc
 1398 0000 80B5     		push	{r7, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 82B0     		sub	sp, sp, #8
 1403              		.cfi_def_cfa_offset 16
 1404 0004 00AF     		add	r7, sp, #0
 1405              		.cfi_def_cfa_register 7
 1406 0006 7860     		str	r0, [r7, #4]
 1407 0008 0A1C     		mov	r2, r1
 1408 000a FB1C     		add	r3, r7, #3
 1409 000c 1A70     		strb	r2, [r3]
1068:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1410              		.loc 1 1068 0
 1411 000e 044A     		ldr	r2, .L90
 1412 0010 7B68     		ldr	r3, [r7, #4]
 1413 0012 D318     		add	r3, r2, r3
 1414 0014 FA1C     		add	r2, r7, #3
 1415 0016 1278     		ldrb	r2, [r2]
 1416 0018 1A70     		strb	r2, [r3]
1069:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1417              		.loc 1 1069 0
 1418 001a BD46     		mov	sp, r7
 1419 001c 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 45


 1420              		@ sp needed
 1421 001e 80BD     		pop	{r7, pc}
 1422              	.L91:
 1423              		.align	2
 1424              	.L90:
 1425 0020 00000000 		.word	CapSense_lowBaselineReset
 1426              		.cfi_endproc
 1427              	.LFE56:
 1428              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1429              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1430              		.align	2
 1431              		.global	CapSense_CheckIsSensorActive
 1432              		.code	16
 1433              		.thumb_func
 1434              		.type	CapSense_CheckIsSensorActive, %function
 1435              	CapSense_CheckIsSensorActive:
 1436              	.LFB57:
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 46


1110:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1111:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1437              		.loc 1 1113 0
 1438              		.cfi_startproc
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 84B0     		sub	sp, sp, #16
 1444              		.cfi_def_cfa_offset 24
 1445 0004 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 1447 0006 7860     		str	r0, [r7, #4]
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1116:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1448              		.loc 1 1123 0
 1449 0008 0F23     		mov	r3, #15
 1450 000a FB18     		add	r3, r7, r3
 1451 000c 4249     		ldr	r1, .L101
 1452 000e 7A68     		ldr	r2, [r7, #4]
 1453 0010 8A18     		add	r2, r1, r2
 1454 0012 1278     		ldrb	r2, [r2]
 1455 0014 1A70     		strb	r2, [r3]
1124:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1456              		.loc 1 1125 0
 1457 0016 0F23     		mov	r3, #15
 1458 0018 FB18     		add	r3, r7, r3
 1459 001a 1A78     		ldrb	r2, [r3]
 1460 001c 0E23     		mov	r3, #14
 1461 001e FB18     		add	r3, r7, r3
 1462 0020 3E49     		ldr	r1, .L101+4
 1463 0022 8A5C     		ldrb	r2, [r1, r2]
 1464 0024 1A70     		strb	r2, [r3]
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1465              		.loc 1 1126 0
 1466 0026 0F23     		mov	r3, #15
 1467 0028 FB18     		add	r3, r7, r3
 1468 002a 1A78     		ldrb	r2, [r3]
 1469 002c 0D23     		mov	r3, #13
 1470 002e FB18     		add	r3, r7, r3
 1471 0030 3B49     		ldr	r1, .L101+8
 1472 0032 8A5C     		ldrb	r2, [r1, r2]
 1473 0034 1A70     		strb	r2, [r3]
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1474              		.loc 1 1127 0
 1475 0036 0F23     		mov	r3, #15
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 47


 1476 0038 FB18     		add	r3, r7, r3
 1477 003a 1A78     		ldrb	r2, [r3]
 1478 003c 0C23     		mov	r3, #12
 1479 003e FB18     		add	r3, r7, r3
 1480 0040 3849     		ldr	r1, .L101+12
 1481 0042 8A5C     		ldrb	r2, [r1, r2]
 1482 0044 1A70     		strb	r2, [r3]
1128:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
 1483              		.loc 1 1129 0
 1484 0046 0B23     		mov	r3, #11
 1485 0048 FB18     		add	r3, r7, r3
 1486 004a 0F22     		mov	r2, #15
 1487 004c BA18     		add	r2, r7, r2
 1488 004e 1278     		ldrb	r2, [r2]
 1489 0050 1A70     		strb	r2, [r3]
1130:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1131:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1490              		.loc 1 1133 0
 1491 0052 354A     		ldr	r2, .L101+16
 1492 0054 7B68     		ldr	r3, [r7, #4]
 1493 0056 101C     		mov	r0, r2
 1494 0058 191C     		mov	r1, r3
 1495 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1496 005e 031E     		sub	r3, r0, #0
 1497 0060 1DD0     		beq	.L93
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1498              		.loc 1 1136 0
 1499 0062 324A     		ldr	r2, .L101+20
 1500 0064 7B68     		ldr	r3, [r7, #4]
 1501 0066 D318     		add	r3, r2, r3
 1502 0068 1B78     		ldrb	r3, [r3]
 1503 006a 191C     		mov	r1, r3
 1504 006c 0E23     		mov	r3, #14
 1505 006e FB18     		add	r3, r7, r3
 1506 0070 1A78     		ldrb	r2, [r3]
 1507 0072 0D23     		mov	r3, #13
 1508 0074 FB18     		add	r3, r7, r3
 1509 0076 1B78     		ldrb	r3, [r3]
 1510 0078 D31A     		sub	r3, r2, r3
 1511 007a 9942     		cmp	r1, r3
 1512 007c 3DDA     		bge	.L95
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1513              		.loc 1 1138 0
 1514 007e 2A4A     		ldr	r2, .L101+16
 1515 0080 7B68     		ldr	r3, [r7, #4]
 1516 0082 101C     		mov	r0, r2
 1517 0084 191C     		mov	r1, r3
 1518 0086 0022     		mov	r2, #0
 1519 0088 FFF7FEFF 		bl	CapSense_SetBitValue
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 48


 1520              		.loc 1 1140 0
 1521 008c 0B23     		mov	r3, #11
 1522 008e FB18     		add	r3, r7, r3
 1523 0090 1B78     		ldrb	r3, [r3]
 1524 0092 274A     		ldr	r2, .L101+24
 1525 0094 0C21     		mov	r1, #12
 1526 0096 7918     		add	r1, r7, r1
 1527 0098 0978     		ldrb	r1, [r1]
 1528 009a D154     		strb	r1, [r2, r3]
 1529 009c 2DE0     		b	.L95
 1530              	.L93:
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1531              		.loc 1 1146 0
 1532 009e 234A     		ldr	r2, .L101+20
 1533 00a0 7B68     		ldr	r3, [r7, #4]
 1534 00a2 D318     		add	r3, r2, r3
 1535 00a4 1B78     		ldrb	r3, [r3]
 1536 00a6 191C     		mov	r1, r3
 1537 00a8 0E23     		mov	r3, #14
 1538 00aa FB18     		add	r3, r7, r3
 1539 00ac 1A78     		ldrb	r2, [r3]
 1540 00ae 0D23     		mov	r3, #13
 1541 00b0 FB18     		add	r3, r7, r3
 1542 00b2 1B78     		ldrb	r3, [r3]
 1543 00b4 D318     		add	r3, r2, r3
 1544 00b6 9942     		cmp	r1, r3
 1545 00b8 17DB     		blt	.L96
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1546              		.loc 1 1148 0
 1547 00ba 0B23     		mov	r3, #11
 1548 00bc FB18     		add	r3, r7, r3
 1549 00be 1B78     		ldrb	r3, [r3]
 1550 00c0 1B4A     		ldr	r2, .L101+24
 1551 00c2 D25C     		ldrb	r2, [r2, r3]
 1552 00c4 013A     		sub	r2, r2, #1
 1553 00c6 D1B2     		uxtb	r1, r2
 1554 00c8 194A     		ldr	r2, .L101+24
 1555 00ca D154     		strb	r1, [r2, r3]
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1556              		.loc 1 1150 0
 1557 00cc 0B23     		mov	r3, #11
 1558 00ce FB18     		add	r3, r7, r3
 1559 00d0 1B78     		ldrb	r3, [r3]
 1560 00d2 174A     		ldr	r2, .L101+24
 1561 00d4 D35C     		ldrb	r3, [r2, r3]
 1562 00d6 002B     		cmp	r3, #0
 1563 00d8 0FD1     		bne	.L95
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1564              		.loc 1 1152 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 49


 1565 00da 134A     		ldr	r2, .L101+16
 1566 00dc 7B68     		ldr	r3, [r7, #4]
 1567 00de 101C     		mov	r0, r2
 1568 00e0 191C     		mov	r1, r3
 1569 00e2 0122     		mov	r2, #1
 1570 00e4 FFF7FEFF 		bl	CapSense_SetBitValue
 1571 00e8 07E0     		b	.L95
 1572              	.L96:
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1573              		.loc 1 1158 0
 1574 00ea 0B23     		mov	r3, #11
 1575 00ec FB18     		add	r3, r7, r3
 1576 00ee 1B78     		ldrb	r3, [r3]
 1577 00f0 0F4A     		ldr	r2, .L101+24
 1578 00f2 0C21     		mov	r1, #12
 1579 00f4 7918     		add	r1, r7, r1
 1580 00f6 0978     		ldrb	r1, [r1]
 1581 00f8 D154     		strb	r1, [r2, r3]
 1582              	.L95:
1159:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1162:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1583              		.loc 1 1162 0
 1584 00fa 0B4A     		ldr	r2, .L101+16
 1585 00fc 7B68     		ldr	r3, [r7, #4]
 1586 00fe 101C     		mov	r0, r2
 1587 0100 191C     		mov	r1, r3
 1588 0102 FFF7FEFF 		bl	CapSense_GetBitValue
 1589 0106 031E     		sub	r3, r0, #0
 1590 0108 01D0     		beq	.L98
 1591              		.loc 1 1162 0 is_stmt 0 discriminator 1
 1592 010a 0123     		mov	r3, #1
 1593 010c 00E0     		b	.L99
 1594              	.L98:
 1595              		.loc 1 1162 0 discriminator 2
 1596 010e 0023     		mov	r3, #0
 1597              	.L99:
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1598              		.loc 1 1163 0 is_stmt 1 discriminator 4
 1599 0110 181C     		mov	r0, r3
 1600 0112 BD46     		mov	sp, r7
 1601 0114 04B0     		add	sp, sp, #16
 1602              		@ sp needed
 1603 0116 80BD     		pop	{r7, pc}
 1604              	.L102:
 1605              		.align	2
 1606              	.L101:
 1607 0118 00000000 		.word	CapSense_widgetNumber
 1608 011c 00000000 		.word	CapSense_fingerThreshold
 1609 0120 00000000 		.word	CapSense_hysteresis
 1610 0124 00000000 		.word	CapSense_debounce
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 50


 1611 0128 00000000 		.word	CapSense_sensorOnMask
 1612 012c 00000000 		.word	CapSense_sensorSignal
 1613 0130 24000000 		.word	CapSense_debounceCounter
 1614              		.cfi_endproc
 1615              	.LFE57:
 1616              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1617              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1618              		.align	2
 1619              		.global	CapSense_CheckIsWidgetActive
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	CapSense_CheckIsWidgetActive, %function
 1623              	CapSense_CheckIsWidgetActive:
 1624              	.LFB58:
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1194:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1195:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1625              		.loc 1 1195 0
 1626              		.cfi_startproc
 1627 0000 80B5     		push	{r7, lr}
 1628              		.cfi_def_cfa_offset 8
 1629              		.cfi_offset 7, -8
 1630              		.cfi_offset 14, -4
 1631 0002 86B0     		sub	sp, sp, #24
 1632              		.cfi_def_cfa_offset 32
 1633 0004 00AF     		add	r7, sp, #0
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 51


1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1636              		.loc 1 1196 0
 1637 0008 114A     		ldr	r2, .L107
 1638 000a 7B68     		ldr	r3, [r7, #4]
 1639 000c D318     		add	r3, r2, r3
 1640 000e 1B78     		ldrb	r3, [r3]
 1641 0010 7B61     		str	r3, [r7, #20]
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1642              		.loc 1 1197 0
 1643 0012 104A     		ldr	r2, .L107+4
 1644 0014 7B68     		ldr	r3, [r7, #4]
 1645 0016 D318     		add	r3, r2, r3
 1646 0018 1B78     		ldrb	r3, [r3]
 1647 001a 1A1C     		mov	r2, r3
 1648 001c 7B69     		ldr	r3, [r7, #20]
 1649 001e D318     		add	r3, r2, r3
 1650 0020 FB60     		str	r3, [r7, #12]
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1651              		.loc 1 1198 0
 1652 0022 0023     		mov	r3, #0
 1653 0024 3B61     		str	r3, [r7, #16]
 1654              	.L105:
1199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1202:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1655              		.loc 1 1203 0
 1656 0026 7B69     		ldr	r3, [r7, #20]
 1657 0028 181C     		mov	r0, r3
 1658 002a FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1659 002e 031E     		sub	r3, r0, #0
 1660 0030 01D0     		beq	.L104
1204:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1661              		.loc 1 1205 0
 1662 0032 0123     		mov	r3, #1
 1663 0034 3B61     		str	r3, [r7, #16]
 1664              	.L104:
1206:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1207:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1665              		.loc 1 1207 0
 1666 0036 7B69     		ldr	r3, [r7, #20]
 1667 0038 0133     		add	r3, r3, #1
 1668 003a 7B61     		str	r3, [r7, #20]
1208:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1209:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1669              		.loc 1 1209 0
 1670 003c 7A69     		ldr	r2, [r7, #20]
 1671 003e FB68     		ldr	r3, [r7, #12]
 1672 0040 9A42     		cmp	r2, r3
 1673 0042 F0D3     		bcc	.L105
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1213:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1674              		.loc 1 1213 0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 52


 1675 0044 3B69     		ldr	r3, [r7, #16]
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1676              		.loc 1 1214 0
 1677 0046 181C     		mov	r0, r3
 1678 0048 BD46     		mov	sp, r7
 1679 004a 06B0     		add	sp, sp, #24
 1680              		@ sp needed
 1681 004c 80BD     		pop	{r7, pc}
 1682              	.L108:
 1683 004e C046     		.align	2
 1684              	.L107:
 1685 0050 00000000 		.word	CapSense_rawDataIndex
 1686 0054 00000000 		.word	CapSense_numberOfSensors
 1687              		.cfi_endproc
 1688              	.LFE58:
 1689              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1690              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1691              		.align	2
 1692              		.global	CapSense_CheckIsAnyWidgetActive
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1696              	CapSense_CheckIsAnyWidgetActive:
 1697              	.LFB59:
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1698              		.loc 1 1241 0
 1699              		.cfi_startproc
 1700 0000 80B5     		push	{r7, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 7, -8
 1703              		.cfi_offset 14, -4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 53


 1704 0002 82B0     		sub	sp, sp, #8
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1708              		.loc 1 1244 0
 1709 0006 0023     		mov	r3, #0
 1710 0008 3B60     		str	r3, [r7]
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1711              		.loc 1 1246 0
 1712 000a 0023     		mov	r3, #0
 1713 000c 7B60     		str	r3, [r7, #4]
 1714 000e 0AE0     		b	.L110
 1715              	.L112:
1247:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1716              		.loc 1 1248 0
 1717 0010 7B68     		ldr	r3, [r7, #4]
 1718 0012 181C     		mov	r0, r3
 1719 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1720 0018 031E     		sub	r3, r0, #0
 1721 001a 01D0     		beq	.L111
1249:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1250:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1722              		.loc 1 1250 0
 1723 001c 0123     		mov	r3, #1
 1724 001e 3B60     		str	r3, [r7]
 1725              	.L111:
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1726              		.loc 1 1246 0 discriminator 2
 1727 0020 7B68     		ldr	r3, [r7, #4]
 1728 0022 0133     		add	r3, r3, #1
 1729 0024 7B60     		str	r3, [r7, #4]
 1730              	.L110:
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1731              		.loc 1 1246 0 is_stmt 0 discriminator 1
 1732 0026 7B68     		ldr	r3, [r7, #4]
 1733 0028 072B     		cmp	r3, #7
 1734 002a F1D9     		bls	.L112
1251:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1252:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1253:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1256:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1735              		.loc 1 1256 0 is_stmt 1
 1736 002c 3B68     		ldr	r3, [r7]
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1737              		.loc 1 1257 0
 1738 002e 181C     		mov	r0, r3
 1739 0030 BD46     		mov	sp, r7
 1740 0032 02B0     		add	sp, sp, #8
 1741              		@ sp needed
 1742 0034 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 54


 1743              		.cfi_endproc
 1744              	.LFE59:
 1745              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1746 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1747              		.align	2
 1748              		.global	CapSense_EnableWidget
 1749              		.code	16
 1750              		.thumb_func
 1751              		.type	CapSense_EnableWidget, %function
 1752              	CapSense_EnableWidget:
 1753              	.LFB60:
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1754              		.loc 1 1288 0
 1755              		.cfi_startproc
 1756 0000 80B5     		push	{r7, lr}
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 84B0     		sub	sp, sp, #16
 1761              		.cfi_def_cfa_offset 24
 1762 0004 00AF     		add	r7, sp, #0
 1763              		.cfi_def_cfa_register 7
 1764 0006 7860     		str	r0, [r7, #4]
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1765              		.loc 1 1290 0
 1766 0008 0F23     		mov	r3, #15
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 55


 1767 000a FB18     		add	r3, r7, r3
 1768 000c 1549     		ldr	r1, .L116
 1769 000e 7A68     		ldr	r2, [r7, #4]
 1770 0010 8A18     		add	r2, r1, r2
 1771 0012 1278     		ldrb	r2, [r2]
 1772 0014 1A70     		strb	r2, [r3]
1291:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1773              		.loc 1 1291 0
 1774 0016 144A     		ldr	r2, .L116+4
 1775 0018 7B68     		ldr	r3, [r7, #4]
 1776 001a D318     		add	r3, r2, r3
 1777 001c 1978     		ldrb	r1, [r3]
 1778 001e 0E23     		mov	r3, #14
 1779 0020 FB18     		add	r3, r7, r3
 1780 0022 0F22     		mov	r2, #15
 1781 0024 BA18     		add	r2, r7, r2
 1782 0026 1278     		ldrb	r2, [r2]
 1783 0028 8A18     		add	r2, r1, r2
 1784 002a 1A70     		strb	r2, [r3]
 1785              	.L115:
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1293:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1294:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1296:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1786              		.loc 1 1296 0 discriminator 1
 1787 002c 0F23     		mov	r3, #15
 1788 002e FB18     		add	r3, r7, r3
 1789 0030 1B78     		ldrb	r3, [r3]
 1790 0032 0E4A     		ldr	r2, .L116+8
 1791 0034 101C     		mov	r0, r2
 1792 0036 191C     		mov	r1, r3
 1793 0038 0122     		mov	r2, #1
 1794 003a FFF7FEFF 		bl	CapSense_SetBitValue
1297:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1795              		.loc 1 1297 0 discriminator 1
 1796 003e 0F23     		mov	r3, #15
 1797 0040 FB18     		add	r3, r7, r3
 1798 0042 1A78     		ldrb	r2, [r3]
 1799 0044 0F23     		mov	r3, #15
 1800 0046 FB18     		add	r3, r7, r3
 1801 0048 0132     		add	r2, r2, #1
 1802 004a 1A70     		strb	r2, [r3]
1298:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1299:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1803              		.loc 1 1299 0 discriminator 1
 1804 004c 0F23     		mov	r3, #15
 1805 004e FA18     		add	r2, r7, r3
 1806 0050 0E23     		mov	r3, #14
 1807 0052 FB18     		add	r3, r7, r3
 1808 0054 1278     		ldrb	r2, [r2]
 1809 0056 1B78     		ldrb	r3, [r3]
 1810 0058 9A42     		cmp	r2, r3
 1811 005a E7D3     		bcc	.L115
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1812              		.loc 1 1300 0
 1813 005c BD46     		mov	sp, r7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 56


 1814 005e 04B0     		add	sp, sp, #16
 1815              		@ sp needed
 1816 0060 80BD     		pop	{r7, pc}
 1817              	.L117:
 1818 0062 C046     		.align	2
 1819              	.L116:
 1820 0064 00000000 		.word	CapSense_rawDataIndex
 1821 0068 00000000 		.word	CapSense_numberOfSensors
 1822 006c 00000000 		.word	CapSense_sensorEnableMask
 1823              		.cfi_endproc
 1824              	.LFE60:
 1825              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1826              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1827              		.align	2
 1828              		.global	CapSense_DisableWidget
 1829              		.code	16
 1830              		.thumb_func
 1831              		.type	CapSense_DisableWidget, %function
 1832              	CapSense_DisableWidget:
 1833              	.LFB61:
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1834              		.loc 1 1331 0
 1835              		.cfi_startproc
 1836 0000 80B5     		push	{r7, lr}
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 57


 1840 0002 84B0     		sub	sp, sp, #16
 1841              		.cfi_def_cfa_offset 24
 1842 0004 00AF     		add	r7, sp, #0
 1843              		.cfi_def_cfa_register 7
 1844 0006 7860     		str	r0, [r7, #4]
1332:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1845              		.loc 1 1332 0
 1846 0008 0F23     		mov	r3, #15
 1847 000a FB18     		add	r3, r7, r3
 1848 000c 1549     		ldr	r1, .L120
 1849 000e 7A68     		ldr	r2, [r7, #4]
 1850 0010 8A18     		add	r2, r1, r2
 1851 0012 1278     		ldrb	r2, [r2]
 1852 0014 1A70     		strb	r2, [r3]
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1853              		.loc 1 1333 0
 1854 0016 144A     		ldr	r2, .L120+4
 1855 0018 7B68     		ldr	r3, [r7, #4]
 1856 001a D318     		add	r3, r2, r3
 1857 001c 1978     		ldrb	r1, [r3]
 1858 001e 0E23     		mov	r3, #14
 1859 0020 FB18     		add	r3, r7, r3
 1860 0022 0F22     		mov	r2, #15
 1861 0024 BA18     		add	r2, r7, r2
 1862 0026 1278     		ldrb	r2, [r2]
 1863 0028 8A18     		add	r2, r1, r2
 1864 002a 1A70     		strb	r2, [r3]
 1865              	.L119:
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1336:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1338:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1866              		.loc 1 1339 0 discriminator 1
 1867 002c 0F23     		mov	r3, #15
 1868 002e FB18     		add	r3, r7, r3
 1869 0030 1B78     		ldrb	r3, [r3]
 1870 0032 0E4A     		ldr	r2, .L120+8
 1871 0034 101C     		mov	r0, r2
 1872 0036 191C     		mov	r1, r3
 1873 0038 0022     		mov	r2, #0
 1874 003a FFF7FEFF 		bl	CapSense_SetBitValue
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1875              		.loc 1 1340 0 discriminator 1
 1876 003e 0F23     		mov	r3, #15
 1877 0040 FB18     		add	r3, r7, r3
 1878 0042 1A78     		ldrb	r2, [r3]
 1879 0044 0F23     		mov	r3, #15
 1880 0046 FB18     		add	r3, r7, r3
 1881 0048 0132     		add	r2, r2, #1
 1882 004a 1A70     		strb	r2, [r3]
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1883              		.loc 1 1342 0 discriminator 1
 1884 004c 0F23     		mov	r3, #15
 1885 004e FA18     		add	r2, r7, r3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 58


 1886 0050 0E23     		mov	r3, #14
 1887 0052 FB18     		add	r3, r7, r3
 1888 0054 1278     		ldrb	r2, [r2]
 1889 0056 1B78     		ldrb	r3, [r3]
 1890 0058 9A42     		cmp	r2, r3
 1891 005a E7D3     		bcc	.L119
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1892              		.loc 1 1343 0
 1893 005c BD46     		mov	sp, r7
 1894 005e 04B0     		add	sp, sp, #16
 1895              		@ sp needed
 1896 0060 80BD     		pop	{r7, pc}
 1897              	.L121:
 1898 0062 C046     		.align	2
 1899              	.L120:
 1900 0064 00000000 		.word	CapSense_rawDataIndex
 1901 0068 00000000 		.word	CapSense_numberOfSensors
 1902 006c 00000000 		.word	CapSense_sensorEnableMask
 1903              		.cfi_endproc
 1904              	.LFE61:
 1905              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1906              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1907              		.align	2
 1908              		.global	CapSense_MedianFilter
 1909              		.code	16
 1910              		.thumb_func
 1911              		.type	CapSense_MedianFilter, %function
 1912              	CapSense_MedianFilter:
 1913              	.LFB62:
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1345:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1346:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 59


1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1394:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 60


1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1431:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1436:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1444:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1458:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1459:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 61


1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1509:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1535:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1538:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1541:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 62


1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1547:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1566:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1571:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1575:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1593:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1599:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 63


1600:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1630:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 64


1657:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1669:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1682:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1693:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1705:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1708:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1711:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1712:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1713:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 65


1714:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1755:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1761:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1768:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 66


1771:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1785:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1792:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1798:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1805:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1814:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1825:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 67


1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1845:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1859:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1870:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1881:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 68


1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1895:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1910:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1911:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1914:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1915:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1916:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1917:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 69


1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1960:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1967:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1972:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1979:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1985:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1992:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 70


1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2001:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2012:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2032:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2047:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 71


2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2058:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2069:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2083:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2089:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2098:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2101:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2102:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2103:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2104:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 72


2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 73


2170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2182:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2195:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2206:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2217:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 74


2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2254:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2258:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2269:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2278:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 75


2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2289:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2294:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2305:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2310:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2314:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2321:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2338:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 76


2341:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2349:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2352:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2353:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2354:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2355:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1914              		.loc 1 2383 0
 1915              		.cfi_startproc
 1916 0000 90B5     		push	{r4, r7, lr}
 1917              		.cfi_def_cfa_offset 12
 1918              		.cfi_offset 4, -12
 1919              		.cfi_offset 7, -8
 1920              		.cfi_offset 14, -4
 1921 0002 85B0     		sub	sp, sp, #20
 1922              		.cfi_def_cfa_offset 32
 1923 0004 00AF     		add	r7, sp, #0
 1924              		.cfi_def_cfa_register 7
 1925 0006 041C     		mov	r4, r0
 1926 0008 081C     		mov	r0, r1
 1927 000a 111C     		mov	r1, r2
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 77


 1928 000c BB1D     		add	r3, r7, #6
 1929 000e 221C     		add	r2, r4, #0
 1930 0010 1A80     		strh	r2, [r3]
 1931 0012 3B1D     		add	r3, r7, #4
 1932 0014 021C     		add	r2, r0, #0
 1933 0016 1A80     		strh	r2, [r3]
 1934 0018 BB1C     		add	r3, r7, #2
 1935 001a 0A1C     		add	r2, r1, #0
 1936 001c 1A80     		strh	r2, [r3]
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1937              		.loc 1 2386 0
 1938 001e BA1D     		add	r2, r7, #6
 1939 0020 3B1D     		add	r3, r7, #4
 1940 0022 1288     		ldrh	r2, [r2]
 1941 0024 1B88     		ldrh	r3, [r3]
 1942 0026 9A42     		cmp	r2, r3
 1943 0028 0DD9     		bls	.L123
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1944              		.loc 1 2388 0
 1945 002a 0E23     		mov	r3, #14
 1946 002c FB18     		add	r3, r7, r3
 1947 002e 3A1D     		add	r2, r7, #4
 1948 0030 1288     		ldrh	r2, [r2]
 1949 0032 1A80     		strh	r2, [r3]
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1950              		.loc 1 2389 0
 1951 0034 3B1D     		add	r3, r7, #4
 1952 0036 BA1D     		add	r2, r7, #6
 1953 0038 1288     		ldrh	r2, [r2]
 1954 003a 1A80     		strh	r2, [r3]
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1955              		.loc 1 2390 0
 1956 003c BB1D     		add	r3, r7, #6
 1957 003e 0E22     		mov	r2, #14
 1958 0040 BA18     		add	r2, r7, r2
 1959 0042 1288     		ldrh	r2, [r2]
 1960 0044 1A80     		strh	r2, [r3]
 1961              	.L123:
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1962              		.loc 1 2393 0
 1963 0046 3A1D     		add	r2, r7, #4
 1964 0048 BB1C     		add	r3, r7, #2
 1965 004a 1288     		ldrh	r2, [r2]
 1966 004c 1B88     		ldrh	r3, [r3]
 1967 004e 9A42     		cmp	r2, r3
 1968 0050 03D9     		bls	.L124
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1969              		.loc 1 2395 0
 1970 0052 3B1D     		add	r3, r7, #4
 1971 0054 BA1C     		add	r2, r7, #2
 1972 0056 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 78


 1973 0058 1A80     		strh	r2, [r3]
 1974              	.L124:
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1975              		.loc 1 2398 0
 1976 005a 3B1D     		add	r3, r7, #4
 1977 005c BA1D     		add	r2, r7, #6
 1978 005e 1088     		ldrh	r0, [r2]
 1979 0060 1B88     		ldrh	r3, [r3]
 1980 0062 99B2     		uxth	r1, r3
 1981 0064 82B2     		uxth	r2, r0
 1982 0066 9142     		cmp	r1, r2
 1983 0068 00D2     		bcs	.L125
 1984 006a 031C     		add	r3, r0, #0
 1985              	.L125:
 1986 006c 9BB2     		uxth	r3, r3
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1987              		.loc 1 2399 0
 1988 006e 181C     		mov	r0, r3
 1989 0070 BD46     		mov	sp, r7
 1990 0072 05B0     		add	sp, sp, #20
 1991              		@ sp needed
 1992 0074 90BD     		pop	{r4, r7, pc}
 1993              		.cfi_endproc
 1994              	.LFE62:
 1995              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1996 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1997              		.align	2
 1998              		.global	CapSense_IIR4Filter
 1999              		.code	16
 2000              		.thumb_func
 2001              		.type	CapSense_IIR4Filter, %function
 2002              	CapSense_IIR4Filter:
 2003              	.LFB63:
2400:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2405:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 79


2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2437:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2439:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2440:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2441:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2474:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2477:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2478:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 80


2479:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2004              		.loc 1 2503 0
 2005              		.cfi_startproc
 2006 0000 80B5     		push	{r7, lr}
 2007              		.cfi_def_cfa_offset 8
 2008              		.cfi_offset 7, -8
 2009              		.cfi_offset 14, -4
 2010 0002 84B0     		sub	sp, sp, #16
 2011              		.cfi_def_cfa_offset 24
 2012 0004 00AF     		add	r7, sp, #0
 2013              		.cfi_def_cfa_register 7
 2014 0006 021C     		mov	r2, r0
 2015 0008 BB1D     		add	r3, r7, #6
 2016 000a 1A80     		strh	r2, [r3]
 2017 000c 3B1D     		add	r3, r7, #4
 2018 000e 0A1C     		add	r2, r1, #0
 2019 0010 1A80     		strh	r2, [r3]
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2505:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2020              		.loc 1 2507 0
 2021 0012 BB1D     		add	r3, r7, #6
 2022 0014 1A88     		ldrh	r2, [r3]
 2023 0016 3B1D     		add	r3, r7, #4
 2024 0018 1B88     		ldrh	r3, [r3]
 2025 001a D318     		add	r3, r2, r3
 2026 001c FB60     		str	r3, [r7, #12]
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2027              		.loc 1 2508 0
 2028 001e 3B1D     		add	r3, r7, #4
 2029 0020 1B88     		ldrh	r3, [r3]
 2030 0022 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 81


 2031 0024 FA68     		ldr	r2, [r7, #12]
 2032 0026 D318     		add	r3, r2, r3
 2033 0028 FB60     		str	r3, [r7, #12]
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2034              		.loc 1 2509 0
 2035 002a FB68     		ldr	r3, [r7, #12]
 2036 002c 9B08     		lsr	r3, r3, #2
 2037 002e FB60     		str	r3, [r7, #12]
2510:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2038              		.loc 1 2511 0
 2039 0030 FB68     		ldr	r3, [r7, #12]
 2040 0032 9BB2     		uxth	r3, r3
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2041              		.loc 1 2512 0
 2042 0034 181C     		mov	r0, r3
 2043 0036 BD46     		mov	sp, r7
 2044 0038 04B0     		add	sp, sp, #16
 2045              		@ sp needed
 2046 003a 80BD     		pop	{r7, pc}
 2047              		.cfi_endproc
 2048              	.LFE63:
 2049              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2050              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2051              		.align	2
 2052              		.global	CapSense_GetWidgetNumber
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	CapSense_GetWidgetNumber, %function
 2056              	CapSense_GetWidgetNumber:
 2057              	.LFB64:
2513:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2516:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2517:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2518:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 82


2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2555:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2558:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2562:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2564:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2590:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2595:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 83


2596:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2598:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2599:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2600:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2601:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2632:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2635:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2636:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2639:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 84


2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2676:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2689:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2700:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2709:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 85


2710:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2058              		.loc 1 2736 0
 2059              		.cfi_startproc
 2060 0000 80B5     		push	{r7, lr}
 2061              		.cfi_def_cfa_offset 8
 2062              		.cfi_offset 7, -8
 2063              		.cfi_offset 14, -4
 2064 0002 82B0     		sub	sp, sp, #8
 2065              		.cfi_def_cfa_offset 16
 2066 0004 00AF     		add	r7, sp, #0
 2067              		.cfi_def_cfa_register 7
 2068 0006 7860     		str	r0, [r7, #4]
2737:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2069              		.loc 1 2737 0
 2070 0008 034A     		ldr	r2, .L131
 2071 000a 7B68     		ldr	r3, [r7, #4]
 2072 000c D318     		add	r3, r2, r3
 2073 000e 1B78     		ldrb	r3, [r3]
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2074              		.loc 1 2738 0
 2075 0010 181C     		mov	r0, r3
 2076 0012 BD46     		mov	sp, r7
 2077 0014 02B0     		add	sp, sp, #8
 2078              		@ sp needed
 2079 0016 80BD     		pop	{r7, pc}
 2080              	.L132:
 2081              		.align	2
 2082              	.L131:
 2083 0018 00000000 		.word	CapSense_widgetNumber
 2084              		.cfi_endproc
 2085              	.LFE64:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 86


 2086              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2087              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2088              		.align	2
 2089              		.global	CapSense_GetLowBaselineReset
 2090              		.code	16
 2091              		.thumb_func
 2092              		.type	CapSense_GetLowBaselineReset, %function
 2093              	CapSense_GetLowBaselineReset:
 2094              	.LFB65:
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2095              		.loc 1 2762 0
 2096              		.cfi_startproc
 2097 0000 80B5     		push	{r7, lr}
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 82B0     		sub	sp, sp, #8
 2102              		.cfi_def_cfa_offset 16
 2103 0004 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
 2105 0006 7860     		str	r0, [r7, #4]
2763:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2106              		.loc 1 2763 0
 2107 0008 034A     		ldr	r2, .L135
 2108 000a 7B68     		ldr	r3, [r7, #4]
 2109 000c D318     		add	r3, r2, r3
 2110 000e 1B78     		ldrb	r3, [r3]
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2111              		.loc 1 2764 0
 2112 0010 181C     		mov	r0, r3
 2113 0012 BD46     		mov	sp, r7
 2114 0014 02B0     		add	sp, sp, #8
 2115              		@ sp needed
 2116 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 87


 2117              	.L136:
 2118              		.align	2
 2119              	.L135:
 2120 0018 00000000 		.word	CapSense_lowBaselineReset
 2121              		.cfi_endproc
 2122              	.LFE65:
 2123              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2124              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2125              		.align	2
 2126              		.global	CapSense_GetDebounce
 2127              		.code	16
 2128              		.thumb_func
 2129              		.type	CapSense_GetDebounce, %function
 2130              	CapSense_GetDebounce:
 2131              	.LFB66:
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2787:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2132              		.loc 1 2788 0
 2133              		.cfi_startproc
 2134 0000 80B5     		push	{r7, lr}
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 7, -8
 2137              		.cfi_offset 14, -4
 2138 0002 82B0     		sub	sp, sp, #8
 2139              		.cfi_def_cfa_offset 16
 2140 0004 00AF     		add	r7, sp, #0
 2141              		.cfi_def_cfa_register 7
 2142 0006 7860     		str	r0, [r7, #4]
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2143              		.loc 1 2789 0
 2144 0008 034A     		ldr	r2, .L139
 2145 000a 7B68     		ldr	r3, [r7, #4]
 2146 000c D318     		add	r3, r2, r3
 2147 000e 1B78     		ldrb	r3, [r3]
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 88


 2148              		.loc 1 2790 0
 2149 0010 181C     		mov	r0, r3
 2150 0012 BD46     		mov	sp, r7
 2151 0014 02B0     		add	sp, sp, #8
 2152              		@ sp needed
 2153 0016 80BD     		pop	{r7, pc}
 2154              	.L140:
 2155              		.align	2
 2156              	.L139:
 2157 0018 00000000 		.word	CapSense_debounce
 2158              		.cfi_endproc
 2159              	.LFE66:
 2160              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2161              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2162              		.align	2
 2163              		.global	CapSense_EnableRawDataFilters
 2164              		.code	16
 2165              		.thumb_func
 2166              		.type	CapSense_EnableRawDataFilters, %function
 2167              	CapSense_EnableRawDataFilters:
 2168              	.LFB67:
2791:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2792:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2169              		.loc 1 2814 0
 2170              		.cfi_startproc
 2171 0000 80B5     		push	{r7, lr}
 2172              		.cfi_def_cfa_offset 8
 2173              		.cfi_offset 7, -8
 2174              		.cfi_offset 14, -4
 2175 0002 00AF     		add	r7, sp, #0
 2176              		.cfi_def_cfa_register 7
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2177              		.loc 1 2815 0
 2178 0004 024B     		ldr	r3, .L142
 2179 0006 0122     		mov	r2, #1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 89


 2180 0008 1A70     		strb	r2, [r3]
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2181              		.loc 1 2816 0
 2182 000a BD46     		mov	sp, r7
 2183              		@ sp needed
 2184 000c 80BD     		pop	{r7, pc}
 2185              	.L143:
 2186 000e C046     		.align	2
 2187              	.L142:
 2188 0010 00000000 		.word	CapSense_enableRawFilters
 2189              		.cfi_endproc
 2190              	.LFE67:
 2191              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2192              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2193              		.align	2
 2194              		.global	CapSense_DisableRawDataFilters
 2195              		.code	16
 2196              		.thumb_func
 2197              		.type	CapSense_DisableRawDataFilters, %function
 2198              	CapSense_DisableRawDataFilters:
 2199              	.LFB68:
2817:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2200              		.loc 1 2839 0
 2201              		.cfi_startproc
 2202 0000 80B5     		push	{r7, lr}
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 7, -8
 2205              		.cfi_offset 14, -4
 2206 0002 00AF     		add	r7, sp, #0
 2207              		.cfi_def_cfa_register 7
2840:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2208              		.loc 1 2840 0
 2209 0004 024B     		ldr	r3, .L145
 2210 0006 0022     		mov	r2, #0
 2211 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 90


2841:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2212              		.loc 1 2841 0
 2213 000a BD46     		mov	sp, r7
 2214              		@ sp needed
 2215 000c 80BD     		pop	{r7, pc}
 2216              	.L146:
 2217 000e C046     		.align	2
 2218              	.L145:
 2219 0010 00000000 		.word	CapSense_enableRawFilters
 2220              		.cfi_endproc
 2221              	.LFE68:
 2222              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2223              		.text
 2224              	.Letext0:
 2225              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2226              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2227              		.section	.debug_info,"",%progbits
 2228              	.Ldebug_info0:
 2229 0000 9A0B0000 		.4byte	0xb9a
 2230 0004 0400     		.2byte	0x4
 2231 0006 00000000 		.4byte	.Ldebug_abbrev0
 2232 000a 04       		.byte	0x4
 2233 000b 01       		.uleb128 0x1
 2234 000c 6D080000 		.4byte	.LASF121
 2235 0010 01       		.byte	0x1
 2236 0011 22080000 		.4byte	.LASF122
 2237 0015 D5000000 		.4byte	.LASF123
 2238 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2239 001d 00000000 		.4byte	0
 2240 0021 00000000 		.4byte	.Ldebug_line0
 2241 0025 02       		.uleb128 0x2
 2242 0026 01       		.byte	0x1
 2243 0027 06       		.byte	0x6
 2244 0028 D1010000 		.4byte	.LASF0
 2245 002c 02       		.uleb128 0x2
 2246 002d 01       		.byte	0x1
 2247 002e 08       		.byte	0x8
 2248 002f 7A060000 		.4byte	.LASF1
 2249 0033 02       		.uleb128 0x2
 2250 0034 02       		.byte	0x2
 2251 0035 05       		.byte	0x5
 2252 0036 E1060000 		.4byte	.LASF2
 2253 003a 02       		.uleb128 0x2
 2254 003b 02       		.byte	0x2
 2255 003c 07       		.byte	0x7
 2256 003d E7030000 		.4byte	.LASF3
 2257 0041 02       		.uleb128 0x2
 2258 0042 04       		.byte	0x4
 2259 0043 05       		.byte	0x5
 2260 0044 55020000 		.4byte	.LASF4
 2261 0048 02       		.uleb128 0x2
 2262 0049 04       		.byte	0x4
 2263 004a 07       		.byte	0x7
 2264 004b 85030000 		.4byte	.LASF5
 2265 004f 02       		.uleb128 0x2
 2266 0050 08       		.byte	0x8
 2267 0051 05       		.byte	0x5
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 91


 2268 0052 C3010000 		.4byte	.LASF6
 2269 0056 02       		.uleb128 0x2
 2270 0057 08       		.byte	0x8
 2271 0058 07       		.byte	0x7
 2272 0059 37010000 		.4byte	.LASF7
 2273 005d 03       		.uleb128 0x3
 2274 005e 04       		.byte	0x4
 2275 005f 05       		.byte	0x5
 2276 0060 696E7400 		.ascii	"int\000"
 2277 0064 02       		.uleb128 0x2
 2278 0065 04       		.byte	0x4
 2279 0066 07       		.byte	0x7
 2280 0067 6B030000 		.4byte	.LASF8
 2281 006b 04       		.uleb128 0x4
 2282 006c 7E020000 		.4byte	.LASF9
 2283 0070 02       		.byte	0x2
 2284 0071 3801     		.2byte	0x138
 2285 0073 2C000000 		.4byte	0x2c
 2286 0077 04       		.uleb128 0x4
 2287 0078 00000000 		.4byte	.LASF10
 2288 007c 02       		.byte	0x2
 2289 007d 3901     		.2byte	0x139
 2290 007f 3A000000 		.4byte	0x3a
 2291 0083 04       		.uleb128 0x4
 2292 0084 DA020000 		.4byte	.LASF11
 2293 0088 02       		.byte	0x2
 2294 0089 3A01     		.2byte	0x13a
 2295 008b 48000000 		.4byte	0x48
 2296 008f 02       		.uleb128 0x2
 2297 0090 04       		.byte	0x4
 2298 0091 04       		.byte	0x4
 2299 0092 07060000 		.4byte	.LASF12
 2300 0096 02       		.uleb128 0x2
 2301 0097 08       		.byte	0x8
 2302 0098 04       		.byte	0x4
 2303 0099 BD020000 		.4byte	.LASF13
 2304 009d 02       		.uleb128 0x2
 2305 009e 01       		.byte	0x1
 2306 009f 08       		.byte	0x8
 2307 00a0 83070000 		.4byte	.LASF14
 2308 00a4 02       		.uleb128 0x2
 2309 00a5 04       		.byte	0x4
 2310 00a6 07       		.byte	0x7
 2311 00a7 F2040000 		.4byte	.LASF15
 2312 00ab 05       		.uleb128 0x5
 2313 00ac 5C       		.byte	0x5c
 2314 00ad 03       		.byte	0x3
 2315 00ae 2F       		.byte	0x2f
 2316 00af C8010000 		.4byte	0x1c8
 2317 00b3 06       		.uleb128 0x6
 2318 00b4 90050000 		.4byte	.LASF16
 2319 00b8 03       		.byte	0x3
 2320 00b9 31       		.byte	0x31
 2321 00ba C8010000 		.4byte	0x1c8
 2322 00be 00       		.byte	0
 2323 00bf 06       		.uleb128 0x6
 2324 00c0 9F050000 		.4byte	.LASF17
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 92


 2325 00c4 03       		.byte	0x3
 2326 00c5 32       		.byte	0x32
 2327 00c6 C8010000 		.4byte	0x1c8
 2328 00ca 04       		.byte	0x4
 2329 00cb 06       		.uleb128 0x6
 2330 00cc FA030000 		.4byte	.LASF18
 2331 00d0 03       		.byte	0x3
 2332 00d1 33       		.byte	0x33
 2333 00d2 C8010000 		.4byte	0x1c8
 2334 00d6 08       		.byte	0x8
 2335 00d7 06       		.uleb128 0x6
 2336 00d8 6F040000 		.4byte	.LASF19
 2337 00dc 03       		.byte	0x3
 2338 00dd 34       		.byte	0x34
 2339 00de C8010000 		.4byte	0x1c8
 2340 00e2 0C       		.byte	0xc
 2341 00e3 06       		.uleb128 0x6
 2342 00e4 F2060000 		.4byte	.LASF20
 2343 00e8 03       		.byte	0x3
 2344 00e9 35       		.byte	0x35
 2345 00ea C8010000 		.4byte	0x1c8
 2346 00ee 10       		.byte	0x10
 2347 00ef 06       		.uleb128 0x6
 2348 00f0 25020000 		.4byte	.LASF21
 2349 00f4 03       		.byte	0x3
 2350 00f5 36       		.byte	0x36
 2351 00f6 CE010000 		.4byte	0x1ce
 2352 00fa 14       		.byte	0x14
 2353 00fb 06       		.uleb128 0x6
 2354 00fc B2030000 		.4byte	.LASF22
 2355 0100 03       		.byte	0x3
 2356 0101 37       		.byte	0x37
 2357 0102 D9010000 		.4byte	0x1d9
 2358 0106 18       		.byte	0x18
 2359 0107 06       		.uleb128 0x6
 2360 0108 CA040000 		.4byte	.LASF23
 2361 010c 03       		.byte	0x3
 2362 010d 38       		.byte	0x38
 2363 010e C8010000 		.4byte	0x1c8
 2364 0112 1C       		.byte	0x1c
 2365 0113 06       		.uleb128 0x6
 2366 0114 88070000 		.4byte	.LASF24
 2367 0118 03       		.byte	0x3
 2368 0119 39       		.byte	0x39
 2369 011a C8010000 		.4byte	0x1c8
 2370 011e 20       		.byte	0x20
 2371 011f 06       		.uleb128 0x6
 2372 0120 47060000 		.4byte	.LASF25
 2373 0124 03       		.byte	0x3
 2374 0125 3A       		.byte	0x3a
 2375 0126 C8010000 		.4byte	0x1c8
 2376 012a 24       		.byte	0x24
 2377 012b 06       		.uleb128 0x6
 2378 012c A3040000 		.4byte	.LASF26
 2379 0130 03       		.byte	0x3
 2380 0131 3B       		.byte	0x3b
 2381 0132 DF010000 		.4byte	0x1df
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 93


 2382 0136 28       		.byte	0x28
 2383 0137 06       		.uleb128 0x6
 2384 0138 78030000 		.4byte	.LASF27
 2385 013c 03       		.byte	0x3
 2386 013d 3C       		.byte	0x3c
 2387 013e DF010000 		.4byte	0x1df
 2388 0142 2C       		.byte	0x2c
 2389 0143 06       		.uleb128 0x6
 2390 0144 71070000 		.4byte	.LASF28
 2391 0148 03       		.byte	0x3
 2392 0149 3D       		.byte	0x3d
 2393 014a DF010000 		.4byte	0x1df
 2394 014e 30       		.byte	0x30
 2395 014f 06       		.uleb128 0x6
 2396 0150 1E070000 		.4byte	.LASF29
 2397 0154 03       		.byte	0x3
 2398 0155 3E       		.byte	0x3e
 2399 0156 C8010000 		.4byte	0x1c8
 2400 015a 34       		.byte	0x34
 2401 015b 06       		.uleb128 0x6
 2402 015c 15080000 		.4byte	.LASF30
 2403 0160 03       		.byte	0x3
 2404 0161 3F       		.byte	0x3f
 2405 0162 C8010000 		.4byte	0x1c8
 2406 0166 38       		.byte	0x38
 2407 0167 06       		.uleb128 0x6
 2408 0168 6B060000 		.4byte	.LASF31
 2409 016c 03       		.byte	0x3
 2410 016d 40       		.byte	0x40
 2411 016e CE010000 		.4byte	0x1ce
 2412 0172 3C       		.byte	0x3c
 2413 0173 06       		.uleb128 0x6
 2414 0174 A5090000 		.4byte	.LASF32
 2415 0178 03       		.byte	0x3
 2416 0179 41       		.byte	0x41
 2417 017a CE010000 		.4byte	0x1ce
 2418 017e 40       		.byte	0x40
 2419 017f 06       		.uleb128 0x6
 2420 0180 FD010000 		.4byte	.LASF33
 2421 0184 03       		.byte	0x3
 2422 0185 42       		.byte	0x42
 2423 0186 CE010000 		.4byte	0x1ce
 2424 018a 44       		.byte	0x44
 2425 018b 06       		.uleb128 0x6
 2426 018c CB000000 		.4byte	.LASF34
 2427 0190 03       		.byte	0x3
 2428 0191 43       		.byte	0x43
 2429 0192 F4010000 		.4byte	0x1f4
 2430 0196 48       		.byte	0x48
 2431 0197 06       		.uleb128 0x6
 2432 0198 0A080000 		.4byte	.LASF35
 2433 019c 03       		.byte	0x3
 2434 019d 44       		.byte	0x44
 2435 019e 05020000 		.4byte	0x205
 2436 01a2 4C       		.byte	0x4c
 2437 01a3 06       		.uleb128 0x6
 2438 01a4 A8060000 		.4byte	.LASF36
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 94


 2439 01a8 03       		.byte	0x3
 2440 01a9 45       		.byte	0x45
 2441 01aa F4010000 		.4byte	0x1f4
 2442 01ae 50       		.byte	0x50
 2443 01af 06       		.uleb128 0x6
 2444 01b0 C1030000 		.4byte	.LASF37
 2445 01b4 03       		.byte	0x3
 2446 01b5 46       		.byte	0x46
 2447 01b6 1F020000 		.4byte	0x21f
 2448 01ba 54       		.byte	0x54
 2449 01bb 06       		.uleb128 0x6
 2450 01bc 28090000 		.4byte	.LASF38
 2451 01c0 03       		.byte	0x3
 2452 01c1 47       		.byte	0x47
 2453 01c2 3A020000 		.4byte	0x23a
 2454 01c6 58       		.byte	0x58
 2455 01c7 00       		.byte	0
 2456 01c8 07       		.uleb128 0x7
 2457 01c9 04       		.byte	0x4
 2458 01ca 6B000000 		.4byte	0x6b
 2459 01ce 07       		.uleb128 0x7
 2460 01cf 04       		.byte	0x4
 2461 01d0 D4010000 		.4byte	0x1d4
 2462 01d4 08       		.uleb128 0x8
 2463 01d5 6B000000 		.4byte	0x6b
 2464 01d9 07       		.uleb128 0x7
 2465 01da 04       		.byte	0x4
 2466 01db 83000000 		.4byte	0x83
 2467 01df 07       		.uleb128 0x7
 2468 01e0 04       		.byte	0x4
 2469 01e1 77000000 		.4byte	0x77
 2470 01e5 09       		.uleb128 0x9
 2471 01e6 77000000 		.4byte	0x77
 2472 01ea F4010000 		.4byte	0x1f4
 2473 01ee 0A       		.uleb128 0xa
 2474 01ef 83000000 		.4byte	0x83
 2475 01f3 00       		.byte	0
 2476 01f4 07       		.uleb128 0x7
 2477 01f5 04       		.byte	0x4
 2478 01f6 E5010000 		.4byte	0x1e5
 2479 01fa 0B       		.uleb128 0xb
 2480 01fb 05020000 		.4byte	0x205
 2481 01ff 0A       		.uleb128 0xa
 2482 0200 83000000 		.4byte	0x83
 2483 0204 00       		.byte	0
 2484 0205 07       		.uleb128 0x7
 2485 0206 04       		.byte	0x4
 2486 0207 FA010000 		.4byte	0x1fa
 2487 020b 09       		.uleb128 0x9
 2488 020c 83000000 		.4byte	0x83
 2489 0210 1F020000 		.4byte	0x21f
 2490 0214 0A       		.uleb128 0xa
 2491 0215 CE010000 		.4byte	0x1ce
 2492 0219 0A       		.uleb128 0xa
 2493 021a 83000000 		.4byte	0x83
 2494 021e 00       		.byte	0
 2495 021f 07       		.uleb128 0x7
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 95


 2496 0220 04       		.byte	0x4
 2497 0221 0B020000 		.4byte	0x20b
 2498 0225 0B       		.uleb128 0xb
 2499 0226 3A020000 		.4byte	0x23a
 2500 022a 0A       		.uleb128 0xa
 2501 022b C8010000 		.4byte	0x1c8
 2502 022f 0A       		.uleb128 0xa
 2503 0230 83000000 		.4byte	0x83
 2504 0234 0A       		.uleb128 0xa
 2505 0235 83000000 		.4byte	0x83
 2506 0239 00       		.byte	0
 2507 023a 07       		.uleb128 0x7
 2508 023b 04       		.byte	0x4
 2509 023c 25020000 		.4byte	0x225
 2510 0240 0C       		.uleb128 0xc
 2511 0241 7C040000 		.4byte	.LASF39
 2512 0245 03       		.byte	0x3
 2513 0246 48       		.byte	0x48
 2514 0247 AB000000 		.4byte	0xab
 2515 024b 05       		.uleb128 0x5
 2516 024c 0C       		.byte	0xc
 2517 024d 03       		.byte	0x3
 2518 024e 4A       		.byte	0x4a
 2519 024f 9C020000 		.4byte	0x29c
 2520 0253 06       		.uleb128 0x6
 2521 0254 5B080000 		.4byte	.LASF40
 2522 0258 03       		.byte	0x3
 2523 0259 4C       		.byte	0x4c
 2524 025a 6B000000 		.4byte	0x6b
 2525 025e 00       		.byte	0
 2526 025f 06       		.uleb128 0x6
 2527 0260 BA090000 		.4byte	.LASF41
 2528 0264 03       		.byte	0x3
 2529 0265 4D       		.byte	0x4d
 2530 0266 6B000000 		.4byte	0x6b
 2531 026a 01       		.byte	0x1
 2532 026b 06       		.uleb128 0x6
 2533 026c 2D030000 		.4byte	.LASF42
 2534 0270 03       		.byte	0x3
 2535 0271 4E       		.byte	0x4e
 2536 0272 6B000000 		.4byte	0x6b
 2537 0276 02       		.byte	0x2
 2538 0277 06       		.uleb128 0x6
 2539 0278 1D030000 		.4byte	.LASF43
 2540 027c 03       		.byte	0x3
 2541 027d 4F       		.byte	0x4f
 2542 027e 77000000 		.4byte	0x77
 2543 0282 04       		.byte	0x4
 2544 0283 06       		.uleb128 0x6
 2545 0284 E4040000 		.4byte	.LASF44
 2546 0288 03       		.byte	0x3
 2547 0289 50       		.byte	0x50
 2548 028a 77000000 		.4byte	0x77
 2549 028e 06       		.byte	0x6
 2550 028f 06       		.uleb128 0x6
 2551 0290 10040000 		.4byte	.LASF45
 2552 0294 03       		.byte	0x3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 96


 2553 0295 51       		.byte	0x51
 2554 0296 9C020000 		.4byte	0x29c
 2555 029a 08       		.byte	0x8
 2556 029b 00       		.byte	0
 2557 029c 07       		.uleb128 0x7
 2558 029d 04       		.byte	0x4
 2559 029e A2020000 		.4byte	0x2a2
 2560 02a2 08       		.uleb128 0x8
 2561 02a3 40020000 		.4byte	0x240
 2562 02a7 0C       		.uleb128 0xc
 2563 02a8 87090000 		.4byte	.LASF46
 2564 02ac 03       		.byte	0x3
 2565 02ad 52       		.byte	0x52
 2566 02ae 4B020000 		.4byte	0x24b
 2567 02b2 0D       		.uleb128 0xd
 2568 02b3 0C070000 		.4byte	.LASF47
 2569 02b7 01       		.byte	0x1
 2570 02b8 94       		.byte	0x94
 2571 02b9 00000000 		.4byte	.LFB35
 2572 02bd 84000000 		.4byte	.LFE35-.LFB35
 2573 02c1 01       		.uleb128 0x1
 2574 02c2 9C       		.byte	0x9c
 2575 02c3 E4020000 		.4byte	0x2e4
 2576 02c7 0E       		.uleb128 0xe
 2577 02c8 09040000 		.4byte	.LASF49
 2578 02cc 01       		.byte	0x1
 2579 02cd 94       		.byte	0x94
 2580 02ce 83000000 		.4byte	0x83
 2581 02d2 02       		.uleb128 0x2
 2582 02d3 91       		.byte	0x91
 2583 02d4 6C       		.sleb128 -20
 2584 02d5 0F       		.uleb128 0xf
 2585 02d6 EB060000 		.4byte	.LASF51
 2586 02da 01       		.byte	0x1
 2587 02db 98       		.byte	0x98
 2588 02dc 6B000000 		.4byte	0x6b
 2589 02e0 02       		.uleb128 0x2
 2590 02e1 91       		.byte	0x91
 2591 02e2 77       		.sleb128 -9
 2592 02e3 00       		.byte	0
 2593 02e4 10       		.uleb128 0x10
 2594 02e5 34050000 		.4byte	.LASF48
 2595 02e9 01       		.byte	0x1
 2596 02ea E0       		.byte	0xe0
 2597 02eb 00000000 		.4byte	.LFB36
 2598 02ef 28000000 		.4byte	.LFE36-.LFB36
 2599 02f3 01       		.uleb128 0x1
 2600 02f4 9C       		.byte	0x9c
 2601 02f5 08030000 		.4byte	0x308
 2602 02f9 0E       		.uleb128 0xe
 2603 02fa 09040000 		.4byte	.LASF49
 2604 02fe 01       		.byte	0x1
 2605 02ff E0       		.byte	0xe0
 2606 0300 83000000 		.4byte	0x83
 2607 0304 02       		.uleb128 0x2
 2608 0305 91       		.byte	0x91
 2609 0306 74       		.sleb128 -12
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 97


 2610 0307 00       		.byte	0
 2611 0308 11       		.uleb128 0x11
 2612 0309 88060000 		.4byte	.LASF50
 2613 030d 01       		.byte	0x1
 2614 030e 0501     		.2byte	0x105
 2615 0310 00000000 		.4byte	.LFB37
 2616 0314 26000000 		.4byte	.LFE37-.LFB37
 2617 0318 01       		.uleb128 0x1
 2618 0319 9C       		.byte	0x9c
 2619 031a 2C030000 		.4byte	0x32c
 2620 031e 12       		.uleb128 0x12
 2621 031f 6900     		.ascii	"i\000"
 2622 0321 01       		.byte	0x1
 2623 0322 0701     		.2byte	0x107
 2624 0324 83000000 		.4byte	0x83
 2625 0328 02       		.uleb128 0x2
 2626 0329 91       		.byte	0x91
 2627 032a 74       		.sleb128 -12
 2628 032b 00       		.byte	0
 2629 032c 11       		.uleb128 0x11
 2630 032d 7F010000 		.4byte	.LASF52
 2631 0331 01       		.byte	0x1
 2632 0332 2801     		.2byte	0x128
 2633 0334 00000000 		.4byte	.LFB38
 2634 0338 50000000 		.4byte	.LFE38-.LFB38
 2635 033c 01       		.uleb128 0x1
 2636 033d 9C       		.byte	0x9c
 2637 033e 5F030000 		.4byte	0x35f
 2638 0342 12       		.uleb128 0x12
 2639 0343 6900     		.ascii	"i\000"
 2640 0345 01       		.byte	0x1
 2641 0346 2A01     		.2byte	0x12a
 2642 0348 83000000 		.4byte	0x83
 2643 034c 02       		.uleb128 0x2
 2644 034d 91       		.byte	0x91
 2645 034e 74       		.sleb128 -12
 2646 034f 13       		.uleb128 0x13
 2647 0350 FC060000 		.4byte	.LASF53
 2648 0354 01       		.byte	0x1
 2649 0355 2B01     		.2byte	0x12b
 2650 0357 83000000 		.4byte	0x83
 2651 035b 02       		.uleb128 0x2
 2652 035c 91       		.byte	0x91
 2653 035d 70       		.sleb128 -16
 2654 035e 00       		.byte	0
 2655 035f 11       		.uleb128 0x11
 2656 0360 11050000 		.4byte	.LASF54
 2657 0364 01       		.byte	0x1
 2658 0365 6901     		.2byte	0x169
 2659 0367 00000000 		.4byte	.LFB39
 2660 036b 38020000 		.4byte	.LFE39-.LFB39
 2661 036f 01       		.uleb128 0x1
 2662 0370 9C       		.byte	0x9c
 2663 0371 DF030000 		.4byte	0x3df
 2664 0375 14       		.uleb128 0x14
 2665 0376 09040000 		.4byte	.LASF49
 2666 037a 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 98


 2667 037b 6901     		.2byte	0x169
 2668 037d 83000000 		.4byte	0x83
 2669 0381 02       		.uleb128 0x2
 2670 0382 91       		.byte	0x91
 2671 0383 5C       		.sleb128 -36
 2672 0384 13       		.uleb128 0x13
 2673 0385 6A040000 		.4byte	.LASF55
 2674 0389 01       		.byte	0x1
 2675 038a 6B01     		.2byte	0x16b
 2676 038c 83000000 		.4byte	0x83
 2677 0390 02       		.uleb128 0x2
 2678 0391 91       		.byte	0x91
 2679 0392 60       		.sleb128 -32
 2680 0393 13       		.uleb128 0x13
 2681 0394 49080000 		.4byte	.LASF56
 2682 0398 01       		.byte	0x1
 2683 0399 6C01     		.2byte	0x16c
 2684 039b 83000000 		.4byte	0x83
 2685 039f 02       		.uleb128 0x2
 2686 03a0 91       		.byte	0x91
 2687 03a1 6C       		.sleb128 -20
 2688 03a2 13       		.uleb128 0x13
 2689 03a3 B2090000 		.4byte	.LASF57
 2690 03a7 01       		.byte	0x1
 2691 03a8 6D01     		.2byte	0x16d
 2692 03aa 77000000 		.4byte	0x77
 2693 03ae 02       		.uleb128 0x2
 2694 03af 91       		.byte	0x91
 2695 03b0 6A       		.sleb128 -22
 2696 03b1 13       		.uleb128 0x13
 2697 03b2 07000000 		.4byte	.LASF58
 2698 03b6 01       		.byte	0x1
 2699 03b7 6E01     		.2byte	0x16e
 2700 03b9 77000000 		.4byte	0x77
 2701 03bd 02       		.uleb128 0x2
 2702 03be 91       		.byte	0x91
 2703 03bf 68       		.sleb128 -24
 2704 03c0 13       		.uleb128 0x13
 2705 03c1 EB060000 		.4byte	.LASF51
 2706 03c5 01       		.byte	0x1
 2707 03c6 6F01     		.2byte	0x16f
 2708 03c8 6B000000 		.4byte	0x6b
 2709 03cc 02       		.uleb128 0x2
 2710 03cd 91       		.byte	0x91
 2711 03ce 67       		.sleb128 -25
 2712 03cf 13       		.uleb128 0x13
 2713 03d0 D2060000 		.4byte	.LASF59
 2714 03d4 01       		.byte	0x1
 2715 03d5 7001     		.2byte	0x170
 2716 03d7 6B000000 		.4byte	0x6b
 2717 03db 02       		.uleb128 0x2
 2718 03dc 91       		.byte	0x91
 2719 03dd 66       		.sleb128 -26
 2720 03de 00       		.byte	0
 2721 03df 11       		.uleb128 0x11
 2722 03e0 4C040000 		.4byte	.LASF60
 2723 03e4 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 99


 2724 03e5 2902     		.2byte	0x229
 2725 03e7 00000000 		.4byte	.LFB40
 2726 03eb 1E000000 		.4byte	.LFE40-.LFB40
 2727 03ef 01       		.uleb128 0x1
 2728 03f0 9C       		.byte	0x9c
 2729 03f1 05040000 		.4byte	0x405
 2730 03f5 14       		.uleb128 0x14
 2731 03f6 09040000 		.4byte	.LASF49
 2732 03fa 01       		.byte	0x1
 2733 03fb 2902     		.2byte	0x229
 2734 03fd 83000000 		.4byte	0x83
 2735 0401 02       		.uleb128 0x2
 2736 0402 91       		.byte	0x91
 2737 0403 74       		.sleb128 -12
 2738 0404 00       		.byte	0
 2739 0405 11       		.uleb128 0x11
 2740 0406 A3010000 		.4byte	.LASF61
 2741 040a 01       		.byte	0x1
 2742 040b 5F02     		.2byte	0x25f
 2743 040d 00000000 		.4byte	.LFB41
 2744 0411 40000000 		.4byte	.LFE41-.LFB41
 2745 0415 01       		.uleb128 0x1
 2746 0416 9C       		.byte	0x9c
 2747 0417 38040000 		.4byte	0x438
 2748 041b 12       		.uleb128 0x12
 2749 041c 6900     		.ascii	"i\000"
 2750 041e 01       		.byte	0x1
 2751 041f 6102     		.2byte	0x261
 2752 0421 83000000 		.4byte	0x83
 2753 0425 02       		.uleb128 0x2
 2754 0426 91       		.byte	0x91
 2755 0427 74       		.sleb128 -12
 2756 0428 13       		.uleb128 0x13
 2757 0429 FC060000 		.4byte	.LASF53
 2758 042d 01       		.byte	0x1
 2759 042e 6202     		.2byte	0x262
 2760 0430 83000000 		.4byte	0x83
 2761 0434 02       		.uleb128 0x2
 2762 0435 91       		.byte	0x91
 2763 0436 70       		.sleb128 -16
 2764 0437 00       		.byte	0
 2765 0438 11       		.uleb128 0x11
 2766 0439 AD000000 		.4byte	.LASF62
 2767 043d 01       		.byte	0x1
 2768 043e 8C02     		.2byte	0x28c
 2769 0440 00000000 		.4byte	.LFB42
 2770 0444 70000000 		.4byte	.LFE42-.LFB42
 2771 0448 01       		.uleb128 0x1
 2772 0449 9C       		.byte	0x9c
 2773 044a A7040000 		.4byte	0x4a7
 2774 044e 14       		.uleb128 0x14
 2775 044f EB060000 		.4byte	.LASF51
 2776 0453 01       		.byte	0x1
 2777 0454 8C02     		.2byte	0x28c
 2778 0456 83000000 		.4byte	0x83
 2779 045a 02       		.uleb128 0x2
 2780 045b 91       		.byte	0x91
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 100


 2781 045c 5C       		.sleb128 -36
 2782 045d 13       		.uleb128 0x13
 2783 045e 28070000 		.4byte	.LASF63
 2784 0462 01       		.byte	0x1
 2785 0463 8E02     		.2byte	0x28e
 2786 0465 83000000 		.4byte	0x83
 2787 0469 02       		.uleb128 0x2
 2788 046a 91       		.byte	0x91
 2789 046b 70       		.sleb128 -16
 2790 046c 13       		.uleb128 0x13
 2791 046d D4070000 		.4byte	.LASF64
 2792 0471 01       		.byte	0x1
 2793 0472 8F02     		.2byte	0x28f
 2794 0474 83000000 		.4byte	0x83
 2795 0478 02       		.uleb128 0x2
 2796 0479 91       		.byte	0x91
 2797 047a 6C       		.sleb128 -20
 2798 047b 13       		.uleb128 0x13
 2799 047c 60030000 		.4byte	.LASF65
 2800 0480 01       		.byte	0x1
 2801 0481 9002     		.2byte	0x290
 2802 0483 83000000 		.4byte	0x83
 2803 0487 02       		.uleb128 0x2
 2804 0488 91       		.byte	0x91
 2805 0489 68       		.sleb128 -24
 2806 048a 12       		.uleb128 0x12
 2807 048b 6900     		.ascii	"i\000"
 2808 048d 01       		.byte	0x1
 2809 048e 9102     		.2byte	0x291
 2810 0490 83000000 		.4byte	0x83
 2811 0494 02       		.uleb128 0x2
 2812 0495 91       		.byte	0x91
 2813 0496 74       		.sleb128 -12
 2814 0497 13       		.uleb128 0x13
 2815 0498 FC060000 		.4byte	.LASF53
 2816 049c 01       		.byte	0x1
 2817 049d 9202     		.2byte	0x292
 2818 049f 83000000 		.4byte	0x83
 2819 04a3 02       		.uleb128 0x2
 2820 04a4 91       		.byte	0x91
 2821 04a5 64       		.sleb128 -28
 2822 04a6 00       		.byte	0
 2823 04a7 15       		.uleb128 0x15
 2824 04a8 36020000 		.4byte	.LASF68
 2825 04ac 01       		.byte	0x1
 2826 04ad BD02     		.2byte	0x2bd
 2827 04af 77000000 		.4byte	0x77
 2828 04b3 00000000 		.4byte	.LFB43
 2829 04b7 1C000000 		.4byte	.LFE43-.LFB43
 2830 04bb 01       		.uleb128 0x1
 2831 04bc 9C       		.byte	0x9c
 2832 04bd D1040000 		.4byte	0x4d1
 2833 04c1 14       		.uleb128 0x14
 2834 04c2 09040000 		.4byte	.LASF49
 2835 04c6 01       		.byte	0x1
 2836 04c7 BD02     		.2byte	0x2bd
 2837 04c9 83000000 		.4byte	0x83
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 101


 2838 04cd 02       		.uleb128 0x2
 2839 04ce 91       		.byte	0x91
 2840 04cf 74       		.sleb128 -12
 2841 04d0 00       		.byte	0
 2842 04d1 16       		.uleb128 0x16
 2843 04d2 B9060000 		.4byte	.LASF66
 2844 04d6 01       		.byte	0x1
 2845 04d7 D802     		.2byte	0x2d8
 2846 04d9 00000000 		.4byte	.LFB44
 2847 04dd 24000000 		.4byte	.LFE44-.LFB44
 2848 04e1 01       		.uleb128 0x1
 2849 04e2 9C       		.byte	0x9c
 2850 04e3 06050000 		.4byte	0x506
 2851 04e7 14       		.uleb128 0x14
 2852 04e8 09040000 		.4byte	.LASF49
 2853 04ec 01       		.byte	0x1
 2854 04ed D802     		.2byte	0x2d8
 2855 04ef 83000000 		.4byte	0x83
 2856 04f3 02       		.uleb128 0x2
 2857 04f4 91       		.byte	0x91
 2858 04f5 74       		.sleb128 -12
 2859 04f6 14       		.uleb128 0x14
 2860 04f7 E2030000 		.4byte	.LASF67
 2861 04fb 01       		.byte	0x1
 2862 04fc D802     		.2byte	0x2d8
 2863 04fe 77000000 		.4byte	0x77
 2864 0502 02       		.uleb128 0x2
 2865 0503 91       		.byte	0x91
 2866 0504 72       		.sleb128 -14
 2867 0505 00       		.byte	0
 2868 0506 15       		.uleb128 0x15
 2869 0507 B0040000 		.4byte	.LASF69
 2870 050b 01       		.byte	0x1
 2871 050c F302     		.2byte	0x2f3
 2872 050e 6B000000 		.4byte	0x6b
 2873 0512 00000000 		.4byte	.LFB45
 2874 0516 1C000000 		.4byte	.LFE45-.LFB45
 2875 051a 01       		.uleb128 0x1
 2876 051b 9C       		.byte	0x9c
 2877 051c 30050000 		.4byte	0x530
 2878 0520 14       		.uleb128 0x14
 2879 0521 09040000 		.4byte	.LASF49
 2880 0525 01       		.byte	0x1
 2881 0526 F302     		.2byte	0x2f3
 2882 0528 83000000 		.4byte	0x83
 2883 052c 02       		.uleb128 0x2
 2884 052d 91       		.byte	0x91
 2885 052e 74       		.sleb128 -12
 2886 052f 00       		.byte	0
 2887 0530 16       		.uleb128 0x16
 2888 0531 0E090000 		.4byte	.LASF70
 2889 0535 01       		.byte	0x1
 2890 0536 0E03     		.2byte	0x30e
 2891 0538 00000000 		.4byte	.LFB46
 2892 053c 24000000 		.4byte	.LFE46-.LFB46
 2893 0540 01       		.uleb128 0x1
 2894 0541 9C       		.byte	0x9c
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 102


 2895 0542 65050000 		.4byte	0x565
 2896 0546 14       		.uleb128 0x14
 2897 0547 09040000 		.4byte	.LASF49
 2898 054b 01       		.byte	0x1
 2899 054c 0E03     		.2byte	0x30e
 2900 054e 83000000 		.4byte	0x83
 2901 0552 02       		.uleb128 0x2
 2902 0553 91       		.byte	0x91
 2903 0554 74       		.sleb128 -12
 2904 0555 14       		.uleb128 0x14
 2905 0556 3D030000 		.4byte	.LASF71
 2906 055a 01       		.byte	0x1
 2907 055b 0E03     		.2byte	0x30e
 2908 055d 6B000000 		.4byte	0x6b
 2909 0561 02       		.uleb128 0x2
 2910 0562 91       		.byte	0x91
 2911 0563 73       		.sleb128 -13
 2912 0564 00       		.byte	0
 2913 0565 15       		.uleb128 0x15
 2914 0566 EE070000 		.4byte	.LASF72
 2915 056a 01       		.byte	0x1
 2916 056b 2903     		.2byte	0x329
 2917 056d 6B000000 		.4byte	0x6b
 2918 0571 00000000 		.4byte	.LFB47
 2919 0575 1C000000 		.4byte	.LFE47-.LFB47
 2920 0579 01       		.uleb128 0x1
 2921 057a 9C       		.byte	0x9c
 2922 057b 8F050000 		.4byte	0x58f
 2923 057f 14       		.uleb128 0x14
 2924 0580 EB060000 		.4byte	.LASF51
 2925 0584 01       		.byte	0x1
 2926 0585 2903     		.2byte	0x329
 2927 0587 83000000 		.4byte	0x83
 2928 058b 02       		.uleb128 0x2
 2929 058c 91       		.byte	0x91
 2930 058d 74       		.sleb128 -12
 2931 058e 00       		.byte	0
 2932 058f 15       		.uleb128 0x15
 2933 0590 64010000 		.4byte	.LASF73
 2934 0594 01       		.byte	0x1
 2935 0595 4403     		.2byte	0x344
 2936 0597 6B000000 		.4byte	0x6b
 2937 059b 00000000 		.4byte	.LFB48
 2938 059f 1C000000 		.4byte	.LFE48-.LFB48
 2939 05a3 01       		.uleb128 0x1
 2940 05a4 9C       		.byte	0x9c
 2941 05a5 B9050000 		.4byte	0x5b9
 2942 05a9 14       		.uleb128 0x14
 2943 05aa EB060000 		.4byte	.LASF51
 2944 05ae 01       		.byte	0x1
 2945 05af 4403     		.2byte	0x344
 2946 05b1 83000000 		.4byte	0x83
 2947 05b5 02       		.uleb128 0x2
 2948 05b6 91       		.byte	0x91
 2949 05b7 74       		.sleb128 -12
 2950 05b8 00       		.byte	0
 2951 05b9 15       		.uleb128 0x15
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 103


 2952 05ba B7070000 		.4byte	.LASF74
 2953 05be 01       		.byte	0x1
 2954 05bf 6003     		.2byte	0x360
 2955 05c1 6B000000 		.4byte	0x6b
 2956 05c5 00000000 		.4byte	.LFB49
 2957 05c9 1C000000 		.4byte	.LFE49-.LFB49
 2958 05cd 01       		.uleb128 0x1
 2959 05ce 9C       		.byte	0x9c
 2960 05cf E3050000 		.4byte	0x5e3
 2961 05d3 14       		.uleb128 0x14
 2962 05d4 EB060000 		.4byte	.LASF51
 2963 05d8 01       		.byte	0x1
 2964 05d9 6003     		.2byte	0x360
 2965 05db 83000000 		.4byte	0x83
 2966 05df 02       		.uleb128 0x2
 2967 05e0 91       		.byte	0x91
 2968 05e1 74       		.sleb128 -12
 2969 05e2 00       		.byte	0
 2970 05e3 15       		.uleb128 0x15
 2971 05e4 57000000 		.4byte	.LASF75
 2972 05e8 01       		.byte	0x1
 2973 05e9 7C03     		.2byte	0x37c
 2974 05eb 6B000000 		.4byte	0x6b
 2975 05ef 00000000 		.4byte	.LFB50
 2976 05f3 1C000000 		.4byte	.LFE50-.LFB50
 2977 05f7 01       		.uleb128 0x1
 2978 05f8 9C       		.byte	0x9c
 2979 05f9 0D060000 		.4byte	0x60d
 2980 05fd 14       		.uleb128 0x14
 2981 05fe EB060000 		.4byte	.LASF51
 2982 0602 01       		.byte	0x1
 2983 0603 7C03     		.2byte	0x37c
 2984 0605 83000000 		.4byte	0x83
 2985 0609 02       		.uleb128 0x2
 2986 060a 91       		.byte	0x91
 2987 060b 74       		.sleb128 -12
 2988 060c 00       		.byte	0
 2989 060d 16       		.uleb128 0x16
 2990 060e EC020000 		.4byte	.LASF76
 2991 0612 01       		.byte	0x1
 2992 0613 9D03     		.2byte	0x39d
 2993 0615 00000000 		.4byte	.LFB51
 2994 0619 24000000 		.4byte	.LFE51-.LFB51
 2995 061d 01       		.uleb128 0x1
 2996 061e 9C       		.byte	0x9c
 2997 061f 42060000 		.4byte	0x642
 2998 0623 14       		.uleb128 0x14
 2999 0624 EB060000 		.4byte	.LASF51
 3000 0628 01       		.byte	0x1
 3001 0629 9D03     		.2byte	0x39d
 3002 062b 83000000 		.4byte	0x83
 3003 062f 02       		.uleb128 0x2
 3004 0630 91       		.byte	0x91
 3005 0631 74       		.sleb128 -12
 3006 0632 14       		.uleb128 0x14
 3007 0633 3D030000 		.4byte	.LASF71
 3008 0637 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 104


 3009 0638 9D03     		.2byte	0x39d
 3010 063a 6B000000 		.4byte	0x6b
 3011 063e 02       		.uleb128 0x2
 3012 063f 91       		.byte	0x91
 3013 0640 73       		.sleb128 -13
 3014 0641 00       		.byte	0
 3015 0642 16       		.uleb128 0x16
 3016 0643 56070000 		.4byte	.LASF77
 3017 0647 01       		.byte	0x1
 3018 0648 B903     		.2byte	0x3b9
 3019 064a 00000000 		.4byte	.LFB52
 3020 064e 24000000 		.4byte	.LFE52-.LFB52
 3021 0652 01       		.uleb128 0x1
 3022 0653 9C       		.byte	0x9c
 3023 0654 77060000 		.4byte	0x677
 3024 0658 14       		.uleb128 0x14
 3025 0659 EB060000 		.4byte	.LASF51
 3026 065d 01       		.byte	0x1
 3027 065e B903     		.2byte	0x3b9
 3028 0660 83000000 		.4byte	0x83
 3029 0664 02       		.uleb128 0x2
 3030 0665 91       		.byte	0x91
 3031 0666 74       		.sleb128 -12
 3032 0667 14       		.uleb128 0x14
 3033 0668 3D030000 		.4byte	.LASF71
 3034 066c 01       		.byte	0x1
 3035 066d B903     		.2byte	0x3b9
 3036 066f 6B000000 		.4byte	0x6b
 3037 0673 02       		.uleb128 0x2
 3038 0674 91       		.byte	0x91
 3039 0675 73       		.sleb128 -13
 3040 0676 00       		.byte	0
 3041 0677 16       		.uleb128 0x16
 3042 0678 56050000 		.4byte	.LASF78
 3043 067c 01       		.byte	0x1
 3044 067d D503     		.2byte	0x3d5
 3045 067f 00000000 		.4byte	.LFB53
 3046 0683 24000000 		.4byte	.LFE53-.LFB53
 3047 0687 01       		.uleb128 0x1
 3048 0688 9C       		.byte	0x9c
 3049 0689 AC060000 		.4byte	0x6ac
 3050 068d 14       		.uleb128 0x14
 3051 068e EB060000 		.4byte	.LASF51
 3052 0692 01       		.byte	0x1
 3053 0693 D503     		.2byte	0x3d5
 3054 0695 83000000 		.4byte	0x83
 3055 0699 02       		.uleb128 0x2
 3056 069a 91       		.byte	0x91
 3057 069b 74       		.sleb128 -12
 3058 069c 14       		.uleb128 0x14
 3059 069d 3D030000 		.4byte	.LASF71
 3060 06a1 01       		.byte	0x1
 3061 06a2 D503     		.2byte	0x3d5
 3062 06a4 6B000000 		.4byte	0x6b
 3063 06a8 02       		.uleb128 0x2
 3064 06a9 91       		.byte	0x91
 3065 06aa 73       		.sleb128 -13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 105


 3066 06ab 00       		.byte	0
 3067 06ac 16       		.uleb128 0x16
 3068 06ad 8A000000 		.4byte	.LASF79
 3069 06b1 01       		.byte	0x1
 3070 06b2 F203     		.2byte	0x3f2
 3071 06b4 00000000 		.4byte	.LFB54
 3072 06b8 24000000 		.4byte	.LFE54-.LFB54
 3073 06bc 01       		.uleb128 0x1
 3074 06bd 9C       		.byte	0x9c
 3075 06be E1060000 		.4byte	0x6e1
 3076 06c2 14       		.uleb128 0x14
 3077 06c3 EB060000 		.4byte	.LASF51
 3078 06c7 01       		.byte	0x1
 3079 06c8 F203     		.2byte	0x3f2
 3080 06ca 83000000 		.4byte	0x83
 3081 06ce 02       		.uleb128 0x2
 3082 06cf 91       		.byte	0x91
 3083 06d0 74       		.sleb128 -12
 3084 06d1 14       		.uleb128 0x14
 3085 06d2 3D030000 		.4byte	.LASF71
 3086 06d6 01       		.byte	0x1
 3087 06d7 F203     		.2byte	0x3f2
 3088 06d9 6B000000 		.4byte	0x6b
 3089 06dd 02       		.uleb128 0x2
 3090 06de 91       		.byte	0x91
 3091 06df 73       		.sleb128 -13
 3092 06e0 00       		.byte	0
 3093 06e1 16       		.uleb128 0x16
 3094 06e2 08030000 		.4byte	.LASF80
 3095 06e6 01       		.byte	0x1
 3096 06e7 0E04     		.2byte	0x40e
 3097 06e9 00000000 		.4byte	.LFB55
 3098 06ed 24000000 		.4byte	.LFE55-.LFB55
 3099 06f1 01       		.uleb128 0x1
 3100 06f2 9C       		.byte	0x9c
 3101 06f3 16070000 		.4byte	0x716
 3102 06f7 14       		.uleb128 0x14
 3103 06f8 EB060000 		.4byte	.LASF51
 3104 06fc 01       		.byte	0x1
 3105 06fd 0E04     		.2byte	0x40e
 3106 06ff 83000000 		.4byte	0x83
 3107 0703 02       		.uleb128 0x2
 3108 0704 91       		.byte	0x91
 3109 0705 74       		.sleb128 -12
 3110 0706 14       		.uleb128 0x14
 3111 0707 3D030000 		.4byte	.LASF71
 3112 070b 01       		.byte	0x1
 3113 070c 0E04     		.2byte	0x40e
 3114 070e 6B000000 		.4byte	0x6b
 3115 0712 02       		.uleb128 0x2
 3116 0713 91       		.byte	0x91
 3117 0714 73       		.sleb128 -13
 3118 0715 00       		.byte	0
 3119 0716 16       		.uleb128 0x16
 3120 0717 43030000 		.4byte	.LASF81
 3121 071b 01       		.byte	0x1
 3122 071c 2A04     		.2byte	0x42a
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 106


 3123 071e 00000000 		.4byte	.LFB56
 3124 0722 24000000 		.4byte	.LFE56-.LFB56
 3125 0726 01       		.uleb128 0x1
 3126 0727 9C       		.byte	0x9c
 3127 0728 4B070000 		.4byte	0x74b
 3128 072c 14       		.uleb128 0x14
 3129 072d 09040000 		.4byte	.LASF49
 3130 0731 01       		.byte	0x1
 3131 0732 2A04     		.2byte	0x42a
 3132 0734 83000000 		.4byte	0x83
 3133 0738 02       		.uleb128 0x2
 3134 0739 91       		.byte	0x91
 3135 073a 74       		.sleb128 -12
 3136 073b 14       		.uleb128 0x14
 3137 073c 3D030000 		.4byte	.LASF71
 3138 0740 01       		.byte	0x1
 3139 0741 2A04     		.2byte	0x42a
 3140 0743 6B000000 		.4byte	0x6b
 3141 0747 02       		.uleb128 0x2
 3142 0748 91       		.byte	0x91
 3143 0749 73       		.sleb128 -13
 3144 074a 00       		.byte	0
 3145 074b 17       		.uleb128 0x17
 3146 074c 73050000 		.4byte	.LASF82
 3147 0750 01       		.byte	0x1
 3148 0751 5804     		.2byte	0x458
 3149 0753 83000000 		.4byte	0x83
 3150 0757 00000000 		.4byte	.LFB57
 3151 075b 34010000 		.4byte	.LFE57-.LFB57
 3152 075f 01       		.uleb128 0x1
 3153 0760 9C       		.byte	0x9c
 3154 0761 C0070000 		.4byte	0x7c0
 3155 0765 14       		.uleb128 0x14
 3156 0766 09040000 		.4byte	.LASF49
 3157 076a 01       		.byte	0x1
 3158 076b 5804     		.2byte	0x458
 3159 076d 83000000 		.4byte	0x83
 3160 0771 02       		.uleb128 0x2
 3161 0772 91       		.byte	0x91
 3162 0773 6C       		.sleb128 -20
 3163 0774 13       		.uleb128 0x13
 3164 0775 EB060000 		.4byte	.LASF51
 3165 0779 01       		.byte	0x1
 3166 077a 5A04     		.2byte	0x45a
 3167 077c 6B000000 		.4byte	0x6b
 3168 0780 02       		.uleb128 0x2
 3169 0781 91       		.byte	0x91
 3170 0782 77       		.sleb128 -9
 3171 0783 13       		.uleb128 0x13
 3172 0784 DB040000 		.4byte	.LASF83
 3173 0788 01       		.byte	0x1
 3174 0789 5B04     		.2byte	0x45b
 3175 078b 6B000000 		.4byte	0x6b
 3176 078f 02       		.uleb128 0x2
 3177 0790 91       		.byte	0x91
 3178 0791 74       		.sleb128 -12
 3179 0792 13       		.uleb128 0x13
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 107


 3180 0793 E0070000 		.4byte	.LASF84
 3181 0797 01       		.byte	0x1
 3182 0798 5C04     		.2byte	0x45c
 3183 079a 6B000000 		.4byte	0x6b
 3184 079e 02       		.uleb128 0x2
 3185 079f 91       		.byte	0x91
 3186 07a0 73       		.sleb128 -13
 3187 07a1 13       		.uleb128 0x13
 3188 07a2 7A000000 		.4byte	.LASF85
 3189 07a6 01       		.byte	0x1
 3190 07a7 5E04     		.2byte	0x45e
 3191 07a9 6B000000 		.4byte	0x6b
 3192 07ad 02       		.uleb128 0x2
 3193 07ae 91       		.byte	0x91
 3194 07af 76       		.sleb128 -10
 3195 07b0 13       		.uleb128 0x13
 3196 07b1 E1020000 		.4byte	.LASF86
 3197 07b5 01       		.byte	0x1
 3198 07b6 5F04     		.2byte	0x45f
 3199 07b8 6B000000 		.4byte	0x6b
 3200 07bc 02       		.uleb128 0x2
 3201 07bd 91       		.byte	0x91
 3202 07be 75       		.sleb128 -11
 3203 07bf 00       		.byte	0
 3204 07c0 17       		.uleb128 0x17
 3205 07c1 2A060000 		.4byte	.LASF87
 3206 07c5 01       		.byte	0x1
 3207 07c6 AA04     		.2byte	0x4aa
 3208 07c8 83000000 		.4byte	0x83
 3209 07cc 00000000 		.4byte	.LFB58
 3210 07d0 58000000 		.4byte	.LFE58-.LFB58
 3211 07d4 01       		.uleb128 0x1
 3212 07d5 9C       		.byte	0x9c
 3213 07d6 17080000 		.4byte	0x817
 3214 07da 14       		.uleb128 0x14
 3215 07db EB060000 		.4byte	.LASF51
 3216 07df 01       		.byte	0x1
 3217 07e0 AA04     		.2byte	0x4aa
 3218 07e2 83000000 		.4byte	0x83
 3219 07e6 02       		.uleb128 0x2
 3220 07e7 91       		.byte	0x91
 3221 07e8 64       		.sleb128 -28
 3222 07e9 13       		.uleb128 0x13
 3223 07ea F4010000 		.4byte	.LASF88
 3224 07ee 01       		.byte	0x1
 3225 07ef AC04     		.2byte	0x4ac
 3226 07f1 83000000 		.4byte	0x83
 3227 07f5 02       		.uleb128 0x2
 3228 07f6 91       		.byte	0x91
 3229 07f7 74       		.sleb128 -12
 3230 07f8 13       		.uleb128 0x13
 3231 07f9 4E080000 		.4byte	.LASF89
 3232 07fd 01       		.byte	0x1
 3233 07fe AD04     		.2byte	0x4ad
 3234 0800 83000000 		.4byte	0x83
 3235 0804 02       		.uleb128 0x2
 3236 0805 91       		.byte	0x91
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 108


 3237 0806 6C       		.sleb128 -20
 3238 0807 13       		.uleb128 0x13
 3239 0808 4F020000 		.4byte	.LASF90
 3240 080c 01       		.byte	0x1
 3241 080d AE04     		.2byte	0x4ae
 3242 080f 83000000 		.4byte	0x83
 3243 0813 02       		.uleb128 0x2
 3244 0814 91       		.byte	0x91
 3245 0815 70       		.sleb128 -16
 3246 0816 00       		.byte	0
 3247 0817 17       		.uleb128 0x17
 3248 0818 5E020000 		.4byte	.LASF91
 3249 081c 01       		.byte	0x1
 3250 081d D804     		.2byte	0x4d8
 3251 081f 83000000 		.4byte	0x83
 3252 0823 00000000 		.4byte	.LFB59
 3253 0827 36000000 		.4byte	.LFE59-.LFB59
 3254 082b 01       		.uleb128 0x1
 3255 082c 9C       		.byte	0x9c
 3256 082d 4E080000 		.4byte	0x84e
 3257 0831 12       		.uleb128 0x12
 3258 0832 6900     		.ascii	"i\000"
 3259 0834 01       		.byte	0x1
 3260 0835 DB04     		.2byte	0x4db
 3261 0837 83000000 		.4byte	0x83
 3262 083b 02       		.uleb128 0x2
 3263 083c 91       		.byte	0x91
 3264 083d 74       		.sleb128 -12
 3265 083e 13       		.uleb128 0x13
 3266 083f 4F020000 		.4byte	.LASF90
 3267 0843 01       		.byte	0x1
 3268 0844 DC04     		.2byte	0x4dc
 3269 0846 83000000 		.4byte	0x83
 3270 084a 02       		.uleb128 0x2
 3271 084b 91       		.byte	0x91
 3272 084c 70       		.sleb128 -16
 3273 084d 00       		.byte	0
 3274 084e 11       		.uleb128 0x11
 3275 084f FB040000 		.4byte	.LASF92
 3276 0853 01       		.byte	0x1
 3277 0854 0705     		.2byte	0x507
 3278 0856 00000000 		.4byte	.LFB60
 3279 085a 70000000 		.4byte	.LFE60-.LFB60
 3280 085e 01       		.uleb128 0x1
 3281 085f 9C       		.byte	0x9c
 3282 0860 92080000 		.4byte	0x892
 3283 0864 14       		.uleb128 0x14
 3284 0865 EB060000 		.4byte	.LASF51
 3285 0869 01       		.byte	0x1
 3286 086a 0705     		.2byte	0x507
 3287 086c 83000000 		.4byte	0x83
 3288 0870 02       		.uleb128 0x2
 3289 0871 91       		.byte	0x91
 3290 0872 6C       		.sleb128 -20
 3291 0873 13       		.uleb128 0x13
 3292 0874 F4010000 		.4byte	.LASF88
 3293 0878 01       		.byte	0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 109


 3294 0879 0A05     		.2byte	0x50a
 3295 087b 6B000000 		.4byte	0x6b
 3296 087f 02       		.uleb128 0x2
 3297 0880 91       		.byte	0x91
 3298 0881 77       		.sleb128 -9
 3299 0882 13       		.uleb128 0x13
 3300 0883 4E080000 		.4byte	.LASF89
 3301 0887 01       		.byte	0x1
 3302 0888 0B05     		.2byte	0x50b
 3303 088a 6B000000 		.4byte	0x6b
 3304 088e 02       		.uleb128 0x2
 3305 088f 91       		.byte	0x91
 3306 0890 76       		.sleb128 -10
 3307 0891 00       		.byte	0
 3308 0892 11       		.uleb128 0x11
 3309 0893 DD010000 		.4byte	.LASF93
 3310 0897 01       		.byte	0x1
 3311 0898 3205     		.2byte	0x532
 3312 089a 00000000 		.4byte	.LFB61
 3313 089e 70000000 		.4byte	.LFE61-.LFB61
 3314 08a2 01       		.uleb128 0x1
 3315 08a3 9C       		.byte	0x9c
 3316 08a4 D6080000 		.4byte	0x8d6
 3317 08a8 14       		.uleb128 0x14
 3318 08a9 EB060000 		.4byte	.LASF51
 3319 08ad 01       		.byte	0x1
 3320 08ae 3205     		.2byte	0x532
 3321 08b0 83000000 		.4byte	0x83
 3322 08b4 02       		.uleb128 0x2
 3323 08b5 91       		.byte	0x91
 3324 08b6 6C       		.sleb128 -20
 3325 08b7 13       		.uleb128 0x13
 3326 08b8 F4010000 		.4byte	.LASF88
 3327 08bc 01       		.byte	0x1
 3328 08bd 3405     		.2byte	0x534
 3329 08bf 6B000000 		.4byte	0x6b
 3330 08c3 02       		.uleb128 0x2
 3331 08c4 91       		.byte	0x91
 3332 08c5 77       		.sleb128 -9
 3333 08c6 13       		.uleb128 0x13
 3334 08c7 4E080000 		.4byte	.LASF89
 3335 08cb 01       		.byte	0x1
 3336 08cc 3505     		.2byte	0x535
 3337 08ce 6B000000 		.4byte	0x6b
 3338 08d2 02       		.uleb128 0x2
 3339 08d3 91       		.byte	0x91
 3340 08d4 76       		.sleb128 -10
 3341 08d5 00       		.byte	0
 3342 08d6 15       		.uleb128 0x15
 3343 08d7 21010000 		.4byte	.LASF94
 3344 08db 01       		.byte	0x1
 3345 08dc 4E09     		.2byte	0x94e
 3346 08de 77000000 		.4byte	0x77
 3347 08e2 00000000 		.4byte	.LFB62
 3348 08e6 76000000 		.4byte	.LFE62-.LFB62
 3349 08ea 01       		.uleb128 0x1
 3350 08eb 9C       		.byte	0x9c
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 110


 3351 08ec 2A090000 		.4byte	0x92a
 3352 08f0 18       		.uleb128 0x18
 3353 08f1 783100   		.ascii	"x1\000"
 3354 08f4 01       		.byte	0x1
 3355 08f5 4E09     		.2byte	0x94e
 3356 08f7 77000000 		.4byte	0x77
 3357 08fb 02       		.uleb128 0x2
 3358 08fc 91       		.byte	0x91
 3359 08fd 66       		.sleb128 -26
 3360 08fe 18       		.uleb128 0x18
 3361 08ff 783200   		.ascii	"x2\000"
 3362 0902 01       		.byte	0x1
 3363 0903 4E09     		.2byte	0x94e
 3364 0905 77000000 		.4byte	0x77
 3365 0909 02       		.uleb128 0x2
 3366 090a 91       		.byte	0x91
 3367 090b 64       		.sleb128 -28
 3368 090c 18       		.uleb128 0x18
 3369 090d 783300   		.ascii	"x3\000"
 3370 0910 01       		.byte	0x1
 3371 0911 4E09     		.2byte	0x94e
 3372 0913 77000000 		.4byte	0x77
 3373 0917 02       		.uleb128 0x2
 3374 0918 91       		.byte	0x91
 3375 0919 62       		.sleb128 -30
 3376 091a 12       		.uleb128 0x12
 3377 091b 746D7000 		.ascii	"tmp\000"
 3378 091f 01       		.byte	0x1
 3379 0920 5009     		.2byte	0x950
 3380 0922 77000000 		.4byte	0x77
 3381 0926 02       		.uleb128 0x2
 3382 0927 91       		.byte	0x91
 3383 0928 6E       		.sleb128 -18
 3384 0929 00       		.byte	0
 3385 092a 15       		.uleb128 0x15
 3386 092b 57060000 		.4byte	.LASF95
 3387 092f 01       		.byte	0x1
 3388 0930 C609     		.2byte	0x9c6
 3389 0932 77000000 		.4byte	0x77
 3390 0936 00000000 		.4byte	.LFB63
 3391 093a 3C000000 		.4byte	.LFE63-.LFB63
 3392 093e 01       		.uleb128 0x1
 3393 093f 9C       		.byte	0x9c
 3394 0940 70090000 		.4byte	0x970
 3395 0944 18       		.uleb128 0x18
 3396 0945 783100   		.ascii	"x1\000"
 3397 0948 01       		.byte	0x1
 3398 0949 C609     		.2byte	0x9c6
 3399 094b 77000000 		.4byte	0x77
 3400 094f 02       		.uleb128 0x2
 3401 0950 91       		.byte	0x91
 3402 0951 6E       		.sleb128 -18
 3403 0952 18       		.uleb128 0x18
 3404 0953 783200   		.ascii	"x2\000"
 3405 0956 01       		.byte	0x1
 3406 0957 C609     		.2byte	0x9c6
 3407 0959 77000000 		.4byte	0x77
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 111


 3408 095d 02       		.uleb128 0x2
 3409 095e 91       		.byte	0x91
 3410 095f 6C       		.sleb128 -20
 3411 0960 12       		.uleb128 0x12
 3412 0961 746D7000 		.ascii	"tmp\000"
 3413 0965 01       		.byte	0x1
 3414 0966 C809     		.2byte	0x9c8
 3415 0968 83000000 		.4byte	0x83
 3416 096c 02       		.uleb128 0x2
 3417 096d 91       		.byte	0x91
 3418 096e 74       		.sleb128 -12
 3419 096f 00       		.byte	0
 3420 0970 15       		.uleb128 0x15
 3421 0971 37090000 		.4byte	.LASF96
 3422 0975 01       		.byte	0x1
 3423 0976 AF0A     		.2byte	0xaaf
 3424 0978 83000000 		.4byte	0x83
 3425 097c 00000000 		.4byte	.LFB64
 3426 0980 1C000000 		.4byte	.LFE64-.LFB64
 3427 0984 01       		.uleb128 0x1
 3428 0985 9C       		.byte	0x9c
 3429 0986 9A090000 		.4byte	0x99a
 3430 098a 14       		.uleb128 0x14
 3431 098b 09040000 		.4byte	.LASF49
 3432 098f 01       		.byte	0x1
 3433 0990 AF0A     		.2byte	0xaaf
 3434 0992 83000000 		.4byte	0x83
 3435 0996 02       		.uleb128 0x2
 3436 0997 91       		.byte	0x91
 3437 0998 74       		.sleb128 -12
 3438 0999 00       		.byte	0
 3439 099a 15       		.uleb128 0x15
 3440 099b 0D060000 		.4byte	.LASF97
 3441 099f 01       		.byte	0x1
 3442 09a0 C90A     		.2byte	0xac9
 3443 09a2 6B000000 		.4byte	0x6b
 3444 09a6 00000000 		.4byte	.LFB65
 3445 09aa 1C000000 		.4byte	.LFE65-.LFB65
 3446 09ae 01       		.uleb128 0x1
 3447 09af 9C       		.byte	0x9c
 3448 09b0 C4090000 		.4byte	0x9c4
 3449 09b4 14       		.uleb128 0x14
 3450 09b5 09040000 		.4byte	.LASF49
 3451 09b9 01       		.byte	0x1
 3452 09ba C90A     		.2byte	0xac9
 3453 09bc 83000000 		.4byte	0x83
 3454 09c0 02       		.uleb128 0x2
 3455 09c1 91       		.byte	0x91
 3456 09c2 74       		.sleb128 -12
 3457 09c3 00       		.byte	0
 3458 09c4 15       		.uleb128 0x15
 3459 09c5 0C010000 		.4byte	.LASF98
 3460 09c9 01       		.byte	0x1
 3461 09ca E30A     		.2byte	0xae3
 3462 09cc 6B000000 		.4byte	0x6b
 3463 09d0 00000000 		.4byte	.LFB66
 3464 09d4 1C000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 112


 3465 09d8 01       		.uleb128 0x1
 3466 09d9 9C       		.byte	0x9c
 3467 09da EE090000 		.4byte	0x9ee
 3468 09de 14       		.uleb128 0x14
 3469 09df EB060000 		.4byte	.LASF51
 3470 09e3 01       		.byte	0x1
 3471 09e4 E30A     		.2byte	0xae3
 3472 09e6 83000000 		.4byte	0x83
 3473 09ea 02       		.uleb128 0x2
 3474 09eb 91       		.byte	0x91
 3475 09ec 74       		.sleb128 -12
 3476 09ed 00       		.byte	0
 3477 09ee 19       		.uleb128 0x19
 3478 09ef 50090000 		.4byte	.LASF99
 3479 09f3 01       		.byte	0x1
 3480 09f4 FD0A     		.2byte	0xafd
 3481 09f6 00000000 		.4byte	.LFB67
 3482 09fa 14000000 		.4byte	.LFE67-.LFB67
 3483 09fe 01       		.uleb128 0x1
 3484 09ff 9C       		.byte	0x9c
 3485 0a00 19       		.uleb128 0x19
 3486 0a01 9E020000 		.4byte	.LASF100
 3487 0a05 01       		.byte	0x1
 3488 0a06 160B     		.2byte	0xb16
 3489 0a08 00000000 		.4byte	.LFB68
 3490 0a0c 14000000 		.4byte	.LFE68-.LFB68
 3491 0a10 01       		.uleb128 0x1
 3492 0a11 9C       		.byte	0x9c
 3493 0a12 1A       		.uleb128 0x1a
 3494 0a13 6B000000 		.4byte	0x6b
 3495 0a17 220A0000 		.4byte	0xa22
 3496 0a1b 1B       		.uleb128 0x1b
 3497 0a1c A4000000 		.4byte	0xa4
 3498 0a20 08       		.byte	0x8
 3499 0a21 00       		.byte	0
 3500 0a22 0F       		.uleb128 0xf
 3501 0a23 6E090000 		.4byte	.LASF101
 3502 0a27 01       		.byte	0x1
 3503 0a28 55       		.byte	0x55
 3504 0a29 120A0000 		.4byte	0xa12
 3505 0a2d 05       		.uleb128 0x5
 3506 0a2e 03       		.byte	0x3
 3507 0a2f 24000000 		.4byte	CapSense_debounceCounter
 3508 0a33 1A       		.uleb128 0x1a
 3509 0a34 77000000 		.4byte	0x77
 3510 0a38 430A0000 		.4byte	0xa43
 3511 0a3c 1B       		.uleb128 0x1b
 3512 0a3d A4000000 		.4byte	0xa4
 3513 0a41 07       		.byte	0x7
 3514 0a42 00       		.byte	0
 3515 0a43 1C       		.uleb128 0x1c
 3516 0a44 FB080000 		.4byte	.LASF102
 3517 0a48 01       		.byte	0x1
 3518 0a49 2C       		.byte	0x2c
 3519 0a4a 330A0000 		.4byte	0xa33
 3520 0a4e 1A       		.uleb128 0x1a
 3521 0a4f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 113


 3522 0a53 5E0A0000 		.4byte	0xa5e
 3523 0a57 1B       		.uleb128 0x1b
 3524 0a58 A4000000 		.4byte	0xa4
 3525 0a5c 00       		.byte	0
 3526 0a5d 00       		.byte	0
 3527 0a5e 1C       		.uleb128 0x1c
 3528 0a5f 19040000 		.4byte	.LASF103
 3529 0a63 01       		.byte	0x1
 3530 0a64 2D       		.byte	0x2d
 3531 0a65 4E0A0000 		.4byte	0xa4e
 3532 0a69 1A       		.uleb128 0x1a
 3533 0a6a 6B000000 		.4byte	0x6b
 3534 0a6e 790A0000 		.4byte	0xa79
 3535 0a72 1B       		.uleb128 0x1b
 3536 0a73 A4000000 		.4byte	0xa4
 3537 0a77 07       		.byte	0x7
 3538 0a78 00       		.byte	0
 3539 0a79 1C       		.uleb128 0x1c
 3540 0a7a C4020000 		.4byte	.LASF104
 3541 0a7e 01       		.byte	0x1
 3542 0a7f 2E       		.byte	0x2e
 3543 0a80 840A0000 		.4byte	0xa84
 3544 0a84 08       		.uleb128 0x8
 3545 0a85 690A0000 		.4byte	0xa69
 3546 0a89 1D       		.uleb128 0x1d
 3547 0a8a 0D020000 		.4byte	.LASF105
 3548 0a8e 01       		.byte	0x1
 3549 0a8f 34       		.byte	0x34
 3550 0a90 330A0000 		.4byte	0xa33
 3551 0a94 05       		.uleb128 0x5
 3552 0a95 03       		.byte	0x3
 3553 0a96 00000000 		.4byte	CapSense_sensorBaseline
 3554 0a9a 1D       		.uleb128 0x1d
 3555 0a9b 97030000 		.4byte	.LASF106
 3556 0a9f 01       		.byte	0x1
 3557 0aa0 35       		.byte	0x35
 3558 0aa1 690A0000 		.4byte	0xa69
 3559 0aa5 05       		.uleb128 0x5
 3560 0aa6 03       		.byte	0x3
 3561 0aa7 00000000 		.4byte	CapSense_sensorBaselineLow
 3562 0aab 1D       		.uleb128 0x1d
 3563 0aac 4E010000 		.4byte	.LASF107
 3564 0ab0 01       		.byte	0x1
 3565 0ab1 36       		.byte	0x36
 3566 0ab2 690A0000 		.4byte	0xa69
 3567 0ab6 05       		.uleb128 0x5
 3568 0ab7 03       		.byte	0x3
 3569 0ab8 00000000 		.4byte	CapSense_sensorSignal
 3570 0abc 1D       		.uleb128 0x1d
 3571 0abd 41000000 		.4byte	.LASF108
 3572 0ac1 01       		.byte	0x1
 3573 0ac2 37       		.byte	0x37
 3574 0ac3 4E0A0000 		.4byte	0xa4e
 3575 0ac7 05       		.uleb128 0x5
 3576 0ac8 03       		.byte	0x3
 3577 0ac9 00000000 		.4byte	CapSense_sensorOnMask
 3578 0acd 1D       		.uleb128 0x1d
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 114


 3579 0ace 39070000 		.4byte	.LASF109
 3580 0ad2 01       		.byte	0x1
 3581 0ad3 39       		.byte	0x39
 3582 0ad4 690A0000 		.4byte	0xa69
 3583 0ad8 05       		.uleb128 0x5
 3584 0ad9 03       		.byte	0x3
 3585 0ada 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3586 0ade 1D       		.uleb128 0x1d
 3587 0adf 84020000 		.4byte	.LASF110
 3588 0ae3 01       		.byte	0x1
 3589 0ae4 3A       		.byte	0x3a
 3590 0ae5 690A0000 		.4byte	0xa69
 3591 0ae9 05       		.uleb128 0x5
 3592 0aea 03       		.byte	0x3
 3593 0aeb 00000000 		.4byte	CapSense_lowBaselineReset
 3594 0aef 1D       		.uleb128 0x1d
 3595 0af0 C6050000 		.4byte	.LASF111
 3596 0af4 01       		.byte	0x1
 3597 0af5 49       		.byte	0x49
 3598 0af6 690A0000 		.4byte	0xa69
 3599 0afa 05       		.uleb128 0x5
 3600 0afb 03       		.byte	0x3
 3601 0afc 00000000 		.4byte	CapSense_fingerThreshold
 3602 0b00 1D       		.uleb128 0x1d
 3603 0b01 AE050000 		.4byte	.LASF112
 3604 0b05 01       		.byte	0x1
 3605 0b06 4B       		.byte	0x4b
 3606 0b07 690A0000 		.4byte	0xa69
 3607 0b0b 05       		.uleb128 0x5
 3608 0b0c 03       		.byte	0x3
 3609 0b0d 00000000 		.4byte	CapSense_noiseThreshold
 3610 0b11 1D       		.uleb128 0x1d
 3611 0b12 CA090000 		.4byte	.LASF113
 3612 0b16 01       		.byte	0x1
 3613 0b17 4D       		.byte	0x4d
 3614 0b18 690A0000 		.4byte	0xa69
 3615 0b1c 05       		.uleb128 0x5
 3616 0b1d 03       		.byte	0x3
 3617 0b1e 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3618 0b22 1D       		.uleb128 0x1d
 3619 0b23 17000000 		.4byte	.LASF114
 3620 0b27 01       		.byte	0x1
 3621 0b28 4F       		.byte	0x4f
 3622 0b29 690A0000 		.4byte	0xa69
 3623 0b2d 05       		.uleb128 0x5
 3624 0b2e 03       		.byte	0x3
 3625 0b2f 00000000 		.4byte	CapSense_hysteresis
 3626 0b33 1D       		.uleb128 0x1d
 3627 0b34 D0030000 		.4byte	.LASF115
 3628 0b38 01       		.byte	0x1
 3629 0b39 51       		.byte	0x51
 3630 0b3a 690A0000 		.4byte	0xa69
 3631 0b3e 05       		.uleb128 0x5
 3632 0b3f 03       		.byte	0x3
 3633 0b40 00000000 		.4byte	CapSense_debounce
 3634 0b44 1D       		.uleb128 0x1d
 3635 0b45 2B000000 		.4byte	.LASF116
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 115


 3636 0b49 01       		.byte	0x1
 3637 0b4a 59       		.byte	0x59
 3638 0b4b 550B0000 		.4byte	0xb55
 3639 0b4f 05       		.uleb128 0x5
 3640 0b50 03       		.byte	0x3
 3641 0b51 00000000 		.4byte	CapSense_rawDataIndex
 3642 0b55 08       		.uleb128 0x8
 3643 0b56 690A0000 		.4byte	0xa69
 3644 0b5a 1D       		.uleb128 0x1d
 3645 0b5b 33040000 		.4byte	.LASF117
 3646 0b5f 01       		.byte	0x1
 3647 0b60 64       		.byte	0x64
 3648 0b61 6B0B0000 		.4byte	0xb6b
 3649 0b65 05       		.uleb128 0x5
 3650 0b66 03       		.byte	0x3
 3651 0b67 00000000 		.4byte	CapSense_numberOfSensors
 3652 0b6b 08       		.uleb128 0x8
 3653 0b6c 690A0000 		.4byte	0xa69
 3654 0b70 1D       		.uleb128 0x1d
 3655 0b71 DF050000 		.4byte	.LASF118
 3656 0b75 01       		.byte	0x1
 3657 0b76 27       		.byte	0x27
 3658 0b77 330A0000 		.4byte	0xa33
 3659 0b7b 05       		.uleb128 0x5
 3660 0b7c 03       		.byte	0x3
 3661 0b7d 00000000 		.4byte	CapSense_rawFilterData1
 3662 0b81 1C       		.uleb128 0x1c
 3663 0b82 F7050000 		.4byte	.LASF119
 3664 0b86 01       		.byte	0x1
 3665 0b87 41       		.byte	0x41
 3666 0b88 A7020000 		.4byte	0x2a7
 3667 0b8c 1D       		.uleb128 0x1d
 3668 0b8d 9D070000 		.4byte	.LASF120
 3669 0b91 01       		.byte	0x1
 3670 0b92 45       		.byte	0x45
 3671 0b93 6B000000 		.4byte	0x6b
 3672 0b97 05       		.uleb128 0x5
 3673 0b98 03       		.byte	0x3
 3674 0b99 00000000 		.4byte	CapSense_enableRawFilters
 3675 0b9d 00       		.byte	0
 3676              		.section	.debug_abbrev,"",%progbits
 3677              	.Ldebug_abbrev0:
 3678 0000 01       		.uleb128 0x1
 3679 0001 11       		.uleb128 0x11
 3680 0002 01       		.byte	0x1
 3681 0003 25       		.uleb128 0x25
 3682 0004 0E       		.uleb128 0xe
 3683 0005 13       		.uleb128 0x13
 3684 0006 0B       		.uleb128 0xb
 3685 0007 03       		.uleb128 0x3
 3686 0008 0E       		.uleb128 0xe
 3687 0009 1B       		.uleb128 0x1b
 3688 000a 0E       		.uleb128 0xe
 3689 000b 55       		.uleb128 0x55
 3690 000c 17       		.uleb128 0x17
 3691 000d 11       		.uleb128 0x11
 3692 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 116


 3693 000f 10       		.uleb128 0x10
 3694 0010 17       		.uleb128 0x17
 3695 0011 00       		.byte	0
 3696 0012 00       		.byte	0
 3697 0013 02       		.uleb128 0x2
 3698 0014 24       		.uleb128 0x24
 3699 0015 00       		.byte	0
 3700 0016 0B       		.uleb128 0xb
 3701 0017 0B       		.uleb128 0xb
 3702 0018 3E       		.uleb128 0x3e
 3703 0019 0B       		.uleb128 0xb
 3704 001a 03       		.uleb128 0x3
 3705 001b 0E       		.uleb128 0xe
 3706 001c 00       		.byte	0
 3707 001d 00       		.byte	0
 3708 001e 03       		.uleb128 0x3
 3709 001f 24       		.uleb128 0x24
 3710 0020 00       		.byte	0
 3711 0021 0B       		.uleb128 0xb
 3712 0022 0B       		.uleb128 0xb
 3713 0023 3E       		.uleb128 0x3e
 3714 0024 0B       		.uleb128 0xb
 3715 0025 03       		.uleb128 0x3
 3716 0026 08       		.uleb128 0x8
 3717 0027 00       		.byte	0
 3718 0028 00       		.byte	0
 3719 0029 04       		.uleb128 0x4
 3720 002a 16       		.uleb128 0x16
 3721 002b 00       		.byte	0
 3722 002c 03       		.uleb128 0x3
 3723 002d 0E       		.uleb128 0xe
 3724 002e 3A       		.uleb128 0x3a
 3725 002f 0B       		.uleb128 0xb
 3726 0030 3B       		.uleb128 0x3b
 3727 0031 05       		.uleb128 0x5
 3728 0032 49       		.uleb128 0x49
 3729 0033 13       		.uleb128 0x13
 3730 0034 00       		.byte	0
 3731 0035 00       		.byte	0
 3732 0036 05       		.uleb128 0x5
 3733 0037 13       		.uleb128 0x13
 3734 0038 01       		.byte	0x1
 3735 0039 0B       		.uleb128 0xb
 3736 003a 0B       		.uleb128 0xb
 3737 003b 3A       		.uleb128 0x3a
 3738 003c 0B       		.uleb128 0xb
 3739 003d 3B       		.uleb128 0x3b
 3740 003e 0B       		.uleb128 0xb
 3741 003f 01       		.uleb128 0x1
 3742 0040 13       		.uleb128 0x13
 3743 0041 00       		.byte	0
 3744 0042 00       		.byte	0
 3745 0043 06       		.uleb128 0x6
 3746 0044 0D       		.uleb128 0xd
 3747 0045 00       		.byte	0
 3748 0046 03       		.uleb128 0x3
 3749 0047 0E       		.uleb128 0xe
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 117


 3750 0048 3A       		.uleb128 0x3a
 3751 0049 0B       		.uleb128 0xb
 3752 004a 3B       		.uleb128 0x3b
 3753 004b 0B       		.uleb128 0xb
 3754 004c 49       		.uleb128 0x49
 3755 004d 13       		.uleb128 0x13
 3756 004e 38       		.uleb128 0x38
 3757 004f 0B       		.uleb128 0xb
 3758 0050 00       		.byte	0
 3759 0051 00       		.byte	0
 3760 0052 07       		.uleb128 0x7
 3761 0053 0F       		.uleb128 0xf
 3762 0054 00       		.byte	0
 3763 0055 0B       		.uleb128 0xb
 3764 0056 0B       		.uleb128 0xb
 3765 0057 49       		.uleb128 0x49
 3766 0058 13       		.uleb128 0x13
 3767 0059 00       		.byte	0
 3768 005a 00       		.byte	0
 3769 005b 08       		.uleb128 0x8
 3770 005c 26       		.uleb128 0x26
 3771 005d 00       		.byte	0
 3772 005e 49       		.uleb128 0x49
 3773 005f 13       		.uleb128 0x13
 3774 0060 00       		.byte	0
 3775 0061 00       		.byte	0
 3776 0062 09       		.uleb128 0x9
 3777 0063 15       		.uleb128 0x15
 3778 0064 01       		.byte	0x1
 3779 0065 27       		.uleb128 0x27
 3780 0066 19       		.uleb128 0x19
 3781 0067 49       		.uleb128 0x49
 3782 0068 13       		.uleb128 0x13
 3783 0069 01       		.uleb128 0x1
 3784 006a 13       		.uleb128 0x13
 3785 006b 00       		.byte	0
 3786 006c 00       		.byte	0
 3787 006d 0A       		.uleb128 0xa
 3788 006e 05       		.uleb128 0x5
 3789 006f 00       		.byte	0
 3790 0070 49       		.uleb128 0x49
 3791 0071 13       		.uleb128 0x13
 3792 0072 00       		.byte	0
 3793 0073 00       		.byte	0
 3794 0074 0B       		.uleb128 0xb
 3795 0075 15       		.uleb128 0x15
 3796 0076 01       		.byte	0x1
 3797 0077 27       		.uleb128 0x27
 3798 0078 19       		.uleb128 0x19
 3799 0079 01       		.uleb128 0x1
 3800 007a 13       		.uleb128 0x13
 3801 007b 00       		.byte	0
 3802 007c 00       		.byte	0
 3803 007d 0C       		.uleb128 0xc
 3804 007e 16       		.uleb128 0x16
 3805 007f 00       		.byte	0
 3806 0080 03       		.uleb128 0x3
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 118


 3807 0081 0E       		.uleb128 0xe
 3808 0082 3A       		.uleb128 0x3a
 3809 0083 0B       		.uleb128 0xb
 3810 0084 3B       		.uleb128 0x3b
 3811 0085 0B       		.uleb128 0xb
 3812 0086 49       		.uleb128 0x49
 3813 0087 13       		.uleb128 0x13
 3814 0088 00       		.byte	0
 3815 0089 00       		.byte	0
 3816 008a 0D       		.uleb128 0xd
 3817 008b 2E       		.uleb128 0x2e
 3818 008c 01       		.byte	0x1
 3819 008d 3F       		.uleb128 0x3f
 3820 008e 19       		.uleb128 0x19
 3821 008f 03       		.uleb128 0x3
 3822 0090 0E       		.uleb128 0xe
 3823 0091 3A       		.uleb128 0x3a
 3824 0092 0B       		.uleb128 0xb
 3825 0093 3B       		.uleb128 0x3b
 3826 0094 0B       		.uleb128 0xb
 3827 0095 27       		.uleb128 0x27
 3828 0096 19       		.uleb128 0x19
 3829 0097 11       		.uleb128 0x11
 3830 0098 01       		.uleb128 0x1
 3831 0099 12       		.uleb128 0x12
 3832 009a 06       		.uleb128 0x6
 3833 009b 40       		.uleb128 0x40
 3834 009c 18       		.uleb128 0x18
 3835 009d 9742     		.uleb128 0x2117
 3836 009f 19       		.uleb128 0x19
 3837 00a0 01       		.uleb128 0x1
 3838 00a1 13       		.uleb128 0x13
 3839 00a2 00       		.byte	0
 3840 00a3 00       		.byte	0
 3841 00a4 0E       		.uleb128 0xe
 3842 00a5 05       		.uleb128 0x5
 3843 00a6 00       		.byte	0
 3844 00a7 03       		.uleb128 0x3
 3845 00a8 0E       		.uleb128 0xe
 3846 00a9 3A       		.uleb128 0x3a
 3847 00aa 0B       		.uleb128 0xb
 3848 00ab 3B       		.uleb128 0x3b
 3849 00ac 0B       		.uleb128 0xb
 3850 00ad 49       		.uleb128 0x49
 3851 00ae 13       		.uleb128 0x13
 3852 00af 02       		.uleb128 0x2
 3853 00b0 18       		.uleb128 0x18
 3854 00b1 00       		.byte	0
 3855 00b2 00       		.byte	0
 3856 00b3 0F       		.uleb128 0xf
 3857 00b4 34       		.uleb128 0x34
 3858 00b5 00       		.byte	0
 3859 00b6 03       		.uleb128 0x3
 3860 00b7 0E       		.uleb128 0xe
 3861 00b8 3A       		.uleb128 0x3a
 3862 00b9 0B       		.uleb128 0xb
 3863 00ba 3B       		.uleb128 0x3b
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 119


 3864 00bb 0B       		.uleb128 0xb
 3865 00bc 49       		.uleb128 0x49
 3866 00bd 13       		.uleb128 0x13
 3867 00be 02       		.uleb128 0x2
 3868 00bf 18       		.uleb128 0x18
 3869 00c0 00       		.byte	0
 3870 00c1 00       		.byte	0
 3871 00c2 10       		.uleb128 0x10
 3872 00c3 2E       		.uleb128 0x2e
 3873 00c4 01       		.byte	0x1
 3874 00c5 3F       		.uleb128 0x3f
 3875 00c6 19       		.uleb128 0x19
 3876 00c7 03       		.uleb128 0x3
 3877 00c8 0E       		.uleb128 0xe
 3878 00c9 3A       		.uleb128 0x3a
 3879 00ca 0B       		.uleb128 0xb
 3880 00cb 3B       		.uleb128 0x3b
 3881 00cc 0B       		.uleb128 0xb
 3882 00cd 27       		.uleb128 0x27
 3883 00ce 19       		.uleb128 0x19
 3884 00cf 11       		.uleb128 0x11
 3885 00d0 01       		.uleb128 0x1
 3886 00d1 12       		.uleb128 0x12
 3887 00d2 06       		.uleb128 0x6
 3888 00d3 40       		.uleb128 0x40
 3889 00d4 18       		.uleb128 0x18
 3890 00d5 9642     		.uleb128 0x2116
 3891 00d7 19       		.uleb128 0x19
 3892 00d8 01       		.uleb128 0x1
 3893 00d9 13       		.uleb128 0x13
 3894 00da 00       		.byte	0
 3895 00db 00       		.byte	0
 3896 00dc 11       		.uleb128 0x11
 3897 00dd 2E       		.uleb128 0x2e
 3898 00de 01       		.byte	0x1
 3899 00df 3F       		.uleb128 0x3f
 3900 00e0 19       		.uleb128 0x19
 3901 00e1 03       		.uleb128 0x3
 3902 00e2 0E       		.uleb128 0xe
 3903 00e3 3A       		.uleb128 0x3a
 3904 00e4 0B       		.uleb128 0xb
 3905 00e5 3B       		.uleb128 0x3b
 3906 00e6 05       		.uleb128 0x5
 3907 00e7 27       		.uleb128 0x27
 3908 00e8 19       		.uleb128 0x19
 3909 00e9 11       		.uleb128 0x11
 3910 00ea 01       		.uleb128 0x1
 3911 00eb 12       		.uleb128 0x12
 3912 00ec 06       		.uleb128 0x6
 3913 00ed 40       		.uleb128 0x40
 3914 00ee 18       		.uleb128 0x18
 3915 00ef 9642     		.uleb128 0x2116
 3916 00f1 19       		.uleb128 0x19
 3917 00f2 01       		.uleb128 0x1
 3918 00f3 13       		.uleb128 0x13
 3919 00f4 00       		.byte	0
 3920 00f5 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 120


 3921 00f6 12       		.uleb128 0x12
 3922 00f7 34       		.uleb128 0x34
 3923 00f8 00       		.byte	0
 3924 00f9 03       		.uleb128 0x3
 3925 00fa 08       		.uleb128 0x8
 3926 00fb 3A       		.uleb128 0x3a
 3927 00fc 0B       		.uleb128 0xb
 3928 00fd 3B       		.uleb128 0x3b
 3929 00fe 05       		.uleb128 0x5
 3930 00ff 49       		.uleb128 0x49
 3931 0100 13       		.uleb128 0x13
 3932 0101 02       		.uleb128 0x2
 3933 0102 18       		.uleb128 0x18
 3934 0103 00       		.byte	0
 3935 0104 00       		.byte	0
 3936 0105 13       		.uleb128 0x13
 3937 0106 34       		.uleb128 0x34
 3938 0107 00       		.byte	0
 3939 0108 03       		.uleb128 0x3
 3940 0109 0E       		.uleb128 0xe
 3941 010a 3A       		.uleb128 0x3a
 3942 010b 0B       		.uleb128 0xb
 3943 010c 3B       		.uleb128 0x3b
 3944 010d 05       		.uleb128 0x5
 3945 010e 49       		.uleb128 0x49
 3946 010f 13       		.uleb128 0x13
 3947 0110 02       		.uleb128 0x2
 3948 0111 18       		.uleb128 0x18
 3949 0112 00       		.byte	0
 3950 0113 00       		.byte	0
 3951 0114 14       		.uleb128 0x14
 3952 0115 05       		.uleb128 0x5
 3953 0116 00       		.byte	0
 3954 0117 03       		.uleb128 0x3
 3955 0118 0E       		.uleb128 0xe
 3956 0119 3A       		.uleb128 0x3a
 3957 011a 0B       		.uleb128 0xb
 3958 011b 3B       		.uleb128 0x3b
 3959 011c 05       		.uleb128 0x5
 3960 011d 49       		.uleb128 0x49
 3961 011e 13       		.uleb128 0x13
 3962 011f 02       		.uleb128 0x2
 3963 0120 18       		.uleb128 0x18
 3964 0121 00       		.byte	0
 3965 0122 00       		.byte	0
 3966 0123 15       		.uleb128 0x15
 3967 0124 2E       		.uleb128 0x2e
 3968 0125 01       		.byte	0x1
 3969 0126 3F       		.uleb128 0x3f
 3970 0127 19       		.uleb128 0x19
 3971 0128 03       		.uleb128 0x3
 3972 0129 0E       		.uleb128 0xe
 3973 012a 3A       		.uleb128 0x3a
 3974 012b 0B       		.uleb128 0xb
 3975 012c 3B       		.uleb128 0x3b
 3976 012d 05       		.uleb128 0x5
 3977 012e 27       		.uleb128 0x27
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 121


 3978 012f 19       		.uleb128 0x19
 3979 0130 49       		.uleb128 0x49
 3980 0131 13       		.uleb128 0x13
 3981 0132 11       		.uleb128 0x11
 3982 0133 01       		.uleb128 0x1
 3983 0134 12       		.uleb128 0x12
 3984 0135 06       		.uleb128 0x6
 3985 0136 40       		.uleb128 0x40
 3986 0137 18       		.uleb128 0x18
 3987 0138 9742     		.uleb128 0x2117
 3988 013a 19       		.uleb128 0x19
 3989 013b 01       		.uleb128 0x1
 3990 013c 13       		.uleb128 0x13
 3991 013d 00       		.byte	0
 3992 013e 00       		.byte	0
 3993 013f 16       		.uleb128 0x16
 3994 0140 2E       		.uleb128 0x2e
 3995 0141 01       		.byte	0x1
 3996 0142 3F       		.uleb128 0x3f
 3997 0143 19       		.uleb128 0x19
 3998 0144 03       		.uleb128 0x3
 3999 0145 0E       		.uleb128 0xe
 4000 0146 3A       		.uleb128 0x3a
 4001 0147 0B       		.uleb128 0xb
 4002 0148 3B       		.uleb128 0x3b
 4003 0149 05       		.uleb128 0x5
 4004 014a 27       		.uleb128 0x27
 4005 014b 19       		.uleb128 0x19
 4006 014c 11       		.uleb128 0x11
 4007 014d 01       		.uleb128 0x1
 4008 014e 12       		.uleb128 0x12
 4009 014f 06       		.uleb128 0x6
 4010 0150 40       		.uleb128 0x40
 4011 0151 18       		.uleb128 0x18
 4012 0152 9742     		.uleb128 0x2117
 4013 0154 19       		.uleb128 0x19
 4014 0155 01       		.uleb128 0x1
 4015 0156 13       		.uleb128 0x13
 4016 0157 00       		.byte	0
 4017 0158 00       		.byte	0
 4018 0159 17       		.uleb128 0x17
 4019 015a 2E       		.uleb128 0x2e
 4020 015b 01       		.byte	0x1
 4021 015c 3F       		.uleb128 0x3f
 4022 015d 19       		.uleb128 0x19
 4023 015e 03       		.uleb128 0x3
 4024 015f 0E       		.uleb128 0xe
 4025 0160 3A       		.uleb128 0x3a
 4026 0161 0B       		.uleb128 0xb
 4027 0162 3B       		.uleb128 0x3b
 4028 0163 05       		.uleb128 0x5
 4029 0164 27       		.uleb128 0x27
 4030 0165 19       		.uleb128 0x19
 4031 0166 49       		.uleb128 0x49
 4032 0167 13       		.uleb128 0x13
 4033 0168 11       		.uleb128 0x11
 4034 0169 01       		.uleb128 0x1
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 122


 4035 016a 12       		.uleb128 0x12
 4036 016b 06       		.uleb128 0x6
 4037 016c 40       		.uleb128 0x40
 4038 016d 18       		.uleb128 0x18
 4039 016e 9642     		.uleb128 0x2116
 4040 0170 19       		.uleb128 0x19
 4041 0171 01       		.uleb128 0x1
 4042 0172 13       		.uleb128 0x13
 4043 0173 00       		.byte	0
 4044 0174 00       		.byte	0
 4045 0175 18       		.uleb128 0x18
 4046 0176 05       		.uleb128 0x5
 4047 0177 00       		.byte	0
 4048 0178 03       		.uleb128 0x3
 4049 0179 08       		.uleb128 0x8
 4050 017a 3A       		.uleb128 0x3a
 4051 017b 0B       		.uleb128 0xb
 4052 017c 3B       		.uleb128 0x3b
 4053 017d 05       		.uleb128 0x5
 4054 017e 49       		.uleb128 0x49
 4055 017f 13       		.uleb128 0x13
 4056 0180 02       		.uleb128 0x2
 4057 0181 18       		.uleb128 0x18
 4058 0182 00       		.byte	0
 4059 0183 00       		.byte	0
 4060 0184 19       		.uleb128 0x19
 4061 0185 2E       		.uleb128 0x2e
 4062 0186 00       		.byte	0
 4063 0187 3F       		.uleb128 0x3f
 4064 0188 19       		.uleb128 0x19
 4065 0189 03       		.uleb128 0x3
 4066 018a 0E       		.uleb128 0xe
 4067 018b 3A       		.uleb128 0x3a
 4068 018c 0B       		.uleb128 0xb
 4069 018d 3B       		.uleb128 0x3b
 4070 018e 05       		.uleb128 0x5
 4071 018f 27       		.uleb128 0x27
 4072 0190 19       		.uleb128 0x19
 4073 0191 11       		.uleb128 0x11
 4074 0192 01       		.uleb128 0x1
 4075 0193 12       		.uleb128 0x12
 4076 0194 06       		.uleb128 0x6
 4077 0195 40       		.uleb128 0x40
 4078 0196 18       		.uleb128 0x18
 4079 0197 9742     		.uleb128 0x2117
 4080 0199 19       		.uleb128 0x19
 4081 019a 00       		.byte	0
 4082 019b 00       		.byte	0
 4083 019c 1A       		.uleb128 0x1a
 4084 019d 01       		.uleb128 0x1
 4085 019e 01       		.byte	0x1
 4086 019f 49       		.uleb128 0x49
 4087 01a0 13       		.uleb128 0x13
 4088 01a1 01       		.uleb128 0x1
 4089 01a2 13       		.uleb128 0x13
 4090 01a3 00       		.byte	0
 4091 01a4 00       		.byte	0
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 123


 4092 01a5 1B       		.uleb128 0x1b
 4093 01a6 21       		.uleb128 0x21
 4094 01a7 00       		.byte	0
 4095 01a8 49       		.uleb128 0x49
 4096 01a9 13       		.uleb128 0x13
 4097 01aa 2F       		.uleb128 0x2f
 4098 01ab 0B       		.uleb128 0xb
 4099 01ac 00       		.byte	0
 4100 01ad 00       		.byte	0
 4101 01ae 1C       		.uleb128 0x1c
 4102 01af 34       		.uleb128 0x34
 4103 01b0 00       		.byte	0
 4104 01b1 03       		.uleb128 0x3
 4105 01b2 0E       		.uleb128 0xe
 4106 01b3 3A       		.uleb128 0x3a
 4107 01b4 0B       		.uleb128 0xb
 4108 01b5 3B       		.uleb128 0x3b
 4109 01b6 0B       		.uleb128 0xb
 4110 01b7 49       		.uleb128 0x49
 4111 01b8 13       		.uleb128 0x13
 4112 01b9 3F       		.uleb128 0x3f
 4113 01ba 19       		.uleb128 0x19
 4114 01bb 3C       		.uleb128 0x3c
 4115 01bc 19       		.uleb128 0x19
 4116 01bd 00       		.byte	0
 4117 01be 00       		.byte	0
 4118 01bf 1D       		.uleb128 0x1d
 4119 01c0 34       		.uleb128 0x34
 4120 01c1 00       		.byte	0
 4121 01c2 03       		.uleb128 0x3
 4122 01c3 0E       		.uleb128 0xe
 4123 01c4 3A       		.uleb128 0x3a
 4124 01c5 0B       		.uleb128 0xb
 4125 01c6 3B       		.uleb128 0x3b
 4126 01c7 0B       		.uleb128 0xb
 4127 01c8 49       		.uleb128 0x49
 4128 01c9 13       		.uleb128 0x13
 4129 01ca 3F       		.uleb128 0x3f
 4130 01cb 19       		.uleb128 0x19
 4131 01cc 02       		.uleb128 0x2
 4132 01cd 18       		.uleb128 0x18
 4133 01ce 00       		.byte	0
 4134 01cf 00       		.byte	0
 4135 01d0 00       		.byte	0
 4136              		.section	.debug_aranges,"",%progbits
 4137 0000 24010000 		.4byte	0x124
 4138 0004 0200     		.2byte	0x2
 4139 0006 00000000 		.4byte	.Ldebug_info0
 4140 000a 04       		.byte	0x4
 4141 000b 00       		.byte	0
 4142 000c 0000     		.2byte	0
 4143 000e 0000     		.2byte	0
 4144 0010 00000000 		.4byte	.LFB35
 4145 0014 84000000 		.4byte	.LFE35-.LFB35
 4146 0018 00000000 		.4byte	.LFB36
 4147 001c 28000000 		.4byte	.LFE36-.LFB36
 4148 0020 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 124


 4149 0024 26000000 		.4byte	.LFE37-.LFB37
 4150 0028 00000000 		.4byte	.LFB38
 4151 002c 50000000 		.4byte	.LFE38-.LFB38
 4152 0030 00000000 		.4byte	.LFB39
 4153 0034 38020000 		.4byte	.LFE39-.LFB39
 4154 0038 00000000 		.4byte	.LFB40
 4155 003c 1E000000 		.4byte	.LFE40-.LFB40
 4156 0040 00000000 		.4byte	.LFB41
 4157 0044 40000000 		.4byte	.LFE41-.LFB41
 4158 0048 00000000 		.4byte	.LFB42
 4159 004c 70000000 		.4byte	.LFE42-.LFB42
 4160 0050 00000000 		.4byte	.LFB43
 4161 0054 1C000000 		.4byte	.LFE43-.LFB43
 4162 0058 00000000 		.4byte	.LFB44
 4163 005c 24000000 		.4byte	.LFE44-.LFB44
 4164 0060 00000000 		.4byte	.LFB45
 4165 0064 1C000000 		.4byte	.LFE45-.LFB45
 4166 0068 00000000 		.4byte	.LFB46
 4167 006c 24000000 		.4byte	.LFE46-.LFB46
 4168 0070 00000000 		.4byte	.LFB47
 4169 0074 1C000000 		.4byte	.LFE47-.LFB47
 4170 0078 00000000 		.4byte	.LFB48
 4171 007c 1C000000 		.4byte	.LFE48-.LFB48
 4172 0080 00000000 		.4byte	.LFB49
 4173 0084 1C000000 		.4byte	.LFE49-.LFB49
 4174 0088 00000000 		.4byte	.LFB50
 4175 008c 1C000000 		.4byte	.LFE50-.LFB50
 4176 0090 00000000 		.4byte	.LFB51
 4177 0094 24000000 		.4byte	.LFE51-.LFB51
 4178 0098 00000000 		.4byte	.LFB52
 4179 009c 24000000 		.4byte	.LFE52-.LFB52
 4180 00a0 00000000 		.4byte	.LFB53
 4181 00a4 24000000 		.4byte	.LFE53-.LFB53
 4182 00a8 00000000 		.4byte	.LFB54
 4183 00ac 24000000 		.4byte	.LFE54-.LFB54
 4184 00b0 00000000 		.4byte	.LFB55
 4185 00b4 24000000 		.4byte	.LFE55-.LFB55
 4186 00b8 00000000 		.4byte	.LFB56
 4187 00bc 24000000 		.4byte	.LFE56-.LFB56
 4188 00c0 00000000 		.4byte	.LFB57
 4189 00c4 34010000 		.4byte	.LFE57-.LFB57
 4190 00c8 00000000 		.4byte	.LFB58
 4191 00cc 58000000 		.4byte	.LFE58-.LFB58
 4192 00d0 00000000 		.4byte	.LFB59
 4193 00d4 36000000 		.4byte	.LFE59-.LFB59
 4194 00d8 00000000 		.4byte	.LFB60
 4195 00dc 70000000 		.4byte	.LFE60-.LFB60
 4196 00e0 00000000 		.4byte	.LFB61
 4197 00e4 70000000 		.4byte	.LFE61-.LFB61
 4198 00e8 00000000 		.4byte	.LFB62
 4199 00ec 76000000 		.4byte	.LFE62-.LFB62
 4200 00f0 00000000 		.4byte	.LFB63
 4201 00f4 3C000000 		.4byte	.LFE63-.LFB63
 4202 00f8 00000000 		.4byte	.LFB64
 4203 00fc 1C000000 		.4byte	.LFE64-.LFB64
 4204 0100 00000000 		.4byte	.LFB65
 4205 0104 1C000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 125


 4206 0108 00000000 		.4byte	.LFB66
 4207 010c 1C000000 		.4byte	.LFE66-.LFB66
 4208 0110 00000000 		.4byte	.LFB67
 4209 0114 14000000 		.4byte	.LFE67-.LFB67
 4210 0118 00000000 		.4byte	.LFB68
 4211 011c 14000000 		.4byte	.LFE68-.LFB68
 4212 0120 00000000 		.4byte	0
 4213 0124 00000000 		.4byte	0
 4214              		.section	.debug_ranges,"",%progbits
 4215              	.Ldebug_ranges0:
 4216 0000 00000000 		.4byte	.LFB35
 4217 0004 84000000 		.4byte	.LFE35
 4218 0008 00000000 		.4byte	.LFB36
 4219 000c 28000000 		.4byte	.LFE36
 4220 0010 00000000 		.4byte	.LFB37
 4221 0014 26000000 		.4byte	.LFE37
 4222 0018 00000000 		.4byte	.LFB38
 4223 001c 50000000 		.4byte	.LFE38
 4224 0020 00000000 		.4byte	.LFB39
 4225 0024 38020000 		.4byte	.LFE39
 4226 0028 00000000 		.4byte	.LFB40
 4227 002c 1E000000 		.4byte	.LFE40
 4228 0030 00000000 		.4byte	.LFB41
 4229 0034 40000000 		.4byte	.LFE41
 4230 0038 00000000 		.4byte	.LFB42
 4231 003c 70000000 		.4byte	.LFE42
 4232 0040 00000000 		.4byte	.LFB43
 4233 0044 1C000000 		.4byte	.LFE43
 4234 0048 00000000 		.4byte	.LFB44
 4235 004c 24000000 		.4byte	.LFE44
 4236 0050 00000000 		.4byte	.LFB45
 4237 0054 1C000000 		.4byte	.LFE45
 4238 0058 00000000 		.4byte	.LFB46
 4239 005c 24000000 		.4byte	.LFE46
 4240 0060 00000000 		.4byte	.LFB47
 4241 0064 1C000000 		.4byte	.LFE47
 4242 0068 00000000 		.4byte	.LFB48
 4243 006c 1C000000 		.4byte	.LFE48
 4244 0070 00000000 		.4byte	.LFB49
 4245 0074 1C000000 		.4byte	.LFE49
 4246 0078 00000000 		.4byte	.LFB50
 4247 007c 1C000000 		.4byte	.LFE50
 4248 0080 00000000 		.4byte	.LFB51
 4249 0084 24000000 		.4byte	.LFE51
 4250 0088 00000000 		.4byte	.LFB52
 4251 008c 24000000 		.4byte	.LFE52
 4252 0090 00000000 		.4byte	.LFB53
 4253 0094 24000000 		.4byte	.LFE53
 4254 0098 00000000 		.4byte	.LFB54
 4255 009c 24000000 		.4byte	.LFE54
 4256 00a0 00000000 		.4byte	.LFB55
 4257 00a4 24000000 		.4byte	.LFE55
 4258 00a8 00000000 		.4byte	.LFB56
 4259 00ac 24000000 		.4byte	.LFE56
 4260 00b0 00000000 		.4byte	.LFB57
 4261 00b4 34010000 		.4byte	.LFE57
 4262 00b8 00000000 		.4byte	.LFB58
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 126


 4263 00bc 58000000 		.4byte	.LFE58
 4264 00c0 00000000 		.4byte	.LFB59
 4265 00c4 36000000 		.4byte	.LFE59
 4266 00c8 00000000 		.4byte	.LFB60
 4267 00cc 70000000 		.4byte	.LFE60
 4268 00d0 00000000 		.4byte	.LFB61
 4269 00d4 70000000 		.4byte	.LFE61
 4270 00d8 00000000 		.4byte	.LFB62
 4271 00dc 76000000 		.4byte	.LFE62
 4272 00e0 00000000 		.4byte	.LFB63
 4273 00e4 3C000000 		.4byte	.LFE63
 4274 00e8 00000000 		.4byte	.LFB64
 4275 00ec 1C000000 		.4byte	.LFE64
 4276 00f0 00000000 		.4byte	.LFB65
 4277 00f4 1C000000 		.4byte	.LFE65
 4278 00f8 00000000 		.4byte	.LFB66
 4279 00fc 1C000000 		.4byte	.LFE66
 4280 0100 00000000 		.4byte	.LFB67
 4281 0104 14000000 		.4byte	.LFE67
 4282 0108 00000000 		.4byte	.LFB68
 4283 010c 14000000 		.4byte	.LFE68
 4284 0110 00000000 		.4byte	0
 4285 0114 00000000 		.4byte	0
 4286              		.section	.debug_line,"",%progbits
 4287              	.Ldebug_line0:
 4288 0000 E0030000 		.section	.debug_str,"MS",%progbits,1
 4288      02005C00 
 4288      00000201 
 4288      FB0E0D00 
 4288      01010101 
 4289              	.LASF10:
 4290 0000 75696E74 		.ascii	"uint16\000"
 4290      313600
 4291              	.LASF58:
 4292 0007 66696C74 		.ascii	"filteredRawData\000"
 4292      65726564 
 4292      52617744 
 4292      61746100 
 4293              	.LASF114:
 4294 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 4294      656E7365 
 4294      5F687973 
 4294      74657265 
 4294      73697300 
 4295              	.LASF116:
 4296 002b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4296      656E7365 
 4296      5F726177 
 4296      44617461 
 4296      496E6465 
 4297              	.LASF108:
 4298 0041 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4298      656E7365 
 4298      5F73656E 
 4298      736F724F 
 4298      6E4D6173 
 4299              	.LASF75:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 127


 4300 0057 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4300      656E7365 
 4300      5F476574 
 4300      4E656761 
 4300      74697665 
 4301              	.LASF85:
 4302 007a 66696E67 		.ascii	"fingerThreshold\000"
 4302      65725468 
 4302      72657368 
 4302      6F6C6400 
 4303              	.LASF79:
 4304 008a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4304      656E7365 
 4304      5F536574 
 4304      4E656761 
 4304      74697665 
 4305              	.LASF62:
 4306 00ad 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4306      656E7365 
 4306      5F557064 
 4306      61746557 
 4306      69646765 
 4307              	.LASF34:
 4308 00cb 70747247 		.ascii	"ptrGetRaw\000"
 4308      65745261 
 4308      7700
 4309              	.LASF123:
 4310 00d5 433A5C55 		.ascii	"C:\\Users\\poornima\\Documents\\GitHub\\thingTouch\\"
 4310      73657273 
 4310      5C706F6F 
 4310      726E696D 
 4310      615C446F 
 4311 0103 38532E63 		.ascii	"8S.cydsn\000"
 4311      7964736E 
 4311      00
 4312              	.LASF98:
 4313 010c 43617053 		.ascii	"CapSense_GetDebounce\000"
 4313      656E7365 
 4313      5F476574 
 4313      4465626F 
 4313      756E6365 
 4314              	.LASF94:
 4315 0121 43617053 		.ascii	"CapSense_MedianFilter\000"
 4315      656E7365 
 4315      5F4D6564 
 4315      69616E46 
 4315      696C7465 
 4316              	.LASF7:
 4317 0137 6C6F6E67 		.ascii	"long long unsigned int\000"
 4317      206C6F6E 
 4317      6720756E 
 4317      7369676E 
 4317      65642069 
 4318              	.LASF107:
 4319 014e 43617053 		.ascii	"CapSense_sensorSignal\000"
 4319      656E7365 
 4319      5F73656E 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 128


 4319      736F7253 
 4319      69676E61 
 4320              	.LASF73:
 4321 0164 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4321      656E7365 
 4321      5F476574 
 4321      4E6F6973 
 4321      65546872 
 4322              	.LASF52:
 4323 017f 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4323      656E7365 
 4323      5F496E69 
 4323      7469616C 
 4323      697A6545 
 4324              	.LASF61:
 4325 01a3 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4325      656E7365 
 4325      5F557064 
 4325      61746545 
 4325      6E61626C 
 4326              	.LASF6:
 4327 01c3 6C6F6E67 		.ascii	"long long int\000"
 4327      206C6F6E 
 4327      6720696E 
 4327      7400
 4328              	.LASF0:
 4329 01d1 7369676E 		.ascii	"signed char\000"
 4329      65642063 
 4329      68617200 
 4330              	.LASF93:
 4331 01dd 43617053 		.ascii	"CapSense_DisableWidget\000"
 4331      656E7365 
 4331      5F446973 
 4331      61626C65 
 4331      57696467 
 4332              	.LASF88:
 4333 01f4 72617749 		.ascii	"rawIndex\000"
 4333      6E646578 
 4333      00
 4334              	.LASF33:
 4335 01fd 6E756D62 		.ascii	"numberOfSensors\000"
 4335      65724F66 
 4335      53656E73 
 4335      6F727300 
 4336              	.LASF105:
 4337 020d 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4337      656E7365 
 4337      5F73656E 
 4337      736F7242 
 4337      6173656C 
 4338              	.LASF21:
 4339 0225 77696467 		.ascii	"widgetNubmersTbl\000"
 4339      65744E75 
 4339      626D6572 
 4339      7354626C 
 4339      00
 4340              	.LASF68:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 129


 4341 0236 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4341      656E7365 
 4341      5F476574 
 4341      42617365 
 4341      6C696E65 
 4342              	.LASF90:
 4343 024f 73746174 		.ascii	"state\000"
 4343      6500
 4344              	.LASF4:
 4345 0255 6C6F6E67 		.ascii	"long int\000"
 4345      20696E74 
 4345      00
 4346              	.LASF91:
 4347 025e 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4347      656E7365 
 4347      5F436865 
 4347      636B4973 
 4347      416E7957 
 4348              	.LASF9:
 4349 027e 75696E74 		.ascii	"uint8\000"
 4349      3800
 4350              	.LASF110:
 4351 0284 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4351      656E7365 
 4351      5F6C6F77 
 4351      42617365 
 4351      6C696E65 
 4352              	.LASF100:
 4353 029e 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4353      656E7365 
 4353      5F446973 
 4353      61626C65 
 4353      52617744 
 4354              	.LASF13:
 4355 02bd 646F7562 		.ascii	"double\000"
 4355      6C6500
 4356              	.LASF104:
 4357 02c4 43617053 		.ascii	"CapSense_widgetNumber\000"
 4357      656E7365 
 4357      5F776964 
 4357      6765744E 
 4357      756D6265 
 4358              	.LASF11:
 4359 02da 75696E74 		.ascii	"uint32\000"
 4359      333200
 4360              	.LASF86:
 4361 02e1 68797374 		.ascii	"hysteresis\000"
 4361      65726573 
 4361      697300
 4362              	.LASF76:
 4363 02ec 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4363      656E7365 
 4363      5F536574 
 4363      46696E67 
 4363      65725468 
 4364              	.LASF80:
 4365 0308 43617053 		.ascii	"CapSense_SetDebounce\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 130


 4365      656E7365 
 4365      5F536574 
 4365      4465626F 
 4365      756E6365 
 4366              	.LASF43:
 4367 031d 73656E73 		.ascii	"sensetivitySeed\000"
 4367      65746976 
 4367      69747953 
 4367      65656400 
 4368              	.LASF42:
 4369 032d 746F7461 		.ascii	"totalSensorsNum\000"
 4369      6C53656E 
 4369      736F7273 
 4369      4E756D00 
 4370              	.LASF71:
 4371 033d 76616C75 		.ascii	"value\000"
 4371      6500
 4372              	.LASF81:
 4373 0343 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4373      656E7365 
 4373      5F536574 
 4373      4C6F7742 
 4373      6173656C 
 4374              	.LASF65:
 4375 0360 6C617374 		.ascii	"lastSensor\000"
 4375      53656E73 
 4375      6F7200
 4376              	.LASF8:
 4377 036b 756E7369 		.ascii	"unsigned int\000"
 4377      676E6564 
 4377      20696E74 
 4377      00
 4378              	.LASF27:
 4379 0378 73616D70 		.ascii	"sampleMaxTbl\000"
 4379      6C654D61 
 4379      7854626C 
 4379      00
 4380              	.LASF5:
 4381 0385 6C6F6E67 		.ascii	"long unsigned int\000"
 4381      20756E73 
 4381      69676E65 
 4381      6420696E 
 4381      7400
 4382              	.LASF106:
 4383 0397 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4383      656E7365 
 4383      5F73656E 
 4383      736F7242 
 4383      6173656C 
 4384              	.LASF22:
 4385 03b2 7265736F 		.ascii	"resolutionsTbl\000"
 4385      6C757469 
 4385      6F6E7354 
 4385      626C00
 4386              	.LASF37:
 4387 03c1 70747247 		.ascii	"ptrGetBitValue\000"
 4387      65744269 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 131


 4387      7456616C 
 4387      756500
 4388              	.LASF115:
 4389 03d0 43617053 		.ascii	"CapSense_debounce\000"
 4389      656E7365 
 4389      5F646562 
 4389      6F756E63 
 4389      6500
 4390              	.LASF67:
 4391 03e2 64617461 		.ascii	"data\000"
 4391      00
 4392              	.LASF3:
 4393 03e7 73686F72 		.ascii	"short unsigned int\000"
 4393      7420756E 
 4393      7369676E 
 4393      65642069 
 4393      6E7400
 4394              	.LASF18:
 4395 03fa 73656E73 		.ascii	"sensetivityTbl\000"
 4395      65746976 
 4395      69747954 
 4395      626C00
 4396              	.LASF49:
 4397 0409 73656E73 		.ascii	"sensor\000"
 4397      6F7200
 4398              	.LASF45:
 4399 0410 706F696E 		.ascii	"pointers\000"
 4399      74657273 
 4399      00
 4400              	.LASF103:
 4401 0419 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4401      656E7365 
 4401      5F73656E 
 4401      736F7245 
 4401      6E61626C 
 4402              	.LASF117:
 4403 0433 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4403      656E7365 
 4403      5F6E756D 
 4403      6265724F 
 4403      6653656E 
 4404              	.LASF60:
 4405 044c 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4405      656E7365 
 4405      5F557064 
 4405      61746553 
 4405      656E736F 
 4406              	.LASF55:
 4407 046a 63616C63 		.ascii	"calc\000"
 4407      00
 4408              	.LASF19:
 4409 046f 63686172 		.ascii	"chargeDivTbl\000"
 4409      67654469 
 4409      7654626C 
 4409      00
 4410              	.LASF39:
 4411 047c 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 132


 4411      656E7365 
 4411      5F434F4E 
 4411      4649475F 
 4411      54595045 
 4412              	.LASF26:
 4413 04a3 73616D70 		.ascii	"sampleMinTbl\000"
 4413      6C654D69 
 4413      6E54626C 
 4413      00
 4414              	.LASF69:
 4415 04b0 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4415      656E7365 
 4415      5F476574 
 4415      44696666 
 4415      436F756E 
 4416              	.LASF23:
 4417 04ca 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4417      65456E76 
 4417      656C6F70 
 4417      6554626C 
 4417      00
 4418              	.LASF83:
 4419 04db 6465626F 		.ascii	"debounce\000"
 4419      756E6365 
 4419      00
 4420              	.LASF44:
 4421 04e4 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4421      6B467265 
 4421      715F4D48 
 4421      7A00
 4422              	.LASF15:
 4423 04f2 73697A65 		.ascii	"sizetype\000"
 4423      74797065 
 4423      00
 4424              	.LASF92:
 4425 04fb 43617053 		.ascii	"CapSense_EnableWidget\000"
 4425      656E7365 
 4425      5F456E61 
 4425      626C6557 
 4425      69646765 
 4426              	.LASF54:
 4427 0511 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4427      656E7365 
 4427      5F557064 
 4427      61746542 
 4427      6173656C 
 4428              	.LASF48:
 4429 0534 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4429      656E7365 
 4429      5F496E69 
 4429      7469616C 
 4429      697A6553 
 4430              	.LASF78:
 4431 0556 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4431      656E7365 
 4431      5F536574 
 4431      46696E67 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 133


 4431      65724879 
 4432              	.LASF82:
 4433 0573 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4433      656E7365 
 4433      5F436865 
 4433      636B4973 
 4433      53656E73 
 4434              	.LASF16:
 4435 0590 69646163 		.ascii	"idac1LevelsTbl\000"
 4435      314C6576 
 4435      656C7354 
 4435      626C00
 4436              	.LASF17:
 4437 059f 69646163 		.ascii	"idac2LevelsTbl\000"
 4437      324C6576 
 4437      656C7354 
 4437      626C00
 4438              	.LASF112:
 4439 05ae 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4439      656E7365 
 4439      5F6E6F69 
 4439      73655468 
 4439      72657368 
 4440              	.LASF111:
 4441 05c6 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4441      656E7365 
 4441      5F66696E 
 4441      67657254 
 4441      68726573 
 4442              	.LASF118:
 4443 05df 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4443      656E7365 
 4443      5F726177 
 4443      46696C74 
 4443      65724461 
 4444              	.LASF119:
 4445 05f7 43617053 		.ascii	"CapSense_config\000"
 4445      656E7365 
 4445      5F636F6E 
 4445      66696700 
 4446              	.LASF12:
 4447 0607 666C6F61 		.ascii	"float\000"
 4447      7400
 4448              	.LASF97:
 4449 060d 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4449      656E7365 
 4449      5F476574 
 4449      4C6F7742 
 4449      6173656C 
 4450              	.LASF87:
 4451 062a 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4451      656E7365 
 4451      5F436865 
 4451      636B4973 
 4451      57696467 
 4452              	.LASF25:
 4453 0647 7369676E 		.ascii	"signRegisterTbl\000"
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 134


 4453      52656769 
 4453      73746572 
 4453      54626C00 
 4454              	.LASF95:
 4455 0657 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4455      656E7365 
 4455      5F494952 
 4455      3446696C 
 4455      74657200 
 4456              	.LASF31:
 4457 066b 70726573 		.ascii	"prescalerTable\000"
 4457      63616C65 
 4457      72546162 
 4457      6C6500
 4458              	.LASF1:
 4459 067a 756E7369 		.ascii	"unsigned char\000"
 4459      676E6564 
 4459      20636861 
 4459      7200
 4460              	.LASF50:
 4461 0688 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4461      656E7365 
 4461      5F496E69 
 4461      7469616C 
 4461      697A6541 
 4462              	.LASF36:
 4463 06a8 70747252 		.ascii	"ptrReadSensorRaw\000"
 4463      65616453 
 4463      656E736F 
 4463      72526177 
 4463      00
 4464              	.LASF66:
 4465 06b9 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4465      656E7365 
 4465      5F536574 
 4465      42617365 
 4465      6C696E65 
 4466              	.LASF59:
 4467 06d2 6E6F6973 		.ascii	"noiseThreshold\000"
 4467      65546872 
 4467      6573686F 
 4467      6C6400
 4468              	.LASF2:
 4469 06e1 73686F72 		.ascii	"short int\000"
 4469      7420696E 
 4469      7400
 4470              	.LASF51:
 4471 06eb 77696467 		.ascii	"widget\000"
 4471      657400
 4472              	.LASF20:
 4473 06f2 6D6F6444 		.ascii	"modDivTbl\000"
 4473      69765462 
 4473      6C00
 4474              	.LASF53:
 4475 06fc 69735365 		.ascii	"isSensorEnabled\000"
 4475      6E736F72 
 4475      456E6162 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 135


 4475      6C656400 
 4476              	.LASF47:
 4477 070c 43617053 		.ascii	"CapSense_BaseInit\000"
 4477      656E7365 
 4477      5F426173 
 4477      65496E69 
 4477      7400
 4478              	.LASF29:
 4479 071e 6B56616C 		.ascii	"kValueTbl\000"
 4479      75655462 
 4479      6C00
 4480              	.LASF63:
 4481 0728 73656E73 		.ascii	"sensorsPerWidget\000"
 4481      6F727350 
 4481      65725769 
 4481      64676574 
 4481      00
 4482              	.LASF109:
 4483 0739 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4483      656E7365 
 4483      5F6C6F77 
 4483      42617365 
 4483      6C696E65 
 4484              	.LASF77:
 4485 0756 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4485      656E7365 
 4485      5F536574 
 4485      4E6F6973 
 4485      65546872 
 4486              	.LASF28:
 4487 0771 70726576 		.ascii	"previousSampleTbl\000"
 4487      696F7573 
 4487      53616D70 
 4487      6C655462 
 4487      6C00
 4488              	.LASF14:
 4489 0783 63686172 		.ascii	"char\000"
 4489      00
 4490              	.LASF24:
 4491 0788 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4491      696E6744 
 4491      69666665 
 4491      72656E63 
 4491      6554626C 
 4492              	.LASF120:
 4493 079d 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4493      656E7365 
 4493      5F656E61 
 4493      626C6552 
 4493      61774669 
 4494              	.LASF74:
 4495 07b7 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4495      656E7365 
 4495      5F476574 
 4495      46696E67 
 4495      65724879 
 4496              	.LASF64:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 136


 4497 07d4 66697273 		.ascii	"firstSensor\000"
 4497      7453656E 
 4497      736F7200 
 4498              	.LASF84:
 4499 07e0 6465626F 		.ascii	"debounceIndex\000"
 4499      756E6365 
 4499      496E6465 
 4499      7800
 4500              	.LASF72:
 4501 07ee 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4501      656E7365 
 4501      5F476574 
 4501      46696E67 
 4501      65725468 
 4502              	.LASF35:
 4503 080a 70747250 		.ascii	"ptrPreScan\000"
 4503      72655363 
 4503      616E00
 4504              	.LASF30:
 4505 0815 7363616E 		.ascii	"scanSpeedTbl\000"
 4505      53706565 
 4505      6454626C 
 4505      00
 4506              	.LASF122:
 4507 0822 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4507      72617465 
 4507      645F536F 
 4507      75726365 
 4507      5C50536F 
 4508              	.LASF56:
 4509 0849 7369676E 		.ascii	"sign\000"
 4509      00
 4510              	.LASF89:
 4511 084e 6E756D4F 		.ascii	"numOfSensors\000"
 4511      6653656E 
 4511      736F7273 
 4511      00
 4512              	.LASF40:
 4513 085b 746F7461 		.ascii	"totalScanslotsNum\000"
 4513      6C536361 
 4513      6E736C6F 
 4513      74734E75 
 4513      6D00
 4514              	.LASF121:
 4515 086d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4515      4320342E 
 4515      392E3320 
 4515      32303135 
 4515      30333033 
 4516 08a0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4516      20726576 
 4516      6973696F 
 4516      6E203232 
 4516      31323230 
 4517 08d3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4517      66756E63 
 4517      74696F6E 
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 137


 4517      2D736563 
 4517      74696F6E 
 4518              	.LASF102:
 4519 08fb 43617053 		.ascii	"CapSense_sensorRaw\000"
 4519      656E7365 
 4519      5F73656E 
 4519      736F7252 
 4519      617700
 4520              	.LASF70:
 4521 090e 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4521      656E7365 
 4521      5F536574 
 4521      44696666 
 4521      436F756E 
 4522              	.LASF38:
 4523 0928 70747253 		.ascii	"ptrSetBitValue\000"
 4523      65744269 
 4523      7456616C 
 4523      756500
 4524              	.LASF96:
 4525 0937 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4525      656E7365 
 4525      5F476574 
 4525      57696467 
 4525      65744E75 
 4526              	.LASF99:
 4527 0950 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4527      656E7365 
 4527      5F456E61 
 4527      626C6552 
 4527      61774461 
 4528              	.LASF101:
 4529 096e 43617053 		.ascii	"CapSense_debounceCounter\000"
 4529      656E7365 
 4529      5F646562 
 4529      6F756E63 
 4529      65436F75 
 4530              	.LASF46:
 4531 0987 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 4531      656E7365 
 4531      5F434F4E 
 4531      4649475F 
 4531      54595045 
 4532              	.LASF32:
 4533 09a5 72617744 		.ascii	"rawDataIndex\000"
 4533      61746149 
 4533      6E646578 
 4533      00
 4534              	.LASF57:
 4535 09b2 74656D70 		.ascii	"tempRaw\000"
 4535      52617700 
 4536              	.LASF41:
 4537 09ba 746F7461 		.ascii	"totalWidgetsNum\000"
 4537      6C576964 
 4537      67657473 
 4537      4E756D00 
 4538              	.LASF113:
ARM GAS  C:\Users\poornima\AppData\Local\Temp\ccxTyVc8.s 			page 138


 4539 09ca 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4539      656E7365 
 4539      5F6E6567 
 4539      61746976 
 4539      654E6F69 
 4540              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
